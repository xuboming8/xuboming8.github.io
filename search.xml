<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[2017新疆赛区网赛]]></title>
      <url>http://xuboming8.github.io/2017/09/09/2017%E6%96%B0%E7%96%86%E8%B5%9B%E5%8C%BA%E7%BD%91%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="2017新疆赛区网赛"><a href="#2017新疆赛区网赛" class="headerlink" title="2017新疆赛区网赛"></a>2017新疆赛区网赛</h1><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><a id="more"></a>
<p>有向图增加最少几条变构成强联通图</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define MAXN 10050  </span></div><div class="line"><span class="comment">#define MAXM 100050</span></div><div class="line"><span class="comment">#define INF 10000000  </span></div><div class="line">using namespace std;  </div><div class="line">vector&lt;int&gt; G[MAXN];</div><div class="line">int low[MAXN], dfn[MAXN];  </div><div class="line">int dfs_clock;  </div><div class="line">int sccno[MAXN], scc_cnt;  </div><div class="line">vector&lt;int&gt; scc[MAXN];</div><div class="line">stack&lt;int&gt; S;  </div><div class="line">bool Instack[MAXN];  </div><div class="line">int n, m;</div><div class="line">void <span class="function"><span class="title">getMap</span></span>()&#123; </div><div class="line">    int s, t;  </div><div class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= n; i++) G[i].clear();   </div><div class="line">    <span class="keyword">while</span>(m--)&#123;</div><div class="line">        scanf(<span class="string">"%d%d"</span>, &amp;s, &amp;t);  </div><div class="line">        G[s].push_back(t);  </div><div class="line">    &#125;   </div><div class="line">&#125;  </div><div class="line">void tarjan(int u, int fa)&#123;</div><div class="line">    int v;  </div><div class="line">    low[u] = dfn[u] = ++dfs_clock;  </div><div class="line">    S.push(u);  </div><div class="line">    Instack[u] = <span class="literal">true</span>;  </div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; G[u].size(); i++)&#123; </div><div class="line">        v = G[u][i];  </div><div class="line">        <span class="keyword">if</span>(!dfn[v])&#123;</div><div class="line">            tarjan(v, u);  </div><div class="line">            low[u] = min(low[u], low[v]);  </div><div class="line">        &#125;   </div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(Instack[v])  </div><div class="line">        low[u] = min(low[u], dfn[v]);  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">if</span>(low[u] == dfn[u])&#123;</div><div class="line">        scc_cnt++;  </div><div class="line">        scc[scc_cnt].clear();  </div><div class="line">        <span class="keyword">for</span>(;;)&#123;</div><div class="line">            v = S.top(); S.pop();  </div><div class="line">            Instack[v] = <span class="literal">false</span>;  </div><div class="line">            sccno[v] = scc_cnt;  </div><div class="line">            scc[scc_cnt].push_back(v);  </div><div class="line">            <span class="keyword">if</span>(v == u) <span class="built_in">break</span>;  </div><div class="line">        &#125;  </div><div class="line">    &#125;   </div><div class="line">&#125;  </div><div class="line">void find_cut(int l, int r)&#123;</div><div class="line">    memset(low, 0, sizeof(low));  </div><div class="line">    memset(dfn, 0, sizeof(dfn));  </div><div class="line">    memset(sccno, 0, sizeof(sccno));  </div><div class="line">    memset(Instack, <span class="literal">false</span>, sizeof(Instack));  </div><div class="line">    dfs_clock = scc_cnt = 0;  </div><div class="line">    <span class="keyword">for</span>(int i = l; i &lt;= r; i++)  </div><div class="line">    <span class="keyword">if</span>(!dfn[i]) tarjan(i, -1);   </div><div class="line">&#125;  </div><div class="line">int <span class="keyword">in</span>[MAXN], out[MAXN]; </div><div class="line">void <span class="function"><span class="title">suodian</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= scc_cnt; i++) <span class="keyword">in</span>[i] = out[i] = 0;   </div><div class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= n; i++)&#123;</div><div class="line">        <span class="keyword">for</span>(int j = 0; j &lt; G[i].size(); j++)&#123; </div><div class="line">            int u = sccno[i];  </div><div class="line">            int v = sccno[G[i][j]];  </div><div class="line">            <span class="keyword">if</span>(u != v)  </div><div class="line">            out[u]++, <span class="keyword">in</span>[v]++;  </div><div class="line">        &#125;   </div><div class="line">    &#125;    </div><div class="line">&#125;  </div><div class="line">void <span class="function"><span class="title">solve</span></span>()&#123;</div><div class="line">    <span class="keyword">if</span>(scc_cnt == 1)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"0\n"</span>);  </div><div class="line">        <span class="built_in">return</span> ;  </div><div class="line">    &#125;  </div><div class="line">    int sumin = 0, sumout = 0;</div><div class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= scc_cnt; i++)&#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">in</span>[i] == 0) sumin++;  </div><div class="line">        <span class="keyword">if</span>(out[i] == 0) sumout++;  </div><div class="line">    &#125;   </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, max(sumin, sumout));  </div><div class="line">&#125;   </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">    int t;  </div><div class="line">    scanf(<span class="string">"%d"</span>, &amp;t);  </div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        scanf(<span class="string">"%d%d"</span>, &amp;n, &amp;m);  </div><div class="line">        getMap();  </div><div class="line">        find_cut(1, n);</div><div class="line">        suodian();   </div><div class="line">        solve();   </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>求有向图中两点的最长距离</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int maxn=20005;</div><div class="line">const int maxm=200010;</div><div class="line">int head[maxn],n,m;</div><div class="line">int e[maxm],nxt[maxm],w[maxm],cnt,x,y,z;</div><div class="line">int dist[maxn];</div><div class="line">bool vis[maxn];</div><div class="line">int Q[maxm&lt;&lt;2];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">	int T;</div><div class="line">	cin&gt;&gt;T;</div><div class="line">	<span class="keyword">while</span>(T--)&#123;</div><div class="line">		memset(head,-1,sizeof head);</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;z);</div><div class="line">			nxt[i]=head[x];</div><div class="line">			e[i]=y;</div><div class="line">			w[i]=z; </div><div class="line">			head[x]=i;</div><div class="line">		&#125;</div><div class="line">		int f=1,r=n;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			Q[i]=i;</div><div class="line">		memset(vis,0,sizeof vis);</div><div class="line">		memset(dist,0,sizeof dist);</div><div class="line">		<span class="keyword">while</span>(f&lt;=r)&#123;</div><div class="line">			int now = Q[f];</div><div class="line">			<span class="keyword">for</span>(int k=head[now];k!=-1;k=nxt[k])&#123;</div><div class="line">				int ep=e[k];</div><div class="line">				<span class="keyword">if</span>(dist[now]+w[k] &gt; dist[ep])&#123;</div><div class="line">					dist[ep] = dist[now] + w[k];</div><div class="line">					<span class="keyword">if</span>(vis[ep]==0)&#123;</div><div class="line">						Q[++r]=ep;</div><div class="line">						vis[ep]=1;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			vis[now]=0;</div><div class="line">			f++;</div><div class="line">		&#125;</div><div class="line">		int res=dist[1];</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)</div><div class="line">			res=max(res,dist[i]);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,res);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>spfa 开始时所有点入队即可</p>
<h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定起点和终点 必须经过某点 且每个点最多只能经过一次的最短路</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 400050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">const int inf=0x3f3f3f3f;</div><div class="line">const int base=200000;</div><div class="line">map&lt;string,int&gt;ss;</div><div class="line">struct Edge&#123;</div><div class="line">	int from,to,<span class="built_in">cap</span>,flow,cost;</div><div class="line">	Edge(int from,int to,int <span class="built_in">cap</span>,int flow,int cost):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow),cost(cost)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">struct MCMF&#123;</div><div class="line">	int n,m,s,t;</div><div class="line">	vector&lt;Edge&gt;edges;</div><div class="line">	vector&lt;int&gt;G[maxn];</div><div class="line">	int inq[maxn],p[maxn];</div><div class="line">	LL d[maxn],a[maxn];</div><div class="line">	void init(int n)&#123;</div><div class="line">		this-&gt;n=n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) G[i].clear();</div><div class="line">		edges.clear();</div><div class="line">	&#125;</div><div class="line">	void AddEdge(int from,int to,int <span class="built_in">cap</span>,int cost)&#123;</div><div class="line">		edges.push_back(Edge(from,to,<span class="built_in">cap</span>,0,cost));</div><div class="line">		edges.push_back(Edge(to,from,0,0,-cost));</div><div class="line">		m=edges.size();</div><div class="line">		G[from].push_back(m-2);</div><div class="line">		G[to].push_back(m-1);</div><div class="line">	&#125;</div><div class="line">	bool BellmanFord(int s,int t,LL &amp;flow,LL&amp; cost)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) d[i]=inf;</div><div class="line">		memset(inq,0,sizeof(inq));</div><div class="line">		d[s]=0,inq[s]=1,p[s]=0,a[s]=inf;</div><div class="line">		queue&lt;int&gt;Q;</div><div class="line">		Q.push(s);</div><div class="line">		<span class="keyword">while</span>(!Q.empty())&#123;</div><div class="line">			int u=Q.front();  Q.pop();</div><div class="line">			inq[u]=0;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;G[u].size();i++)&#123;</div><div class="line">				Edge&amp; e=edges[G[u][i]];</div><div class="line">				<span class="keyword">if</span>(e.cap&gt;e.flow &amp;&amp; d[e.to]&gt;d[u]+e.cost)&#123;</div><div class="line">					d[e.to]=d[u]+e.cost;</div><div class="line">					p[e.to]=G[u][i];</div><div class="line">					a[e.to]=min(a[u],(LL)e.cap-e.flow);</div><div class="line">					<span class="keyword">if</span>(!inq[e.to])&#123;</div><div class="line">						Q.push(e.to);</div><div class="line">						inq[e.to]=1;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(d[t]==inf) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">		flow+=a[t];</div><div class="line">		cost+=d[t]*a[t];</div><div class="line">		int u=t;</div><div class="line">		<span class="keyword">while</span>(u!=s)&#123;</div><div class="line">			edges[p[u]].flow+=a[t];</div><div class="line">			edges[p[u]^1].flow-=a[t];</div><div class="line">			u=edges[p[u]].from;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	void Mincost(int s,int t)&#123;</div><div class="line">		LL flow=0,cost=0;</div><div class="line">		<span class="keyword">while</span>(BellmanFord(s,t,flow,cost));</div><div class="line">		<span class="keyword">if</span>(flow==2) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,cost);</div><div class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;mc;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		mc.init(maxn);</div><div class="line">		ss.clear();</div><div class="line">		int nn=0,mm;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;mm);</div><div class="line">		<span class="keyword">while</span>(mm--)&#123;</div><div class="line">			char s1[100],s2[100];</div><div class="line">			int w;</div><div class="line">			scanf(<span class="string">"%s%s%d"</span>,s1,s2,&amp;w);</div><div class="line">			<span class="keyword">if</span>(!ss.count(s1))&#123;</div><div class="line">				nn++;</div><div class="line">				ss[s1]=nn;</div><div class="line">				mc.AddEdge(ss[s1],ss[s1]+base,1,0);</div><div class="line">				mc.AddEdge(ss[s1]+base,ss[s1],1,0);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(!ss.count(s2))&#123;</div><div class="line">				nn++;</div><div class="line">				ss[s2]=nn;</div><div class="line">				mc.AddEdge(ss[s2],ss[s2]+base,1,0);</div><div class="line">				mc.AddEdge(ss[s2]+base,ss[s2],1,0);</div><div class="line">			&#125;</div><div class="line">			mc.AddEdge(ss[s1]+base,ss[s2],1,w);</div><div class="line">			mc.AddEdge(ss[s2]+base,ss[s1],1,w);</div><div class="line">		&#125;</div><div class="line">		int S=ss[<span class="string">"Shanghai"</span>]+base,T=nn+1;</div><div class="line">		mc.AddEdge(ss[<span class="string">"Xian"</span>]+base,T,1,0);</div><div class="line">		mc.AddEdge(ss[<span class="string">"Dalian"</span>]+base,T,1,0);</div><div class="line">		mc.Mincost(S,T);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>最小费用最大流<br>拆点保证每个点只能经过一次 注意拆点后的建图方式<br>起点是必须经过的点 由起点和终点2个汇点连向一个超级汇点 如果最大流等于2输出ans 否则输出-1 注意开LL</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树链剖分专题3]]></title>
      <url>http://xuboming8.github.io/2017/09/05/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86%E4%B8%93%E9%A2%983/</url>
      <content type="html"><![CDATA[<h1 id="树链剖分专题3"><a href="#树链剖分专题3" class="headerlink" title="树链剖分专题3"></a>树链剖分专题3</h1><a id="more"></a>
<p>本专题主要包括线段树的多过程处理<br>1.离线维护每个点涂颜色的过程 for 1e6个点 并维护每个点<br>2.动态开点维护(多颗线段树)<br>3.离线维护q次小于等于k的最大值</p>
<h2 id="HDU-5029"><a href="#HDU-5029" class="headerlink" title="HDU 5029"></a>HDU 5029</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>给你一颗节点数最多为1e5的树。然后是m(1e5)条操作<br>x y z。<br>就是把x到y路径上的所有点包括x,y图上x颜色。<br>最后要你输出，每个点被图的次数最多的颜色是那个。如果有多个输出z最小的那个z(1-1e5)。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line"><span class="comment">#define PB push_back</span></div><div class="line"><span class="comment">#define lson l,mid,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson mid+1,r,rt&lt;&lt;1|1</span></div><div class="line">const int INF=(int)1e9+7;</div><div class="line">const int maxn=100010;</div><div class="line">int n,m,Ecnt,tot,head[maxn],pr[maxn];</div><div class="line">int top[maxn],fa[maxn],son[maxn],sz[maxn],id[maxn],val[maxn],deep[maxn];</div><div class="line">struct EE&#123;</div><div class="line">    int to,next;</div><div class="line">    <span class="function"><span class="title">EE</span></span>()&#123;&#125;</div><div class="line">    EE(int to,int next):to(to),next(next)&#123;&#125;</div><div class="line">&#125;edge[maxn*2];</div><div class="line">inline void addedge(int a,int b)&#123;</div><div class="line">    edge[Ecnt]=EE(b,head[a]);</div><div class="line">    head[a]=Ecnt++;</div><div class="line">&#125;</div><div class="line">void dfs1(int s,int pre,int d)&#123;</div><div class="line">    deep[s]=d,fa[s]=pre,sz[s]=1,son[s]=-1;</div><div class="line">    <span class="keyword">for</span>(int i=head[s];~i;i=edge[i].next)&#123;</div><div class="line">        int t=edge[i].to;</div><div class="line">        <span class="keyword">if</span>(t==pre) <span class="built_in">continue</span>;</div><div class="line">        dfs1(t,s,d+1);</div><div class="line">		sz[s]+=sz[t];</div><div class="line">        <span class="keyword">if</span>(son[s]==-1 || sz[t]&gt;sz[son[s]]) son[s]=t;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int s,int rt)&#123;</div><div class="line">    top[s]=rt;id[s]=++tot;val[tot]=s;</div><div class="line">    <span class="keyword">if</span>(son[s]==-1) <span class="built_in">return</span>;</div><div class="line">    dfs2(son[s],rt);</div><div class="line">    <span class="keyword">for</span>(int i=head[s];~i;i=edge[i].next)&#123;</div><div class="line">        int t=edge[i].to;</div><div class="line">        <span class="keyword">if</span>(t==fa[s]||t==son[s]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(t,t);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">vector&lt;vector&lt;int&gt; &gt;add,des;</div><div class="line">void cal(int x,int y,int v)&#123;</div><div class="line">    int f1=top[x],f2=top[y];</div><div class="line">    <span class="keyword">while</span>(f1!=f2)&#123;</div><div class="line">        <span class="keyword">if</span>(deep[f1]&lt;deep[f2])&#123;</div><div class="line">            swap(f1,f2);swap(x,y);</div><div class="line">        &#125;</div><div class="line">        add[id[f1]].PB(v);</div><div class="line">        des[id[x]+1].PB(v);</div><div class="line">        x=fa[f1];f1=top[x];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(deep[x]&gt;deep[y]) swap(x,y);</div><div class="line">    add[id[x]].PB(v);</div><div class="line">    des[id[y]+1].PB(v);</div><div class="line">&#125;</div><div class="line">struct node&#123;</div><div class="line">    int MAX,id;</div><div class="line">&#125;tree[maxn&lt;&lt;2];</div><div class="line">inline void pushup(int rt)&#123;</div><div class="line">    <span class="keyword">if</span>(tree[rt&lt;&lt;1].MAX&gt;=tree[rt&lt;&lt;1|1].MAX)&#123;</div><div class="line">        tree[rt].MAX=tree[rt&lt;&lt;1].MAX;</div><div class="line">        tree[rt].id=tree[rt&lt;&lt;1].id;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        tree[rt].MAX=tree[rt&lt;&lt;1|1].MAX;</div><div class="line">        tree[rt].id=tree[rt&lt;&lt;1|1].id;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void build(int l,int r,int rt)&#123;</div><div class="line">    tree[rt].MAX=tree[rt].id=0;</div><div class="line">    <span class="keyword">if</span>(l==r)&#123;</div><div class="line">        tree[rt].id=l;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    int mid=l+r&gt;&gt;1;</div><div class="line">    build(lson);</div><div class="line">	build(rson);</div><div class="line">&#125;</div><div class="line">void update(int x,int v,int l,int r,int rt)&#123;</div><div class="line">    <span class="keyword">if</span>(l==r)&#123;</div><div class="line">        tree[rt].MAX+=v;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    int mid=l+r&gt;&gt;1;</div><div class="line">    <span class="keyword">if</span>(x&lt;=mid) update(x,v,lson);</div><div class="line">    <span class="keyword">else</span> update(x,v,rson);</div><div class="line">    pushup(rt);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)&#123;</div><div class="line">        <span class="keyword">if</span>(n==0 &amp;&amp; m==0) <span class="built_in">break</span>;</div><div class="line">        memset(head,-1,sizeof head);</div><div class="line">        Ecnt=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">            int a,b;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</div><div class="line">            addedge(a,b);addedge(b,a);</div><div class="line">        &#125;</div><div class="line">        tot=0;</div><div class="line">        dfs1(1,0,0);</div><div class="line">		dfs2(1,1);</div><div class="line">        add.clear(); des.clear();</div><div class="line">        add.resize(maxn); des.resize(maxn);</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;m;i++)&#123;</div><div class="line">            int a,b,c;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</div><div class="line">            cal(a,b,c);</div><div class="line">        &#125;</div><div class="line">        build(1,100000,1);</div><div class="line">        memset(pr,0,sizeof pr);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=0,len=(int)add[i].size();j&lt;len;j++)&#123;</div><div class="line">                update(add[i][j],1,1,100000,1);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span>(int j=0,len=(int)des[i].size();j&lt;len;j++)&#123;</div><div class="line">                update(des[i][j],-1,1,100000,1);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(tree[1].MAX==0) pr[val[i]]=0;</div><div class="line">            <span class="keyword">else</span> pr[val[i]]=tree[1].id;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,pr[i]);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这题的输出，是每个点中的最多数字，但是是等全部处理完以后再输出。那我们就要考虑怎么来维护这个数据。我们可以想到，把这棵树进行树链剖分以后，<br>就可以理解成一条直线了，那这题就抽象成在直线上进行操作。我们可以考虑用线段树维护节点上的数字，每个节点表示这种数字有几个。<br>先考虑线段树最左边的节点，如果我们把覆盖到当前点的操作全部处理了，那么就能求出当前情况下，最多的数字是谁，然后等轮到每个操作的区间的<br>右区间的时候，再把这个点减去，就像一个从左到右的扫描线一样。这就是一个单点修改，求区间最值的线段树模型。那么我们保存下所有输入的操作，<br>处理成线段树上的操作，保存下来。因为[1,n]的编号分别对应了树上的节点，我们可以枚举1到n，表示n个节点，按照编号顺序从左到右来处理操作，<br>就可以求出当前情况下，最多的数字是多少。</p>
<h2 id="bzoj-3531"><a href="#bzoj-3531" class="headerlink" title="bzoj 3531"></a>bzoj 3531</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>S国有N个城市，编号从1到N。城市间用N-1条双向道路连接，满足<br>从一个城市出发可以到达其它所有城市。每个城市信仰不同的宗教，如飞天面条神教、隐形独角兽教、绝地教都是常见的信仰。<br>为了方便，我们用不同的正整数代表各种宗教，  S国的居民常常旅行。旅行时他们总会走最短路，并且为了避免麻烦，只在信仰和他们相同的城市留宿。<br>当然旅程的终点也是信仰与他相同的城市。S国政府为每个城市标定了不同的旅行评级，旅行者们常会记下途中（包括起点和终点）留宿过的城市的评级总和或最大值。<br>在S国的历史上常会发生以下几种事件：<br>”CC x c”：城市x的居民全体改信了c教；<br>”CW x w”：城市x的评级调整为w;<br>”QS x y”：一位旅行者从城市x出发，到城市y，并记下了途中留宿过的城市的评级总和；<br>”QM x y”：一位旅行者从城市x出发，到城市y，并记下了途中留宿过<br>的城市的评级最大值。<br>由于年代久远，旅行者记下的数字已经遗失了，但记录开始之前每座城市的信仰与评级，还有事件记录本身是完好的。请根据这些信息，还原旅行者记下的数字。<br>为了方便，我们认为事件之间的间隔足够长，以致在任意一次旅行中，所有城市的评级和信仰保持不变。</p>
<p>输入的第一行包含整数N，Q依次表示城市数和事件数。<br>接下来N行，第i+l行两个整数Wi，Ci依次表示记录开始之前，城市i的<br>评级和信仰。<br>接下来N-1行每行两个整数x，y表示一条双向道路。<br>接下来Q行，每行一个操作，格式如上所述。</p>
<p>对每个QS和QM事件，输出一行，表示旅行者记下的数字。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson tree[rt].l,l,mid</span></div><div class="line"><span class="comment">#define rson tree[rt].r,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,q,step,cnt;</div><div class="line">int w[maxn],c[maxn];</div><div class="line">int sz[maxn],dep[maxn],fa[maxn],son[maxn];</div><div class="line">int id[maxn],top[maxn];</div><div class="line">int root[maxn];</div><div class="line">struct T&#123;</div><div class="line">	int l,r; </div><div class="line">    int sum,Max;</div><div class="line">&#125;tree[maxn*100];</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    mm(sz,0),mm(dep,0),mm(fa,0),mm(son,0);</div><div class="line">    mm(id,0),mm(top,0),mm(root,0);</div><div class="line">    mm(tree,0);</div><div class="line">    step=0,cnt=0;</div><div class="line">&#125;</div><div class="line">void dfs1(int x,int f,int deep)&#123;</div><div class="line">    sz[x]=1,fa[x]=f,son[x]=0,dep[x]=deep;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==f) <span class="built_in">continue</span>;</div><div class="line">        dfs1(next,x,deep+1);</div><div class="line">        sz[x]+=sz[next];</div><div class="line">        <span class="keyword">if</span>(sz[son[x]]&lt;sz[next]) son[x]=next;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int tp)&#123;</div><div class="line">    top[x]=tp;</div><div class="line">    id[x]=++step;</div><div class="line">    <span class="keyword">if</span>(son[x]) dfs2(son[x],tp);</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==fa[x] || next==son[x]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(next,next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">	tree[rt].Max=max(tree[tree[rt].l].Max,tree[tree[rt].r].Max);</div><div class="line">	tree[rt].sum=tree[tree[rt].l].sum+tree[tree[rt].r].sum;</div><div class="line">&#125;</div><div class="line">void update(int &amp;rt,int l,int r,int pos,int val)&#123;</div><div class="line">	<span class="keyword">if</span>(!rt) rt=++cnt;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		tree[rt].Max=tree[rt].sum=val;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=pos) update(lson,pos,val);</div><div class="line">	<span class="keyword">else</span> update(rson,pos,val);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">int querysum(int rt,int l,int r,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(!rt) <span class="built_in">return</span> 0;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> tree[rt].sum;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=R) <span class="built_in">return</span> querysum(lson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) <span class="built_in">return</span> querysum(rson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">return</span> querysum(lson,L,R)+querysum(rson,L,R);</div><div class="line">&#125;</div><div class="line">int querymx(int rt,int l,int r,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(!rt) <span class="built_in">return</span> 0;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> tree[rt].Max;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=R) <span class="built_in">return</span> querymx(lson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) <span class="built_in">return</span> querymx(rson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">return</span> max(querymx(lson,L,R),querymx(rson,L,R));</div><div class="line">&#125;</div><div class="line">int solvemx(int col,int L,int R)&#123;</div><div class="line">    int ans=-inf;</div><div class="line">    <span class="keyword">while</span>(top[L]!=top[R])&#123;</div><div class="line">        <span class="keyword">if</span>(dep[top[L]]&lt;dep[top[R]]) swap(L,R);</div><div class="line">        ans=max(ans,querymx(root[col],1,n,id[top[L]],id[L]));</div><div class="line">        L=fa[top[L]];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(id[L]&gt;id[R]) swap(L,R);</div><div class="line">    ans=max(ans,querymx(root[col],1,n,id[L],id[R]));</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int solvesum(int col,int L,int R)&#123;</div><div class="line">    int sum=0;</div><div class="line">    <span class="keyword">while</span>(top[L]!=top[R])&#123;</div><div class="line">        <span class="keyword">if</span>(dep[top[L]]&lt;dep[top[R]]) swap(L,R);</div><div class="line">        sum+=querysum(root[col],1,n,id[top[L]],id[L]);</div><div class="line">        L=fa[top[L]];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(id[L]&gt;id[R]) swap(L,R);</div><div class="line">    sum+=querysum(root[col],1,n,id[L],id[R]);</div><div class="line">    <span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">char op[10];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;q)!=EOF)&#123;</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d%d"</span>,&amp;w[i],&amp;c[i]);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">			int u,v;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">			e[u].push_back(v);</div><div class="line">			e[v].push_back(u);</div><div class="line">		&#125;</div><div class="line">		dfs1(1,0,0);</div><div class="line">		dfs2(1,1);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) update(root[c[i]],1,n,id[i],w[i]);</div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			scanf(<span class="string">"%s"</span>,op);</div><div class="line">			<span class="keyword">if</span>(op[0]==<span class="string">'C'</span>)&#123;</div><div class="line">				<span class="keyword">if</span>(op[1]==<span class="string">'C'</span>)&#123;</div><div class="line">					int x,y;</div><div class="line">					scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">					update(root[c[x]],1,n,id[x],0);</div><div class="line">					c[x]=y;</div><div class="line">					update(root[c[x]],1,n,id[x],w[x]);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span>&#123;</div><div class="line">					int x,y;</div><div class="line">					scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">					update(root[c[x]],1,n,id[x],y);</div><div class="line">					w[x]=y;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				<span class="keyword">if</span>(op[1]==<span class="string">'S'</span>)&#123;</div><div class="line">					int x,y;</div><div class="line">					scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,solvesum(c[x],x,y));</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span>&#123;</div><div class="line">					int x,y;</div><div class="line">					scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,solvemx(c[x],x,y));</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>线段树动态开点(多颗)<br><a href="http://monkeyxu.cn/2017/09/01/2017%E5%B9%BF%E8%A5%BF%E9%82%80%E8%AF%B7%E8%B5%9B/#HDU-6183" target="_blank" rel="external">参考题目地址</a><br>因为宗教数量只有10^5，我们可以树链剖分完对于每一个宗教建立线段树<br>接着就是对每个宗教的维护线段树过程 线段树动态开点+树剖即可<br>注意solvesum和solvemx里的rt是root[col] col=c[x]<br>以及cc操作需要把原来的那些线段树x位置清零+新位置update更新</p>
<h2 id="HDU-3804"><a href="#HDU-3804" class="headerlink" title="HDU 3804"></a>HDU 3804</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出一棵树，询问从1到x路径上小于等于y的最大值<br>q次询问</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,q,step;</div><div class="line">int sz[maxn],dep[maxn],fa[maxn],son[maxn];</div><div class="line">int id[maxn],top[maxn];</div><div class="line">int ans[maxn];</div><div class="line">struct node&#123;</div><div class="line">	int to,w;</div><div class="line">	node(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">struct edge&#123;</div><div class="line">	int u,v,w;</div><div class="line">	bool operator &lt; (const edge&amp; x) const&#123;</div><div class="line">		<span class="built_in">return</span> w&lt;x.w;</div><div class="line">	&#125;</div><div class="line">&#125;ed[maxn];</div><div class="line">struct Q&#123;</div><div class="line">	int x,y;</div><div class="line">	int index;</div><div class="line">	bool operator &lt; (const Q&amp; a) const&#123;</div><div class="line">		<span class="built_in">return</span> y&lt;a.y;</div><div class="line">	&#125;</div><div class="line">&#125;qu[maxn];</div><div class="line">int Max[maxn&lt;&lt;2];</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    mm(sz,0),mm(dep,0),mm(fa,0),mm(son,0);</div><div class="line">    mm(id,0),mm(top,0),mm(ans,0);</div><div class="line">    step=0;</div><div class="line">&#125;</div><div class="line">void dfs1(int x,int f,int deep)&#123;</div><div class="line">    sz[x]=1,fa[x]=f,son[x]=0,dep[x]=deep;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i].to;</div><div class="line">        <span class="keyword">if</span>(next==f) <span class="built_in">continue</span>;</div><div class="line">        dfs1(next,x,deep+1);</div><div class="line">        sz[x]+=sz[next];</div><div class="line">        <span class="keyword">if</span>(sz[son[x]]&lt;sz[next]) son[x]=next;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int tp)&#123;</div><div class="line">    top[x]=tp;</div><div class="line">    id[x]=++step;</div><div class="line">    <span class="keyword">if</span>(son[x]) dfs2(son[x],tp);</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i].to;</div><div class="line">        <span class="keyword">if</span>(next==fa[x] || next==son[x]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(next,next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">	Max[rt]=max(Max[rt&lt;&lt;1],Max[rt&lt;&lt;1|1]);</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">	Max[rt]=-1;</div><div class="line">	<span class="keyword">if</span>(l==r) <span class="built_in">return</span>;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	build(lson);</div><div class="line">	build(rson);</div><div class="line">&#125;</div><div class="line">void update(int rt,int l,int r,int pos,int val)&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		Max[rt]=val;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=pos) update(lson,pos,val);</div><div class="line">	<span class="keyword">else</span> update(rson,pos,val);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">int query(int rt,int l,int r,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> Max[rt];</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=R) <span class="built_in">return</span> query(lson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) <span class="built_in">return</span> query(rson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">return</span> max(query(lson,L,R),query(rson,L,R));</div><div class="line">&#125;</div><div class="line">int querymx(int x,int y)&#123;</div><div class="line">	int ans=-1;</div><div class="line">	<span class="keyword">while</span>(top[x]!=top[y])&#123;  </div><div class="line">        <span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]]) swap(x,y);</div><div class="line">		ans=max(ans,query(1,1,n,id[top[x]],id[x]));</div><div class="line">        x=fa[top[x]];  </div><div class="line">    &#125; </div><div class="line">    <span class="keyword">if</span>(x==y) <span class="built_in">return</span> ans;</div><div class="line">    <span class="keyword">if</span>(dep[x]&gt;dep[y]) swap(x,y);</div><div class="line">    ans=max(ans,query(1,1,n,id[son[x]],id[y]));</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">			int u,v,w;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">			ed[i].u=u,ed[i].v=v,ed[i].w=w;</div><div class="line">			e[u].push_back(node(v,w));</div><div class="line">			e[v].push_back(node(u,w));	</div><div class="line">		&#125;</div><div class="line">		dfs1(1,0,0);</div><div class="line">		dfs2(1,1);</div><div class="line">		sort(ed+1,ed+n);</div><div class="line">		build(1,1,n);</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;q);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=q;i++)&#123;</div><div class="line">			int x,y;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">			qu[i].x=x,qu[i].y=y,qu[i].index=i;</div><div class="line">		&#125;</div><div class="line">		sort(qu+1,qu+1+q);</div><div class="line">		int pos=1;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=q;i++)&#123;</div><div class="line">			<span class="keyword">while</span>(pos&lt;n &amp;&amp; ed[pos].w&lt;=qu[i].y)&#123;</div><div class="line">				<span class="keyword">if</span>(dep[ed[pos].u]&gt;dep[ed[pos].v]) swap(ed[pos].u,ed[pos].v);</div><div class="line">				update(1,1,n,id[ed[pos].v],ed[pos].w);</div><div class="line">				pos++;</div><div class="line">			&#125;</div><div class="line">			ans[qu[i].index]=querymx(1,qu[i].x);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=q;i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>不可能在线q次重新建树 会tle<br>我们考虑离线处理 把所有询问记录下来 并把询问和边按照边权从小到大排序<br>每次只要把比该询问小的权值加入线段树即可 pos维护上一次插入的最后一个位置</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最短路相关]]></title>
      <url>http://xuboming8.github.io/2017/09/05/%E6%9C%80%E7%9F%AD%E8%B7%AF%E7%9B%B8%E5%85%B3/</url>
      <content type="html"><![CDATA[<h1 id="最短路相关"><a href="#最短路相关" class="headerlink" title="最短路相关"></a>最短路相关</h1><h2 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h2><a id="more"></a>
<p><strong>DJ</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">const int INF = 1000000000;</div><div class="line">const int maxn = 500 + 10;</div><div class="line">struct Edge &#123;</div><div class="line">  int from, to, dist;</div><div class="line">&#125;;</div><div class="line">struct HeapNode &#123;</div><div class="line">  int d, u;</div><div class="line">  bool operator &lt; (const HeapNode&amp; rhs) const &#123;</div><div class="line">    <span class="built_in">return</span> d &gt; rhs.d;</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line">struct Dijkstra &#123;</div><div class="line">  int n, m;</div><div class="line">  vector&lt;Edge&gt; edges;</div><div class="line">  vector&lt;int&gt; G[maxn];</div><div class="line">  bool <span class="keyword">done</span>[maxn];    // 是否已永久标号</div><div class="line">  int d[maxn];        // s到各个点的距离</div><div class="line">  int p[maxn];        // 最短路中的上一条弧</div><div class="line">  void init(int n) &#123;</div><div class="line">    this-&gt;n = n;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">  &#125;</div><div class="line">  void AddEdge(int from, int to, int dist) &#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, dist&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-1);</div><div class="line">  &#125;</div><div class="line">  void dijkstra(int s) &#123;</div><div class="line">    priority_queue&lt;HeapNode&gt; Q;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) d[i] = INF;</div><div class="line">    d[s] = 0;</div><div class="line">    memset(<span class="keyword">done</span>, 0, sizeof(<span class="keyword">done</span>));</div><div class="line">    Q.push((HeapNode)&#123;0, s&#125;);</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      HeapNode x = Q.top(); Q.pop();</div><div class="line">      int u = x.u;</div><div class="line">      <span class="keyword">if</span>(<span class="keyword">done</span>[u]) <span class="built_in">continue</span>;</div><div class="line">      <span class="keyword">done</span>[u] = <span class="literal">true</span>;</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[u].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[u][i]];</div><div class="line">        <span class="keyword">if</span>(d[e.to] &gt; d[u] + e.dist) &#123;</div><div class="line">          d[e.to] = d[u] + e.dist;</div><div class="line">          p[e.to] = G[u][i];</div><div class="line">          Q.push((HeapNode)&#123;d[e.to], e.to&#125;);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p><strong>spfa</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">struct Edge &#123;</div><div class="line">  int from, to,dist;</div><div class="line">&#125;;</div><div class="line">struct BellmanFord &#123;</div><div class="line">  int n, m;</div><div class="line">  vector&lt;Edge&gt; edges;</div><div class="line">  vector&lt;int&gt; G[maxn];</div><div class="line">  bool inq[maxn];     // 是否在队列中</div><div class="line">  int d[maxn];     // s到各个点的距离</div><div class="line">  int p[maxn];        // 最短路中的上一条弧</div><div class="line">  int cnt[maxn];</div><div class="line">  void init(int n) &#123;</div><div class="line">    this-&gt;n = n;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">  &#125;</div><div class="line">  void AddEdge(int from, int to, int dist) &#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, dist&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-1);</div><div class="line">  &#125;</div><div class="line">  void spfa(int s)&#123;</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    memset(inq, <span class="literal">false</span>, sizeof inq);</div><div class="line">    memset(cnt, 0, sizeof cnt);</div><div class="line">    memset(d, inf, sizeof d);</div><div class="line">	Q.push(s);</div><div class="line">	d[s]=0,cnt[s]=1,inq[s]=<span class="literal">true</span>;</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      int u = Q.front(); </div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[u].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[u][i]];</div><div class="line">        <span class="keyword">if</span>(d[e.to] &gt; d[u] + e.dist) &#123;</div><div class="line">          d[e.to] = d[u] + e.dist;</div><div class="line">          p[e.to] = G[u][i];</div><div class="line">          <span class="keyword">if</span>(!inq[e.to]) &#123;</div><div class="line">		  	cnt[e.to]++;</div><div class="line">          	<span class="keyword">if</span>(cnt[e.to]&gt;n) <span class="built_in">return</span> ;</div><div class="line">			Q.push(e.to); inq[e.to] = <span class="literal">true</span>; </div><div class="line">		  &#125;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">	  Q.pop();</div><div class="line">      inq[u] = <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;sp;</div></pre></td></tr></table></figure></p>
<p><strong>spfa判负圈</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">struct Edge &#123;</div><div class="line">  int from,to,dist;</div><div class="line">&#125;;</div><div class="line">struct BellmanFord &#123;</div><div class="line">  int n, m;</div><div class="line">  vector&lt;Edge&gt; edges;</div><div class="line">  vector&lt;int&gt; G[maxn];</div><div class="line">  bool inq[maxn];     // 是否在队列中</div><div class="line">  int d[maxn];     // s到各个点的距离</div><div class="line">  int p[maxn];        // 最短路中的上一条弧</div><div class="line">  int cnt[maxn];      // 进队次数</div><div class="line">  void init(int n) &#123;</div><div class="line">    this-&gt;n = n;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">  &#125;</div><div class="line">  void AddEdge(int from, int to, int dist) &#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, dist&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-1);</div><div class="line">  &#125;</div><div class="line">  bool <span class="function"><span class="title">negativeCycle</span></span>() &#123;</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    memset(inq, 0, sizeof(inq));</div><div class="line">    memset(cnt, 0, sizeof(cnt));</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) &#123; d[i] = inf; inq[i] = <span class="literal">true</span>; Q.push(i); &#125;</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      int u = Q.front(); Q.pop();</div><div class="line">      inq[u] = <span class="literal">false</span>;</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[u].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[u][i]];</div><div class="line">        <span class="keyword">if</span>(d[e.to] &gt; d[u] + e.dist) &#123;</div><div class="line">          d[e.to] = d[u] + e.dist;</div><div class="line">          p[e.to] = G[u][i];</div><div class="line">          <span class="keyword">if</span>(!inq[e.to]) &#123; Q.push(e.to); inq[e.to] = <span class="literal">true</span>; <span class="keyword">if</span>(++cnt[e.to] &gt; n) <span class="built_in">return</span> <span class="literal">true</span>; &#125;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">  &#125;</div><div class="line">&#125;sp;</div></pre></td></tr></table></figure></p>
<p><strong>若求的是最长路 d初始化为-inf 松弛操作变下符号即可</strong><br><strong>下标从0开始</strong><br><strong>支持重边 直接add即可</strong></p>
<h2 id="uva-11374"><a href="#uva-11374" class="headerlink" title="uva 11374"></a>uva 11374</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>有两种车票，商务车票和经济车票。由于经济原因，商务车票只能买一张，经济车票可以买多张。车票都是双向的。现在问从起点到终点的最短路径，<br>以及商务车票在哪个站点用最划算和最后花费的总时间。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int INF = 1000000000;</div><div class="line">const int maxn = 500 + 10;</div><div class="line">struct Edge &#123;</div><div class="line">  int from, to, dist;</div><div class="line">&#125;;</div><div class="line">struct HeapNode &#123;</div><div class="line">  int d, u;</div><div class="line">  bool operator &lt; (const HeapNode&amp; rhs) const &#123;</div><div class="line">    <span class="built_in">return</span> d &gt; rhs.d;</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line">struct Dijkstra &#123;</div><div class="line">  int n, m;</div><div class="line">  vector&lt;Edge&gt; edges;</div><div class="line">  vector&lt;int&gt; G[maxn];</div><div class="line">  bool <span class="keyword">done</span>[maxn];    // 是否已永久标号</div><div class="line">  int d[maxn];        // s到各个点的距离</div><div class="line">  int p[maxn];        // 最短路中的上一条弧</div><div class="line">  void init(int n) &#123;</div><div class="line">    this-&gt;n = n;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">  &#125;</div><div class="line">  void AddEdge(int from, int to, int dist) &#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, dist&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-1);</div><div class="line">  &#125;</div><div class="line">  void dijkstra(int s) &#123;</div><div class="line">    priority_queue&lt;HeapNode&gt; Q;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) d[i] = INF;</div><div class="line">    d[s] = 0;</div><div class="line">    memset(<span class="keyword">done</span>, 0, sizeof(<span class="keyword">done</span>));</div><div class="line">    Q.push((HeapNode)&#123;0, s&#125;);</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      HeapNode x = Q.top(); Q.pop();</div><div class="line">      int u = x.u;</div><div class="line">      <span class="keyword">if</span>(<span class="keyword">done</span>[u]) <span class="built_in">continue</span>;</div><div class="line">      <span class="keyword">done</span>[u] = <span class="literal">true</span>;</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[u].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[u][i]];</div><div class="line">        <span class="keyword">if</span>(d[e.to] &gt; d[u] + e.dist) &#123;</div><div class="line">          d[e.to] = d[u] + e.dist;</div><div class="line">          p[e.to] = G[u][i];</div><div class="line">          Q.push((HeapNode)&#123;d[e.to], e.to&#125;);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  // dist[i]为s到i的距离，paths[i]为s到i的最短路径（经过的结点列表，包括s）</div><div class="line">  void GetShortestPaths(int s, int* dist, vector&lt;int&gt;* paths) &#123;</div><div class="line">    dijkstra(s);</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) &#123;</div><div class="line">      dist[i] = d[i];</div><div class="line">      paths[i].clear();</div><div class="line">      int t = i;</div><div class="line">      paths[i].push_back(t);</div><div class="line">      <span class="keyword">while</span>(t != s) &#123;</div><div class="line">        paths[i].push_back(edges[p[t]].from);</div><div class="line">        t = edges[p[t]].from;</div><div class="line">      &#125;</div><div class="line">      reverse(paths[i].begin(), paths[i].end());</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line">Dijkstra solver;</div><div class="line">int d1[maxn], d2[maxn];</div><div class="line">vector&lt;int&gt; paths1[maxn], paths2[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>() &#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">  int kase = 0, N, S, E, M, K, X, Y, Z;</div><div class="line">  <span class="keyword">while</span>(scanf(<span class="string">"%d%d%d%d"</span>, &amp;N, &amp;S, &amp;E, &amp;M) == 4) &#123;</div><div class="line">    solver.init(N);</div><div class="line">    S--; E--; // 编号从0~N-1</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; M; i++) &#123;</div><div class="line">      scanf(<span class="string">"%d%d%d"</span>, &amp;X, &amp;Y, &amp;Z); X--; Y--;</div><div class="line">      solver.AddEdge(X, Y, Z);</div><div class="line">      solver.AddEdge(Y, X, Z);</div><div class="line">    &#125;</div><div class="line">    solver.GetShortestPaths(S, d1, paths1); // S到所有点的距离和路径</div><div class="line">    solver.GetShortestPaths(E, d2, paths2); // T到所有点的距离和路径</div><div class="line">    int ans = d1[E];              // 初始解解为直达距离</div><div class="line">    vector&lt;int&gt; path = paths1[E]; // 初始解的station序列</div><div class="line">    int midpoint = -1;            // 不坐商业线</div><div class="line">    scanf(<span class="string">"%d"</span>, &amp;K);</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; K; i++) &#123;</div><div class="line">      scanf(<span class="string">"%d%d%d"</span>, &amp;X, &amp;Y, &amp;Z); X--; Y--;</div><div class="line">      <span class="keyword">for</span>(int j = 0; j &lt; 2; j++) &#123; // j=0代表商业线坐X-&gt;Y，j=1代表Y-&gt;X</div><div class="line">        <span class="keyword">if</span>(d1[X] + d2[Y] + Z &lt; ans) &#123;</div><div class="line">          ans = d1[X] + d2[Y] + Z;</div><div class="line">          path = paths1[X];</div><div class="line">          <span class="keyword">for</span>(int j = paths2[Y].size()-1; j &gt;= 0; j--) // 从Y到T的距离要反过来</div><div class="line">            path.push_back(paths2[Y][j]);</div><div class="line">          midpoint = X;</div><div class="line">        &#125;</div><div class="line">        swap(X, Y);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(kase != 0) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    kase++;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; path.size()-1; i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>, path[i]+1);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, E+1);</div><div class="line">    <span class="keyword">if</span>(midpoint == -1) <span class="built_in">printf</span>(<span class="string">"Ticket Not Used\n"</span>); <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, midpoint+1);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</div><div class="line">  &#125;</div><div class="line">  <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>见代码&amp;蓝书P329<br>本题在最短路的基础加上了输出路径<br>在不使用商务车票的情况下计算两次最短路，分别算出起点s到每一点的最短路ds[N]， 以及终点t到每一点的最短路dt[N]，并记录起点到终点的最短路Min。<br>然后枚举商务车票（商务车票初始站点u, 终止站点v,花费cos）维护Min=min(ds[u] + dt[v] + cos) 并记录下使用的商务车票的u和v</p>
<h2 id="次短路"><a href="#次短路" class="headerlink" title="次短路"></a>次短路</h2><p><a href="http://monkeyxu.cn/2017/08/28/muti%E5%A4%9A%E6%A0%A1-10/#HDU-6181" target="_blank" rel="external">转跳链接</a></p>
<h2 id="uva-10917"><a href="#uva-10917" class="headerlink" title="uva 10917"></a>uva 10917</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>蓝书P330</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define INF 0x3f3f3f3f</span></div><div class="line">using namespace std;</div><div class="line">struct Edge &#123;</div><div class="line">  int from, to, dist;</div><div class="line">&#125;;</div><div class="line">struct HeapNode &#123;</div><div class="line">  int d, u;</div><div class="line">  bool operator &lt; (const HeapNode&amp; rhs) const &#123;</div><div class="line">    <span class="built_in">return</span> d &gt; rhs.d;</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line">struct Dijkstra &#123;</div><div class="line">  int n, m;</div><div class="line">  vector&lt;Edge&gt; edges;</div><div class="line">  vector&lt;int&gt; G[maxn];</div><div class="line">  bool <span class="keyword">done</span>[maxn];   </div><div class="line">  int d[maxn];       </div><div class="line">  int p[maxn];        </div><div class="line">  void init(int n) &#123;</div><div class="line">    this-&gt;n = n;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">  &#125;</div><div class="line">  void AddEdge(int from, int to, int dist) &#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, dist&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-1);</div><div class="line">  &#125;</div><div class="line">  void dijkstra(int s) &#123;</div><div class="line">    priority_queue&lt;HeapNode&gt; Q;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) d[i] = INF;</div><div class="line">    d[s] = 0;</div><div class="line">    memset(<span class="keyword">done</span>, 0, sizeof(<span class="keyword">done</span>));</div><div class="line">    Q.push((HeapNode)&#123;0, s&#125;);</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      HeapNode x = Q.top(); Q.pop();</div><div class="line">      int u = x.u;</div><div class="line">      <span class="keyword">if</span>(<span class="keyword">done</span>[u]) <span class="built_in">continue</span>;</div><div class="line">      <span class="keyword">done</span>[u] = <span class="literal">true</span>;</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[u].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[u][i]];</div><div class="line">        <span class="keyword">if</span>(d[e.to] &gt; d[u] + e.dist) &#123;</div><div class="line">          d[e.to] = d[u] + e.dist;</div><div class="line">          p[e.to] = G[u][i];</div><div class="line">          Q.push((HeapNode)&#123;d[e.to], e.to&#125;);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;dij;</div><div class="line">int dp[maxn];</div><div class="line">int dfs(int x)&#123;</div><div class="line">	<span class="keyword">if</span>(dp[x]!=-1) <span class="built_in">return</span> dp[x];  //记忆化</div><div class="line">	<span class="keyword">if</span>(x==1) <span class="built_in">return</span> 1;       // 到家</div><div class="line">	int ans=0;</div><div class="line">	int len=dij.G[x].size();</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">		int next=dij.edges[dij.G[x][i]].to;</div><div class="line">		<span class="keyword">if</span>(dij.d[next]&lt;dij.d[x]) ans+=dfs(next);</div><div class="line">	&#125;	</div><div class="line">	<span class="built_in">return</span> dp[x]=ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int n,m;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)&#123;</div><div class="line">		<span class="keyword">if</span>(n==0) <span class="built_in">break</span>;</div><div class="line">		dij.init(n);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			int a,b,c;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</div><div class="line">			a--,b--;</div><div class="line">			dij.AddEdge(a,b,c);</div><div class="line">			dij.AddEdge(b,a,c);</div><div class="line">		&#125;</div><div class="line">		dij.dijkstra(1);     // 家(1)到所有点的距离</div><div class="line">		mm(dp,-1);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dfs(0));   // 办公室(0)到家的符合条件的路径条数</div><div class="line">	&#125;	</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>蓝书P330 &amp; 注释<br>问题转换为：求起点到终点的路径条数-&gt;记忆化搜素</p>
<h2 id="la-4080"><a href="#la-4080" class="headerlink" title="la 4080"></a>la 4080</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>蓝书P330</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int INF = 1000000000;</div><div class="line">const int maxn = 100 + 10;</div><div class="line">struct Edge &#123;</div><div class="line">  int from, to, dist;</div><div class="line">&#125;;</div><div class="line">struct HeapNode &#123;</div><div class="line">  int d, u;</div><div class="line">  bool operator &lt; (const HeapNode&amp; rhs) const &#123;</div><div class="line">    <span class="built_in">return</span> d &gt; rhs.d;</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line">struct Dijkstra &#123;</div><div class="line">  int n, m;</div><div class="line">  vector&lt;Edge&gt; edges;</div><div class="line">  vector&lt;int&gt; G[maxn];</div><div class="line">  bool <span class="keyword">done</span>[maxn];   </div><div class="line">  int d[maxn];        </div><div class="line">  int p[maxn];        </div><div class="line">  void init(int n) &#123;</div><div class="line">    this-&gt;n = n;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">  &#125;</div><div class="line">  void AddEdge(int from, int to, int dist) &#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, dist&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-1);</div><div class="line">  &#125;</div><div class="line">  void dijkstra(int s) &#123;</div><div class="line">    priority_queue&lt;HeapNode&gt; Q;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) d[i] = INF;</div><div class="line">    d[s] = 0;</div><div class="line">    memset(<span class="keyword">done</span>, 0, sizeof(<span class="keyword">done</span>));</div><div class="line">    Q.push((HeapNode)&#123;0, s&#125;);</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      HeapNode x = Q.top(); Q.pop();</div><div class="line">      int u = x.u;</div><div class="line">      <span class="keyword">if</span>(<span class="keyword">done</span>[u]) <span class="built_in">continue</span>;</div><div class="line">      <span class="keyword">done</span>[u] = <span class="literal">true</span>;</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[u].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[u][i]];</div><div class="line">        <span class="keyword">if</span>(e.dist &gt; 0 &amp;&amp; d[e.to] &gt; d[u] + e.dist) &#123; // 此处和模板不同 忽略了dist=-1的边。此为删除标记。根据题意和dijkstra算法的前提 正常的边dist&gt;0</div><div class="line">          d[e.to] = d[u] + e.dist;</div><div class="line">          p[e.to] = G[u][i];</div><div class="line">          Q.push((HeapNode)&#123;d[e.to], e.to&#125;);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line">Dijkstra solver;</div><div class="line">int n, m, L;</div><div class="line">vector&lt;int&gt; gr[maxn][maxn]; // 两点之间的原始边权</div><div class="line">int used[maxn][maxn][maxn]; // used[src][a][b]表示源点为src的最短路树是否包含边a-&gt;b</div><div class="line">int idx[maxn][maxn]; // idx[u][v]为边u-&gt;v在Dijkstra求解器中的编号</div><div class="line">int sum_single[maxn]; // sum_single[src]表示源点为src的最短路树的所有d之和</div><div class="line">int <span class="function"><span class="title">compute_c</span></span>() &#123;</div><div class="line">  int ans = 0;</div><div class="line">  memset(used, 0, sizeof(used));</div><div class="line">  <span class="keyword">for</span>(int src = 0; src &lt; n; src++) &#123;</div><div class="line">    solver.dijkstra(src);</div><div class="line">    sum_single[src] = 0;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) &#123;</div><div class="line">      <span class="keyword">if</span>(i != src) &#123;</div><div class="line">        int fa = solver.edges[solver.p[i]].from;</div><div class="line">        used[src][fa][i] = used[src][i][fa] = 1;</div><div class="line">      &#125;</div><div class="line">      sum_single[src] += (solver.d[i] == INF ? L : solver.d[i]);</div><div class="line">    &#125;</div><div class="line">    ans += sum_single[src];</div><div class="line">  &#125;</div><div class="line">  <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int compute_newc(int a, int b) &#123;</div><div class="line">  int ans = 0;</div><div class="line">  <span class="keyword">for</span>(int src = 0; src &lt; n; src++)</div><div class="line">    <span class="keyword">if</span>(!used[src][a][b]) ans += sum_single[src];</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">      solver.dijkstra(src);</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; n; i++)</div><div class="line">        ans += (solver.d[i] == INF ? L : solver.d[i]);</div><div class="line">    &#125;</div><div class="line">  <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>() &#123;</div><div class="line">  <span class="keyword">while</span>(scanf(<span class="string">"%d%d%d"</span>, &amp;n, &amp;m, &amp;L) == 3) &#123;</div><div class="line">    solver.init(n);</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++)</div><div class="line">      <span class="keyword">for</span>(int j = 0; j &lt; n; j++) gr[i][j].clear();</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; m; i++) &#123;</div><div class="line">      int a, b, s;</div><div class="line">      scanf(<span class="string">"%d%d%d"</span>, &amp;a, &amp;b, &amp;s); a--; b--;</div><div class="line">      gr[a][b].push_back(s);</div><div class="line">      gr[b][a].push_back(s);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++)</div><div class="line">      <span class="keyword">for</span>(int j = i+1; j &lt; n; j++) <span class="keyword">if</span>(!gr[i][j].empty()) &#123;</div><div class="line">        sort(gr[i][j].begin(), gr[i][j].end());</div><div class="line">        solver.AddEdge(i, j, gr[i][j][0]);</div><div class="line">        idx[i][j] = solver.m - 1;</div><div class="line">        solver.AddEdge(j, i, gr[i][j][0]);</div><div class="line">        idx[j][i] = solver.m - 1;</div><div class="line">      &#125;</div><div class="line">    int c = compute_c();</div><div class="line">    int c2 = -1;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++)</div><div class="line">      <span class="keyword">for</span>(int j = i+1; j &lt; n; j++) <span class="keyword">if</span>(!gr[i][j].empty()) &#123;</div><div class="line">        int&amp; e1 = solver.edges[idx[i][j]].dist;</div><div class="line">        int&amp; e2 = solver.edges[idx[j][i]].dist;</div><div class="line">        <span class="keyword">if</span>(gr[i][j].size() == 1) e1 = e2 = -1;</div><div class="line">        <span class="keyword">else</span> e1 = e2 = gr[i][j][1]; // 大二短边</div><div class="line">        c2 = max(c2, compute_newc(i, j));</div><div class="line">        e1 = e2 = gr[i][j][0]; // 恢复</div><div class="line">      &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, c, c2);</div><div class="line">  &#125;</div><div class="line">  <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>蓝书P330 使用最短路树<br>因为在源点确定的情况下 只要最短路树不被破坏 起点到所有店的距离都不会发生变化<br>只有删除最短路树上的n-1条边 最短路树才需要重新计算</p>
<h2 id="poj-3259"><a href="#poj-3259" class="headerlink" title="poj 3259"></a>poj 3259</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>农夫约翰在探索他的许多农场，发现了一些惊人的虫洞。虫洞是很奇特的，因为它是一个单向通道，可让你进入虫洞的前达到目的地！<br>他的N（1≤N≤500）个农场被编号为1..N，之间有M（1≤M≤2500）条路径，W（1≤W≤200）个虫洞。FJ作为一个狂热的时间旅行的爱好者，<br>他要做到以下几点：开始在一个区域，通过一些路径和虫洞旅行，他要回到最开时出发的那个区域出发前的时间。也许他就能遇到自己了:)。<br>为了帮助FJ找出这是否是可以或不可以</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#include&lt;queue&gt;</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define maxn 505 </span></div><div class="line">using namespace std;</div><div class="line">struct Edge &#123;</div><div class="line">  int from,to,dist;</div><div class="line">&#125;;</div><div class="line">struct BellmanFord &#123;</div><div class="line">  int n, m;</div><div class="line">  vector&lt;Edge&gt; edges;</div><div class="line">  vector&lt;int&gt; G[maxn];</div><div class="line">  bool inq[maxn];     // 是否在队列中</div><div class="line">  int d[maxn];     // s到各个点的距离</div><div class="line">  int p[maxn];        // 最短路中的上一条弧</div><div class="line">  int cnt[maxn];      // 进队次数</div><div class="line">  void init(int n) &#123;</div><div class="line">    this-&gt;n = n;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">  &#125;</div><div class="line">  void AddEdge(int from, int to, int dist) &#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, dist&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-1);</div><div class="line">  &#125;</div><div class="line">  bool <span class="function"><span class="title">negativeCycle</span></span>() &#123;</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    memset(inq, 0, sizeof(inq));</div><div class="line">    memset(cnt, 0, sizeof(cnt));</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) &#123; d[i] = inf; inq[i] = <span class="literal">true</span>; Q.push(i); &#125;</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      int u = Q.front(); Q.pop();</div><div class="line">      inq[u] = <span class="literal">false</span>;</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[u].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[u][i]];</div><div class="line">        <span class="keyword">if</span>(d[e.to] &gt; d[u] + e.dist) &#123;</div><div class="line">          d[e.to] = d[u] + e.dist;</div><div class="line">          p[e.to] = G[u][i];</div><div class="line">          <span class="keyword">if</span>(!inq[e.to]) &#123; Q.push(e.to); inq[e.to] = <span class="literal">true</span>; <span class="keyword">if</span>(++cnt[e.to] &gt; n) <span class="built_in">return</span> <span class="literal">true</span>; &#125;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">  &#125;</div><div class="line">&#125;sp;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int n,m,k;</div><div class="line">		scanf(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;k);</div><div class="line">		sp.init(maxn);</div><div class="line">		<span class="keyword">while</span>(m--)&#123;</div><div class="line">			int u,v,w;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">			u--,v--;</div><div class="line">			sp.AddEdge(u,v,w);</div><div class="line">			sp.AddEdge(v,u,w);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span>(k--)&#123;</div><div class="line">			int u,v,w;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">			u--,v--;</div><div class="line">			sp.AddEdge(u,v,-w);</div><div class="line">		&#125;</div><div class="line">		bool flag=sp.negativeCycle();</div><div class="line">		<span class="keyword">if</span>(flag) puts(<span class="string">"YES"</span>);</div><div class="line">		<span class="keyword">else</span> puts(<span class="string">"NO"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>spfa判断负圈<br>注意下标从0开始 m是双向边 k是单向边<br>模版支持重边 所以无需取最小直接addedge即可</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2017广西邀请赛]]></title>
      <url>http://xuboming8.github.io/2017/09/01/2017%E5%B9%BF%E8%A5%BF%E9%82%80%E8%AF%B7%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="2017-广西邀请赛"><a href="#2017-广西邀请赛" class="headerlink" title="2017 广西邀请赛"></a>2017 广西邀请赛</h1><h2 id="HDU-6182"><a href="#HDU-6182" class="headerlink" title="HDU 6182"></a>HDU 6182</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><a id="more"></a>
<p>问有多少k满足 k的k次方小于等于n n小于等于1e18</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long </span></div><div class="line">using namespace std;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re*=base;base*=base;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    LL n;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n)&#123;</div><div class="line">        LL l=1,r=15;</div><div class="line">        LL ans=1;</div><div class="line">        <span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">            LL mid=(l+r)&gt;&gt;1;</div><div class="line">            <span class="keyword">if</span>(qpow(mid,mid)&lt;=n)&#123;</div><div class="line">                ans=mid;</div><div class="line">                l=mid+1;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> r=mid-1;</div><div class="line">        &#125;</div><div class="line">        cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>只有最多15种情况 暴力就行</p>
<h2 id="HDU-6183"><a href="#HDU-6183" class="headerlink" title="HDU 6183"></a>HDU 6183</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>一个空的坐标系，有4种操作：<br>1 x y c表示在(x, y)点染上颜色c；<br>2 X y1 y2表示查询在(1, y1)到(X, y2)范围内有多少种不同的颜色：<br>0表示清屏；<br>3表示程序退出（0&lt;=x, y&lt;=1000000, 0&lt;=c&lt;=50）</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 4000050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson tree[rt].l,l,mid</span></div><div class="line"><span class="comment">#define rson tree[rt].r,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">struct T&#123;</div><div class="line">	int M<span class="keyword">in</span>;</div><div class="line">	int l,r;</div><div class="line">&#125;tree[maxn];</div><div class="line">int root[55],cnt,op,flag;</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">	mm(tree,0),mm(root,0);</div><div class="line">	cnt=0;</div><div class="line">&#125;</div><div class="line">void update(int &amp;rt,int l,int r,int x,int y)&#123;</div><div class="line">	<span class="keyword">if</span>(!rt)&#123;</div><div class="line">		rt=++cnt;</div><div class="line">		tree[rt].M<span class="keyword">in</span>=x;</div><div class="line">	&#125;</div><div class="line">	tree[rt].M<span class="keyword">in</span>=min(tree[rt].M<span class="keyword">in</span>,x);</div><div class="line">	<span class="keyword">if</span>(l==r) <span class="built_in">return</span>;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=y) update(lson,x,y);</div><div class="line">	<span class="keyword">else</span> update(rson,x,y);</div><div class="line">	</div><div class="line">&#125;</div><div class="line">void query(int rt,int l,int r,int L,int R,int x)&#123;</div><div class="line">	<span class="keyword">if</span>(flag || !rt) <span class="built_in">return</span>;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R)&#123;</div><div class="line">		<span class="keyword">if</span>(tree[rt].M<span class="keyword">in</span>&lt;=x) flag=1;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=L) query(lson,L,R,x);</div><div class="line">	<span class="keyword">if</span>(mid&lt;R) query(rson,L,R,x);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;op)!=EOF)&#123;</div><div class="line">		<span class="keyword">if</span>(op==3) <span class="built_in">break</span>;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(op==0) init();</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(op==1)&#123;</div><div class="line">			int x,y,c;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;c);</div><div class="line">			update(root[c],1,1000000,x,y);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			int x,y1,y2;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y1,&amp;y2);</div><div class="line">			int ans=0;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;=50;i++)&#123;</div><div class="line">				flag=0;</div><div class="line">				query(root[i],1,1000000,y1,y2,x);</div><div class="line">				ans+=flag;</div><div class="line">			&#125;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>颜色只有50种，可以建50棵线段树然后暴力<br>对于每一种颜色，因为查询的横坐标是1到X，所以对于每个y，你只需要知道离y轴最近的那个点在哪里<br>这样的话就可以按y坐标建树，查询的时候判断下范围内有没有点即可<br>注意防止炸内存 可以用每个现有的结点的编号是++cnt的动态开点方式 并rt带&amp;可以有效的返回改颜色root的编号<br>最后暴力50种颜色 判断维护的x最小值在不在要求的之内 若没有这种颜色直接跳过</p>
<h2 id="HDU-6184"><a href="#HDU-6184" class="headerlink" title="HDU 6184"></a>HDU 6184</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>n个点m条边的无向图，问有多少个A-structure<br>其中A-structure满足V=(A,B,C,D) &amp;&amp; E=(AB,BC,CD,DA,AC)</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line"><span class="built_in">set</span>&lt;LL&gt;s;</div><div class="line">int n,m,<span class="built_in">limit</span>;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">int out[maxn],vis[maxn],linker[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">	s.clear();</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) e[i].clear();</div><div class="line">	mm(out,0),mm(vis,0),mm(linker,0);</div><div class="line">	<span class="built_in">limit</span>=sqrt(m+0.5);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)&#123;</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			int u,v;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">			e[u].push_back(v);</div><div class="line">			e[v].push_back(u);</div><div class="line">			out[v]++,out[u]++;</div><div class="line">			s.insert((LL)u*n+v);</div><div class="line">			s.insert((LL)v*n+u);</div><div class="line">		&#125;</div><div class="line">		LL ans=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			vis[i]=1;</div><div class="line">			int len=e[i].size();</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;len;j++)&#123;</div><div class="line">				int next=e[i][j];</div><div class="line">				linker[next]=i;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;len;j++)&#123;</div><div class="line">				int next=e[i][j];</div><div class="line">				int sum=0;</div><div class="line">				<span class="keyword">if</span>(vis[next]) <span class="built_in">continue</span>;</div><div class="line">				<span class="keyword">if</span>(out[next]&lt;=<span class="built_in">limit</span>)&#123;</div><div class="line">					int len2=e[next].size();</div><div class="line">					<span class="keyword">for</span>(int k=0;k&lt;len2;k++)&#123;</div><div class="line">						int next2=e[next][k];</div><div class="line">						<span class="keyword">if</span>(linker[next2]==i) sum++; </div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span>&#123;</div><div class="line">					<span class="keyword">for</span>(int k=0;k&lt;len;k++)&#123;</div><div class="line">						int next2=e[i][k];</div><div class="line">						<span class="keyword">if</span>(s.find((LL)next2*n+next)!=s.end()) sum++;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">				ans+=(LL)sum*(sum-1)/2;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>可以看出A-structure是由两个有公共边的三元环构成的<br>msqrt(m)暴力三元环就好了<br>1.统计每个点的度数<br>2.入度&lt;=sqrt(m)的分为第一类，入度&gt;sqrt(m)的分为第二类<br>3.对于第一类，连续暴力依次连接的三个点 判断第三个点和第一个点是否相连<br>因为m条边最多每条边遍历一次，然后暴力的点的入度&lt;=sqrt(m)，所以复杂度约为O(msqrt(m))<br>4.对于第二类，直接暴力任意第一个点和连接第一个点的另两个点，判断这三个点是否构成环，因为这一类点的个数不会超过sqrt(m)个，<br>所以复杂度约为O(sqrt(m)^3)=O(msqrt(m))<br>5.判断两个点是否连接可以用set，map和Hash都行<br>考虑每一个边时，如果有K个点跟这个边的两个端点都相连，那么有CK2种方案</p>
<h2 id="HDU-6185"><a href="#HDU-6185" class="headerlink" title="HDU 6185"></a>HDU 6185</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>4×n的方格用1×2和2×1的矩形去填 有多少种方法<br>n的范围为1e18</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define rep(i,a,n) for (int i=a;i&lt;n;i++)</span></div><div class="line"><span class="comment">#define per(i,a,n) for (int i=n-1;i&gt;=a;i--)</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define mp make_pair</span></div><div class="line"><span class="comment">#define SZ(x) ((int)(x).size())</span></div><div class="line">typedef vector&lt;int&gt; VI;</div><div class="line">typedef long long ll;</div><div class="line">typedef pair&lt;int,int&gt; PII;</div><div class="line">const ll mod=1000000007;</div><div class="line">ll powmod(ll a,ll b) &#123;ll res=1;a%=mod; assert(b&gt;=0); <span class="keyword">for</span>(;b;b&gt;&gt;=1)&#123;<span class="keyword">if</span>(b&amp;1)res=res*a%mod;a=a*a%mod;&#125;<span class="built_in">return</span> res;&#125;</div><div class="line">int _; </div><div class="line">ll n;</div><div class="line">namespace linear_seq &#123;</div><div class="line">    const int N=10010;</div><div class="line">    ll res[N],base[N],_c[N],_md[N];</div><div class="line">    vector&lt;ll&gt; Md;</div><div class="line">    void mul(ll *a,ll *b,ll k) &#123;</div><div class="line">        rep(i,0,k+k) _c[i]=0;</div><div class="line">        rep(i,0,k) <span class="keyword">if</span> (a[i]) rep(j,0,k) _c[i+j]=(_c[i+j]+a[i]*b[j])%mod;</div><div class="line">        <span class="keyword">for</span> (int i=k+k-1;i&gt;=k;i--) <span class="keyword">if</span> (_c[i])</div><div class="line">            rep(j,0,SZ(Md)) _c[i-k+Md[j]]=(_c[i-k+Md[j]]-_c[i]*_md[Md[j]])%mod;</div><div class="line">        rep(i,0,k) a[i]=_c[i];</div><div class="line">    &#125;</div><div class="line">    int solve(ll n,VI a,VI b) &#123; </div><div class="line">        ll ans=0,pnt=0;</div><div class="line">        ll k=SZ(a);</div><div class="line">        assert(SZ(a)==SZ(b));</div><div class="line">        rep(i,0,k) _md[k-1-i]=<span class="_">-a</span>[i];_md[k]=1;</div><div class="line">        Md.clear();</div><div class="line">        rep(i,0,k) <span class="keyword">if</span> (_md[i]!=0) Md.push_back(i);</div><div class="line">        rep(i,0,k) res[i]=base[i]=0;</div><div class="line">        res[0]=1;</div><div class="line">        <span class="keyword">while</span> ((1ll&lt;&lt;pnt)&lt;=n) pnt++;</div><div class="line">        <span class="keyword">for</span> (int p=pnt;p&gt;=0;p--) &#123;</div><div class="line">            mul(res,res,k);</div><div class="line">            <span class="keyword">if</span> ((n&gt;&gt;p)&amp;1) &#123;</div><div class="line">                <span class="keyword">for</span> (int i=k-1;i&gt;=0;i--) res[i+1]=res[i];res[0]=0;</div><div class="line">                rep(j,0,SZ(Md)) res[Md[j]]=(res[Md[j]]-res[k]*_md[Md[j]])%mod;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        rep(i,0,k) ans=(ans+res[i]*b[i])%mod;</div><div class="line">        <span class="keyword">if</span> (ans&lt;0) ans+=mod;</div><div class="line">        <span class="built_in">return</span> ans;</div><div class="line">    &#125;</div><div class="line">    VI BM(VI s) &#123;</div><div class="line">        VI C(1,1),B(1,1);</div><div class="line">        int L=0,m=1,b=1;</div><div class="line">        rep(n,0,SZ(s)) &#123;</div><div class="line">            ll d=0;</div><div class="line">            rep(i,0,L+1) d=(d+(ll)C[i]*s[n-i])%mod;</div><div class="line">            <span class="keyword">if</span> (d==0) ++m;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (2*L&lt;=n) &#123;</div><div class="line">                VI T=C;</div><div class="line">                ll c=mod<span class="_">-d</span>*powmod(b,mod-2)%mod;</div><div class="line">                <span class="keyword">while</span> (SZ(C)&lt;SZ(B)+m) C.pb(0);</div><div class="line">                rep(i,0,SZ(B)) C[i+m]=(C[i+m]+c*B[i])%mod;</div><div class="line">                L=n+1-L; B=T; b=d; m=1;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                ll c=mod<span class="_">-d</span>*powmod(b,mod-2)%mod;</div><div class="line">                <span class="keyword">while</span> (SZ(C)&lt;SZ(B)+m) C.pb(0);</div><div class="line">                rep(i,0,SZ(B)) C[i+m]=(C[i+m]+c*B[i])%mod;</div><div class="line">                ++m;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">return</span> C;</div><div class="line">    &#125;</div><div class="line">    int gao(VI a,ll n) &#123;</div><div class="line">        VI c=BM(a);</div><div class="line">        c.erase(c.begin());</div><div class="line">        rep(i,0,SZ(c)) c[i]=(mod-c[i])%mod;</div><div class="line">        <span class="built_in">return</span> solve(n,c,VI(a.begin(),a.begin()+SZ(c)));</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">int <span class="function"><span class="title">main</span></span>() &#123;</div><div class="line">    <span class="keyword">while</span>(~scanf(<span class="string">"%lld"</span>,&amp;n))&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,linear_seq::gao(VI&#123;1,1, 5, 11, 36, 95, 281, 781, 2245, 6336, 18061, 51205, 145601, 413351, </div><div class="line">        	1174500, 3335651, 9475901, 26915305, 76455961, 217172736&#125;,n));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>用普通的求k×n的矩阵快速幂方法打表<br>接着带入杜教的找线性规律的模版就好了</p>
<h2 id="HDU-6186"><a href="#HDU-6186" class="headerlink" title="HDU 6186"></a>HDU 6186</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>有n个数字 求删除某个数字后剩余的总体与 或 异或值<br>多次询问</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int n,q;</div><div class="line">int a[maxn];</div><div class="line">int pre1[maxn],pre2[maxn],pre3[maxn];</div><div class="line">int suf1[maxn],suf2[maxn],suf3[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    mm(pre1,0),mm(pre2,0),mm(pre3,0);</div><div class="line">    mm(suf1,0),mm(suf2,0),mm(suf3,0);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;q)!=EOF)&#123;</div><div class="line">        init();</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">        pre1[1]=a[1],pre2[1]=a[1],pre3[1]=a[1];</div><div class="line">        suf1[n]=a[n],suf2[n]=a[n],suf3[n]=a[n];</div><div class="line">        <span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">            pre1[i]=pre1[i-1]&amp;a[i];</div><div class="line">            pre2[i]=pre2[i-1]|a[i];</div><div class="line">            pre3[i]=pre3[i-1]^a[i];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=n-1;i&gt;=1;i--)&#123;</div><div class="line">            suf1[i]=suf1[i+1]&amp;a[i];</div><div class="line">            suf2[i]=suf2[i+1]|a[i];</div><div class="line">            suf3[i]=suf3[i+1]^a[i];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">while</span>(q--)&#123;</div><div class="line">            int x;</div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">            <span class="keyword">if</span>(x==1)&#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,suf1[2],suf2[2],suf3[2]);    </div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(x==n)&#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,pre1[n-1],pre2[n-1],pre3[n-1]);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,pre1[x-1]&amp;suf1[x+1],pre2[x-1]|suf2[x+1],pre3[x-1]^suf3[x+1]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>on求前后缀<br>o1询问</p>
<h2 id="HDU-6187"><a href="#HDU-6187" class="headerlink" title="HDU 6187"></a>HDU 6187</h2><h3 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h3><p>总权值-最大生成树权值和</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 200050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">struct edge&#123;</div><div class="line">	int u,v,w;</div><div class="line">	edge(int u,int v,int w):u(u),v(v),w(w)&#123;&#125;</div><div class="line">	bool operator &lt; (const edge&amp; x) const&#123;</div><div class="line">		<span class="built_in">return</span> w&gt;x.w;</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line">int n,m,tol;</div><div class="line">int cnt;</div><div class="line">int p[maxn];</div><div class="line">vector&lt;edge&gt;e;</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">	e.clear();</div><div class="line">	tol=0,cnt=0;</div><div class="line">&#125;</div><div class="line">int find(int x)&#123;</div><div class="line">	<span class="built_in">return</span> x==p[x]?x:p[x]=find(p[x]);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">kruskal</span></span>()&#123;</div><div class="line">	int ans=0;</div><div class="line">	sort(e.begin(),e.end());</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++) p[i]=i;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;m;i++)&#123;</div><div class="line">		int x=find(e[i].u),y=find(e[i].v);</div><div class="line">		<span class="keyword">if</span>(x!=y)&#123;</div><div class="line">			ans+=e[i].w;</div><div class="line">			p[x]=y;</div><div class="line">			cnt++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)&#123;</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			int x,y;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			int u,v,w;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">			tol+=w;</div><div class="line">			e.pb(edge(u,v,w));</div><div class="line">		&#125;</div><div class="line">		int ans=kruskal();</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,m-cnt,tol-ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>注意删除的边数是m-cnt而不是m-n+1</p>
<h2 id="HDU-6188"><a href="#HDU-6188" class="headerlink" title="HDU 6188"></a>HDU 6188</h2><h3 id="题目要求-6"><a href="#题目要求-6" class="headerlink" title="题目要求"></a>题目要求</h3><p>输入一个n，接下来有n个数，让你求出能组成最多的对子或者顺子的和。<br>对子: (2,2)，顺子: (1,2,3)。</p>
<h3 id="参考AC代码-6"><a href="#参考AC代码-6" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1000050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int hashh[maxn];</div><div class="line">int n;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</div><div class="line">		mm(hashh,0);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			int x;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">			hashh[x]++;</div><div class="line">		&#125;</div><div class="line">		int ans=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=1000000;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(hashh[i] &amp;&amp; hashh[i-1] &amp;&amp; hashh[i-2] &amp;&amp; i&gt;=3)&#123;</div><div class="line">				hashh[i]--,hashh[i-1]--,hashh[i-2]--;</div><div class="line">				ans++;</div><div class="line">			&#125;</div><div class="line">			ans+=hashh[i]/2;</div><div class="line">			hashh[i]%=2;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><p>贪心<br>当前数能作为某个顺子的最大值，则取顺子；<br>否则能取对子，则取对子。</p>
<h2 id="HDU-6191"><a href="#HDU-6191" class="headerlink" title="HDU 6191"></a>HDU 6191</h2><h3 id="题目要求-7"><a href="#题目要求-7" class="headerlink" title="题目要求"></a>题目要求</h3><p>给你一棵有根树，树上每个节点有一个值，每次询问以u为根节点的子树异或上x的最大值</p>
<h3 id="参考AC代码-7"><a href="#参考AC代码-7" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 200050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int bin[30];</div><div class="line">int n,m,cnt;</div><div class="line">int a[maxn],b[maxn],root[maxn];</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">int <span class="keyword">in</span>[maxn],out[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">	mm(<span class="keyword">in</span>,0),mm(out,0),mm(root,0);</div><div class="line">	cnt=0;</div><div class="line">&#125;</div><div class="line">struct trie&#123;</div><div class="line">    int cnt;</div><div class="line">    int ch[maxn*30][2],sum[maxn*30];</div><div class="line">    void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">        cnt = 0;</div><div class="line">        mm(ch,0);</div><div class="line">    	mm(sum,0);</div><div class="line">    &#125;</div><div class="line">    int insert(int x,int val)&#123;</div><div class="line">        int tmp,y;tmp=y=++cnt;</div><div class="line">        <span class="keyword">for</span>(int i=29;i&gt;=0;i--)</div><div class="line">        &#123;</div><div class="line">            ch[y][0]=ch[x][0];ch[y][1]=ch[x][1];</div><div class="line">            sum[y]=sum[x]+1;</div><div class="line">            int t=val&amp;bin[i];t&gt;&gt;=i;</div><div class="line">            x=ch[x][t];</div><div class="line">            ch[y][t]=++cnt;</div><div class="line">            y=ch[y][t];</div><div class="line">        &#125;</div><div class="line">        sum[y]=sum[x]+1;</div><div class="line">        <span class="built_in">return</span> tmp;</div><div class="line">    &#125;</div><div class="line">    int query(int l,int r,int val)&#123;</div><div class="line">        int tmp=0;</div><div class="line">        <span class="keyword">for</span>(int i=29;i&gt;=0;i--)</div><div class="line">        &#123;</div><div class="line">            int t=val&amp;bin[i];t&gt;&gt;=i;</div><div class="line">            <span class="keyword">if</span>(sum[ch[r][t^1]]-sum[ch[l][t^1]])</div><div class="line">                tmp+=bin[i],r=ch[r][t^1],l=ch[l][t^1];</div><div class="line">            <span class="keyword">else</span> r=ch[r][t],l=ch[l][t];</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">return</span> tmp;</div><div class="line">    &#125;</div><div class="line">&#125;trie;</div><div class="line">void dfs(int x,int fa)&#123;</div><div class="line">	<span class="keyword">in</span>[x]=++cnt;</div><div class="line">	root[cnt]=trie.insert(root[cnt-1],a[x]);</div><div class="line">	int len=e[x].size();</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">		int next=e[x][i];</div><div class="line">		<span class="keyword">if</span>(next==fa) <span class="built_in">continue</span>;</div><div class="line">		dfs(next,x);</div><div class="line">	&#125;</div><div class="line">	out[x]=cnt;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	bin[0]=1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=30;i++) bin[i]=bin[i-1]&lt;&lt;1;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)&#123;</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">			int x;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">			e[x].push_back(i);</div><div class="line">		&#125;</div><div class="line">		trie.init();</div><div class="line">		dfs(1,0);</div><div class="line">		<span class="keyword">while</span>(m--)&#123;</div><div class="line">			int x,y;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,trie.query(root[<span class="keyword">in</span>[x]-1],root[out[x]],y));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h3><p>按照dfs序建关于数字的二进制可持久化字典树就好了</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[分块专题2]]></title>
      <url>http://xuboming8.github.io/2017/08/30/%E5%88%86%E5%9D%97%E4%B8%93%E9%A2%982/</url>
      <content type="html"><![CDATA[<h1 id="分块专题2"><a href="#分块专题2" class="headerlink" title="分块专题2"></a>分块专题2</h1><h2 id="cf-455D"><a href="#cf-455D" class="headerlink" title="cf 455D"></a>cf 455D</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><a id="more"></a>
<p>题意：给出一个序列，两种操作<br>1.将区间[l,r]滚动一次    a[l] a[l+1]···a[r]-&gt;a[r] a[l]···a[r-1]<br>2.询问区间[l,r]中值等于k的数有多少个<br>根据所给公式强制在线</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">deque&lt;int&gt;que[350];</div><div class="line">int b[350][maxn];</div><div class="line">int n,q;</div><div class="line">int val[maxn];</div><div class="line">int block,num,belong[maxn],l[maxn],r[maxn];</div><div class="line">void <span class="function"><span class="title">build</span></span>()&#123;</div><div class="line">	block=sqrt(n);</div><div class="line">    num=n/block;</div><div class="line">	<span class="keyword">if</span>(n%block) num++;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=num;i++) l[i]=(i-1)*block+1,r[i]=i*block;</div><div class="line">    r[num]=n;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) belong[i]=(i-1)/block+1;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=num;i++)&#123;</div><div class="line">    	<span class="keyword">for</span>(int j=l[i];j&lt;=r[i];j++)&#123;</div><div class="line">    		b[i][val[j]]++;</div><div class="line">    		que[i].push_back(val[j]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void update(int x,int y)&#123;</div><div class="line">	<span class="keyword">if</span>(belong[x]==belong[y])&#123;</div><div class="line">		int index=belong[x];</div><div class="line">		x-=l[index];</div><div class="line">		y-=l[index];</div><div class="line">		int temp=que[index][y];</div><div class="line">		<span class="keyword">for</span>(int i=y;i&gt;x;i--) que[index][i]=que[index][i-1];</div><div class="line">		que[index][x]=temp;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int temp=que[belong[y]][y<span class="_">-l</span>[belong[y]]];</div><div class="line">	int temp2=que[belong[x]][r[belong[x]]<span class="_">-l</span>[belong[x]]];</div><div class="line">	b[belong[y]][temp]--;</div><div class="line">	b[belong[x]][temp2]--;</div><div class="line">	<span class="keyword">for</span>(int i=r[belong[x]];i&gt;x;i--) que[belong[x]][i<span class="_">-l</span>[belong[x]]]=que[belong[x]][i<span class="_">-l</span>[belong[x]]-1];</div><div class="line">	que[belong[x]][x<span class="_">-l</span>[belong[x]]]=temp;</div><div class="line">	b[belong[x]][temp]++;</div><div class="line">	<span class="keyword">for</span>(int i=belong[x]+1;i&lt;belong[y];i++)&#123;</div><div class="line">		int tp=temp2;</div><div class="line">		b[i][temp2]++;</div><div class="line">		temp2=que[i][r[i]<span class="_">-l</span>[i]];</div><div class="line">		b[i][temp2]--;</div><div class="line">		que[i].pop_back();</div><div class="line">		que[i].push_front(tp);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=y;i&gt;l[belong[y]];i--) que[belong[y]][i<span class="_">-l</span>[belong[y]]]=que[belong[y]][i<span class="_">-l</span>[belong[y]]-1];</div><div class="line">	que[belong[y]][0]=temp2;</div><div class="line">	b[belong[y]][temp2]++;</div><div class="line">&#125;</div><div class="line">int query(int x,int y,int k)&#123;</div><div class="line">	int ans=0;</div><div class="line">	<span class="keyword">if</span>(belong[x]==belong[y])&#123;</div><div class="line">		<span class="keyword">for</span>(int i=x;i&lt;=y;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(que[belong[x]][i<span class="_">-l</span>[belong[x]]]==k) ans++;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> ans;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=x;i&lt;=r[belong[x]];i++)&#123;</div><div class="line">		<span class="keyword">if</span>(que[belong[x]][i<span class="_">-l</span>[belong[x]]]==k) ans++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=belong[x]+1;i&lt;belong[y];i++) ans+=b[i][k];</div><div class="line">	<span class="keyword">for</span>(int i=l[belong[y]];i&lt;=y;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(que[belong[y]][i<span class="_">-l</span>[belong[y]]]==k) ans++;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;val[i]);</div><div class="line">	build();</div><div class="line">	int ans=0;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;q);</div><div class="line">	<span class="keyword">while</span>(q--)&#123;</div><div class="line">		int op;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;op);</div><div class="line">		int x,y;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">		x=(x+ans-1)%n+1;</div><div class="line">		y=(y+ans-1)%n+1;</div><div class="line">		<span class="keyword">if</span>(x&gt;y) swap(x,y);</div><div class="line">		<span class="keyword">if</span>(op==1) update(x,y);</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			int k;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;k);</div><div class="line">			k=(k+ans-1)%n+1;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans=query(x,y,k));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>分块+双段队列模拟<br>b代表每个块的hash表 que模拟每个块<br>模拟时注意细节即可 每个块que的下标需要减去左端点l</p>
<h2 id="codeforces-13E"><a href="#codeforces-13E" class="headerlink" title="codeforces 13E"></a>codeforces 13E</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>有n个弹簧，每次扔个球，这个球可以弹到i+power[i]的位置<br>然后有两种操作<br>将第i个位置的弹簧的弹力改为b<br>将球扔到第i个位置，问这个球最后弹到了哪儿，这个球弹了几次？</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int n,q,block,num;</div><div class="line">int a[maxn],belong[maxn];</div><div class="line">int cnt[maxn],End[maxn];</div><div class="line">int l[1100],r[1100];</div><div class="line">inline LL <span class="function"><span class="title">read</span></span>()&#123;</div><div class="line">    int x=0,f=1;char ch=getchar();</div><div class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-1;ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)&#123;x=x*10+ch-<span class="string">'0'</span>;ch=getchar();&#125;</div><div class="line">    <span class="built_in">return</span> x*f;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">build</span></span>()&#123;</div><div class="line">	block = sqrt(n);</div><div class="line">    num = n/block;</div><div class="line">    <span class="keyword">if</span>(n%block) num++;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=num;i++) l[i]=(i-1)*block+1,r[i]=i*block;</div><div class="line">    r[num]=n;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) belong[i]=(i-1)/block+1;</div><div class="line">	<span class="keyword">for</span>(int i=n;i&gt;=1;i--)&#123;</div><div class="line">		<span class="keyword">if</span>(a[i]+i&gt;n) cnt[i]=1,End[i]=-1;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(belong[i]==belong[a[i]+i]) cnt[i]=cnt[i+a[i]]+1,End[i]=End[i+a[i]];</div><div class="line">		<span class="keyword">else</span> cnt[i]=1,End[i]=i+a[i];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void update(int x,int y)&#123;</div><div class="line">	a[x]=y;</div><div class="line">	<span class="keyword">for</span>(int i=x;i&gt;=l[belong[x]];i--)&#123;</div><div class="line">		<span class="keyword">if</span>(a[i]+i&gt;n) cnt[i]=1,End[i]=-1;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(belong[i]==belong[a[i]+i]) cnt[i]=cnt[i+a[i]]+1,End[i]=End[i+a[i]];</div><div class="line">		<span class="keyword">else</span> cnt[i]=1,End[i]=i+a[i];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void solve(int x)&#123;</div><div class="line">	int ans=0;</div><div class="line">	<span class="keyword">while</span>(1)&#123;</div><div class="line">		ans+=cnt[x];</div><div class="line">		<span class="keyword">if</span>(End[x]&lt;0) <span class="built_in">break</span>;</div><div class="line">		x=End[x];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(1)&#123;</div><div class="line">		<span class="keyword">if</span>(x+a[x]&gt;n) <span class="built_in">break</span>;</div><div class="line">		x=x+a[x];</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,x,ans);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	n=<span class="built_in">read</span>(),q=<span class="built_in">read</span>();</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) a[i]=<span class="built_in">read</span>();</div><div class="line">	build();</div><div class="line">	<span class="keyword">while</span>(q--)&#123;</div><div class="line">		int op; op=<span class="built_in">read</span>();</div><div class="line">		<span class="keyword">if</span>(op==1)&#123;</div><div class="line">			int x; x=<span class="built_in">read</span>();</div><div class="line">			solve(x);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			int x,y;</div><div class="line">			x=<span class="built_in">read</span>(),y=<span class="built_in">read</span>();</div><div class="line">			update(x,y);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>跟bzoj弹飞绵羊一样 多了一个输出终止位置<br>这个在solve里暴力一下就好了</p>
<h2 id="codeforces-551E"><a href="#codeforces-551E" class="headerlink" title="codeforces 551E"></a>codeforces 551E</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>对于给定数列，操作一是把[l,r]区间内的数加x，操作二是求出一个值，该值为数x出现的最右位置减最左位置，若不存在x输出为-1</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 500050</span></div><div class="line"><span class="comment">#define LL long long </span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">	LL v;</div><div class="line">	int id;</div><div class="line">	bool operator &lt; (const node&amp; x) const&#123;</div><div class="line">		<span class="keyword">if</span>(v==x.v) <span class="built_in">return</span> id&lt;x.id;</div><div class="line">		<span class="built_in">return</span> v&lt;x.v;</div><div class="line">	&#125;</div><div class="line">&#125;a[maxn],d[maxn];</div><div class="line">int n,q,num,belong[maxn],block,l[maxn],r[maxn];</div><div class="line">LL p[maxn];</div><div class="line">void <span class="function"><span class="title">build</span></span>()&#123;</div><div class="line">    block=sqrt(n);</div><div class="line">    num=n/block;</div><div class="line">	<span class="keyword">if</span>(n%block) num++;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=num;i++) l[i]=(i-1)*block+1,r[i]=i*block;</div><div class="line">    r[num]=n;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) belong[i]=(i-1)/block+1;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) d[i]=a[i];</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=num;i++) sort(d+l[i],d+r[i]+1);</div><div class="line">&#125;</div><div class="line">void update(int x,int y,int k)&#123;</div><div class="line">	<span class="keyword">if</span>(belong[x]==belong[y])&#123;</div><div class="line">		<span class="keyword">for</span>(int i=x;i&lt;=y;i++) a[i].v+=k;</div><div class="line">		<span class="keyword">for</span>(int i=l[belong[x]];i&lt;=r[belong[x]];i++) d[i]=a[i];</div><div class="line">		sort(d+l[belong[x]],d+r[belong[x]]+1);</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=x;i&lt;=r[belong[x]];i++) a[i].v+=k;</div><div class="line">	<span class="keyword">for</span>(int i=l[belong[x]];i&lt;=r[belong[x]];i++) d[i]=a[i];</div><div class="line">	sort(d+l[belong[x]],d+r[belong[x]]+1);</div><div class="line">	<span class="keyword">for</span>(int i=belong[x]+1;i&lt;belong[y];i++) p[i]+=k;</div><div class="line">	<span class="keyword">for</span>(int i=l[belong[y]];i&lt;=y;i++) a[i].v+=k;</div><div class="line">	<span class="keyword">for</span>(int i=l[belong[y]];i&lt;=r[belong[y]];i++) d[i]=a[i];</div><div class="line">	sort(d+l[belong[y]],d+r[belong[y]]+1);</div><div class="line">&#125;</div><div class="line">int binsearch1(int L,int R,LL x)&#123;</div><div class="line">    int l=L,r=R;  </div><div class="line">    int ans=0;</div><div class="line">    <span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">        int mid=(l+r)&gt;&gt;1;  </div><div class="line">        <span class="keyword">if</span>(d[mid].v&gt;=x) ans=mid,r=mid-1;</div><div class="line">        <span class="keyword">else</span> l=mid+1;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> d[ans].v==x?d[ans].id:-1;  </div><div class="line">&#125;  </div><div class="line">int binsearch2(int L,int R,LL x)&#123;</div><div class="line">    int l=L,r=R;  </div><div class="line">    int ans=0;</div><div class="line">    <span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">        int mid=(l+r)&gt;&gt;1;  </div><div class="line">        <span class="keyword">if</span>(d[mid].v&lt;=x) ans=mid,l=mid+1;  </div><div class="line">        <span class="keyword">else</span> r=mid-1;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> d[ans].v==x?d[ans].id:-1;  </div><div class="line">&#125;  </div><div class="line">int query(int x)&#123;</div><div class="line">	int lpos=-1,rpos=-1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=num;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(lpos==-1) lpos=binsearch1(l[i],r[i],x-p[i]); </div><div class="line">		rpos=max(rpos,binsearch2(l[i],r[i],x-p[i]));</div><div class="line">	&#125;	</div><div class="line">	<span class="keyword">if</span>(lpos==-1 || rpos==-1) <span class="built_in">return</span> -1;</div><div class="line">	<span class="built_in">return</span> rpos-lpos;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;q);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		scanf(<span class="string">"%lld"</span>,&amp;a[i].v);</div><div class="line">		a[i].id=i;</div><div class="line">	&#125;</div><div class="line">	build();</div><div class="line">	<span class="keyword">while</span>(q--)&#123;</div><div class="line">		int op;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;op);</div><div class="line">		<span class="keyword">if</span>(op==1)&#123;</div><div class="line">			int x,y,z;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;z);</div><div class="line">			update(x,y,z);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			int x;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,query(x));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>对于这种迷之询问，用分块。将n个数分成sqrt(n)块，初始化将a数组赋值给d数组，将d数组分块从小到大排序，新建一个数组p储存每一块所加的和，<br>注意寻找最左侧和最右侧的二分写法</p>
<h2 id="cf-103D"><a href="#cf-103D" class="headerlink" title="cf 103D"></a>cf 103D</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>给你N个数，然后每次询问给你(x,y)，求a[x]+a[x+y]+a[x+2<em>y]+a[x+3</em>y]的和是多少</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 300050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">	int a,b;</div><div class="line">&#125;q[maxn];</div><div class="line">int n,m;</div><div class="line">int <span class="built_in">limit</span>=600;</div><div class="line">LL a[maxn],ans[maxn],dp[maxn];</div><div class="line">vector&lt;int&gt;e[600];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%lld"</span>,&amp;a[i]);</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;m);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;q[i].a,&amp;q[i].b);</div><div class="line">		<span class="keyword">if</span>(q[i].b&gt;<span class="built_in">limit</span>)&#123;</div><div class="line">			LL re=0;</div><div class="line">			<span class="keyword">for</span>(int j=q[i].a;j&lt;=n;j+=q[i].b) re+=a[j];</div><div class="line">			ans[i]=re;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> e[q[i].b].push_back(i);</div><div class="line">	&#125;	</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=<span class="built_in">limit</span>;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(e[i].size())&#123;</div><div class="line">			<span class="keyword">for</span>(int j=n;j&gt;=1;j--)&#123;</div><div class="line">				<span class="keyword">if</span>(i+j&gt;n) dp[j]=a[j];</div><div class="line">				<span class="keyword">else</span> dp[j]=dp[i+j]+a[j];</div><div class="line">			&#125;</div><div class="line">			int len=e[i].size();</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;len;j++)&#123;</div><div class="line">				int temp=e[i][j];</div><div class="line">				ans[temp]=dp[q[temp].a];</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans[i]);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>分块+离线<br>按照间隔y大小的sqrt分块 本题limit为：600<br>大于600直接暴力 小于600按照limit把询问的编号记录下来<br>对于每个limit按照dp预处理出每个位置 再更新ans</p>
<h2 id="bzoj-2957"><a href="#bzoj-2957" class="headerlink" title="bzoj 2957"></a>bzoj 2957</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>小A的楼房外有一大片施工工地，工地上有N栋待建的楼房。每天，这片工地上的房子拆了又建、建了又拆。他经常无聊地看着窗外发呆，<br>数自己能够看到多少栋房子。<br>为了简化问题，我们考虑这些事件发生在一个二维平面上。小A在平面上(0,0)点的位置，第i栋楼房可以用一条连接(i,0)和(i,Hi)的线段表示，<br>其中Hi为第i栋楼房的高度。如果这栋楼房上任何一个高度大于0的点与(0,0)的连线没有与之前的线段相交，那么这栋楼房就被认为是可见的。<br>施工队的建造总共进行了M天。初始时，所有楼房都还没有开始建造，它们的高度均为0。在第i天，建筑队将会将横坐标为Xi的房屋的高度变为Yi<br>(高度可以比原来大—修建，也可以比原来小—拆除，甚至可以保持不变—建筑队这天什么事也没做)。请你帮小A数数每天在建筑队完工之后，<br>他能看到多少栋楼房？</p>
<p>第一行两个正整数N,M<br>接下来M行，每行两个正整数Xi,Yi<br>输出M行，第i行一个整数表示第i天过后小A能看到的楼房有多少栋</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">template&lt;typename T&gt; inline void <span class="built_in">read</span>(T &amp;x)&#123;x=0;T f=1;char ch;<span class="keyword">do</span>&#123;ch=getchar();<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-1;&#125;<span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>);<span class="keyword">do</span> x=x*10+ch-<span class="string">'0'</span>,ch=getchar();<span class="keyword">while</span>(ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>);x*=f;&#125;</div><div class="line">struct T&#123;</div><div class="line">	double val;</div><div class="line">	int ans;</div><div class="line">&#125;tree[maxn&lt;&lt;2];</div><div class="line">int n,m;</div><div class="line">int query(int rt,int l,int r,double val)&#123;</div><div class="line">	<span class="keyword">if</span>(l==r) <span class="built_in">return</span> tree[rt].val&gt;val;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(tree[rt&lt;&lt;1].val&lt;=val) <span class="built_in">return</span> query(rson,val);</div><div class="line">	<span class="built_in">return</span> tree[rt].ans-tree[rt&lt;&lt;1].ans+query(lson,val);</div><div class="line">&#125;</div><div class="line">void update(int rt,int l,int r,int pos,double val)&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		tree[rt].ans=1;</div><div class="line">		tree[rt].val=val;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=pos) update(lson,pos,val);</div><div class="line">	<span class="keyword">else</span> update(rson,pos,val);</div><div class="line">	tree[rt].val=max(tree[rt&lt;&lt;1].val,tree[rt&lt;&lt;1|1].val);</div><div class="line">	tree[rt].ans=tree[rt&lt;&lt;1].ans+query(rson,tree[rt&lt;&lt;1].val);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="built_in">read</span>(n),<span class="built_in">read</span>(m);</div><div class="line">	<span class="keyword">while</span>(m--)&#123;</div><div class="line">		int x,y;</div><div class="line">		<span class="built_in">read</span>(x),<span class="built_in">read</span>(y);</div><div class="line">		update(1,1,n,x,double(y)/x);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,tree[1].ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>能使用线段树的条件是：两个子问题可以合并<br>本题中，记ans[o]为：仅考虑o所代表的区间，有多少满足条件的数<br>那么首先，ans[o]一定包含ans[o×2]; 其次，属于ans[o×2]的建筑有可能挡住属于ans[o×2+1]的建筑，难点在于需求出这个数目<br>记 o×2 代表的区间中最大数为M，并将 o×2+1 所代表的区间分左右两段，记左段代表的区间中最大数为M2，继续讨论：</p>
<ol>
<li>若M大于等于M2，则左段全部不符合要求，递归判断右段有多少个大于M的数 </li>
<li>若M小于M2，则右段的答案不变，为ans[o×2+1]-ans[左段]，递归判断左段有多少个大于M的数 </li>
</ol>
<h2 id="hihocoder-1236"><a href="#hihocoder-1236" class="headerlink" title="hihocoder 1236"></a>hihocoder 1236</h2><h3 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h3><p>q次询问 每次寻找五维偏序<br>要求每次ans[i]的值异或flag</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 50050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">bitset&lt;maxn&gt;b[6][250],res[6];</div><div class="line">int n,m,q,num,belong[maxn],block,l[maxn],r[maxn];</div><div class="line">int ans[6];</div><div class="line">struct node&#123;</div><div class="line">	int val,index;</div><div class="line">	bool operator &lt; (const node&amp; x) const&#123;</div><div class="line">		<span class="built_in">return</span> val&lt;x.val;</div><div class="line">	&#125;</div><div class="line">&#125;a[6][maxn];</div><div class="line">void <span class="function"><span class="title">build</span></span>()&#123;</div><div class="line">    block=sqrt(n);</div><div class="line">    num=n/block;</div><div class="line">	<span class="keyword">if</span>(n%block) num++;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=num;i++) l[i]=(i-1)*block+1,r[i]=i*block;</div><div class="line">    r[num]=n;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) belong[i]=(i-1)/block+1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=5;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=num;j++) b[i][j].reset();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=5;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=num;j++)&#123;</div><div class="line">			b[i][j]|=b[i][j-1];</div><div class="line">			<span class="keyword">for</span>(int k=l[j];k&lt;=r[j];k++) b[i][j].set(a[i][k].index);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=5;j++)&#123;</div><div class="line">				scanf(<span class="string">"%d"</span>,&amp;a[j][i].val);</div><div class="line">				a[j][i].index=i;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=5;i++) sort(a[i]+1,a[i]+1+n);</div><div class="line">		build();</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;q);</div><div class="line">		int flag=0;</div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			<span class="keyword">for</span>(int i=1;i&lt;=5;i++)&#123;</div><div class="line">				scanf(<span class="string">"%d"</span>,&amp;ans[i]);</div><div class="line">				ans[i]^=flag;</div><div class="line">				res[i].reset();</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">for</span>(int i=1;i&lt;=5;i++)&#123;</div><div class="line">				int L=1,R=n,re=0;</div><div class="line">				<span class="keyword">while</span>(L&lt;=R)&#123;</div><div class="line">					int mid=L+R&gt;&gt;1;</div><div class="line">					<span class="keyword">if</span>(a[i][mid].val&lt;=ans[i]) re=mid,L=mid+1;</div><div class="line">					<span class="keyword">else</span> R=mid-1;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">for</span>(int j=l[belong[re]];j&lt;=re;j++) res[i].set(a[i][j].index);</div><div class="line">				res[i]|=b[i][belong[re]-1];</div><div class="line">			&#125;</div><div class="line">			res[0]=res[1]&amp;res[2]&amp;res[3]&amp;res[4]&amp;res[5];</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,flag=res[0].count());</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>在hihocoder147周的基础上分块<br>对于每次询问ans[i]二分查找到小于等于key的第一个位置 再进行块的处理<br>由于本题的q是在线的 所以需要排序分块二分<br>具体题解参考链接<a href="http://monkeyxu.cn/2017/04/25/Bitset%E4%BC%98%E5%8C%96/#hihocoder-147周" target="_blank" rel="external">转跳链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[分块专题一]]></title>
      <url>http://xuboming8.github.io/2017/08/28/%E5%88%86%E5%9D%97%E4%B8%93%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="分块专题一"><a href="#分块专题一" class="headerlink" title="分块专题一"></a>分块专题一</h1><h2 id="bzoj-3343"><a href="#bzoj-3343" class="headerlink" title="bzoj 3343"></a>bzoj 3343</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><a id="more"></a>
<p>区间初始值ai 给出两种操作<br>区间l到r内加w<br>区间l到r内询问大于等于w的个数</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int maxn = 1000006;</div><div class="line">int n,m,num,belong[maxn],block,l[maxn],r[maxn],a[maxn],p[maxn];</div><div class="line">int d[maxn];</div><div class="line">void <span class="function"><span class="title">build</span></span>()&#123;</div><div class="line">    block=sqrt(n);</div><div class="line">    num=n/block;</div><div class="line">	<span class="keyword">if</span>(n%block) num++;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=num;i++) l[i]=(i-1)*block+1,r[i]=i*block;</div><div class="line">    r[num]=n;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) belong[i]=(i-1)/block+1;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) d[i]=a[i];</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=num;i++) sort(d+l[i],d+r[i]+1);</div><div class="line">&#125;</div><div class="line">char op[5];</div><div class="line">int A,B,C;</div><div class="line">void update(int L,int R,int W)&#123;</div><div class="line">    <span class="keyword">if</span>(belong[L]==belong[R])&#123;</div><div class="line">        <span class="keyword">for</span>(int i=l[belong[L]];i&lt;=r[belong[R]];i++) a[i]+=p[belong[L]];</div><div class="line">        p[belong[L]]=0;</div><div class="line">        <span class="keyword">for</span>(int i=L;i&lt;=R;i++) a[i]+=W;</div><div class="line">        <span class="keyword">for</span>(int i=l[belong[L]];i&lt;=r[belong[R]];i++) d[i]=a[i];</div><div class="line">        sort(d+l[L],d+r[R]+1);</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(int i=l[belong[L]];i&lt;=r[belong[L]];i++) a[i]+=p[belong[L]];</div><div class="line">    p[belong[L]]=0;</div><div class="line">    <span class="keyword">for</span>(int i=L;i&lt;=r[belong[L]];i++) a[i]+=W;</div><div class="line">    <span class="keyword">for</span>(int i=l[belong[L]];i&lt;=r[belong[L]];i++) d[i]=a[i];</div><div class="line">    sort(d+l[belong[L]],d+r[belong[L]]+1);</div><div class="line">//~~~~~~~~~~~~~~~~~</div><div class="line">    <span class="keyword">for</span>(int i=l[belong[R]];i&lt;=r[belong[R]];i++) a[i]+=p[belong[R]];</div><div class="line">    p[belong[R]]=0;</div><div class="line">    <span class="keyword">for</span>(int i=l[belong[R]];i&lt;=R;i++) a[i]+=W;</div><div class="line">    <span class="keyword">for</span>(int i=l[belong[R]];i&lt;=r[belong[R]];i++) d[i]=a[i];</div><div class="line">    sort(d+l[belong[R]],d+r[belong[R]]+1);</div><div class="line">//~~~~~~~~~~~~~~~~~</div><div class="line">    <span class="keyword">for</span>(int i=belong[L]+1;i&lt;belong[R];i++) p[i]+=W;</div><div class="line">&#125;</div><div class="line">void ask(int L,int R,int W)&#123;</div><div class="line">    int ans = 0;</div><div class="line">    <span class="keyword">if</span>(belong[L]==belong[R])&#123;</div><div class="line">        <span class="keyword">for</span>(int i=L;i&lt;=R;i++)</div><div class="line">            <span class="keyword">if</span>(a[i]+p[belong[i]]&gt;=W)</div><div class="line">                ans++;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(int i=L;i&lt;=r[belong[L]];i++)</div><div class="line">        <span class="keyword">if</span>(a[i]+p[belong[i]]&gt;=W)</div><div class="line">            ans++;</div><div class="line">    <span class="keyword">for</span>(int i=l[belong[R]];i&lt;=R;i++)</div><div class="line">        <span class="keyword">if</span>(a[i]+p[belong[i]]&gt;=W)</div><div class="line">            ans++;</div><div class="line">    <span class="keyword">for</span>(int i=belong[L]+1;i&lt;belong[R];i++)&#123;</div><div class="line">        int ll=l[i],rr=r[i],Ans=0;</div><div class="line">        <span class="keyword">while</span>(ll&lt;=rr)&#123;</div><div class="line">            int mid=(ll+rr)/2;</div><div class="line">            <span class="keyword">if</span>(d[mid]+p[i]&gt;=W)rr=mid-1,Ans=r[i]-mid+1;</div><div class="line">            <span class="keyword">else</span> ll=mid+1;</div><div class="line">        &#125;</div><div class="line">        ans+=Ans;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">    scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">    build();</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">        scanf(<span class="string">"%s%d%d%d"</span>,&amp;op,&amp;A,&amp;B,&amp;C);</div><div class="line">        <span class="keyword">if</span>(op[0]==<span class="string">'A'</span>)ask(A,B,C);</div><div class="line">        <span class="keyword">else</span> update(A,B,C);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>num：分块的个数<br>belong[i]：表示i属于哪一块<br>block：表示块的大小<br>l[i]：表示i这块的左端点位置<br>r[i]：表示右端点位置<br>数组p相当于lazy 每个块内排序 最后完整的块用二分找到大于等于w的位置<br>当区间修改的端点经过了不完整的区间 这一段的lazy要加到a上 并更新到d上 因为lazy代表的是这一整块的延迟标记</p>
<h2 id="bzoj-4636"><a href="#bzoj-4636" class="headerlink" title="bzoj 4636"></a>bzoj 4636</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>蒟蒻DCrusher不仅喜欢玩扑克，还喜欢研究数列<br>题目描述<br>DCrusher有一个数列，初始值均为0，他进行N次操作，每次将数列[a,b）这个区间中所有比k小的数改为k，他想知<br>道N次操作后数列中所有元素的和。他还要玩其他游戏，所以这个问题留给你解决。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 80050</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;v;</div><div class="line">int getid(int x)&#123;<span class="built_in">return</span> lower_bound(v.begin(),v.end(),x)-v.begin()+1;&#125;</div><div class="line">int sum[maxn],lazy[maxn&lt;&lt;2]; </div><div class="line">struct node&#123;</div><div class="line">	int l,r,k;</div><div class="line">&#125;a[maxn];</div><div class="line">void push_down(int rt)&#123;</div><div class="line">	lazy[rt&lt;&lt;1]=max(lazy[rt&lt;&lt;1],lazy[rt]);</div><div class="line">	lazy[rt&lt;&lt;1|1]=max(lazy[rt&lt;&lt;1|1],lazy[rt]);</div><div class="line">&#125; </div><div class="line">void update(int rt,int l,int r,int L,int R,int val)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R)&#123;</div><div class="line">		lazy[rt]=max(lazy[rt],val);</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	push_down(rt);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=L) update(lson,L,R,val);</div><div class="line">	<span class="keyword">if</span>(mid&lt;R) update(rson,L,R,val);</div><div class="line">&#125;</div><div class="line">LL query(int rt,int l,int r)&#123;</div><div class="line">	<span class="keyword">if</span>(l==r) <span class="built_in">return</span> 1ll*sum[l]*lazy[rt];</div><div class="line">	push_down(rt);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="built_in">return</span> query(lson)+query(rson);	</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int n;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	mm(sum,0),mm(lazy,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		scanf(<span class="string">"%d%d%d"</span>,&amp;a[i].l,&amp;a[i].r,&amp;a[i].k);</div><div class="line">		v.push_back(a[i].l);</div><div class="line">		v.push_back(a[i].r);</div><div class="line">	&#125;</div><div class="line">	sort(v.begin(),v.end());</div><div class="line">	v.erase(unique(v.begin(),v.end()),v.end());</div><div class="line">	int len=v.size();</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len-1;i++) sum[i+1]=v[i+1]-v[i];</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		int L=getid(a[i].l);</div><div class="line">		int R=getid(a[i].r)-1;</div><div class="line">		int k=a[i].k;</div><div class="line">		update(1,1,len-1,L,R,k);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,query(1,1,len-1));</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>这题这可以用分块做 但还是采用离散+离线线段树处理<br>区间范围1e9所以需要离散化<br>sum维护离散化后每个点与后一个点的差 实际维护的是该段lazy的区间长度<br>注意是左闭右开的区间 所以R需要-1<br>还需主要vector下标从0开始 所以计算sum的时候需要后移一位</p>
<h2 id="bzoj-2002"><a href="#bzoj-2002" class="headerlink" title="bzoj 2002"></a>bzoj 2002</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>某天，Lostmonkey发明了一种超级弹力装置，为了在他的绵羊朋友面前显摆，他邀请小绵羊一起玩个游戏。游戏一开始，Lostmonkey在地上沿着一条直线摆上n个装置，<br>每个装置设定初始弹力系数ki，当绵羊达到第i个装置时，它会往后弹ki步，达到第i+ki个装置，若不存在第i+ki个装置，则绵羊被弹飞。绵羊想知道当它从第i个装置起步时，<br>被弹几次后会被弹飞。为了使得游戏更有趣，Lostmonkey可以修改某个弹力装置的弹力系数，任何时候弹力系数均为正整数。</p>
<p>第一行包含一个整数n，表示地上有n个装置，装置的编号从0到n-1,接下来一行有n个正整数，依次为那n个装置的初始弹力系数。第三行有一个正整数m，接下来m行每行<br>至少有两个数i、j，若i=1，你要输出从j出发被弹几次后被弹飞，若i=2则还会再输入一个正整数k，表示第j个弹力装置的系数被修改成k。对于20%的数据n,m&lt;=10000，<br>对于100%的数据n&lt;=200000,m&lt;=100000</p>
<p>对于每个i=1的情况，你都要输出一个需要的步数，占一行。</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int n,q,block,num;</div><div class="line">int a[maxn],belong[maxn];</div><div class="line">int cnt[maxn],End[maxn];</div><div class="line">int l[1100],r[1100];</div><div class="line">inline LL <span class="function"><span class="title">read</span></span>()&#123;</div><div class="line">    int x=0,f=1;char ch=getchar();</div><div class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-1;ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)&#123;x=x*10+ch-<span class="string">'0'</span>;ch=getchar();&#125;</div><div class="line">    <span class="built_in">return</span> x*f;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">build</span></span>()&#123;</div><div class="line">	block = sqrt(n);</div><div class="line">    num = n/block;</div><div class="line">    <span class="keyword">if</span>(n%block) num++;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=num;i++) l[i]=(i-1)*block+1,r[i]=i*block;</div><div class="line">    r[num]=n;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) belong[i]=(i-1)/block+1;</div><div class="line">	<span class="keyword">for</span>(int i=n;i&gt;=1;i--)&#123;</div><div class="line">		<span class="keyword">if</span>(a[i]+i&gt;n) cnt[i]=1,End[i]=-1;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(belong[i]==belong[a[i]+i]) cnt[i]=cnt[i+a[i]]+1,End[i]=End[i+a[i]];</div><div class="line">		<span class="keyword">else</span> cnt[i]=1,End[i]=i+a[i];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void update(int x,int y)&#123;</div><div class="line">	a[x]=y;</div><div class="line">	<span class="keyword">for</span>(int i=x;i&gt;=l[belong[x]];i--)&#123;</div><div class="line">		<span class="keyword">if</span>(a[i]+i&gt;n) cnt[i]=1,End[i]=-1;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(belong[i]==belong[a[i]+i]) cnt[i]=cnt[i+a[i]]+1,End[i]=End[i+a[i]];</div><div class="line">		<span class="keyword">else</span> cnt[i]=1,End[i]=i+a[i];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int solve(int x)&#123;</div><div class="line">	int ans=0;</div><div class="line">	<span class="keyword">while</span>(1)&#123;</div><div class="line">		ans+=cnt[x];</div><div class="line">		<span class="keyword">if</span>(End[x]&lt;0) <span class="built_in">break</span>;</div><div class="line">		x=End[x];</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	n=<span class="built_in">read</span>();</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) a[i]=<span class="built_in">read</span>();</div><div class="line">	build();</div><div class="line">	q=<span class="built_in">read</span>();</div><div class="line">	<span class="keyword">while</span>(q--)&#123;</div><div class="line">		int op; op=<span class="built_in">read</span>();</div><div class="line">		<span class="keyword">if</span>(op==1)&#123;</div><div class="line">			int x; x=<span class="built_in">read</span>();</div><div class="line">			x++;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,solve(x));</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			int x,y;</div><div class="line">			x++; </div><div class="line">			x=<span class="built_in">read</span>(),y=<span class="built_in">read</span>();</div><div class="line">			update(x,y);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>分块<br>cnt维护跳出该块的步数<br>end维护跳到下一个块的位置<br>注意下标从0开始 x需要++</p>
<h2 id="cf-444c"><a href="#cf-444c" class="headerlink" title="cf 444c"></a>cf 444c</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>开始,a[i]=i,b[i]=0<br>然后两个操作<br>1.使得[l,r]的b[i]+=fabs(x-a[i]),a[i]=x<br>2.查询[l,r]的b[i]和</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;  </div><div class="line"><span class="comment">#define ll long long  </span></div><div class="line"><span class="comment">#define L(x) (x&lt;&lt;1)  </span></div><div class="line"><span class="comment">#define R(x) (x&lt;&lt;1|1)  </span></div><div class="line"><span class="comment">#define N 100005  </span></div><div class="line">inline int Mid(int a,int b)&#123;<span class="built_in">return</span> (a+b)&gt;&gt;1;&#125;  </div><div class="line">inline ll ABS(ll x)&#123;<span class="built_in">return</span> x&gt;0?x:-x;&#125;  </div><div class="line">int n,m;  </div><div class="line">struct node&#123;  </div><div class="line">    int l, r, id;  </div><div class="line">    ll <span class="function"><span class="title">siz</span></span>()&#123;<span class="built_in">return</span> (ll)(r<span class="_">-l</span>+1);&#125;  </div><div class="line">    ll sum, col, lazy, same;  </div><div class="line">&#125;tree[N&lt;&lt;2];  </div><div class="line">void push_down(int id)&#123;   </div><div class="line">    <span class="keyword">if</span>(tree[id].lazy) &#123;  </div><div class="line">        tree[L(id)].sum += tree[L(id)].siz()*tree[id].lazy;  </div><div class="line">        tree[R(id)].sum += tree[R(id)].siz()*tree[id].lazy;  </div><div class="line">        tree[L(id)].lazy += tree[id].lazy;  </div><div class="line">        tree[R(id)].lazy += tree[id].lazy;  </div><div class="line">        tree[id].lazy = 0;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">if</span>(tree[id].col&gt;=0)&#123;  </div><div class="line">        tree[L(id)].col = tree[R(id)].col = tree[id].col;  </div><div class="line">    &#125;  </div><div class="line">&#125;  </div><div class="line">void push_up(int id)&#123;  </div><div class="line">    <span class="keyword">if</span>(tree[L(id)].col==tree[R(id)].col&amp;&amp;tree[L(id)].col&gt;=0)  </div><div class="line">    tree[id].col = tree[L(id)].col, tree[id].same = 1;  </div><div class="line">    <span class="keyword">else</span> tree[id].col = -1, tree[id].same = 0;  </div><div class="line">    tree[id].sum = tree[L(id)].sum+tree[R(id)].sum;  </div><div class="line">&#125;  </div><div class="line">void build(int l, int r, int id)&#123;  </div><div class="line">    tree[id].l = l, tree[id].r = r;  </div><div class="line">    tree[id].sum = 0;  </div><div class="line">    tree[id].lazy = 0;  </div><div class="line">    tree[id].col = -1;  </div><div class="line">    tree[id].same = 0;  </div><div class="line">    <span class="keyword">if</span>(l==r)&#123;  </div><div class="line">        tree[id].col = l;  </div><div class="line">        tree[id].same = 1;  </div><div class="line">        <span class="built_in">return</span> ;  </div><div class="line">    &#125;  </div><div class="line">    int mid = Mid(l,r);  </div><div class="line">    build(l,mid,L(id));  </div><div class="line">    build(mid+1,r,R(id));  </div><div class="line">&#125;  </div><div class="line">void updata(int l, int r, int id, ll col)&#123;  </div><div class="line">    <span class="keyword">if</span>(l==tree[id].l&amp;&amp;tree[id].r==r &amp;&amp; tree[id].same)&#123;  </div><div class="line">        tree[id].sum += tree[id].siz() * ABS(col-tree[id].col);  </div><div class="line">        tree[id].lazy += ABS(col-tree[id].col);  </div><div class="line">        tree[id].col = col;  </div><div class="line">        <span class="built_in">return</span> ;  </div><div class="line">    &#125;  </div><div class="line">    push_down(id);  </div><div class="line">    int mid = Mid(tree[id].l, tree[id].r);  </div><div class="line">    <span class="keyword">if</span>(mid&lt;l) updata(l,r,R(id),col);  </div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(r&lt;=mid) updata(l,r,L(id),col);  </div><div class="line">    <span class="keyword">else</span> updata(l,mid,L(id),col),updata(mid+1,r,R(id),col);    </div><div class="line">    push_up(id);  </div><div class="line">&#125;  </div><div class="line">ll query(int l, int r, int id)&#123;  </div><div class="line">    <span class="keyword">if</span>(l==tree[id].l &amp;&amp; tree[id].r==r) <span class="built_in">return</span> tree[id].sum;  </div><div class="line">    push_down(id);  </div><div class="line">    int mid = Mid(tree[id].l, tree[id].r);  </div><div class="line">    <span class="keyword">if</span>(mid&lt;l) <span class="built_in">return</span> query(l,r,R(id));  </div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(r&lt;=mid) <span class="built_in">return</span> query(l,r,L(id));  </div><div class="line">    <span class="keyword">else</span> <span class="built_in">return</span> query(l,mid,L(id))+query(mid+1,r,R(id));  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int <span class="built_in">type</span>, l, r;  </div><div class="line">    ll x;  </div><div class="line">    <span class="keyword">while</span>(~scanf(<span class="string">"%d %d"</span>,&amp;n,&amp;m))&#123;  </div><div class="line">        build(1,n,1);  </div><div class="line">        <span class="keyword">while</span>(m--)&#123;  </div><div class="line">            scanf(<span class="string">"%d %d %d"</span>,&amp;<span class="built_in">type</span>,&amp;l,&amp;r);  </div><div class="line">            <span class="keyword">if</span>(<span class="built_in">type</span>==1)&#123;  </div><div class="line">                scanf(<span class="string">"%lld"</span>,&amp;x);  </div><div class="line">                updata(l,r,1,x);  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">else</span> &#123;  </div><div class="line">                <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,query(l,r,1));  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>可以用分块做 本题采用线段树 但用了分块的思想<br>same表示区间的颜色是否相同 0表示不同<br>每次更新的时候找到颜色相同的块更新</p>
<h2 id="bzoj-2120"><a href="#bzoj-2120" class="headerlink" title="bzoj 2120"></a>bzoj 2120</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>墨墨购买了一套N支彩色画笔（其中有些颜色可能相同），摆成一排，你需要回答墨墨的提问。墨墨会像你发布如下指令：<br>1、 Q L R代表询问你从第L支画笔到第R支画笔中共有几种不同颜色的画笔。 2、 R P Col 把第P支画笔替换为颜色Col。<br>为了满足墨墨的要求，你知道你需要干什么了吗？</p>
<p>第1行两个整数N，M，分别代表初始画笔的数量以及墨墨会做的事情的个数。第2行N个整数，分别代表初始画笔排中第i支画笔的颜色。<br>第3行到第2+M行，每行分别代表墨墨会做的一件事情，格式见题干部分。</p>
<p>对于每一个Query的询问，你需要在对应的行中给出一个数字，代表第L支画笔到第R支画笔中共有几种不同颜色的画笔。</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 2000005</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int block,num,n,q;</div><div class="line">int l[maxn],r[maxn],belong[maxn];</div><div class="line">int c[maxn],last[maxn],b[maxn],a[maxn];</div><div class="line">void <span class="function"><span class="title">build</span></span>()&#123;</div><div class="line">    block=(int)sqrt(n);</div><div class="line">    num=n/block;</div><div class="line">	<span class="keyword">if</span>(n%block) num++;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=num;i++) l[i]=(i-1)*block+1,r[i]=i*block;</div><div class="line">    r[num]=n;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) belong[i]=(i-1)/block+1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		b[i]=last[c[i]];</div><div class="line">		last[c[i]]=i;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) a[i]=b[i];</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=num;i++) sort(a+l[i],a+r[i]+1);</div><div class="line">&#125;</div><div class="line">void update(int x,int y)&#123;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) last[c[i]]=0;</div><div class="line">	c[x]=y;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		int temp=b[i];</div><div class="line">		b[i]=last[c[i]];</div><div class="line">		<span class="keyword">if</span>(temp!=b[i])&#123;</div><div class="line">			<span class="keyword">for</span>(int j=l[belong[i]];j&lt;=r[belong[i]];j++) a[j]=b[j];</div><div class="line">			sort(a+l[belong[i]],a+r[belong[i]]+1);</div><div class="line">		&#125;</div><div class="line">		last[c[i]]=i;</div><div class="line">	&#125;</div><div class="line">&#125; </div><div class="line">int ask(int x,int y)&#123;</div><div class="line">	int ans=0;</div><div class="line">	<span class="keyword">if</span>(belong[x]==belong[y])&#123;</div><div class="line">		<span class="keyword">for</span>(int i=x;i&lt;=y;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(b[i]&lt;x) ans++;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> ans;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=x;i&lt;=r[belong[x]];i++)&#123;</div><div class="line">		<span class="keyword">if</span>(b[i]&lt;x) ans++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=l[belong[y]];i&lt;=y;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(b[i]&lt;x) ans++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=belong[x]+1;i&lt;belong[y];i++)&#123;</div><div class="line">		int le=l[i],ri=r[i];</div><div class="line">		int <span class="keyword">fi</span>=le,re=0;</div><div class="line">		<span class="keyword">while</span>(le&lt;=ri)&#123;</div><div class="line">			int mid=(le+ri)&gt;&gt;1;</div><div class="line">			<span class="keyword">if</span>(a[mid]&lt;x) re=mid,le=mid+1;</div><div class="line">			<span class="keyword">else</span> ri=mid-1;</div><div class="line">		&#125;</div><div class="line">		ans+=re-fi+1;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;q);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;c[i]);</div><div class="line">	build();</div><div class="line">	<span class="keyword">while</span>(q--)&#123;</div><div class="line">		char ch[5];</div><div class="line">		int x,y;</div><div class="line">		scanf(<span class="string">"%s%d%d"</span>,ch,&amp;x,&amp;y);</div><div class="line">		<span class="keyword">if</span>(ch[0]==<span class="string">'Q'</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ask(x,y));</div><div class="line">		<span class="keyword">else</span> update(x,y);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>分块<br>若是没有询问的话可以用线段树 参考muti多校4<br>数组c表示颜色 数组b记录每一个位置颜色上一次的出现位置 last维护每种颜色的上一次出现位置 a和b相同 用来二分查找<br>对于每一块 b[i]&lt;l就代表这个数字出现了一次 ans++<br>更新操作里 temp记录上一次的b[i]值 如果和这次更新的不一样 那么这一段重新更新排序<br>注意数组要开100w 因为last记录的是颜色</p>
<h2 id="cdoj-1292"><a href="#cdoj-1292" class="headerlink" title="cdoj 1292"></a>cdoj 1292</h2><h3 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h3><p>卿学姐有n个花坛，一开始第i个花坛里有A[i]朵花。每过一段时间，卿学姐都会在花坛里种上新的花。<br>作为一个聪明的学姐，卿学姐的种花方式也是与众不同 , 每一次，卿学姐会在第x个花坛种上y朵花，然后在第x+1个花坛上种上y−1朵花，<br>再在第x+2个花坛上种上y−2朵花……以此类推，直到种到最后一个花坛，或者不需要种花为止。<br>喵哈哈的村民们都喜欢去卿学姐的后院赏花，沈宝宝也不例外。然而沈宝宝可不是省油的灯，怎么可能会老老实实地赏花呢。每次沈宝宝来时，<br>都会随机询问卿学姐在第i个花坛有多少朵花。</p>
<p>第一行输入两个整数，花坛个数NN和操作次数Q。<br>第二行NN个整数A[1],A[2],A[3]…..A[N] (1≤A[i]≤2^31)<br>接下来Q行，每行一个操作。<br>1 x y 表示卿学姐会在x号花坛种y朵花，并按相应的规律在后面的花坛上种花。<br>2 x 表示沈宝宝问卿学姐第x个花坛有多少朵花。</p>
<p>对于每个询问操作，按顺序输出答案对772002+233取模的值。</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 10050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">const int mod = 772002+233;</div><div class="line">int block,num,n,q;</div><div class="line">int l[maxn],r[maxn],belong[maxn];</div><div class="line">LL lazy[maxn],Num[maxn],ed[maxn],a[maxn];</div><div class="line">void <span class="function"><span class="title">build</span></span>()&#123;</div><div class="line">    block=(int)sqrt(n);</div><div class="line">    num=n/block;</div><div class="line">	<span class="keyword">if</span>(n%block) num++;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=num;i++) l[i]=(i-1)*block+1,r[i]=i*block;</div><div class="line">    r[num]=n;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) belong[i]=(i-1)/block+1;</div><div class="line">&#125;</div><div class="line">void update(int x,LL y)&#123;</div><div class="line">	<span class="keyword">for</span>(int i=x;i&lt;=r[belong[x]];i++)&#123;</div><div class="line">		a[i]=(a[i]+y)%mod;</div><div class="line">		y--;</div><div class="line">		<span class="keyword">if</span>(y==0) <span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=belong[x]+1;i&lt;=num;i++)&#123;</div><div class="line">		lazy[l[i]]+=y;</div><div class="line">		Num[l[i]]++;</div><div class="line">		<span class="keyword">if</span>(y&lt;r[i]<span class="_">-l</span>[i]+1)&#123;</div><div class="line">			ed[y+l[i]]++;</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">		y-=(r[i]<span class="_">-l</span>[i]+1);</div><div class="line">	&#125;</div><div class="line">&#125; </div><div class="line">LL ask(int x)&#123;</div><div class="line">	LL add=0,number=0;</div><div class="line">	<span class="keyword">for</span>(int i=l[belong[x]];i&lt;=r[belong[x]];i++)&#123;</div><div class="line">		add+=lazy[i];</div><div class="line">		number+=Num[i];</div><div class="line">		number-=ed[i];</div><div class="line">		lazy[i]=Num[i]=ed[i]=0;</div><div class="line">		a[i]=(a[i]+add)%mod;</div><div class="line">		add-=number;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> a[x]%mod;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;q);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%lld"</span>,&amp;a[i]),a[i]%=mod;</div><div class="line">	build();</div><div class="line">	<span class="keyword">while</span>(q--)&#123;</div><div class="line">		int op;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;op);</div><div class="line">		<span class="keyword">if</span>(op==1)&#123;</div><div class="line">			int x;</div><div class="line">			LL y;</div><div class="line">			scanf(<span class="string">"%d%lld"</span>,&amp;x,&amp;y);</div><div class="line">			update(x,y);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			int x;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ask(x));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>对于这种乱更新乱询问的 分块暴力即可<br>散块直接暴力 lazy把延迟标记打在块的左端点上 num记录有多少次更新打在左端点上 ed表示有多少次终止<br>最后对x所在的区间进行更新 逐位加lazy并减Num 如果碰到ed还要–</p>
<h2 id="HUD-4858"><a href="#HUD-4858" class="headerlink" title="HUD 4858"></a>HUD 4858</h2><h3 id="题目要求-6"><a href="#题目要求-6" class="headerlink" title="题目要求"></a>题目要求</h3><p>我们建造了一个大项目！这个项目有n个节点，用很多边连接起来，并且这个项目是连通的！<br>两个节点间可能有多条边，不过一条边的两端必然是不同的节点。<br>每个节点都有一个能量值。<br>现在我们要编写一个项目管理软件，这个软件呢有两个操作：<br>1.给某个项目的能量值加上一个特定值。<br>2.询问跟一个项目相邻的项目的能量值之和。（如果有多条边就算多次，比如a和b有2条边，那么询问a的时候b的权值算2次）</p>
<p>第一行一个整数T(1 &lt;= T &lt;= 3),表示测试数据的个数。<br>然后对于每个测试数据，第一行有两个整数n(1 &lt;= n &lt;= 100000)和m(1 &lt;= m &lt;= n + 10)，分别表示点数和边数。<br>然后m行，每行两个数a和b，表示a和b之间有一条边。<br>然后一个整数Q。<br>然后Q行，每行第一个数cmd表示操作类型。如果cmd为0，那么接下来两个数u v表示给项目u的能量值加上v(0 &lt;= v &lt;= 100)。<br>如果cmd为1，那么接下来一个数u表示询问u相邻的项目的能量值之和。<br>所有点从1到n标号。</p>
<p>对每个询问，输出一行表示答案</p>
<h3 id="参考AC代码-6"><a href="#参考AC代码-6" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">pair&lt;int,int&gt;a[maxn];</div><div class="line">int n,m,q;</div><div class="line">int num[maxn],sum[maxn],cnt[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">	mm(a,0),mm(num,0),mm(sum,0),mm(cnt,0);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		init();</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">		int s=sqrt(m+0.5);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;a[i].fi,&amp;a[i].se);</div><div class="line">			cnt[a[i].fi]++,cnt[a[i].se]++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			int u=a[i].fi,v=a[i].se;</div><div class="line">			<span class="keyword">if</span>(cnt[u]&lt;s) e[u].push_back(v);</div><div class="line">			<span class="keyword">if</span>(cnt[v]&lt;s) e[v].push_back(u);</div><div class="line">			<span class="keyword">if</span>(cnt[u]&gt;=s &amp;&amp; cnt[v]&gt;=s)&#123;</div><div class="line">				e[u].push_back(v);</div><div class="line">				e[v].push_back(u);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;q);</div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			int op;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;op);</div><div class="line">			<span class="keyword">if</span>(op==1)&#123;</div><div class="line">				int x;</div><div class="line">				scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">				<span class="keyword">if</span>(cnt[x]&lt;s)&#123;</div><div class="line">					int ans=0;</div><div class="line">					int len=e[x].size();</div><div class="line">					<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">						int next=e[x][i];</div><div class="line">						ans+=num[next];</div><div class="line">					&#125;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum[x]);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				int x,y;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">				num[x]+=y;</div><div class="line">				int len=e[x].size();</div><div class="line">				<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">					int next=e[x][i];</div><div class="line">					sum[next]+=y;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><p>对点的分块<br>轻点：对于边集小于sqrt(m)的点，我们就直接暴力去加周围的点就好了<br>重点：对于边集大于sqrt(m)的点，我们就只加与他相邻的重点和轻点对它的贡献<br>加边时 重点到轻点不需要连边 因为重点已经用sum在与他相邻的重点和轻点时已经算过了<br>这样我们每次查询的时候，如果查询的是轻点，我们就暴力扫一遍<br>如果查询的是重点，就输出目前的权值就好了</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[muti多校-10]]></title>
      <url>http://xuboming8.github.io/2017/08/28/muti%E5%A4%9A%E6%A0%A1-10/</url>
      <content type="html"><![CDATA[<h1 id="muti多校-10"><a href="#muti多校-10" class="headerlink" title="muti多校-10"></a>muti多校-10</h1><h2 id="HDU-6178"><a href="#HDU-6178" class="headerlink" title="HDU 6178"></a>HDU 6178</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><a id="more"></a>
<p>给你一棵n节点的树，现在让你放k个猴子，可以删边，问最少可以剩余几条边，放k个猴子，满足任意一个猴<br>子至少与一只猴子相连</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">int du[maxn];</div><div class="line">int vis[maxn];</div><div class="line">namespace IO &#123;</div><div class="line">    const int MT = 100 * 1024 * 1024;</div><div class="line">    char IO_BUF[MT];</div><div class="line">    int IO_PTR, IO_SZ;</div><div class="line">    /// 要记得把这一行添加到main函数第一行！！！</div><div class="line">    void <span class="function"><span class="title">begin</span></span>() &#123;</div><div class="line">        IO_PTR = 0;</div><div class="line">        IO_SZ = fread (IO_BUF, 1, MT, stdin);</div><div class="line">    &#125;</div><div class="line">    template&lt;typename T&gt;</div><div class="line">    inline bool scan_d (T &amp; t) &#123;</div><div class="line">        <span class="keyword">while</span> (IO_PTR &lt; IO_SZ &amp;&amp; IO_BUF[IO_PTR] != <span class="string">'-'</span> &amp;&amp; (IO_BUF[IO_PTR] &lt; <span class="string">'0'</span> || IO_BUF[IO_PTR] &gt; <span class="string">'9'</span>))</div><div class="line">            IO_PTR ++;</div><div class="line">        <span class="keyword">if</span> (IO_PTR &gt;= IO_SZ) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">        bool sgn = <span class="literal">false</span>;</div><div class="line">        <span class="keyword">if</span> (IO_BUF[IO_PTR] == <span class="string">'-'</span>) sgn = <span class="literal">true</span>, IO_PTR ++;</div><div class="line">        <span class="keyword">for</span> (t = 0; IO_PTR &lt; IO_SZ &amp;&amp; <span class="string">'0'</span> &lt;= IO_BUF[IO_PTR] &amp;&amp; IO_BUF[IO_PTR] &lt;= <span class="string">'9'</span>; IO_PTR ++)</div><div class="line">            t = t * 10 + IO_BUF[IO_PTR] - <span class="string">'0'</span>;</div><div class="line">        <span class="keyword">if</span> (sgn) t = -t;</div><div class="line">        <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">    &#125;</div><div class="line">    inline bool scan_s (char s[]) &#123;</div><div class="line">        <span class="keyword">while</span> (IO_PTR &lt; IO_SZ &amp;&amp; (IO_BUF[IO_PTR] == <span class="string">' '</span> || IO_BUF[IO_PTR] == <span class="string">'\n'</span>) ) IO_PTR ++;</div><div class="line">        <span class="keyword">if</span> (IO_PTR &gt;= IO_SZ) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">        int len = 0;</div><div class="line">        <span class="keyword">while</span> (IO_PTR &lt; IO_SZ &amp;&amp; IO_BUF[IO_PTR] != <span class="string">' '</span> &amp;&amp; IO_BUF[IO_PTR] != <span class="string">'\n'</span>)</div><div class="line">            s[len ++] = IO_BUF[IO_PTR], IO_PTR ++;</div><div class="line">        s[len] = <span class="string">'\0'</span>;</div><div class="line">        <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">    &#125;</div><div class="line">    template&lt;typename T&gt;</div><div class="line">    void <span class="built_in">print</span>(T x) &#123;</div><div class="line">        static char s[33], *s1; s1 = s;</div><div class="line">        <span class="keyword">if</span> (!x) *s1++ = <span class="string">'0'</span>;</div><div class="line">        <span class="keyword">if</span> (x &lt; 0) putchar(<span class="string">'-'</span>), x = -x;</div><div class="line">        <span class="keyword">while</span>(x) *s1++ = (x % 10 + <span class="string">'0'</span>), x /= 10;</div><div class="line">        <span class="keyword">while</span>(s1-- != s) putchar(*s1);</div><div class="line">    &#125;</div><div class="line">    template&lt;typename T&gt;</div><div class="line">    void println(T x) &#123;</div><div class="line">        <span class="built_in">print</span>(x); putchar(<span class="string">'\n'</span>);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">using namespace IO;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    begin();</div><div class="line">    int t;</div><div class="line">    scan_d(t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n,k;</div><div class="line">        scan_d(n),scan_d(k);</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">        int ans=0;</div><div class="line">        mm(du,0),mm(vis,0);</div><div class="line">        <span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">            int x;</div><div class="line">            scan_d(x);</div><div class="line">            e[x].push_back(i);</div><div class="line">            e[i].push_back(x);</div><div class="line">            du[i]++,du[x]++;</div><div class="line">        &#125;</div><div class="line">        queue&lt;int&gt;q;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(du[i]==1) q.push(i);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">            int x=q.front();</div><div class="line">            q.pop();</div><div class="line">            int len=e[x].size();</div><div class="line">            <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">                int next=e[x][i];</div><div class="line">                <span class="keyword">if</span>(!vis[x] &amp;&amp; !vis[next])&#123;</div><div class="line">                    vis[x]=1;</div><div class="line">                    vis[next]=1;</div><div class="line">                    ans++;</div><div class="line">                &#125;</div><div class="line">                du[next]--;</div><div class="line">                <span class="keyword">if</span>(du[next]==1) q.push(next);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(ans*2&gt;=k) ans=(k+1)/2;</div><div class="line">        <span class="keyword">else</span> ans+=k-ans*2;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>利用贪心的思维，显然我们应该先选择性价比最高的，即一条边连接两个点的情况。计算出这样的边的条数ans，如果ans*2&gt;=k,结果就是(k+1)/2,<br>否则剩下来没有安排的猴子每一只需要多一条边，即结果为ans+k-2×ans。我的方法是用类拓扑排序的方法，找连接两个度数为1且没用被用过的点的边数，<br>每次找到一条边后注意更新度数。</p>
<h2 id="HDU-6180"><a href="#HDU-6180" class="headerlink" title="HDU 6180"></a>HDU 6180</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>已知一些商品制作的开始和结束时间，问在使用最少的机器的前提下机器工作的最少的总时间是多少</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">    int s,e;</div><div class="line">&#125;a[maxn];</div><div class="line">multiset&lt;int&gt;st;</div><div class="line">bool cmp(node a,node b)&#123;</div><div class="line">    <span class="built_in">return</span> a.s&lt;b.s;</div><div class="line">&#125; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        st.clear();</div><div class="line">        int n;</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;n;i++) scanf(<span class="string">"%d%d"</span>,&amp;a[i].s,&amp;a[i].e);</div><div class="line">        sort(a,a+n,cmp);</div><div class="line">        LL ans=0;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">            auto it=st.upper_bound(a[i].s);</div><div class="line">            <span class="keyword">if</span>(it==st.begin())&#123;</div><div class="line">                ans+=(LL)a[i].e<span class="_">-a</span>[i].s;</div><div class="line">                st.insert(a[i].e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                it--;</div><div class="line">                ans+=(LL)a[i].e-*it;</div><div class="line">                st.erase(it);</div><div class="line">                st.insert(a[i].e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d %lld\n"</span>,st.size(),ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>用multiset容器维护结束时间<br>按照区间左端点排序 第一个插入set后开始维护<br>若用upper_bound能找到合法的插入开始时间 删除原来的结束时间 更新成新的结束时间 更新总时间<br>若未找到合法的插入时间 新加入一个机器 插入结束时间 更新总时间</p>
<h2 id="HDU-6181"><a href="#HDU-6181" class="headerlink" title="HDU 6181"></a>HDU 6181</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>次短路裸题</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define P pair&lt;LL,int&gt;</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">const LL INF =(LL)1e18;</div><div class="line">struct node&#123;</div><div class="line">    int to;</div><div class="line">    LL w;</div><div class="line">    node(int to,LL w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;G[maxn];</div><div class="line">bool vis[maxn];</div><div class="line">LL d[maxn],d1[maxn];</div><div class="line">int n,m;</div><div class="line">void <span class="function"><span class="title">solve</span></span>()&#123;</div><div class="line">    priority_queue&lt;P,vector&lt;P&gt;,greater&lt;P&gt; &gt;que;</div><div class="line">    fill(d+1,d+1+n,INF);</div><div class="line">    fill(d1+1,d1+1+n,INF);</div><div class="line">    d[1]=0;</div><div class="line">    que.push(P(0,1));</div><div class="line">    <span class="keyword">while</span>(!que.empty())&#123;</div><div class="line">        P p=que.top();</div><div class="line">        que.pop();</div><div class="line">        int v=p.second;</div><div class="line">        <span class="keyword">if</span>(d1[v]&lt;p.first) <span class="built_in">continue</span>;</div><div class="line">        int len=G[v].size();</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">            node &amp;e=G[v][i];</div><div class="line">            LL d2=p.first+e.w;</div><div class="line">            <span class="keyword">if</span>(d[e.to]&gt;d2)&#123;</div><div class="line">                swap(d[e.to],d2);</div><div class="line">                que.push(P(d[e.to],e.to));</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(d1[e.to]&gt;d2 &amp;&amp; d[e.to]&lt;d2)&#123;</div><div class="line">                d1[e.to]=d2;</div><div class="line">                que.push(P(d1[e.to],e.to));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;    </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,d1[n]);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=n;i++) G[i].clear();</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            int u,v,w;</div><div class="line">            scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">            G[u].push_back(node(v,w));</div><div class="line">            G[v].push_back(node(u,w));</div><div class="line">        &#125;</div><div class="line">        solve();</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>次短路模版题</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树链剖分专题2]]></title>
      <url>http://xuboming8.github.io/2017/08/24/%E7%86%9F%E7%BB%83%E5%89%96%E5%88%86%E4%B8%93%E9%A2%982/</url>
      <content type="html"><![CDATA[<h1 id="树链剖分专题2"><a href="#树链剖分专题2" class="headerlink" title="树链剖分专题2"></a>树链剖分专题2</h1><p>专题2主要包括：<br><a id="more"></a><br>1.线段树复杂合并(颜色段 差值 lcis)<br>2.线段树维护子树<br>3.颜色转换二进制维护</p>
<h2 id="bzoj-2243"><a href="#bzoj-2243" class="headerlink" title="bzoj 2243"></a>bzoj 2243</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定一棵有n个节点的无根树和m个操作，操作有2类：<br>1、将节点a到节点b路径上所有点都染成颜色c；<br>2、询问节点a到节点b路径上的颜色段数量（连续相同颜色被认为是同一段），如“112221”由3段组成：“11”、“222”和“1”。<br>请你写一个程序依次完成这m个操作。</p>
<p>第一行包含2个整数n和m，分别表示节点数和操作数；<br>第二行包含n个正整数表示n个节点的初始颜色<br>下面 行每行包含两个整数x和y，表示x和y之间有一条无向边。<br>下面 行每行描述一个操作：<br>“C a b c”表示这是一个染色操作，把节点a到节点b路径上所有点（包括a和b）都染成颜色c；<br>“Q a b”表示这是一个询问操作，询问节点a到节点b（包括a和b）路径上的颜色段数量。</p>
<p>对于每个询问操作，输出一行答案。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,q,step;</div><div class="line">int c[maxn];</div><div class="line">int sz[maxn],dep[maxn],fa[maxn],son[maxn];</div><div class="line">int id[maxn],top[maxn];</div><div class="line">int val[maxn];</div><div class="line">struct T&#123;</div><div class="line">    int lc,rc,lazy,num;</div><div class="line">    <span class="function"><span class="title">T</span></span>()&#123;</div><div class="line">        lc=rc=-1;  </div><div class="line">        num=0;  </div><div class="line">    &#125;  </div><div class="line">&#125;tree[maxn&lt;&lt;2];</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    mm(sz,0),mm(dep,0),mm(fa,0),mm(son,0);</div><div class="line">    mm(id,0),mm(top,0),mm(val,0),mm(c,0);</div><div class="line">    step=0;</div><div class="line">&#125;</div><div class="line">void dfs1(int x,int f,int deep)&#123;</div><div class="line">    sz[x]=1,fa[x]=f,son[x]=0,dep[x]=deep;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==f) <span class="built_in">continue</span>;</div><div class="line">        dfs1(next,x,deep+1);</div><div class="line">        sz[x]+=sz[next];</div><div class="line">        <span class="keyword">if</span>(sz[son[x]]&lt;sz[next]) son[x]=next;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int tp)&#123;</div><div class="line">    top[x]=tp;</div><div class="line">    id[x]=++step;</div><div class="line">    val[id[x]]=x;</div><div class="line">    <span class="keyword">if</span>(son[x]) dfs2(son[x],tp);</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==fa[x] || next==son[x]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(next,next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">T merge(T a,T b)&#123;</div><div class="line">	<span class="keyword">if</span>(a.num==0) <span class="built_in">return</span> b;</div><div class="line">	<span class="keyword">if</span>(b.num==0) <span class="built_in">return</span> a;</div><div class="line">	T temp;</div><div class="line">	temp.lc=a.lc;</div><div class="line">	temp.rc=b.rc;</div><div class="line">	<span class="keyword">if</span>(a.rc==b.lc) temp.num=a.num+b.num-1;</div><div class="line">	<span class="keyword">else</span> temp.num=a.num+b.num;</div><div class="line">	<span class="built_in">return</span> temp;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">    tree[rt].lc=tree[rt&lt;&lt;1].lc;</div><div class="line">    tree[rt].rc=tree[rt&lt;&lt;1|1].rc;</div><div class="line">    tree[rt].num=tree[rt&lt;&lt;1].num+tree[rt&lt;&lt;1|1].num;</div><div class="line">    <span class="keyword">if</span>(tree[rt&lt;&lt;1].rc==tree[rt&lt;&lt;1|1].lc) tree[rt].num--;</div><div class="line">&#125;</div><div class="line">void push_down(int rt)&#123;</div><div class="line">	<span class="keyword">if</span>(tree[rt].lazy!=-1)&#123;</div><div class="line">		tree[rt&lt;&lt;1].lazy=tree[rt].lazy;</div><div class="line">		tree[rt&lt;&lt;1|1].lazy=tree[rt].lazy;</div><div class="line">		tree[rt&lt;&lt;1].num=tree[rt&lt;&lt;1|1].num=1;</div><div class="line">		tree[rt&lt;&lt;1].lc=tree[rt&lt;&lt;1].rc=tree[rt&lt;&lt;1|1].lc=tree[rt&lt;&lt;1|1].rc=tree[rt].lazy;</div><div class="line">		tree[rt].lazy=-1;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">	tree[rt].lazy=-1;</div><div class="line">    <span class="keyword">if</span>(l==r)&#123;</div><div class="line">    	tree[rt].lc=c[val[l]];</div><div class="line">    	tree[rt].rc=c[val[l]];</div><div class="line">    	tree[rt].num=1;</div><div class="line">    	<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	build(lson);</div><div class="line">	build(rson);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">void update(int rt,int l,int r,int L,int R,int x)&#123;</div><div class="line">    <span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R)&#123;</div><div class="line">    	tree[rt].lazy=x;</div><div class="line">    	tree[rt].lc=tree[rt].rc=x;</div><div class="line">    	tree[rt].num=1;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	push_down(rt);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=R) update(lson,L,R,x);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) update(rson,L,R,x);</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		update(lson,L,R,x);</div><div class="line">		update(rson,L,R,x);</div><div class="line">	&#125;</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">T query(int rt,int l,int r,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> tree[rt];</div><div class="line">	push_down(rt);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=R) <span class="built_in">return</span> query(lson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) <span class="built_in">return</span> query(rson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">return</span> merge(query(lson,L,R),query(rson,L,R));</div><div class="line">&#125;</div><div class="line">void change(int x,int y,int val)&#123;</div><div class="line">	<span class="keyword">while</span>(top[x]!=top[y])&#123;  </div><div class="line">        <span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]]) swap(x,y);  </div><div class="line">        update(1,1,n,id[top[x]],id[x],val);  </div><div class="line">        x=fa[top[x]];  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">if</span>(dep[x]&gt;dep[y]) swap(x,y);  </div><div class="line">    update(1,1,n,id[x],id[y],val);  </div><div class="line">&#125;</div><div class="line">int queryco(int x,int y)&#123;</div><div class="line">	T l,r;</div><div class="line">	<span class="keyword">while</span>(top[x]!=top[y])&#123;  </div><div class="line">        <span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]])&#123;</div><div class="line">        	swap(x,y);</div><div class="line">        	swap(l,r);</div><div class="line">		&#125;</div><div class="line">        l=merge(query(1,1,n,id[top[x]],id[x]),l);    </div><div class="line">        x=fa[top[x]];</div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">if</span>(dep[x]&gt;dep[y])&#123;</div><div class="line">    	swap(x,y);</div><div class="line">    	swap(l,r);</div><div class="line">	&#125;  </div><div class="line">    r=merge(query(1,1,n,id[x],id[y]),r);</div><div class="line">    int ans=0;</div><div class="line">	<span class="keyword">if</span>(l.lc==r.lc) ans=l.num+r.num-1;</div><div class="line">	<span class="keyword">else</span> ans=l.num+r.num;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;q)!=EOF)&#123;</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;c[i]);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">			int u,v;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">			e[u].push_back(v);</div><div class="line">			e[v].push_back(u);</div><div class="line">		&#125;</div><div class="line">		dfs1(1,0,0);</div><div class="line">		dfs2(1,1);</div><div class="line">		build(1,1,n);</div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			char op[5];</div><div class="line">			scanf(<span class="string">"%s"</span>,op);</div><div class="line">			<span class="keyword">if</span>(op[0]==<span class="string">'C'</span>)&#123;</div><div class="line">				int x,y,k;</div><div class="line">				scanf(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;k);</div><div class="line">				change(x,y,k);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				int x,y;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,queryco(x,y));</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>用线段树维护颜色段 注意合并的时候若l的右端点和r的左端点相同 那么相加的总段数-1<br>注意：<br>1.本题颜色可以取到0 所以lazy的初始化要为-1而不能是0<br>2.结构体需要初始化l r和num 否则quertco里的T l和r会出错</p>
<h2 id="HDU-5052"><a href="#HDU-5052" class="headerlink" title="HDU 5052"></a>HDU 5052</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>一棵树，每个结点有个初始的权值，点的权值代表在该点的鸡肉的价格。<br>对于一个询问X, Y, V。<br>找到X到Y的路径，可以选择在路径上一个点I买鸡肉，然后在点J卖掉，要求J必须在I之后访问。<br>那么你就可以赚取差价，问最大差价是多少。然后这条路径上的点的权值全部增加V。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 50050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,q,step;</div><div class="line">int c[maxn];</div><div class="line">int sz[maxn],dep[maxn],fa[maxn],son[maxn];</div><div class="line">int id[maxn],top[maxn];</div><div class="line">int val[maxn];</div><div class="line">struct T&#123;</div><div class="line">    int Max,M<span class="keyword">in</span>,mxl,mxr,lazy;</div><div class="line">&#125;tree[maxn&lt;&lt;2];</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    mm(sz,0),mm(dep,0),mm(fa,0),mm(son,0);</div><div class="line">    mm(id,0),mm(top,0),mm(val,0),mm(c,0);</div><div class="line">    step=0;</div><div class="line">&#125;</div><div class="line">void dfs1(int x,int f,int deep)&#123;</div><div class="line">    sz[x]=1,fa[x]=f,son[x]=0,dep[x]=deep;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==f) <span class="built_in">continue</span>;</div><div class="line">        dfs1(next,x,deep+1);</div><div class="line">        sz[x]+=sz[next];</div><div class="line">        <span class="keyword">if</span>(sz[son[x]]&lt;sz[next]) son[x]=next;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int tp)&#123;</div><div class="line">    top[x]=tp;</div><div class="line">    id[x]=++step;</div><div class="line">    val[id[x]]=x;</div><div class="line">    <span class="keyword">if</span>(son[x]) dfs2(son[x],tp);</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==fa[x] || next==son[x]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(next,next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">T merge(T a,T b)&#123;</div><div class="line">	a.mxl=max(max(a.mxl,b.mxl),b.Max-a.M<span class="keyword">in</span>);</div><div class="line">	a.mxr=max(max(a.mxr,b.mxr),a.Max-b.M<span class="keyword">in</span>);</div><div class="line">	a.Max=max(a.Max,b.Max);</div><div class="line">	a.M<span class="keyword">in</span>=min(a.M<span class="keyword">in</span>,b.M<span class="keyword">in</span>);</div><div class="line">	<span class="built_in">return</span> a;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">    tree[rt].mxl=max(max(tree[rt&lt;&lt;1].mxl,tree[rt&lt;&lt;1|1].mxl),tree[rt&lt;&lt;1|1].Max-tree[rt&lt;&lt;1].M<span class="keyword">in</span>);</div><div class="line">    tree[rt].mxr=max(max(tree[rt&lt;&lt;1].mxr,tree[rt&lt;&lt;1|1].mxr),tree[rt&lt;&lt;1].Max-tree[rt&lt;&lt;1|1].M<span class="keyword">in</span>);</div><div class="line">    tree[rt].Max=max(tree[rt&lt;&lt;1].Max,tree[rt&lt;&lt;1|1].Max);</div><div class="line">    tree[rt].M<span class="keyword">in</span>=min(tree[rt&lt;&lt;1].M<span class="keyword">in</span>,tree[rt&lt;&lt;1|1].M<span class="keyword">in</span>);</div><div class="line">&#125;</div><div class="line">void push_down(int rt)&#123;</div><div class="line">	<span class="keyword">if</span>(tree[rt].lazy)&#123;</div><div class="line">		tree[rt&lt;&lt;1].Max+=tree[rt].lazy;</div><div class="line">		tree[rt&lt;&lt;1|1].Max+=tree[rt].lazy;</div><div class="line">		tree[rt&lt;&lt;1].M<span class="keyword">in</span>+=tree[rt].lazy;</div><div class="line">		tree[rt&lt;&lt;1|1].M<span class="keyword">in</span>+=tree[rt].lazy;</div><div class="line">		tree[rt&lt;&lt;1].lazy+=tree[rt].lazy;</div><div class="line">		tree[rt&lt;&lt;1|1].lazy+=tree[rt].lazy;</div><div class="line">		tree[rt].lazy=0;</div><div class="line">	&#125;</div><div class="line">&#125;  </div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">	tree[rt].lazy=0;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		tree[rt].Max=tree[rt].M<span class="keyword">in</span>=c[val[l]];</div><div class="line">		tree[rt].mxl=tree[rt].mxr=0;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	build(lson);</div><div class="line">	build(rson);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">void update(int rt,int l,int r,int L,int R,int x)&#123;</div><div class="line">    <span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R)&#123;</div><div class="line">    	tree[rt].lazy+=x;</div><div class="line">    	tree[rt].Max+=x;</div><div class="line">    	tree[rt].M<span class="keyword">in</span>+=x;</div><div class="line">    	<span class="built_in">return</span>;</div><div class="line">	&#125; </div><div class="line">	push_down(rt);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=R) update(lson,L,R,x);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) update(rson,L,R,x);</div><div class="line">	<span class="keyword">else</span> update(lson,L,R,x),update(rson,L,R,x);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">T query(int rt,int l,int r,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> tree[rt];</div><div class="line">	push_down(rt);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=R) <span class="built_in">return</span> query(lson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) <span class="built_in">return</span> query(rson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">return</span> merge(query(lson,L,R),query(rson,L,R));</div><div class="line">&#125;</div><div class="line">void check(T&amp; a,T&amp; b)&#123;</div><div class="line">	<span class="keyword">if</span>(a.M<span class="keyword">in</span>==0)&#123;</div><div class="line">		a=b;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	a.mxl=max(max(a.mxl,b.mxl),a.Max-b.M<span class="keyword">in</span>);</div><div class="line">	a.mxr=max(max(a.mxr,b.mxr),b.Max-a.M<span class="keyword">in</span>);</div><div class="line">	a.Max=max(a.Max,b.Max);</div><div class="line">	a.M<span class="keyword">in</span>=min(a.M<span class="keyword">in</span>,b.M<span class="keyword">in</span>);</div><div class="line">&#125;</div><div class="line">int Query(int L,int R,int k)&#123;</div><div class="line">	int ans=0;</div><div class="line">	T ans1,ans2;</div><div class="line">	ans1.lazy=-1,ans1.Max=ans1.M<span class="keyword">in</span>=ans1.mxl=ans1.mxr=0;</div><div class="line">	ans2.lazy=1,ans2.Max=ans2.M<span class="keyword">in</span>=ans2.mxl=ans2.mxr=0;</div><div class="line">    <span class="keyword">while</span>(top[L]!=top[R])&#123;</div><div class="line">        <span class="keyword">if</span>(dep[top[L]]&lt;dep[top[R]]) swap(L,R),swap(ans1,ans2);</div><div class="line">		int tp=ans1.lazy;</div><div class="line">		T temp=query(1,1,n,id[top[L]],id[L]);</div><div class="line">		check(ans1,temp);</div><div class="line">		ans1.lazy=tp;</div><div class="line">		update(1,1,n,id[top[L]],id[L],k);</div><div class="line">        L=fa[top[L]];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(id[L]&gt;id[R]) swap(L,R),swap(ans1,ans2);</div><div class="line">    int tp=ans2.lazy;</div><div class="line">    T temp=query(1,1,n,id[L],id[R]);</div><div class="line">    check(ans2,temp);</div><div class="line">    ans2.lazy=tp;</div><div class="line">    <span class="keyword">if</span>(ans1.lazy==1) swap(ans1,ans2);</div><div class="line">    update(1,1,n,id[L],id[R],k);</div><div class="line">    ans=max(ans1.mxr,ans2.mxl);</div><div class="line">    <span class="keyword">if</span>(ans1.M<span class="keyword">in</span>) ans=max(ans,ans2.Max-ans1.M<span class="keyword">in</span>);</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;c[i]);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">			int u,v;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">			e[u].push_back(v);</div><div class="line">			e[v].push_back(u);</div><div class="line">		&#125;</div><div class="line">		dfs1(1,0,0);</div><div class="line">		dfs2(1,1);</div><div class="line">		build(1,1,n);</div><div class="line">		int q;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;q);</div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			int x,y,k;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;k);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Query(x,y,k));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>这道题，首先考虑一条链的版本，我们用线段树来维护，先从区间合并来考虑。<br>对于当前结点，那么结点的最优值肯定来自于左孩子和右孩子的最优值，以及区间合并的最优值。<br>区间合并的时候，我们肯定是在左孩子的区间买，在右孩子的区间卖，最大差值肯定是右孩子的最大值-左孩子的最小值。<br>区间合并搞定了。更新操作也很容易，加个懒惰标记，由于区间内全部加上V值，对于区间内的差价是没有影响的，所以直接累加到标记上就可以。<br>那么来到这题，变成多条链的合并。我们会发现，如果是从X到Y的方向，求解方法同上。<br>但是如果我们是Y到X的方向，我们应该反过来，即最大差值=左孩子的最大值-右孩子的最小值。</p>
<h2 id="HDU-3308"><a href="#HDU-3308" class="headerlink" title="HDU 3308"></a>HDU 3308</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>本题虽然不是树链剖分 但是是建立在下一题的基础上<br>一条线段 给出点权 两种操作：<br>1.修改点权<br>2.求出区间l-r内的lcis(最长连续上升子序列)</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int lsum[maxn&lt;&lt;2],rsum[maxn&lt;&lt;2],sum[maxn&lt;&lt;2];</div><div class="line">int num[maxn];</div><div class="line">int n,q;</div><div class="line">void push_up(int rt,int l,int r)&#123;</div><div class="line">	lsum[rt]=lsum[rt&lt;&lt;1];</div><div class="line">	rsum[rt]=rsum[rt&lt;&lt;1|1];</div><div class="line">	sum[rt]=max(sum[rt&lt;&lt;1],sum[rt&lt;&lt;1|1]);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(num[mid]&lt;num[mid+1])&#123;</div><div class="line">		<span class="keyword">if</span>(lsum[rt]==(mid<span class="_">-l</span>+1)) lsum[rt]+=lsum[rt&lt;&lt;1|1];</div><div class="line">		<span class="keyword">if</span>(rsum[rt]==(r-mid)) rsum[rt]+=rsum[rt&lt;&lt;1];</div><div class="line">		sum[rt]=max(sum[rt],rsum[rt&lt;&lt;1]+lsum[rt&lt;&lt;1|1]);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		lsum[rt]=rsum[rt]=sum[rt]=1;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	build(lson);</div><div class="line">	build(rson);</div><div class="line">	push_up(rt,l,r);</div><div class="line">&#125;</div><div class="line">void update(int rt,int l,int r,int x,int k)&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		num[l]=k;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=x) update(lson,x,k);</div><div class="line">	<span class="keyword">else</span> update(rson,x,k);</div><div class="line">	push_up(rt,l,r);</div><div class="line">&#125;</div><div class="line">int query(int rt,int l,int r,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> sum[rt];</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=R) <span class="built_in">return</span> query(lson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) <span class="built_in">return</span> query(rson,L,R);</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		int x1=query(lson,L,R);</div><div class="line">		int x2=query(rson,L,R);</div><div class="line">		int ans=max(x1,x2);</div><div class="line">		<span class="keyword">if</span>(num[mid]&lt;num[mid+1])&#123;</div><div class="line">			ans=max(ans,min(rsum[rt&lt;&lt;1],mid-L+1)+min(lsum[rt&lt;&lt;1|1],R-mid));</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> ans;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t; scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;q);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;num[i]);</div><div class="line">		build(1,1,n);</div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			char op; cin&gt;&gt;op;</div><div class="line">			<span class="keyword">if</span>(op==<span class="string">'Q'</span>)&#123;</div><div class="line">				int x,y;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">				x++,y++;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,query(1,1,n,x,y));</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				int x,y;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">				x++;</div><div class="line">				update(1,1,n,x,y);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>线段树维护lcis<br>lsum表示左端点向右延伸的最大值 rsum表示右端点向左延伸的最大值<br>sum表示区间的最大值<br>注意pushup的合并操作即可 判断mid处是否可以衔接<br>下标从0开始 方便计算点的索引++<br>query里的合并注意mid-L+1 R-mid而不是l和r</p>
<h2 id="HDU-4718"><a href="#HDU-4718" class="headerlink" title="HDU 4718"></a>HDU 4718</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>本题建立在上一题的基础上 求树上两点间的lcis</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,q,step;</div><div class="line">int c[maxn];</div><div class="line">int sz[maxn],dep[maxn],fa[maxn],son[maxn];</div><div class="line">int id[maxn],top[maxn];</div><div class="line">int val[maxn];</div><div class="line">struct T&#123;</div><div class="line">	int l,r;</div><div class="line">    int lval,rval;</div><div class="line">	int LL,LR,RL,RR;</div><div class="line">	int len,ren;</div><div class="line">    <span class="function"><span class="title">T</span></span>()&#123;</div><div class="line">    	lval=rval=0;</div><div class="line">    	LL=LR=RL=RR=0;</div><div class="line">    	len=ren=0;</div><div class="line">	&#125;</div><div class="line">&#125;tree[maxn&lt;&lt;2];</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    mm(sz,0),mm(dep,0),mm(fa,0),mm(son,0);</div><div class="line">    mm(id,0),mm(top,0),mm(val,0),mm(c,0);</div><div class="line">    step=0;</div><div class="line">&#125;</div><div class="line">void dfs1(int x,int f,int deep)&#123;</div><div class="line">    sz[x]=1,fa[x]=f,son[x]=0,dep[x]=deep;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==f) <span class="built_in">continue</span>;</div><div class="line">        dfs1(next,x,deep+1);</div><div class="line">        sz[x]+=sz[next];</div><div class="line">        <span class="keyword">if</span>(sz[son[x]]&lt;sz[next]) son[x]=next;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int tp)&#123;</div><div class="line">    top[x]=tp;</div><div class="line">    id[x]=++step;</div><div class="line">    val[id[x]]=x;</div><div class="line">    <span class="keyword">if</span>(son[x]) dfs2(son[x],tp);</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==fa[x] || next==son[x]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(next,next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">T merge(T a,T b)&#123;</div><div class="line">	<span class="keyword">if</span>(b.len==0) <span class="built_in">return</span> a;</div><div class="line">	T temp=a;</div><div class="line">	temp.rval=b.rval;</div><div class="line">	temp.r=b.r;</div><div class="line">	temp.len=max(a.len,b.len);</div><div class="line">	temp.ren=max(a.ren,b.ren);</div><div class="line">	<span class="keyword">if</span>(a.LR==a.r-a.l+1 &amp;&amp; a.rval&lt;b.lval) temp.LR=a.LR+b.LR;</div><div class="line">	<span class="keyword">else</span> temp.LR=a.LR;</div><div class="line">	<span class="keyword">if</span>(a.LL==a.r-a.l+1 &amp;&amp; a.rval&gt;b.lval) temp.LL=a.LL+b.LL;</div><div class="line">	<span class="keyword">else</span> temp.LL=a.LL;</div><div class="line">	<span class="keyword">if</span>(b.RL==b.r-b.l+1 &amp;&amp; a.rval&gt;b.lval) temp.RL=b.RL+a.RL;</div><div class="line">	<span class="keyword">else</span> temp.RL=b.RL;</div><div class="line">	<span class="keyword">if</span>(b.RR==b.r-b.l+1 &amp;&amp; a.rval&lt;b.lval) temp.RR=b.RR+a.RR;</div><div class="line">	<span class="keyword">else</span> temp.RR=b.RR;</div><div class="line">	temp.len=max(temp.len,temp.LR);</div><div class="line">	temp.len=max(temp.len,temp.RR);</div><div class="line">	temp.ren=max(temp.ren,temp.RL);</div><div class="line">	temp.ren=max(temp.ren,temp.LL);</div><div class="line">	<span class="keyword">if</span>(a.rval&lt;b.lval) temp.len=max(temp.len,a.RR+b.LR);</div><div class="line">	<span class="keyword">if</span>(a.rval&gt;b.lval) temp.ren=max(temp.ren,a.RL+b.LL);</div><div class="line">	<span class="built_in">return</span> temp;</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">	tree[rt].l=l,tree[rt].r=r;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		tree[rt].lval=tree[rt].rval=c[val[l]];</div><div class="line">		tree[rt].LL=tree[rt].LR=tree[rt].RL=tree[rt].RR=1;</div><div class="line">		tree[rt].len=tree[rt].ren=1;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	build(lson);</div><div class="line">	build(rson);</div><div class="line">	tree[rt]=merge(tree[rt&lt;&lt;1],tree[rt&lt;&lt;1|1]);</div><div class="line">&#125;</div><div class="line">T query(int rt,int l,int r,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> tree[rt];</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=R) <span class="built_in">return</span> query(lson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) <span class="built_in">return</span> query(rson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">return</span> merge(query(lson,L,R),query(rson,L,R));</div><div class="line">&#125;</div><div class="line">int Query(int x,int y)&#123;</div><div class="line">	int ans=0,flag=0;</div><div class="line">	T ans1,ans2;</div><div class="line">	<span class="keyword">while</span>(top[x]!=top[y])&#123;  </div><div class="line">        <span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]]) swap(x,y),swap(ans1,ans2),flag^=1;  </div><div class="line">        ans1=merge(query(1,1,n,id[top[x]],id[x]),ans1);</div><div class="line">        x=fa[top[x]];  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">if</span>(dep[x]&gt;dep[y]) swap(x,y),swap(ans1,ans2),flag^=1;</div><div class="line">    ans2=merge(query(1,1,n,id[x],id[y]),ans2);</div><div class="line">	<span class="keyword">if</span>(flag) swap(ans1,ans2);</div><div class="line">    ans=max(ans1.ren,ans2.len);</div><div class="line">    <span class="keyword">if</span>(ans1.lval&lt;ans2.lval) ans=max(ans,ans1.LL+ans2.LR);</div><div class="line">	<span class="built_in">return</span> ans;  </div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t;</div><div class="line">	int f=0;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		<span class="keyword">if</span>(f) puts(<span class="string">""</span>);</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;c[i]);</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">			int x;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">			e[x].push_back(i);</div><div class="line">			e[i].push_back(x);</div><div class="line">		&#125;</div><div class="line">		dfs1(1,0,0);</div><div class="line">		dfs2(1,1);</div><div class="line">		build(1,1,n);</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;q);</div><div class="line">		cout&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;++f&lt;&lt;<span class="string">":"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			int u,v;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Query(u,v));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>树上的问题 用树链剖分转换成线性结构 就跟上题类似了<br>由于树链剖分向上爬的特殊性 需要继续2个方向的最大值 所以参数如下：<br>LL：左端点下降的最远距离<br>LR：左端点上升的最远距离<br>RL：右端点上升的最远距离<br>RR：右端点下降的最远距离<br>len：从左向右的最大长度<br>ren：从右向左的最大长度<br>同时为了merge的顺利实现 需要记录l和r两个边界的值<br>具体merge实现与上题类似</p>
<h2 id="bzoj-4034"><a href="#bzoj-4034" class="headerlink" title="bzoj 4034"></a>bzoj 4034</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>有一棵点数为 N 的树，以点 1 为根，且树点有边权。然后有 M 个<br>操作，分为三种：<br>操作 1 ：把某个节点 x 的点权增加 a 。<br>操作 2 ：把某个节点 x 为根的子树中所有点的点权都增加 a 。<br>操作 3 ：询问某个节点 x 到根的路径中所有点的点权和。</p>
<p>第一行包含两个整数 N, M 。表示点数和操作数。接下来一行 N 个整数，表示树中节点的初始权值。接下来 N-1<br>行每行三个正整数 fr, to ， 表示该树中存在一条边 (fr, to) 。再接下来 M 行，每行分别表示一次操作。其中<br>第一个数表示该操作的种类（ 1-3 ） ，之后接这个操作的参数（ x 或者 x a ） 。</p>
<p>对于每个询问操作，输出该询问的答案。答案之间用换行隔开。</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,q,step;</div><div class="line">int c[maxn];</div><div class="line">int sz[maxn],dep[maxn],fa[maxn],son[maxn];</div><div class="line">int <span class="keyword">in</span>[maxn],out[maxn],top[maxn];</div><div class="line">int val[maxn];</div><div class="line">LL sum[maxn&lt;&lt;2],lazy[maxn&lt;&lt;2];</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    mm(sz,0),mm(dep,0),mm(fa,0),mm(son,0);</div><div class="line">    mm(<span class="keyword">in</span>,0),mm(out,0),mm(top,0),mm(val,0),mm(c,0);</div><div class="line">    step=0;</div><div class="line">&#125;</div><div class="line">void dfs1(int x,int f,int deep)&#123;</div><div class="line">    sz[x]=1,fa[x]=f,son[x]=0,dep[x]=deep;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==f) <span class="built_in">continue</span>;</div><div class="line">        dfs1(next,x,deep+1);</div><div class="line">        sz[x]+=sz[next];</div><div class="line">        <span class="keyword">if</span>(sz[son[x]]&lt;sz[next]) son[x]=next;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int tp)&#123;</div><div class="line">    top[x]=tp;</div><div class="line">    <span class="keyword">in</span>[x]=++step;</div><div class="line">    val[<span class="keyword">in</span>[x]]=x;</div><div class="line">    <span class="keyword">if</span>(son[x]) dfs2(son[x],tp);</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==fa[x] || next==son[x]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(next,next);</div><div class="line">    &#125;</div><div class="line">    out[x]=step;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">    sum[rt]=sum[rt&lt;&lt;1]+sum[rt&lt;&lt;1|1];</div><div class="line">&#125;</div><div class="line">void push_down(int rt,int l,int r)&#123;</div><div class="line">    <span class="keyword">if</span>(lazy[rt])&#123;</div><div class="line">        int mid=(l+r)&gt;&gt;1;</div><div class="line">        lazy[rt&lt;&lt;1]+=lazy[rt];</div><div class="line">        lazy[rt&lt;&lt;1|1]+=lazy[rt];</div><div class="line">        sum[rt&lt;&lt;1]+=(mid<span class="_">-l</span>+1)*(LL)lazy[rt];</div><div class="line">        sum[rt&lt;&lt;1|1]+=(r-mid)*(LL)lazy[rt];</div><div class="line">        lazy[rt]=0;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">    lazy[rt]=0;</div><div class="line">    <span class="keyword">if</span>(l==r)&#123;</div><div class="line">        sum[rt]=(LL)c[val[l]];</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    build(lson);</div><div class="line">    build(rson);</div><div class="line">    push_up(rt);</div><div class="line">&#125;</div><div class="line">void update(int rt,int l,int r,int L,int R,int k)&#123;</div><div class="line">    <span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R)&#123;</div><div class="line">        sum[rt]+=(r<span class="_">-l</span>+1)*(LL)k;</div><div class="line">        lazy[rt]+=k;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    push_down(rt,l,r);</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    <span class="keyword">if</span>(mid&gt;=L) update(lson,L,R,k);</div><div class="line">    <span class="keyword">if</span>(mid&lt;R) update(rson,L,R,k);</div><div class="line">    push_up(rt);</div><div class="line">&#125;</div><div class="line">LL query(int rt,int l,int r,int L,int R)&#123;</div><div class="line">    <span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> sum[rt];</div><div class="line">    push_down(rt,l,r);</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    LL sum=0;</div><div class="line">    <span class="keyword">if</span>(mid&gt;=L) sum+=query(lson,L,R);</div><div class="line">    <span class="keyword">if</span>(mid&lt;R) sum+=query(rson,L,R);</div><div class="line">    <span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">LL getsum(int x,int y)&#123;</div><div class="line">    LL sum=0;</div><div class="line">    <span class="keyword">while</span>(top[x]!=top[y])&#123;  </div><div class="line">        <span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]]) swap(x,y);  </div><div class="line">        sum+=query(1,1,n,<span class="keyword">in</span>[top[x]],<span class="keyword">in</span>[x]);  </div><div class="line">        x=fa[top[x]];  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">if</span>(dep[x]&gt;dep[y]) swap(x,y);  </div><div class="line">    sum+=query(1,1,n,<span class="keyword">in</span>[x],<span class="keyword">in</span>[y]);</div><div class="line">    <span class="built_in">return</span> sum;  </div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;q)!=EOF)&#123;</div><div class="line">        init();</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;c[i]);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">            int u,v;</div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">            e[u].push_back(v);</div><div class="line">            e[v].push_back(u);</div><div class="line">        &#125;</div><div class="line">        dfs1(1,0,0);</div><div class="line">        dfs2(1,1);</div><div class="line">        build(1,1,n);</div><div class="line">        <span class="keyword">while</span>(q--)&#123;</div><div class="line">            int op;</div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;op);</div><div class="line">            <span class="keyword">if</span>(op==1)&#123;</div><div class="line">                int x,y;</div><div class="line">                scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">                update(1,1,n,<span class="keyword">in</span>[x],<span class="keyword">in</span>[x],y);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(op==2)&#123;</div><div class="line">                int x,y;</div><div class="line">                scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">                update(1,1,n,<span class="keyword">in</span>[x],out[x],y);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                int x;</div><div class="line">                scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,getsum(1,x));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>由于有某节点到根节点的操作 这是一条链 所以使用树链剖分 也有子树的操作 在dfs2加入in和out数组求出dfs序去维护子树<br>注意开LL 并且本题是区间更新区间求和 sum需要加左右端点区间内的每一个值 所以注意pushdown和sum的写法</p>
<h2 id="bzoj-4196"><a href="#bzoj-4196" class="headerlink" title="bzoj 4196"></a>bzoj 4196</h2><h3 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h3><p>你决定设计你自己的软件包管理器。不可避免地，你要解决软件包之间的依赖问题。如果软件包A依赖软件包B，那么安装软件包A以前，必须先安装软件包B。<br>同时，如果想要卸载软件包B，则必须卸载软件包A。现在你已经获得了所有的软件包之间的依赖关系。而且，由于你之前的工作，除0号软件包以外，在你的管理器<br>当中的软件包都会依赖一个且仅一个软件包，而0号软件包不依赖任何一个软件包。依赖关系不存在环（若有m(m≥2)个软件包A1,A2,A3,…,Am，其中A1依赖A2，A2依赖A3<br>，A3依赖A4，……，Am−1依赖Am，而Am依赖A1，则称这m个软件包的依赖关系构成环），当然也不会有一个软件包依赖自己。<br>现在你要为你的软件包管理器写一个依赖解决程序。根据反馈，用户希望在安装和卸载某个软件包时，快速地知道这个操作实际上会改变多少个软件包的安装状态<br>（即安装操作会安装多少个未安装的软件包，或卸载操作会卸载多少个已安装的软件包），你的任务就是实现这个部分。注意，安装一个已安装的软件包，<br>或卸载一个未安装的软件包，都不会改变任何软件包的安装状态，即在此情况下，改变安装状态的软件包数为0。</p>
<p>输入文件的第1行包含1个正整数n，表示软件包的总数。软件包从0开始编号。<br>随后一行包含n−1个整数，相邻整数之间用单个空格隔开，分别表示1,2,3,…,n−2,n−1号软件包依赖的软件包的编号。<br>接下来一行包含1个正整数q，表示询问的总数。<br>之后q行，每行1个询问。询问分为两种：<br>installx：表示安装软件包x<br>uninstallx：表示卸载软件包x<br>你需要维护每个软件包的安装状态，一开始所有的软件包都处于未安装状态。对于每个操作，你需要输出这步操作会改变多少个软件包的安装状态，<br>随后应用这个操作（即改变你维护的安装状态）。</p>
<p>输出文件包括q行。<br>输出文件的第i行输出1个整数，为第i步操作中改变安装状态的软件包数。</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,q,step;</div><div class="line">int sz[maxn],dep[maxn],fa[maxn],son[maxn];</div><div class="line">int <span class="keyword">in</span>[maxn],out[maxn],top[maxn];</div><div class="line">int sum[maxn&lt;&lt;2],lazy[maxn&lt;&lt;2];</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    mm(sz,0),mm(dep,0),mm(fa,0),mm(son,0);</div><div class="line">    mm(<span class="keyword">in</span>,0),mm(out,0),mm(top,0);</div><div class="line">    step=0;</div><div class="line">&#125;</div><div class="line">void dfs1(int x,int f,int deep)&#123;</div><div class="line">    sz[x]=1,fa[x]=f,son[x]=0,dep[x]=deep;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==f) <span class="built_in">continue</span>;</div><div class="line">        dfs1(next,x,deep+1);</div><div class="line">        sz[x]+=sz[next];</div><div class="line">        <span class="keyword">if</span>(sz[son[x]]&lt;sz[next]) son[x]=next;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int tp)&#123;</div><div class="line">    top[x]=tp;</div><div class="line">    <span class="keyword">in</span>[x]=++step;</div><div class="line">    <span class="keyword">if</span>(son[x]) dfs2(son[x],tp);</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==fa[x] || next==son[x]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(next,next);</div><div class="line">    &#125;</div><div class="line">    out[x]=step;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">	sum[rt]=sum[rt&lt;&lt;1]+sum[rt&lt;&lt;1|1];</div><div class="line">&#125;</div><div class="line">void push_down(int rt,int l,int r)&#123;</div><div class="line">	<span class="keyword">if</span>(lazy[rt]!=-1)&#123;</div><div class="line">		int mid=(l+r)&gt;&gt;1;</div><div class="line">		lazy[rt&lt;&lt;1]=lazy[rt];</div><div class="line">		lazy[rt&lt;&lt;1|1]=lazy[rt];</div><div class="line">		<span class="keyword">if</span>(lazy[rt]) sum[rt&lt;&lt;1]=mid<span class="_">-l</span>+1,sum[rt&lt;&lt;1|1]=r-mid;</div><div class="line">		<span class="keyword">else</span> sum[rt&lt;&lt;1]=sum[rt&lt;&lt;1|1]=0;</div><div class="line">		lazy[rt]=-1;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">	lazy[rt]=-1;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		sum[rt]=0;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	build(lson);</div><div class="line">	build(rson);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">void update(int rt,int l,int r,int L,int R,int k)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R)&#123;</div><div class="line">		lazy[rt]=k;</div><div class="line">		<span class="keyword">if</span>(k) sum[rt]=r<span class="_">-l</span>+1;</div><div class="line">		<span class="keyword">else</span> sum[rt]=0;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	push_down(rt,l,r);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=L) update(lson,L,R,k);</div><div class="line">	<span class="keyword">if</span>(mid&lt;R) update(rson,L,R,k);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">int query(int rt,int l,int r,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> sum[rt];</div><div class="line">	push_down(rt,l,r);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	int ans=0;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=L) ans+=query(lson,L,R);</div><div class="line">	<span class="keyword">if</span>(mid&lt;R) ans+=query(rson,L,R);</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int solve1(int x,int y)&#123;</div><div class="line">	int ans=0;</div><div class="line">	<span class="keyword">while</span>(top[x]!=top[y])&#123;  </div><div class="line">        <span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]]) swap(x,y);  </div><div class="line">        ans+=<span class="keyword">in</span>[x]-in[top[x]]+1-query(1,1,n,<span class="keyword">in</span>[top[x]],<span class="keyword">in</span>[x]);</div><div class="line">		update(1,1,n,<span class="keyword">in</span>[top[x]],<span class="keyword">in</span>[x],1);  </div><div class="line">        x=fa[top[x]];  </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(dep[x]&gt;dep[y]) swap(x,y);</div><div class="line">	ans+=<span class="keyword">in</span>[y]-in[x]+1-query(1,1,n,<span class="keyword">in</span>[x],<span class="keyword">in</span>[y]); </div><div class="line">    update(1,1,n,<span class="keyword">in</span>[x],<span class="keyword">in</span>[y],1);  </div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int solve2(int x)&#123;</div><div class="line">	int ans=query(1,1,n,<span class="keyword">in</span>[x],out[x]);</div><div class="line">	update(1,1,n,<span class="keyword">in</span>[x],out[x],0);</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">char op[15];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">			int x;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">			x++;</div><div class="line">			e[x].push_back(i);</div><div class="line">			e[i].push_back(x);</div><div class="line">		&#125;</div><div class="line">		dfs1(1,0,0);</div><div class="line">		dfs2(1,1);</div><div class="line">		build(1,1,n);</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;q);</div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			scanf(<span class="string">"%s"</span>,op);</div><div class="line">			<span class="keyword">if</span>(op[0]==<span class="string">'i'</span>)&#123;</div><div class="line">				int x;</div><div class="line">				scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">				x++;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,solve1(1,x));</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				int x;</div><div class="line">				scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">				x++;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,solve2(x));</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>本题有2个操作：<br>初始时树上所有结点权值均为0；<br>安装操作将根到x结点的所有结点权值置为1，卸载操作将x结点的子树中所有结点权值置为0<br>前者显然树剖 后者显然dfs序 dfs序可在dfs2中求出<br>lazy用来表示是否安装的标记<br>由于结点编号从0开始 全部++方便计算<br>由于是区间求和问题 sum需要加上每一个点的值<br>solve1解决树剖更新 用总结点减去1的个数=0的个数 即为答案<br>solve2解决子树 query的1个数就是答案 注意2个操作后都有更新操作</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树链剖分专题1]]></title>
      <url>http://xuboming8.github.io/2017/08/23/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86%E4%B8%93%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="树链剖分专题1"><a href="#树链剖分专题1" class="headerlink" title="树链剖分专题1"></a>树链剖分专题1</h1><p>专题1主要包括：<br><a id="more"></a><br>1.针对点权的树剖<br>2.针对边权的树剖<br>3.区间取反的特殊lazy</p>
<h2 id="HDU-6162"><a href="#HDU-6162" class="headerlink" title="HDU 6162"></a>HDU 6162</h2><p>有最大值最小值限制的树链点权和<br><a href="http://monkeyxu.cn/2017/08/23/muti%E5%A4%9A%E6%A0%A1-9/#HDU-6162" target="_blank" rel="external">转跳链接</a></p>
<h2 id="bzoj-1036"><a href="#bzoj-1036" class="headerlink" title="bzoj 1036"></a>bzoj 1036</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>一棵树上有n个节点，编号分别为1到n，每个节点都有一个权值w。我们将以下面的形式来要求你对这棵树完成一些操作：<br>I. CHANGE u t : 把结点u的权值改为t II. QMAX u v: 询问从点u到点v的路径上的节点的最大权值 III. QSUM u v: 询问从点u到点v的路径上的节点的权值和<br>注意：从点u到点v的路径上的节点包括u和v本身</p>
<p>输入的第一行为一个整数n，表示节点的个数。接下来n – 1行，每行2个整数a和b，表示节点a和节点b之间有一条边相连。<br>接下来n行，每行一个整数，第i行的整数wi表示节点i的权值。接下来1行，为一个整数q，表示操作的总数。<br>接下来q行，每行一个操作，以“CHANGE u t”或者“QMAX u v”或者“QSUM u v”的形式给出。<br>对于100％的数据，保证1&lt;=n&lt;=30000，0&lt;=q&lt;=200000；中途操作中保证每个节点的权值w在-30000到30000之间。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 30050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,q,step;</div><div class="line">int w[maxn];</div><div class="line">int sz[maxn],dep[maxn],fa[maxn],son[maxn];</div><div class="line">int id[maxn],top[maxn];</div><div class="line">struct T&#123;</div><div class="line">    int sum,Max,l,r;</div><div class="line">&#125;tree[maxn&lt;&lt;2];</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    mm(sz,0),mm(dep,0),mm(fa,0),mm(son,0);</div><div class="line">    mm(id,0),mm(top,0);</div><div class="line">    mm(tree,0);</div><div class="line">    step=0;</div><div class="line">&#125;</div><div class="line">void dfs1(int x,int f,int deep)&#123;</div><div class="line">    sz[x]=1,fa[x]=f,son[x]=0,dep[x]=deep;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==f) <span class="built_in">continue</span>;</div><div class="line">        dfs1(next,x,deep+1);</div><div class="line">        sz[x]+=sz[next];</div><div class="line">        <span class="keyword">if</span>(sz[son[x]]&lt;sz[next]) son[x]=next;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int tp)&#123;</div><div class="line">    top[x]=tp;</div><div class="line">    id[x]=++step;</div><div class="line">    <span class="keyword">if</span>(son[x]) dfs2(son[x],tp);</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==fa[x] || next==son[x]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(next,next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">    tree[rt].sum=tree[rt&lt;&lt;1].sum+tree[rt&lt;&lt;1|1].sum;</div><div class="line">    tree[rt].Max=max(tree[rt&lt;&lt;1].Max,tree[rt&lt;&lt;1|1].Max);</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">    tree[rt].l=l,tree[rt].r=r;</div><div class="line">    <span class="keyword">if</span>(l==r) <span class="built_in">return</span> ;</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    build(lson);</div><div class="line">    build(rson);</div><div class="line">&#125;</div><div class="line">void update(int rt,int u,int x)&#123;</div><div class="line">    int l=tree[rt].l,r=tree[rt].r;</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    <span class="keyword">if</span>(l==r)&#123;</div><div class="line">        tree[rt].Max=tree[rt].sum=x;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(mid&gt;=u) update(rt&lt;&lt;1,u,x);</div><div class="line">    <span class="keyword">else</span> update(rt&lt;&lt;1|1,u,x);</div><div class="line">    push_up(rt);</div><div class="line">&#125;</div><div class="line">int querymx(int rt,int L,int R)&#123;</div><div class="line">    int l=tree[rt].l,r=tree[rt].r;</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    <span class="keyword">if</span>(l==L &amp;&amp; r==R) <span class="built_in">return</span> tree[rt].Max;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(mid&gt;=R) <span class="built_in">return</span> querymx(rt&lt;&lt;1,L,R);</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) <span class="built_in">return</span> querymx(rt&lt;&lt;1|1,L,R);</div><div class="line">    <span class="keyword">else</span> <span class="built_in">return</span> max(querymx(rt&lt;&lt;1,L,mid),querymx(rt&lt;&lt;1|1,mid+1,R));</div><div class="line">&#125;</div><div class="line">int querysum(int rt,int L,int R)&#123;</div><div class="line">    int l=tree[rt].l,r=tree[rt].r;</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    <span class="keyword">if</span>(l==L &amp;&amp; r==R) <span class="built_in">return</span> tree[rt].sum;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(mid&gt;=R) <span class="built_in">return</span> querysum(rt&lt;&lt;1,L,R);</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) <span class="built_in">return</span> querysum(rt&lt;&lt;1|1,L,R);</div><div class="line">    <span class="keyword">else</span> <span class="built_in">return</span> querysum(rt&lt;&lt;1,L,mid)+querysum(rt&lt;&lt;1|1,mid+1,R);</div><div class="line">&#125;</div><div class="line">int solvemx(int L,int R)&#123;</div><div class="line">    int ans=-inf;</div><div class="line">    <span class="keyword">while</span>(top[L]!=top[R])&#123;</div><div class="line">        <span class="keyword">if</span>(dep[top[L]]&lt;dep[top[R]]) swap(L,R);</div><div class="line">        ans=max(ans,querymx(1,id[top[L]],id[L]));</div><div class="line">        L=fa[top[L]];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(id[L]&gt;id[R]) swap(L,R);</div><div class="line">    ans=max(ans,querymx(1,id[L],id[R]));</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int solvesum(int L,int R)&#123;</div><div class="line">    int sum=0;</div><div class="line">    <span class="keyword">while</span>(top[L]!=top[R])&#123;</div><div class="line">        <span class="keyword">if</span>(dep[top[L]]&lt;dep[top[R]]) swap(L,R);</div><div class="line">        sum+=querysum(1,id[top[L]],id[L]);</div><div class="line">        L=fa[top[L]];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(id[L]&gt;id[R]) swap(L,R);</div><div class="line">    sum+=querysum(1,id[L],id[R]);</div><div class="line">    <span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</div><div class="line">        init();</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">            int u,v;</div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">            e[u].push_back(v);</div><div class="line">            e[v].push_back(u);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;w[i]);</div><div class="line">        dfs1(1,0,0);</div><div class="line">        dfs2(1,1);</div><div class="line">        build(1,1,n);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) update(1,id[i],w[i]);</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;q);</div><div class="line">        <span class="keyword">while</span>(q--)&#123;</div><div class="line">            char op[10];</div><div class="line">            int x,y;</div><div class="line">            scanf(<span class="string">"%s%d%d"</span>,op,&amp;x,&amp;y);</div><div class="line">            <span class="keyword">if</span>(op[0]==<span class="string">'C'</span>)&#123;</div><div class="line">                w[x]=y;</div><div class="line">                update(1,id[x],y);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                <span class="keyword">if</span>(op[1]==<span class="string">'M'</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,solvemx(x,y));</div><div class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,solvesum(x,y));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>树剖模版题<br>单点更新+区间查询树链sum+区间查询树链max</p>
<h2 id="HDU-3966"><a href="#HDU-3966" class="headerlink" title="HDU 3966"></a>HDU 3966</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>树链上区间更新 单点查询<br>与上一题相反</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 50050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,m,q,step;</div><div class="line">int w[maxn];</div><div class="line">int sz[maxn],dep[maxn],fa[maxn],son[maxn];</div><div class="line">int id[maxn],top[maxn];</div><div class="line">int val[maxn];</div><div class="line">struct T&#123;</div><div class="line">    int sum,Max,lazy;</div><div class="line">&#125;tree[maxn&lt;&lt;2];</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    mm(sz,0),mm(dep,0),mm(fa,0),mm(son,0);</div><div class="line">    mm(id,0),mm(top,0),mm(val,0);</div><div class="line">    mm(tree,0);</div><div class="line">    step=0;</div><div class="line">&#125;</div><div class="line">void dfs1(int x,int f,int deep)&#123;</div><div class="line">    sz[x]=1,fa[x]=f,son[x]=0,dep[x]=deep;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==f) <span class="built_in">continue</span>;</div><div class="line">        dfs1(next,x,deep+1);</div><div class="line">        sz[x]+=sz[next];</div><div class="line">        <span class="keyword">if</span>(sz[son[x]]&lt;sz[next]) son[x]=next;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int tp)&#123;</div><div class="line">    top[x]=tp;</div><div class="line">    id[x]=++step;</div><div class="line">    val[id[x]]=x;</div><div class="line">    <span class="keyword">if</span>(son[x]) dfs2(son[x],tp);</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==fa[x] || next==son[x]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(next,next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">    tree[rt].sum=tree[rt&lt;&lt;1].sum+tree[rt&lt;&lt;1|1].sum;</div><div class="line">&#125;</div><div class="line">void push_down(int rt)&#123;</div><div class="line">	<span class="keyword">if</span>(tree[rt].lazy)&#123;</div><div class="line">		tree[rt&lt;&lt;1].lazy+=tree[rt].lazy;</div><div class="line">		tree[rt&lt;&lt;1|1].lazy+=tree[rt].lazy;</div><div class="line">		tree[rt&lt;&lt;1].sum+=tree[rt].lazy;</div><div class="line">		tree[rt&lt;&lt;1|1].sum+=tree[rt].lazy;</div><div class="line">		tree[rt].lazy=0;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">    <span class="keyword">if</span>(l==r)&#123;</div><div class="line">    	tree[rt].sum=w[val[l]];</div><div class="line">    	<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    build(lson);</div><div class="line">    build(rson);</div><div class="line">    push_up(rt);</div><div class="line">&#125;</div><div class="line">void update(int rt,int l,int r,int L,int R,int x)&#123;</div><div class="line">    <span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R)&#123;</div><div class="line">        tree[rt].sum+=x;</div><div class="line">        tree[rt].lazy+=x;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    push_down(rt);</div><div class="line">	<span class="keyword">if</span>(mid&gt;=L) update(lson,L,R,x);</div><div class="line">	<span class="keyword">if</span>(mid&lt;R) update(rson,L,R,x);</div><div class="line">    push_up(rt);</div><div class="line">&#125;</div><div class="line">int query(int rt,int l,int r,int val)&#123;</div><div class="line">    <span class="keyword">if</span>(l==r) <span class="built_in">return</span> tree[rt].sum;</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    push_down(rt);</div><div class="line">    int ans=0;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=val) ans=query(lson,val);</div><div class="line">    <span class="keyword">else</span> ans=query(rson,val);</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">void change(int x,int y,int val)&#123;</div><div class="line">	<span class="keyword">while</span>(top[x]!=top[y])&#123;  </div><div class="line">        <span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]]) swap(x,y);  </div><div class="line">        update(1,1,n,id[top[x]],id[x],val);  </div><div class="line">        x=fa[top[x]];  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">if</span>(dep[x]&gt;dep[y]) swap(x,y);  </div><div class="line">    update(1,1,n,id[x],id[y],val);  </div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;q)!=EOF)&#123;</div><div class="line">        init();</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;w[i]);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            int u,v;</div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">            e[u].push_back(v);</div><div class="line">            e[v].push_back(u);</div><div class="line">        &#125;</div><div class="line">        dfs1(1,0,0);</div><div class="line">        dfs2(1,1);</div><div class="line">        build(1,1,n);</div><div class="line">        <span class="keyword">while</span>(q--)&#123;</div><div class="line">            char op;</div><div class="line">            cin&gt;&gt;op;</div><div class="line">            <span class="keyword">if</span>(op==<span class="string">'I'</span>)&#123;</div><div class="line">            	int c1,c2,k;</div><div class="line">            	scanf(<span class="string">"%d%d%d"</span>,&amp;c1,&amp;c2,&amp;k);</div><div class="line">            	change(c1,c2,k);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="string">'D'</span>)&#123;</div><div class="line">				int c1,c2,k;</div><div class="line">            	scanf(<span class="string">"%d%d%d"</span>,&amp;c1,&amp;c2,&amp;k);</div><div class="line">            	change(c1,c2,-k);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				int x;</div><div class="line">				scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,query(1,1,n,id[x]));</div><div class="line">			&#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>只有区间操作要用到树剖的合并 所以本题的更新改为change操作<br>而单点查询用普通的线段树即可</p>
<h2 id="SPOj-QTREE"><a href="#SPOj-QTREE" class="headerlink" title="SPOj QTREE"></a>SPOj QTREE</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>一棵树 给出边权<br>单点更新区间查询</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 20050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,step;</div><div class="line">int w[maxn];</div><div class="line">int sz[maxn],dep[maxn],fa[maxn],son[maxn];</div><div class="line">int id[maxn],top[maxn];</div><div class="line">int val[maxn];</div><div class="line">int <span class="keyword">fi</span>[maxn],se[maxn]; </div><div class="line">struct node&#123;</div><div class="line">	int to,w;</div><div class="line">	node(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">int Max[maxn&lt;&lt;2];</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    mm(sz,0),mm(dep,0),mm(fa,0),mm(son,0);</div><div class="line">    mm(id,0),mm(top,0),mm(val,0);</div><div class="line">    mm(Max,0),mm(<span class="keyword">fi</span>,0),mm(se,0),mm(w,0);</div><div class="line">    step=0;</div><div class="line">&#125;</div><div class="line">void dfs1(int x,int f,int deep)&#123;</div><div class="line">    sz[x]=1,fa[x]=f,son[x]=0,dep[x]=deep;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i].to;</div><div class="line">        <span class="keyword">if</span>(next==f) <span class="built_in">continue</span>;</div><div class="line">        w[next]=e[x][i].w;</div><div class="line">        dfs1(next,x,deep+1);</div><div class="line">        sz[x]+=sz[next];</div><div class="line">        <span class="keyword">if</span>(sz[son[x]]&lt;sz[next]) son[x]=next;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int tp)&#123;</div><div class="line">    top[x]=tp;</div><div class="line">    id[x]=++step;</div><div class="line">    val[id[x]]=x;</div><div class="line">    <span class="keyword">if</span>(son[x]) dfs2(son[x],tp);</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i].to;</div><div class="line">        <span class="keyword">if</span>(next==fa[x] || next==son[x]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(next,next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">    Max[rt]=max(Max[rt&lt;&lt;1],Max[rt&lt;&lt;1|1]);</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">    <span class="keyword">if</span>(l==r)&#123;</div><div class="line">    	Max[rt]=w[val[l]];</div><div class="line">    	<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    build(lson);</div><div class="line">    build(rson);</div><div class="line">    push_up(rt);</div><div class="line">&#125;</div><div class="line">void update(int rt,int l,int r,int x,int k)&#123;</div><div class="line">    <span class="keyword">if</span>(l==r)&#123;</div><div class="line">    	Max[rt]=k;</div><div class="line">    	<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=x) update(lson,x,k);</div><div class="line">	<span class="keyword">else</span> update(rson,x,k);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">int query(int rt,int l,int r,int L,int R)&#123;</div><div class="line">    <span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> Max[rt];</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    <span class="keyword">if</span>(mid&gt;=R) <span class="built_in">return</span> query(lson,L,R);</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) <span class="built_in">return</span> query(rson,L,R);</div><div class="line">    <span class="keyword">else</span> <span class="built_in">return</span> max(query(lson,L,R),query(rson,L,R));</div><div class="line">&#125;</div><div class="line">int querymx(int x,int y)&#123;</div><div class="line">	int ans=0;</div><div class="line">	<span class="keyword">while</span>(top[x]!=top[y])&#123;  </div><div class="line">        <span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]]) swap(x,y);</div><div class="line">		ans=max(ans,query(1,1,n,id[top[x]],id[x]));</div><div class="line">        x=fa[top[x]];  </div><div class="line">    &#125; </div><div class="line">    <span class="keyword">if</span>(x==y) <span class="built_in">return</span> ans;</div><div class="line">    <span class="keyword">if</span>(dep[x]&gt;dep[y]) swap(x,y);</div><div class="line">    ans=max(ans,query(1,1,n,id[son[x]],id[y]));</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">char op[10];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">			int u,v,w;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">			<span class="keyword">fi</span>[i]=u,se[i]=v;</div><div class="line">			e[u].push_back(node(v,w));</div><div class="line">			e[v].push_back(node(u,w));</div><div class="line">		&#125;</div><div class="line">		dfs1(1,0,1);</div><div class="line">		dfs2(1,1); </div><div class="line">		build(1,1,n);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++) <span class="keyword">fi</span>[i]=dep[<span class="keyword">fi</span>[i]]&gt;dep[se[i]]?<span class="keyword">fi</span>[i]:se[i]; </div><div class="line">		<span class="keyword">while</span>(scanf(<span class="string">"%s"</span>,op)!=EOF)&#123;</div><div class="line">			<span class="keyword">if</span>(op[0]==<span class="string">'D'</span>) <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">if</span>(op[0]==<span class="string">'Q'</span>)&#123;</div><div class="line">				int x,y;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,querymx(x,y)); </div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				int x,y;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">				update(1,1,n,id[<span class="keyword">fi</span>[x]],y);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>由于是基于边权而不是点权 要做如下修改：<br>1.记录下点 fi和se数组<br>2.querymx里查询的是son[x]<br>3.需要让fi和se有序<br>4.注意dfs1里w数组的更新</p>
<h2 id="poj-2763"><a href="#poj-2763" class="headerlink" title="poj 2763"></a>poj 2763</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>跟上题类似<br>针对边权的树 单点更新 区间查询<br>区别在于这里的起点不是1 而是s 并随着移动而改变</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;cstdio&gt;  </span></div><div class="line"><span class="comment">#include &lt;cstring&gt;  </span></div><div class="line"><span class="comment">#include &lt;vector&gt;  </span></div><div class="line"><span class="comment">#include &lt;algorithm&gt;</span></div><div class="line"><span class="comment">#define maxn 100500</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,q,s,step;</div><div class="line">int w[maxn];</div><div class="line">int sz[maxn],dep[maxn],fa[maxn],son[maxn];</div><div class="line">int id[maxn],top[maxn];</div><div class="line">int val[maxn];</div><div class="line">int <span class="keyword">fi</span>[maxn],se[maxn]; </div><div class="line">struct node&#123;</div><div class="line">	int to,w;</div><div class="line">	node(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">int sum[maxn&lt;&lt;2];</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    mm(sz,0),mm(dep,0),mm(fa,0),mm(son,0);</div><div class="line">    mm(id,0),mm(top,0),mm(val,0);</div><div class="line">    mm(sum,0),mm(<span class="keyword">fi</span>,0),mm(se,0),mm(w,0);</div><div class="line">    step=0;</div><div class="line">&#125;</div><div class="line">void dfs1(int x,int f,int deep)&#123;</div><div class="line">    sz[x]=1,fa[x]=f,son[x]=0,dep[x]=deep;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i].to;</div><div class="line">        <span class="keyword">if</span>(next==f) <span class="built_in">continue</span>;</div><div class="line">        w[next]=e[x][i].w;</div><div class="line">        dfs1(next,x,deep+1);</div><div class="line">        sz[x]+=sz[next];</div><div class="line">        <span class="keyword">if</span>(sz[son[x]]&lt;sz[next]) son[x]=next;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int tp)&#123;</div><div class="line">    top[x]=tp;</div><div class="line">    id[x]=++step;</div><div class="line">    val[id[x]]=x;</div><div class="line">    <span class="keyword">if</span>(son[x]) dfs2(son[x],tp);</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i].to;</div><div class="line">        <span class="keyword">if</span>(next==fa[x] || next==son[x]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(next,next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">    sum[rt]=sum[rt&lt;&lt;1]+sum[rt&lt;&lt;1|1];</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">    <span class="keyword">if</span>(l==r)&#123;</div><div class="line">    	sum[rt]=w[val[l]];</div><div class="line">    	<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    build(lson);</div><div class="line">    build(rson);</div><div class="line">    push_up(rt);</div><div class="line">&#125;</div><div class="line">void update(int rt,int l,int r,int x,int k)&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		sum[rt]=k;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=x) update(lson,x,k);</div><div class="line">	<span class="keyword">else</span> update(rson,x,k);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">int query(int rt,int l,int r,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> sum[rt];</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=R) <span class="built_in">return</span> query(lson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) <span class="built_in">return</span> query(rson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">return</span> query(lson,L,R)+query(rson,L,R);</div><div class="line">&#125;</div><div class="line">int querysum(int x,int y)&#123;</div><div class="line">	int Sum=0;</div><div class="line">	<span class="keyword">while</span>(top[x]!=top[y])&#123;  </div><div class="line">        <span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]]) swap(x,y);</div><div class="line">		Sum+=query(1,1,n,id[top[x]],id[x]);</div><div class="line">        x=fa[top[x]];  </div><div class="line">    &#125; </div><div class="line">    <span class="keyword">if</span>(x==y) <span class="built_in">return</span> Sum;</div><div class="line">    <span class="keyword">if</span>(dep[x]&gt;dep[y]) swap(x,y);</div><div class="line">    Sum+=query(1,1,n,id[son[x]],id[y]);</div><div class="line">	<span class="built_in">return</span> Sum;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d%d"</span>,&amp;n,&amp;q,&amp;s)!=EOF)&#123;</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">			int u,v,w;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">			<span class="keyword">fi</span>[i]=u,se[i]=v;</div><div class="line">			e[u].push_back(node(v,w));</div><div class="line">			e[v].push_back(node(u,w));</div><div class="line">		&#125;</div><div class="line">		dfs1(1,0,1);</div><div class="line">		dfs2(1,1); </div><div class="line">		build(1,1,n);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++) <span class="keyword">fi</span>[i]=dep[<span class="keyword">fi</span>[i]]&gt;dep[se[i]]?<span class="keyword">fi</span>[i]:se[i]; </div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			int op;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;op);</div><div class="line">			<span class="keyword">if</span>(op==0)&#123;</div><div class="line">				int x;</div><div class="line">				scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,querysum(s,x));</div><div class="line">				s=x;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				int x,y;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">				update(1,1,n,id[<span class="keyword">fi</span>[x]],y);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>跟上题类似<br>用线段树维护sum 并注意s要实时更新</p>
<h2 id="fzu-2082"><a href="#fzu-2082" class="headerlink" title="fzu 2082"></a>fzu 2082</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>基于边权的树<br>单点更新 区间查询 与上题类似</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;cstdio&gt;  </span></div><div class="line"><span class="comment">#include &lt;cstring&gt;  </span></div><div class="line"><span class="comment">#include &lt;vector&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;algorithm&gt;</span></div><div class="line"><span class="comment">#define maxn 100500</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,q,step;</div><div class="line">int w[maxn];</div><div class="line">int sz[maxn],dep[maxn],fa[maxn],son[maxn];</div><div class="line">int id[maxn],top[maxn];</div><div class="line">int val[maxn];</div><div class="line">int <span class="keyword">fi</span>[maxn],se[maxn]; </div><div class="line">struct node&#123;</div><div class="line">	int to,w;</div><div class="line">	node(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">int sum[maxn&lt;&lt;2];</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    mm(sz,0),mm(dep,0),mm(fa,0),mm(son,0);</div><div class="line">    mm(id,0),mm(top,0),mm(val,0);</div><div class="line">    mm(sum,0),mm(<span class="keyword">fi</span>,0),mm(se,0),mm(w,0);</div><div class="line">    step=0;</div><div class="line">&#125;</div><div class="line">void dfs1(int x,int f,int deep)&#123;</div><div class="line">    sz[x]=1,fa[x]=f,son[x]=0,dep[x]=deep;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i].to;</div><div class="line">        <span class="keyword">if</span>(next==f) <span class="built_in">continue</span>;</div><div class="line">        w[next]=e[x][i].w;</div><div class="line">        dfs1(next,x,deep+1);</div><div class="line">        sz[x]+=sz[next];</div><div class="line">        <span class="keyword">if</span>(sz[son[x]]&lt;sz[next]) son[x]=next;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int tp)&#123;</div><div class="line">    top[x]=tp;</div><div class="line">    id[x]=++step;</div><div class="line">    val[id[x]]=x;</div><div class="line">    <span class="keyword">if</span>(son[x]) dfs2(son[x],tp);</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i].to;</div><div class="line">        <span class="keyword">if</span>(next==fa[x] || next==son[x]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(next,next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">    sum[rt]=sum[rt&lt;&lt;1]+sum[rt&lt;&lt;1|1];</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">    <span class="keyword">if</span>(l==r)&#123;</div><div class="line">    	sum[rt]=w[val[l]];</div><div class="line">    	<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    build(lson);</div><div class="line">    build(rson);</div><div class="line">    push_up(rt);</div><div class="line">&#125;</div><div class="line">void update(int rt,int l,int r,int x,int k)&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		sum[rt]=k;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=x) update(lson,x,k);</div><div class="line">	<span class="keyword">else</span> update(rson,x,k);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">int query(int rt,int l,int r,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> sum[rt];</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=R) <span class="built_in">return</span> query(lson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) <span class="built_in">return</span> query(rson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">return</span> query(lson,L,R)+query(rson,L,R);</div><div class="line">&#125;</div><div class="line">int querysum(int x,int y)&#123;</div><div class="line">	int Sum=0;</div><div class="line">	<span class="keyword">while</span>(top[x]!=top[y])&#123;  </div><div class="line">        <span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]]) swap(x,y);</div><div class="line">		Sum+=query(1,1,n,id[top[x]],id[x]);</div><div class="line">        x=fa[top[x]];  </div><div class="line">    &#125; </div><div class="line">    <span class="keyword">if</span>(x==y) <span class="built_in">return</span> Sum;</div><div class="line">    <span class="keyword">if</span>(dep[x]&gt;dep[y]) swap(x,y);</div><div class="line">    Sum+=query(1,1,n,id[son[x]],id[y]);</div><div class="line">	<span class="built_in">return</span> Sum;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;q)!=EOF)&#123;</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">			int u,v,w;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">			<span class="keyword">fi</span>[i]=u,se[i]=v;</div><div class="line">			e[u].push_back(node(v,w));</div><div class="line">			e[v].push_back(node(u,w));</div><div class="line">		&#125;</div><div class="line">		dfs1(1,0,1);</div><div class="line">		dfs2(1,1); </div><div class="line">		build(1,1,n);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++) <span class="keyword">fi</span>[i]=dep[<span class="keyword">fi</span>[i]]&gt;dep[se[i]]?<span class="keyword">fi</span>[i]:se[i]; </div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			int op;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;op);</div><div class="line">			<span class="keyword">if</span>(op==0)&#123;</div><div class="line">				int x,y;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">				update(1,1,n,id[<span class="keyword">fi</span>[x]],y);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				int x,y;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,querysum(x,y));</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>模版题<br>注意基于边权的树链剖分</p>
<h2 id="poj-3237"><a href="#poj-3237" class="headerlink" title="poj 3237"></a>poj 3237</h2><h3 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h3><p>基于边权的树<br>单点更新 区间取反<br>最后区间询问最大值</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 20050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,step;</div><div class="line">int w[maxn];</div><div class="line">int sz[maxn],dep[maxn],fa[maxn],son[maxn];</div><div class="line">int id[maxn],top[maxn];</div><div class="line">int val[maxn];</div><div class="line">int <span class="keyword">fi</span>[maxn],se[maxn]; </div><div class="line">struct node&#123;</div><div class="line">	int to,w;</div><div class="line">	node(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">int Max[maxn&lt;&lt;2],M<span class="keyword">in</span>[maxn&lt;&lt;2],lazy[maxn&lt;&lt;2];</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    mm(sz,0),mm(dep,0),mm(fa,0),mm(son,0);</div><div class="line">    mm(id,0),mm(top,0),mm(val,0),mm(lazy,0);</div><div class="line">    mm(Max,0),mm(M<span class="keyword">in</span>,0),mm(<span class="keyword">fi</span>,0),mm(se,0),mm(w,0);</div><div class="line">    step=0;</div><div class="line">&#125;</div><div class="line">void dfs1(int x,int f,int deep)&#123;</div><div class="line">    sz[x]=1,fa[x]=f,son[x]=0,dep[x]=deep;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i].to;</div><div class="line">        <span class="keyword">if</span>(next==f) <span class="built_in">continue</span>;</div><div class="line">        w[next]=e[x][i].w;</div><div class="line">        dfs1(next,x,deep+1);</div><div class="line">        sz[x]+=sz[next];</div><div class="line">        <span class="keyword">if</span>(sz[son[x]]&lt;sz[next]) son[x]=next;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int tp)&#123;</div><div class="line">    top[x]=tp;</div><div class="line">    id[x]=++step;</div><div class="line">    val[id[x]]=x;</div><div class="line">    <span class="keyword">if</span>(son[x]) dfs2(son[x],tp);</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i].to;</div><div class="line">        <span class="keyword">if</span>(next==fa[x] || next==son[x]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(next,next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">    Max[rt]=max(Max[rt&lt;&lt;1],Max[rt&lt;&lt;1|1]);</div><div class="line">    M<span class="keyword">in</span>[rt]=min(M<span class="keyword">in</span>[rt&lt;&lt;1],M<span class="keyword">in</span>[rt&lt;&lt;1|1]);</div><div class="line">&#125;</div><div class="line">void push_down(int rt)&#123;</div><div class="line">	<span class="keyword">if</span>(lazy[rt])&#123;</div><div class="line">		lazy[rt&lt;&lt;1]^=1;</div><div class="line">		lazy[rt&lt;&lt;1|1]^=1;</div><div class="line">		swap(Max[rt&lt;&lt;1],M<span class="keyword">in</span>[rt&lt;&lt;1]);</div><div class="line">		Max[rt&lt;&lt;1]=-Max[rt&lt;&lt;1];</div><div class="line">		M<span class="keyword">in</span>[rt&lt;&lt;1]=-M<span class="keyword">in</span>[rt&lt;&lt;1];</div><div class="line">		swap(Max[rt&lt;&lt;1|1],M<span class="keyword">in</span>[rt&lt;&lt;1|1]);</div><div class="line">		Max[rt&lt;&lt;1|1]=-Max[rt&lt;&lt;1|1];</div><div class="line">		M<span class="keyword">in</span>[rt&lt;&lt;1|1]=-M<span class="keyword">in</span>[rt&lt;&lt;1|1];</div><div class="line">		lazy[rt]=0;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">    <span class="keyword">if</span>(l==r)&#123;</div><div class="line">    	Max[rt]=M<span class="keyword">in</span>[rt]=w[val[l]];</div><div class="line">    	<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    build(lson);</div><div class="line">    build(rson);</div><div class="line">    push_up(rt);</div><div class="line">&#125;</div><div class="line">void change(int rt,int l,int r,int x,int k)&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		Max[rt]=M<span class="keyword">in</span>[rt]=k;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	push_down(rt);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=x) change(lson,x,k);</div><div class="line">	<span class="keyword">else</span> change(rson,x,k);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">void negat(int rt,int l,int r,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R)&#123;</div><div class="line">		swap(Max[rt],M<span class="keyword">in</span>[rt]);</div><div class="line">		Max[rt]=-Max[rt];</div><div class="line">		M<span class="keyword">in</span>[rt]=-M<span class="keyword">in</span>[rt];</div><div class="line">		lazy[rt]^=1;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	push_down(rt);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=R) negat(lson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) negat(rson,L,R);</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		negat(lson,L,R);</div><div class="line">		negat(rson,L,R);</div><div class="line">	&#125;</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">int query(int rt,int l,int r,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> Max[rt];</div><div class="line">	push_down(rt);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=R) <span class="built_in">return</span> query(lson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;L) <span class="built_in">return</span> query(rson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">return</span> max(query(lson,L,R),query(rson,L,R));</div><div class="line">&#125;</div><div class="line">int querymx(int x,int y)&#123;</div><div class="line">	<span class="keyword">if</span>(x==y) <span class="built_in">return</span> 0;</div><div class="line">	int ans=-inf;</div><div class="line">	<span class="keyword">while</span>(top[x]!=top[y])&#123;  </div><div class="line">        <span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]]) swap(x,y);</div><div class="line">		ans=max(ans,query(1,1,n,id[top[x]],id[x]));</div><div class="line">        x=fa[top[x]];  </div><div class="line">    &#125; </div><div class="line">    <span class="keyword">if</span>(x==y) <span class="built_in">return</span> ans;</div><div class="line">    <span class="keyword">if</span>(dep[x]&gt;dep[y]) swap(x,y);</div><div class="line">    ans=max(ans,query(1,1,n,id[son[x]],id[y]));</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">void solvene(int x,int y)&#123;</div><div class="line">	<span class="keyword">while</span>(top[x]!=top[y])&#123;  </div><div class="line">        <span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]]) swap(x,y);</div><div class="line">		negat(1,1,n,id[top[x]],id[x]);</div><div class="line">        x=fa[top[x]];  </div><div class="line">    &#125; </div><div class="line">    <span class="keyword">if</span>(x==y) <span class="built_in">return</span> ;</div><div class="line">    <span class="keyword">if</span>(dep[x]&gt;dep[y]) swap(x,y);</div><div class="line">    negat(1,1,n,id[son[x]],id[y]);</div><div class="line">&#125;</div><div class="line">char op[10];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">			int u,v,w;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">			<span class="keyword">fi</span>[i]=u,se[i]=v;</div><div class="line">			e[u].push_back(node(v,w));</div><div class="line">			e[v].push_back(node(u,w));</div><div class="line">		&#125;</div><div class="line">		dfs1(1,0,1);</div><div class="line">		dfs2(1,1); </div><div class="line">		build(1,1,n);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++) <span class="keyword">fi</span>[i]=dep[<span class="keyword">fi</span>[i]]&gt;dep[se[i]]?<span class="keyword">fi</span>[i]:se[i]; </div><div class="line">		<span class="keyword">while</span>(scanf(<span class="string">"%s"</span>,op)!=EOF)&#123;</div><div class="line">			<span class="keyword">if</span>(op[0]==<span class="string">'D'</span>) <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">if</span>(op[0]==<span class="string">'C'</span>)&#123;</div><div class="line">				int x,y;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">				change(1,1,n,id[<span class="keyword">fi</span>[x]],y);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(op[0]==<span class="string">'N'</span>)&#123;</div><div class="line">				int x,y;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">				solvene(x,y);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> &#123;</div><div class="line">				int x,y;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,querymx(x,y));</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>区间取反的操作：线段树维护最小值和最大值 只需把最大值最小值交换取反即可满足取反的操作<br>lazy维护取反操作的次数 使用异或可以满足偶数次取反等于不变的性质<br>注意：本题由于取反存在负数的情况 所以querymx里的ans必须初始化为-inf 相对应也要加一句if x==y return 0</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[muti多校-9]]></title>
      <url>http://xuboming8.github.io/2017/08/23/muti%E5%A4%9A%E6%A0%A1-9/</url>
      <content type="html"><![CDATA[<h1 id="muti多校-9"><a href="#muti多校-9" class="headerlink" title="muti多校-9"></a>muti多校-9</h1><h2 id="HDU-6162"><a href="#HDU-6162" class="headerlink" title="HDU 6162"></a>HDU 6162</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><a id="more"></a>
<p>有一个棵树 每个点有一个点权 若干次询问<br>每次询问给出起点s 终点t和上下限ab 经过点的点权必须在a和b之间<br>问s到t的点权和为多少</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,q,step;</div><div class="line">LL w[maxn];</div><div class="line">int sz[maxn],dep[maxn],fa[maxn],son[maxn];</div><div class="line">int id[maxn],top[maxn];</div><div class="line">int val[maxn];</div><div class="line">struct T&#123;</div><div class="line">    LL sum,Max,M<span class="keyword">in</span>;</div><div class="line">&#125;tree[maxn&lt;&lt;2];</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    mm(sz,0),mm(dep,0),mm(fa,0),mm(son,0);</div><div class="line">    mm(id,0),mm(top,0),mm(val,0);</div><div class="line">    mm(tree,0);</div><div class="line">    step=0;</div><div class="line">&#125;</div><div class="line">void dfs1(int x,int f,int deep)&#123;</div><div class="line">    sz[x]=1,fa[x]=f,son[x]=0,dep[x]=deep;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==f) <span class="built_in">continue</span>;</div><div class="line">        dfs1(next,x,deep+1);</div><div class="line">        sz[x]+=sz[next];</div><div class="line">        <span class="keyword">if</span>(sz[son[x]]&lt;sz[next]) son[x]=next;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int tp)&#123;</div><div class="line">    top[x]=tp;</div><div class="line">    id[x]=++step;</div><div class="line">    val[id[x]]=x;</div><div class="line">    <span class="keyword">if</span>(son[x]) dfs2(son[x],tp);</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==fa[x] || next==son[x]) <span class="built_in">continue</span>;</div><div class="line">        dfs2(next,next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">    tree[rt].sum=tree[rt&lt;&lt;1].sum+tree[rt&lt;&lt;1|1].sum;</div><div class="line">    tree[rt].Max=max(tree[rt&lt;&lt;1].Max,tree[rt&lt;&lt;1|1].Max);</div><div class="line">    tree[rt].M<span class="keyword">in</span>=min(tree[rt&lt;&lt;1].M<span class="keyword">in</span>,tree[rt&lt;&lt;1|1].M<span class="keyword">in</span>);</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">    <span class="keyword">if</span>(l==r)&#123;</div><div class="line">        tree[rt].sum=tree[rt].Max=tree[rt].M<span class="keyword">in</span>=w[val[l]];</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    build(lson);</div><div class="line">    build(rson);</div><div class="line">    push_up(rt);</div><div class="line">&#125;</div><div class="line">LL query(int rt,int l,int r,int L,int R,LL x,LL y)&#123;</div><div class="line">    <span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R)&#123;</div><div class="line">        <span class="keyword">if</span>(tree[rt].Max&lt;x || tree[rt].M<span class="keyword">in</span>&gt;y) <span class="built_in">return</span> 0;</div><div class="line">        <span class="keyword">if</span>(tree[rt].Max&lt;=y &amp;&amp; tree[rt].M<span class="keyword">in</span>&gt;=x) <span class="built_in">return</span> tree[rt].sum;</div><div class="line">    &#125;</div><div class="line">    int mid=(l+r)&gt;&gt;1;</div><div class="line">    LL ans=0;</div><div class="line">    <span class="keyword">if</span>(mid&gt;=L) ans+=query(lson,L,R,x,y);</div><div class="line">    <span class="keyword">if</span>(mid&lt;R) ans+=query(rson,L,R,x,y);</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">LL solve(int L,int R,LL x,LL y)&#123;</div><div class="line">    LL sum=0;</div><div class="line">    <span class="keyword">while</span>(top[L]!=top[R])&#123;</div><div class="line">        <span class="keyword">if</span>(dep[top[L]]&lt;dep[top[R]]) swap(L,R);</div><div class="line">        sum+=query(1,1,n,id[top[L]],id[L],x,y);</div><div class="line">        L=fa[top[L]];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(id[L]&gt;id[R]) swap(L,R);</div><div class="line">    sum+=query(1,1,n,id[L],id[R],x,y);</div><div class="line">    <span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;q)!=EOF)&#123;</div><div class="line">        init();</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;w[i]);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">            int u,v;</div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">            e[u].push_back(v);</div><div class="line">            e[v].push_back(u);</div><div class="line">        &#125;</div><div class="line">        dfs1(1,0,0);</div><div class="line">        dfs2(1,1);</div><div class="line">        build(1,1,n);</div><div class="line">        <span class="keyword">while</span>(q--)&#123;</div><div class="line">            int s,t;</div><div class="line">            LL a,b;</div><div class="line">            scanf(<span class="string">"%d%d%lld%lld"</span>,&amp;s,&amp;t,&amp;a,&amp;b);</div><div class="line">            LL ans=solve(s,t,a,b);</div><div class="line">            <span class="keyword">if</span>(q==0) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld "</span>,ans);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>由于是树链上的操作 所以用树链剖分和线段树<br>线段树维护最大值 最小值和sum<br>若某段的最大值小于x或最小值大于y 说明它不在x-y的区间内返回0<br>若在x-y之间说明该段有效 返回sum</p>
<h2 id="HDU-6165"><a href="#HDU-6165" class="headerlink" title="HDU 6165"></a>HDU 6165</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>问一个有向图是否存在任意两点uv都有路径u到v v到u</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int n,m;</div><div class="line">int vis[maxn],g[maxn][maxn];</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    mm(vis,0),mm(g,0);</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">&#125;</div><div class="line">void dfs(int st,int x)&#123;</div><div class="line">    vis[x]=1;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(vis[next]) <span class="built_in">continue</span>;</div><div class="line">        g[st][next]=1;</div><div class="line">        dfs(st,next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">        init();</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            int u,v;</div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">            e[u].push_back(v);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            mm(vis,0);</div><div class="line">            dfs(i,i);</div><div class="line">        &#125;</div><div class="line">        int flag=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=n;j++)&#123;</div><div class="line">                <span class="keyword">if</span>(i==j) <span class="built_in">continue</span>;</div><div class="line">                <span class="keyword">if</span>(g[i][j]==0 &amp;&amp; g[j][i]==0)&#123;</div><div class="line">                    flag=1;</div><div class="line">                    <span class="built_in">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(flag) <span class="built_in">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(flag) puts(<span class="string">"Light my fire!"</span>);</div><div class="line">        <span class="keyword">else</span> puts(<span class="string">"I love you my love and our love save us!"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>每个点暴力dfs 并把以该点为起点的g数组更新 最后判断g中有没有无法到达的点</p>
<h2 id="HDU-6166"><a href="#HDU-6166" class="headerlink" title="HDU 6166"></a>HDU 6166</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>在一个有向图中选取k个点 求这k个点中两两之间最短路的最小值</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">int n,m;</div><div class="line">LL dis[maxn],ans;</div><div class="line">int a[maxn];</div><div class="line">struct node&#123;</div><div class="line">    int x;</div><div class="line">    LL id;</div><div class="line">    node(int u,LL w)&#123;x=u,id=w;&#125;</div><div class="line">    bool operator &lt; (const node &amp;a) const&#123;</div><div class="line">        <span class="built_in">return</span> id&gt;a.id;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;maxn;i++) dis[i]=INF;</div><div class="line">    mm(a,0);</div><div class="line">&#125;</div><div class="line">void DJ(int s)&#123;</div><div class="line">    priority_queue&lt;node&gt;q;</div><div class="line">    q.push(node(s,0));</div><div class="line">    <span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">        node now=q.top();</div><div class="line">        q.pop();</div><div class="line">        int len=e[now.x].size();</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">            node next=e[now.x][i];</div><div class="line">            <span class="keyword">if</span>(next.x != s &amp;&amp; dis[next.x]&gt;now.id +next.id)&#123;</div><div class="line">                dis[next.x]=now.id+next.id ;</div><div class="line">                q.push(node(next.x,dis[next.x]));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int flag=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        init();</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            int u,v;</div><div class="line">            LL w;</div><div class="line">            scanf(<span class="string">"%d%d%lld"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">            e[u].push_back(node(v,w));</div><div class="line">        &#125;</div><div class="line">        int k; scanf(<span class="string">"%d"</span>,&amp;k);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=k;i++)&#123;</div><div class="line">            int x; scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">            a[i]=x;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=k;i++) DJ(a[i]);</div><div class="line">        LL M<span class="keyword">in</span> = INF;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=k;i++) M<span class="keyword">in</span> = min(M<span class="keyword">in</span>,dis[a[i]]);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: %lld\n"</span>,flag++,M<span class="keyword">in</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>官方题解用集合代表每个点的归属情况 跑20次dj即可<br>本题用的是只初始化一次dis 全部初始化为INF 跑k次dj<br>最后找出dis[a[i]]的最小值即可</p>
<h2 id="HDU-6168"><a href="#HDU-6168" class="headerlink" title="HDU 6168"></a>HDU 6168</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>有一个长度为n的序列a1……an，根据a序列生成了一个b序列，b[i] = a[i]+aj，然后有一个人把a，b序列按随机顺序混合了起来，现在问你初始的a序列是什么</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 130050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;a,b;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int n;</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</div><div class="line">        <span class="keyword">if</span>(n==0)&#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</div><div class="line">            <span class="built_in">continue</span>;</div><div class="line">        &#125; </div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=n;i++) a.clear(),b.clear();</div><div class="line">        map&lt;int,int&gt;num;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            int x;</div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">            b.push_back(x);</div><div class="line">            num[x]++;</div><div class="line">        &#125;</div><div class="line">        int len1=b.size();</div><div class="line">        sort(b.begin(),b.end());</div><div class="line">        a.push_back(b[0]);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;len1;i++)&#123;</div><div class="line">            int x=b[i];</div><div class="line">            <span class="keyword">if</span>(num[x]==0) <span class="built_in">continue</span>;</div><div class="line">            int len2=a.size();</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;len2;j++) num[x+a[j]]--;</div><div class="line">            num[x]--;</div><div class="line">            a.push_back(x);</div><div class="line">        &#125;</div><div class="line">        int len2=a.size();</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,len2);</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;len2;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(i==0) <span class="built_in">printf</span>(<span class="string">"%d"</span>,a[i]);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">" %d"</span>,a[i]);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;    </div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>把数组b排序 最小的数字肯定在a中 把它放入a中 接着选择次小的数字 把b数组中次小数与a数组中每一个数的和删除 并把次小数也加入a中<br>重复以上操作<br>注意用map映射</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2017ccpc网赛]]></title>
      <url>http://xuboming8.github.io/2017/08/20/2017ccpc%E7%BD%91%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="ccpc网赛"><a href="#ccpc网赛" class="headerlink" title="ccpc网赛"></a>ccpc网赛</h1><h2 id="HDU-6150"><a href="#HDU-6150" class="headerlink" title="HDU 6150"></a>HDU 6150</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><a id="more"></a>
<p>“最小点覆盖集”是个NP完全问题<br>有一个近似算法是说————<br>每次选取度数最大的点（如果有多个这样的点，则选择最后一个）<br>让你构造一个图，使得其近似算法求出来点数是你给定的覆盖点数的至少3倍。 </p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int n=141,m=762;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,n,m);</div><div class="line">    int num=31;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=30;i++)&#123;</div><div class="line">        int <span class="built_in">limit</span>=30/i;</div><div class="line">        int f=1;</div><div class="line">        <span class="keyword">for</span>(int j=1;j&lt;=<span class="built_in">limit</span>;j++)&#123;</div><div class="line">            <span class="keyword">for</span>(int k=1;k&lt;=i;k++) <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,f++,num);</div><div class="line">            num++;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"30\n"</span>);</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=30;i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>左边n个点（编号较小），<br>对于每个i∈[1, n]，右边新建n / i 个点，每个点选择左边i个点连一条边（总边数为n^2），使得每个i最多只使得左边每个点的度数+1<br>这样左边每个点的度数都是&lt;=n的，而右边点每个点的度数会分别是{ 1 } { 2 } { 3 } { 4 } … { n }<br>这样每次会选右边的点去除，去除之后左边的度数依旧&lt;=右边的度数<br>于是贪心做法会选择右边，大小为nlogn的点集，<br>而实际只需要选择左边，大小为n的点集即可。<br>对于题目要求n设为30即可 计算出n=141 m=762</p>
<h2 id="HDU-6152"><a href="#HDU-6152" class="headerlink" title="HDU 6152"></a>HDU 6152</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>判断给定的图中有没有大小大于等于3的独立集或大小大于等于3的团</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 3050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">bool g[maxn][maxn];</div><div class="line">int n;</div><div class="line">bool <span class="function"><span class="title">check</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">        <span class="keyword">for</span>(int j=i+1;j&lt;=n;j++)&#123;</div><div class="line">            <span class="keyword">for</span>(int k=j+1;k&lt;=n;k++)&#123;</div><div class="line">                <span class="keyword">if</span>(g[i][j]==g[i][k] &amp;&amp; g[j][i]==g[j][k] &amp;&amp; g[k][i]==g[k][j]) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=i+1;j&lt;=n;j++)&#123;</div><div class="line">                int x; scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">                <span class="keyword">if</span>(x==1) g[i][j]=g[j][i]=<span class="literal">true</span>;</div><div class="line">                <span class="keyword">else</span> g[i][j]=g[j][i]=<span class="literal">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(check())    <span class="built_in">printf</span>(<span class="string">"Great Team!\n"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Bad Team!\n"</span>);    </div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>暴力<br>注意bool比int占内存少 本题int超内存 而bool比int内存少使用3倍多<br>也有专门的定理：Ramsey theorem 6个人中至少存在3人相互认识或者相互不认识 n大于等于6直接输出否则暴力</p>
<h2 id="HDU-6153"><a href="#HDU-6153" class="headerlink" title="HDU 6153"></a>HDU 6153</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定两个串，求其中一个串s的每个后缀在另一个串t中出现的次数 相加取mod</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1000050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">const LL mod=1e9+7;</div><div class="line">char s1[maxn],s2[maxn];</div><div class="line">int nextt[maxn],extend[maxn];</div><div class="line">int len1,len2;</div><div class="line">void getnext(char x[],int m)&#123;</div><div class="line">    nextt[0]=m;</div><div class="line">    int j=0;</div><div class="line">    <span class="keyword">while</span>(j+1&lt;m &amp;&amp; x[j]==x[j+1]) j++;</div><div class="line">    nextt[1]=j;</div><div class="line">    int k=1;</div><div class="line">    <span class="keyword">for</span>(int i=2;i&lt;m;i++)&#123;</div><div class="line">        int p=nextt[k]+k-1;</div><div class="line">        int L=nextt[i-k];</div><div class="line">        <span class="keyword">if</span>(i+L&lt;p+1) nextt[i]=L;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            j=max(0,p-i+1);</div><div class="line">            <span class="keyword">while</span>(i+j&lt;m &amp;&amp; x[i+j]==x[j]) j++;</div><div class="line">            nextt[i]=j;</div><div class="line">            k=i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void ekmp(char x[],int m,char y[],int n)&#123;</div><div class="line">    int j=0;</div><div class="line">    <span class="keyword">while</span>(j&lt;n &amp;&amp; j&lt;m &amp;&amp; x[j]==y[j]) j++;</div><div class="line">    extend[0]=j;</div><div class="line">    int k=0;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">        int p=extend[k]+k-1;</div><div class="line">        int L=nextt[i-k];</div><div class="line">        <span class="keyword">if</span>(i+L&lt;p+1) extend[i]=L;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            j=max(0,p-i+1);</div><div class="line">            <span class="keyword">while</span>(i+j&lt;n &amp;&amp; j&lt;m &amp;&amp; y[i+j]==x[j]) j++;</div><div class="line">            extend[i]=j;</div><div class="line">            k=i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t; scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        scanf(<span class="string">"%s%s"</span>,s1,s2);</div><div class="line">        int len1=strlen(s1);</div><div class="line">        int len2=strlen(s2);</div><div class="line">        reverse(s1,s1+len1);</div><div class="line">        reverse(s2,s2+len2);</div><div class="line">        mm(nextt,0),mm(extend,0);</div><div class="line">        getnext(s1,len1);</div><div class="line">        ekmp(s2,len2,s1,len1);</div><div class="line">        LL ans=0;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;len1;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(extend[i])&#123;</div><div class="line">                LL temp=extend[i]%mod;</div><div class="line">                temp=(((temp*(temp+1)/2)%mod)+mod)%mod;  </div><div class="line">                ans=(ans+temp)%mod;  </div><div class="line">            &#125;</div><div class="line">        &#125;    </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>扩展kmp<br>先把2个字符串反转化成前缀问题<br>对s1求next 对s2进行匹配 ekmp求出来的extend[i]表示s1[i..len1-1]与s2的最长公共前缀<br>该位置对结果的贡献是1+2+…+extend[i] ==(1+extend[i])*extend[i]/2<br>每个有贡献的extend累加取mod就是所求</p>
<h2 id="HDU-6156"><a href="#HDU-6156" class="headerlink" title="HDU 6156"></a>HDU 6156</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>已知函数f(x, k)，如果10进制数x在k进制下是个回文数，那么f(x, k)值为k，否则为1<br>现给出l, r, x, y, 求出∑∑f(i, j)  (l&lt;=i&lt;=r)  (x&lt;=j&lt;=y)</p>
<h3 id="参考AC代码-计算"><a href="#参考AC代码-计算" class="headerlink" title="参考AC代码(计算)"></a>参考AC代码(计算)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long </span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">LL qpow(LL x,LL y)&#123;</div><div class="line">    LL re=1,base=x;</div><div class="line">    <span class="keyword">while</span>(y)&#123;</div><div class="line">        <span class="keyword">if</span>(y&amp;1) re*=base;</div><div class="line">        base*=base;</div><div class="line">        y&gt;&gt;=1;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> re;</div><div class="line">&#125;</div><div class="line">int base[1005];</div><div class="line">LL solve(LL num,LL k)&#123;</div><div class="line">    <span class="keyword">if</span>(num==0) <span class="built_in">return</span> 0;</div><div class="line">    int top=0;</div><div class="line">    <span class="keyword">while</span>(num)&#123;</div><div class="line">        base[top++]=num%k;</div><div class="line">        num/=k;</div><div class="line">    &#125;</div><div class="line">    int flag=-1;</div><div class="line">    <span class="keyword">if</span>(top%2==1)&#123;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=top/2;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(i==top/2)&#123;</div><div class="line">                flag=1;</div><div class="line">                <span class="built_in">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(base[top/2-(i+1)]&gt;base[top/2+(i+1)])&#123;</div><div class="line">                flag=1;</div><div class="line">                <span class="built_in">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(base[top/2-(i+1)]&lt;base[top/2+(i+1)])&#123;</div><div class="line">                flag=0;</div><div class="line">                <span class="built_in">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=top/2;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(i==top/2)&#123;</div><div class="line">                flag=1;</div><div class="line">                <span class="built_in">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(base[top/2-(i+1)]&gt;base[top/2+i])&#123;</div><div class="line">                flag=1;</div><div class="line">                <span class="built_in">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(base[top/2-(i+1)]&lt;base[top/2+i])&#123;</div><div class="line">                flag=0;</div><div class="line">                <span class="built_in">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    LL res=0;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;top/2;i++) res=res*k+base[top-(i+1)];</div><div class="line">    <span class="keyword">if</span>(top%2==1) res=res*k+base[top-top/2-1];</div><div class="line">    <span class="built_in">return</span> res-(1-flag)+qpow(k,top/2)-1;</div><div class="line">&#125;</div><div class="line">int f=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t; scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        cout&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;f++&lt;&lt;<span class="string">": "</span>;</div><div class="line">        int L,R,l,r;</div><div class="line">        scanf(<span class="string">"%d%d%d%d"</span>,&amp;L,&amp;R,&amp;l,&amp;r);</div><div class="line">        LL ans=0;</div><div class="line">        <span class="keyword">for</span>(int i=l;i&lt;=r;i++)&#123;</div><div class="line">            LL temp=solve(R,i)-solve(L-1,i);</div><div class="line">            ans+=temp*i+(R-L+1-temp);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码-数位dp"><a href="#参考AC代码-数位dp" class="headerlink" title="参考AC代码(数位dp)"></a>参考AC代码(数位dp)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long </span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int base[1005],tmp[1005];</div><div class="line">LL dp[105][105][40];</div><div class="line">LL dfs(int pos,int start,int <span class="built_in">limit</span>,int k)&#123;</div><div class="line">    <span class="keyword">if</span>(pos&lt;0) <span class="built_in">return</span> 1;</div><div class="line">    <span class="keyword">if</span>(!<span class="built_in">limit</span> &amp;&amp; dp[pos][start][k]!=-1) <span class="built_in">return</span> dp[pos][start][k];</div><div class="line">    int end=<span class="built_in">limit</span>?base[pos]:k-1;</div><div class="line">    LL res=0;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=end;i++)&#123;</div><div class="line">        tmp[pos]=i;</div><div class="line">        <span class="keyword">if</span>(pos==start &amp;&amp; i==0) res+=dfs(pos-1,start-1,<span class="built_in">limit</span>&amp;&amp;i==end,k);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(pos&lt;(start+1)/2)&#123;</div><div class="line">            <span class="keyword">if</span>(i==tmp[start-pos]) res+=dfs(pos-1,start,<span class="built_in">limit</span>&amp;&amp;i==end,k);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> res+=dfs(pos-1,start,<span class="built_in">limit</span>&amp;&amp;i==end,k);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(!<span class="built_in">limit</span>) dp[pos][start][k]=res;</div><div class="line">    <span class="built_in">return</span> res;</div><div class="line">&#125;</div><div class="line">LL solve(LL num,int k)&#123;</div><div class="line">    int top=0;</div><div class="line">    <span class="keyword">while</span>(num)&#123;</div><div class="line">        base[top++]=num%k;</div><div class="line">        num/=k;</div><div class="line">    &#125;    </div><div class="line">    <span class="built_in">return</span> dfs(top-1,top-1,1,k);</div><div class="line">&#125;</div><div class="line">int f=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    mm(dp,-1);</div><div class="line">    int t; scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        cout&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;f++&lt;&lt;<span class="string">": "</span>;</div><div class="line">        int L,R,l,r;</div><div class="line">        scanf(<span class="string">"%d%d%d%d"</span>,&amp;L,&amp;R,&amp;l,&amp;r);</div><div class="line">        LL ans=0;</div><div class="line">        <span class="keyword">for</span>(int i=l;i&lt;=r;i++)&#123;</div><div class="line">            LL temp=solve(R,i)-solve(L-1,i);</div><div class="line">            ans+=temp*i+(R-L+1-temp);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>通过计算或者数位dp 算出1-n内的回文串个数 用R-(L-1)就是L到R内的回文串个数 枚举进制计算回文数<br>答案就是temp×进制+(L到R区间内不是回文的个数) 因为题中不是回文也要加1<br>计算方法：flag代表能不能构成最大的回文数 若高位比地位大 则不能 例如5421不能构成5441 超出上限 若不能结果-1<br>第一次计算res是按照奇偶的性质 若修改进制后原本的回文串是奇数位 那么计算所有的奇数回文串 偶数同理<br>第二次res加上的是位数比他小的回文数(原本是奇那么计算偶 反之同理) 稍加计算就可以得到qpow(k,top/2)-1<br>数位dp代表的是dp[起点][位置][进制] 数位dp模版 注意for里的计算</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[二分图总结]]></title>
      <url>http://xuboming8.github.io/2017/08/19/%E4%BA%8C%E5%88%86%E5%9B%BE%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<h1 id="二分图总结"><a href="#二分图总结" class="headerlink" title="二分图总结"></a>二分图总结</h1><h2 id="相关结论"><a href="#相关结论" class="headerlink" title="相关结论"></a>相关结论</h2><a id="more"></a>
<p><strong>最小边覆盖</strong><br>最小边覆盖 = 最大独立集 = 顶点数 - 最大匹配数<br>这是二分图的基本性质 需要满足原图是二分图<br>这里的最大匹配树是在原二分图上进行的<br>最大匹配用匈牙利算法 <a href="http://monkeyxu.cn/2017/03/06/%E7%BA%BF%E6%AE%B5%E6%A0%91%E4%B8%93%E9%A2%98/#匈牙利算法-km算法" target="_blank" rel="external">转跳链接</a></p>
<p><strong>最小路径覆盖</strong><br>最小路径覆盖=顶点数-最大匹配数<br>最小路径覆盖和最小边覆盖不同，不要求给的图是二分图，而是要求是有向图，不能有环，然后根据原图构造二分图<br>构造方法是拆点 最大匹配用dinic <a href="http://monkeyxu.cn/2017/06/23/%E7%BD%91%E7%BB%9C%E6%B5%81%E6%8B%93%E5%B1%95/#最小路径覆盖" target="_blank" rel="external">转跳链接</a></p>
<p><strong>最小顶点覆盖</strong><br>最小顶点覆盖=最大匹配数<br>要求原图是二分图 匈牙利转跳链接如上</p>
<p><strong>最大带权独立集合</strong><br>最大带权独立集合=总权值-最小顶点覆盖=总权值-最大匹配数<br>拆点 用dinic求最大匹配数<br><a href="http://monkeyxu.cn/2017/06/23/%E7%BD%91%E7%BB%9C%E6%B5%81%E6%8B%93%E5%B1%95/#HDU-1569-二分图带权最大独立集" target="_blank" rel="external">转跳链接</a></p>
<p><strong>带权最小k路径覆盖</strong><br>网络流<br><a href="http://monkeyxu.cn/2017/06/23/%E7%BD%91%E7%BB%9C%E6%B5%81%E6%8B%93%E5%B1%95/#HDU-4862-带权最小k路径覆盖" target="_blank" rel="external">转跳链接</a></p>
<p><strong>最大团</strong><br>最大团顶点数 = 原图补图的最大独立集顶点数 = 补图顶点数-补图最大匹配数<br>最大匹配数用匈牙利算法 链接如上</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[dfs序专题]]></title>
      <url>http://xuboming8.github.io/2017/08/18/dfs%E5%BA%8F%E4%B8%93%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="dfs序专题"><a href="#dfs序专题" class="headerlink" title="dfs序专题"></a>dfs序专题</h1><h2 id="HDU-3887"><a href="#HDU-3887" class="headerlink" title="HDU 3887"></a>HDU 3887</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出一棵树 root为p<br>对于每个结点输出它的子树中编号比它小的结点个数<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int n,p,step;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">int <span class="keyword">in</span>[maxn],out[maxn];</div><div class="line">int tree[maxn];</div><div class="line">void add(int x,int val)&#123;</div><div class="line">    <span class="keyword">while</span>(x&lt;=n)&#123;</div><div class="line">        tree[x]+=val;</div><div class="line">        x+=x&amp;(-x);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int sum(int x)&#123;</div><div class="line">    int res=0;</div><div class="line">    <span class="keyword">while</span>(x)&#123;</div><div class="line">        res+=tree[x];</div><div class="line">        x-=x&amp;(-x);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> res;</div><div class="line">&#125;</div><div class="line">void dfs(int x,int fa)&#123;</div><div class="line">    <span class="keyword">in</span>[x]=step;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next==fa) <span class="built_in">continue</span>;</div><div class="line">        step++;</div><div class="line">        dfs(next,x);</div><div class="line">    &#125;</div><div class="line">    out[x]=step;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;p)!=EOF)&#123;</div><div class="line">        <span class="keyword">if</span>(n==0 &amp;&amp; p==0) <span class="built_in">break</span>;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">        mm(<span class="keyword">in</span>,0),mm(out,0),mm(tree,0); </div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">            int u,v;</div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">            e[u].push_back(v);</div><div class="line">            e[v].push_back(u);</div><div class="line">        &#125;</div><div class="line">        step=1;</div><div class="line">        dfs(p,0);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            int ans=sum(out[i])-sum(<span class="keyword">in</span>[i]-1);</div><div class="line">            <span class="keyword">if</span>(i==1) <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">" %d"</span>,ans);</div><div class="line">            add(<span class="keyword">in</span>[i],1);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>dfs+树状数组<br>对于子树的操作 可以联想到dfs序<br>也运用到贪心的思想<br>从结点1开始每次进行sum操作后把该点加入到tree中 从结点小的开始依次插入可以确保答案正确</p>
<h2 id="HDU-5692"><a href="#HDU-5692" class="headerlink" title="HDU 5692"></a>HDU 5692</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>百度科技园内有n个零食机，零食机之间通过n−1条路相互连通。每个零食机都有一个值v，表示为小度熊提供零食的价值。<br>由于零食被频繁的消耗和补充，零食机的价值v会时常发生变化。小度熊只能从编号为0的零食机出发，并且每个零食机至多经过一次。<br>另外，小度熊会对某个零食机的零食有所偏爱，要求路线上必须有那个零食机。<br>为小度熊规划一个路线，使得路线上的价值总和最大。</p>
<p>输入数据第一行是一个整数T(T≤10)，表示有T组测试数据。<br>对于每组数据，包含两个整数n,m(1≤n,m≤100000)，表示有n个零食机，m次操作。<br>接下来n−1行，每行两个整数x和y(0≤x,y&lt;n)，表示编号为x的零食机与编号为y的零食机相连。<br>接下来一行由n个数组成，表示从编号为0到编号为n−1的零食机的初始价值v(|v|&lt;100000)。<br>接下来m行，有两种操作：0 x y，表示编号为x的零食机的价值变为y；1 x，表示询问从编号为0的零食机出发 必须经过编号为x零食机的路线中 价值总和的最大值。<br>本题可能栈溢出，辛苦同学们提交语言选择c++，并在代码的第一行加上：</p>
<p>#pragma comment(linker, “/STACK:1024000000,1024000000”) </p>
<p>对于每组数据，首先输出一行”Case #?:”，在问号处应填入当前数据的组数，组数从1开始计算。<br>对于每次询问，输出从编号为0的零食机出发，必须经过编号为x零食机的路线中，价值总和的最大值。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#pragma comment(linker, "/STACK:1024000000,1024000000")</span></div><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">const int maxn = 100000+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">LL dis[maxn],a[maxn];</div><div class="line">LL sum[maxn&lt;&lt;2],lazy[maxn&lt;&lt;2];</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">int n,m,<span class="keyword">in</span>[maxn],out[maxn],id[maxn],step;</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">	mm(a,0),mm(sum,0),mm(lazy,0),mm(dis,0);</div><div class="line">	mm(<span class="keyword">in</span>,0),mm(out,0),mm(id,0);</div><div class="line">	step=1;</div><div class="line">&#125;</div><div class="line">void dfs(int x,int fa)&#123;</div><div class="line">	<span class="keyword">in</span>[x]=step;</div><div class="line">	id[step]=x;</div><div class="line">	int len=e[x].size();</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">		int next=e[x][i];</div><div class="line">		<span class="keyword">if</span>(next==fa) <span class="built_in">continue</span>;</div><div class="line">		step++;</div><div class="line">		dis[next]=dis[x]+a[next];</div><div class="line">		dfs(next,x);</div><div class="line">	&#125;</div><div class="line">	out[x]=step;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">	sum[rt]=max(sum[rt&lt;&lt;1],sum[rt&lt;&lt;1|1]);</div><div class="line">&#125;</div><div class="line">void push_down(int rt)&#123;</div><div class="line">	<span class="keyword">if</span>(lazy[rt])&#123;</div><div class="line">		sum[rt&lt;&lt;1]+=lazy[rt];</div><div class="line">		sum[rt&lt;&lt;1|1]+=lazy[rt];</div><div class="line">		lazy[rt&lt;&lt;1]+=lazy[rt];</div><div class="line">		lazy[rt&lt;&lt;1|1]+=lazy[rt];</div><div class="line">		lazy[rt]=0;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		sum[rt]=dis[id[l]];</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	build(lson);</div><div class="line">	build(rson);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">void update(int rt,int l,int r,int val,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R)&#123;</div><div class="line">		lazy[rt]+=val;</div><div class="line">		sum[rt]+=val;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	push_down(rt);</div><div class="line">	<span class="keyword">if</span>(mid&gt;=L) update(lson,val,L,R);</div><div class="line">	<span class="keyword">if</span>(mid&lt;R) update(rson,val,L,R);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">LL query(int L,int R,int rt,int l,int r)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> sum[rt];</div><div class="line">	push_down(rt);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	LL ans=-INF;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=L) ans=max(ans,query(L,R,lson));</div><div class="line">	<span class="keyword">if</span>(mid&lt;R) ans=max(ans,query(L,R,rson));</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int flag=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t; scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		cout&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;flag++&lt;&lt;<span class="string">":"</span>&lt;&lt;endl;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">			int u,v;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">			u++,v++;</div><div class="line">			e[u].push_back(v);</div><div class="line">			e[v].push_back(u);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%lld"</span>,&amp;a[i]);</div><div class="line">		dis[1]=a[1];</div><div class="line">		dfs(1,0);</div><div class="line">		build(1,1,n);</div><div class="line">		<span class="keyword">while</span>(m--)&#123;</div><div class="line">			int op; scanf(<span class="string">"%d"</span>,&amp;op);</div><div class="line">			<span class="keyword">if</span>(op==0)&#123;</div><div class="line">				int x,y; scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">				x++;</div><div class="line">				update(1,1,n,y<span class="_">-a</span>[x],<span class="keyword">in</span>[x],out[x]);</div><div class="line">				a[x]=y;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				int x; scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">				x++;</div><div class="line">				LL ans=query(<span class="keyword">in</span>[x],out[x],1,1,n);</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>dfs+线段树<br>题中需要求必须进过某点x 所以问题转换为求x子树中的结点到根节点的最大权值和<br>所以进一步转换为dfs序 用线段树维护权值和的最大值<br>因为这里的单点修改会影响到整棵子树进一步影响到整个线段树 所以实质是区间修改<br>本题的下标从0开始 方便计算我们全部+1<br>对于替换操作 实际上就是加上y-a[x] id数组记录的是序列是l的结点编号是多少 进一步取到dis的权值和<br>在dfs中可以顺带把dis求出(所有结点到根节点的权值和) 这里需要注意dis[1]初始化为a[1]<br>本题的2个注意点：<br>1.宏定义里mid不能写成m 会和原来的m参数交互<br>2.注意LR和lr的次数 因为粗心写反了调了1个小时</p>
<h2 id="poj-3321-单点01修改-求子树的权值和"><a href="#poj-3321-单点01修改-求子树的权值和" class="headerlink" title="poj 3321(单点01修改+求子树的权值和)"></a>poj 3321(单点01修改+求子树的权值和)</h2><p><a href="http://monkeyxu.cn/2017/08/17/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E5%BB%B6%E4%BC%B8/" target="_blank" rel="external">转跳链接</a></p>
<h2 id="fzu-2277-子树点权区间修改-单点查询"><a href="#fzu-2277-子树点权区间修改-单点查询" class="headerlink" title="fzu 2277(子树点权区间修改+单点查询)"></a>fzu 2277(子树点权区间修改+单点查询)</h2><p><a href="http://monkeyxu.cn/2017/07/26/%E7%A6%8F%E5%BB%BA2017%E7%9C%81%E8%B5%9B/#F" target="_blank" rel="external">转跳链接</a></p>
<h2 id="HDU-5468"><a href="#HDU-5468" class="headerlink" title="HDU 5468"></a>HDU 5468</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>一棵树 每个点都有一个点权 求每个结点的子树中结点与根节点互质的个数</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">typedef long long  LL;</div><div class="line">const int N = 100005;</div><div class="line">vector &lt;int&gt; factor[N];</div><div class="line">vector &lt;int&gt; edge[N];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;     //预处理出(1~maxn)每个点的素因子并放入vector中</div><div class="line">    <span class="keyword">for</span>(int i=2;i&lt;N;i++)&#123;</div><div class="line">        factor[i].clear();</div><div class="line">        int n = i;</div><div class="line">        <span class="keyword">for</span>(int j=2;j*j&lt;=n;j++)&#123;</div><div class="line">            <span class="keyword">if</span>(n%j==0)&#123;</div><div class="line">                factor[i].push_back(j);</div><div class="line">                <span class="keyword">while</span>(n%j==0) n/=j;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(n&gt;1) factor[i].push_back(n);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int cnt[N],val[N],ans[N];</div><div class="line">int solve(int n,int val)&#123;    //求出与x不互斥的数的个数</div><div class="line">    int len = factor[n].size(),ans=0;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;(1&lt;&lt;len);i++)&#123;</div><div class="line">        int odd = 0;</div><div class="line">        int mul = 1;</div><div class="line">        <span class="keyword">for</span>(int j=0;j&lt;len;j++)&#123;</div><div class="line">            <span class="keyword">if</span>((i&gt;&gt;j)&amp;1)&#123;</div><div class="line">                odd++;</div><div class="line">                mul*=factor[n][j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(odd&amp;1)&#123;</div><div class="line">            ans+=cnt[mul];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> ans-=cnt[mul];</div><div class="line">        cnt[mul]+=val; </div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int dfs(int u,int pre)&#123;</div><div class="line">    int L = solve(val[u],0);    //算出根以上与根不互素的节点数</div><div class="line">    int s = 0; </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;edge[u].size();i++)&#123;</div><div class="line">        int v = edge[u][i];</div><div class="line">        <span class="keyword">if</span>(v==pre) <span class="built_in">continue</span>;</div><div class="line">        s+=dfs(v,u);</div><div class="line">    &#125;</div><div class="line">    int R = solve(val[u],1);    //算出（根以下和根以上）与根不互素的节点数</div><div class="line">    ans[u] = s - (R-L);     //s:子树的总结点 R-L是子树与跟不互质的个数 相减就是互质的个数 </div><div class="line">    <span class="keyword">if</span>(val[u]==1) ans[u]++;   //1和自己互素</div><div class="line">    <span class="built_in">return</span> s+1;              ////返回这棵子树的节点数包括根节点本身</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    init();</div><div class="line">    int n,t = 1;</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</div><div class="line">        memset(cnt,0,sizeof(cnt));</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) edge[i].clear();</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">            int u,v;</div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">            edge[u].push_back(v);</div><div class="line">            edge[v].push_back(u);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;val[i]);</div><div class="line">        dfs(1,-1);</div><div class="line">        bool flag = <span class="literal">true</span>;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>,t++);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(!flag) <span class="built_in">printf</span>(<span class="string">" "</span>);</div><div class="line">            flag = <span class="literal">false</span>;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans[i]);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>这里root也算子树 所以return+1<br>子树用dfs序 其实就是在dfs序上求容斥 具体见注释</p>
<h2 id="cf-620E"><a href="#cf-620E" class="headerlink" title="cf 620E"></a>cf 620E</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>一棵树 每个结点一种颜色 多次询问 每次询问两种操作<br>1.把结点v的子树结点颜色全部换成c<br>2.查询v的子树结点不同颜色的个数</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 400050</span></div><div class="line"><span class="comment">#define LL long long </span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,mid</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,mid+1,r</span></div><div class="line">using namespace std;</div><div class="line">int n,m,step;</div><div class="line">int <span class="keyword">in</span>[maxn],out[maxn];</div><div class="line">LL c[maxn],id[maxn];</div><div class="line">LL tree[maxn&lt;&lt;2],lazy[maxn&lt;&lt;2];</div><div class="line">LL ans;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">	mm(<span class="keyword">in</span>,0),mm(out,0),mm(c,0),mm(id,0);</div><div class="line">	mm(tree,0),mm(lazy,0);</div><div class="line">	step=1;</div><div class="line">	ans=0;</div><div class="line">&#125;</div><div class="line">void dfs(int x,int fa)&#123;</div><div class="line">	<span class="keyword">in</span>[x]=step,id[step]=x;</div><div class="line">	int len=e[x].size();</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">		int next=e[x][i];</div><div class="line">		<span class="keyword">if</span>(next==fa) <span class="built_in">continue</span>;</div><div class="line">		step++;</div><div class="line">		dfs(next,x);</div><div class="line">	&#125;</div><div class="line">	out[x]=step;</div><div class="line">&#125;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">	tree[rt]=tree[rt&lt;&lt;1]|tree[rt&lt;&lt;1|1];</div><div class="line">&#125;</div><div class="line">void push_down(int rt)&#123;</div><div class="line">	<span class="keyword">if</span>(lazy[rt])&#123;</div><div class="line">		tree[rt&lt;&lt;1]=(1LL&lt;&lt;lazy[rt]);</div><div class="line">		tree[rt&lt;&lt;1|1]=(1LL&lt;&lt;lazy[rt]);</div><div class="line">		lazy[rt&lt;&lt;1]=lazy[rt];</div><div class="line">		lazy[rt&lt;&lt;1|1]=lazy[rt];</div><div class="line">		lazy[rt]=0;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		tree[rt]=(1LL&lt;&lt;c[id[l]]);</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	build(lson);</div><div class="line">	build(rson);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">void update(int rt,int l,int r,int x,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R)&#123;</div><div class="line">		tree[rt]=(1LL&lt;&lt;x);</div><div class="line">		lazy[rt]=x;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	push_down(rt);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=L) update(lson,x,L,R);</div><div class="line">	<span class="keyword">if</span>(mid&lt;R) update(rson,x,L,R);</div><div class="line">	push_up(rt);</div><div class="line">&#125;</div><div class="line">void query(int rt,int l,int r,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R)&#123;</div><div class="line">		ans|=tree[rt];</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	push_down(rt);</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=L) query(lson,L,R);</div><div class="line">	<span class="keyword">if</span>(mid&lt;R) query(rson,L,R);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">getsum</span></span>()&#123;</div><div class="line">	int sum=0;</div><div class="line">	<span class="keyword">while</span>(ans)&#123;</div><div class="line">		<span class="keyword">if</span>(ans&amp;1) sum++;</div><div class="line">		ans&gt;&gt;=1;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">	init();</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;c[i]);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">		int u,v;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">		e[u].push_back(v);</div><div class="line">		e[v].push_back(u);</div><div class="line">	&#125;</div><div class="line">	dfs(1,0);</div><div class="line">	build(1,1,n);</div><div class="line">	<span class="keyword">while</span>(m--)&#123;</div><div class="line">		int op;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;op);</div><div class="line">		<span class="keyword">if</span>(op==1)&#123;</div><div class="line">			int x,y;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">			update(1,1,n,y,<span class="keyword">in</span>[x],out[x]);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			int x;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">			query(1,1,n,<span class="keyword">in</span>[x],out[x]);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,getsum());</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>对子树的操作 转化成dfs序<br>由于颜色只有60种 所以使用集合来表示颜色 不会爆LL<br>线段树进行维护和查询颜色 最后ans里1的个数就是不同颜色的个数</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[muti多校7 & 2017百度之星复赛]]></title>
      <url>http://xuboming8.github.io/2017/08/17/muti%E5%A4%9A%E6%A0%A1-7-8/</url>
      <content type="html"><![CDATA[<h1 id="muti多校7-amp-2017百度之星复赛"><a href="#muti多校7-amp-2017百度之星复赛" class="headerlink" title="muti多校7 &amp; 2017百度之星复赛"></a>muti多校7 &amp; 2017百度之星复赛</h1><h2 id="HDU-6129"><a href="#HDU-6129" class="headerlink" title="HDU 6129"></a>HDU 6129</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>求原数组m次xor前缀和后的数组<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 200050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int a[maxn],b[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n,m;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">        mm(b,0);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            int x=i+m-2;</div><div class="line">            int y=i-1;</div><div class="line">            <span class="keyword">if</span>((x&amp;y)==y)&#123;</div><div class="line">                <span class="keyword">for</span>(int j=i;j&lt;=n;j++) b[j]^=a[j-i+1];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(i==1) <span class="built_in">printf</span>(<span class="string">"%d"</span>,b[i]);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">" %d"</span>,b[i]);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p><a href="http://blog.csdn.net/mengxiang000000/article/details/77200451" target="_blank" rel="external">转跳链接</a><br>考虑第一个位置对后面每一个位置的影响 可以推出这是杨辉三角<br>根据杨辉三角的公式判断奇偶性 xor奇数次才有效<br>第二个位置开始与第一个位置相同 所以不需要另推 按照间隔递推即可</p>
<h2 id="HDU-6144"><a href="#HDU-6144" class="headerlink" title="HDU 6144"></a>HDU 6144</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>Bomb Number中的bomb，也就是#号，会展开一些数字，这会导致最终展开的数字超出了度度熊所能理解的范畴。比如”(1)#(3)”表示”1”出现了3次，将会被展开为”111”，<br>同理，”(12)#(2)4(2)#(3)”将会被展开为”12124222”。<br>请将Bomb Number中所有的#号展开，由于数字可能很长，结果对 1 000 000 007 取模。</p>
<p>第一行为T，表示输入数据组数。<br>每组数据包含一个Bomb Expression。</p>
<ul>
<li>1≤T≤100</li>
<li>1≤length(Bomb Number)≤1000</li>
</ul>
<p>对每组数据输出表达式的结果，结果对 1 000 000 007 取模。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define LL long long </span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">const LL mod=1e9+7;</div><div class="line">vector&lt;int&gt;e;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        e.clear();</div><div class="line">        string s;</div><div class="line">        cin&gt;&gt;s;</div><div class="line">        int len=s.length();</div><div class="line">        int st=-1,ed=-1;</div><div class="line">        int flag=-1;</div><div class="line">        int num=0;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(s[i]==<span class="string">'('</span>)&#123;</div><div class="line">                <span class="keyword">if</span>(flag==-1) flag=1;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(s[i]&gt;=<span class="string">'0'</span> &amp;&amp; s[i]&lt;=<span class="string">'9'</span>)&#123;</div><div class="line">                <span class="keyword">if</span>(flag==-1) e.push_back(s[i]-<span class="string">'0'</span>);</div><div class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(flag==1)&#123;</div><div class="line">                    <span class="keyword">if</span>(st==-1) st=i,ed=i;</div><div class="line">                    <span class="keyword">else</span> ed++;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span>&#123;</div><div class="line">                    num=num*10+s[i]-<span class="string">'0'</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(s[i]==<span class="string">'#'</span>) flag=2;</div><div class="line">            <span class="keyword">if</span>(s[i]==<span class="string">')'</span> &amp;&amp; flag==2)&#123;</div><div class="line">                <span class="keyword">for</span>(int k=1;k&lt;=num;k++)&#123;</div><div class="line">                    <span class="keyword">for</span>(int j=st;j&lt;=ed;j++) e.push_back(s[j]-<span class="string">'0'</span>);</div><div class="line">                &#125;</div><div class="line">                flag=-1,num=0,st=-1,ed=-1;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        LL ans=0;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;e.size();i++)&#123;</div><div class="line">            ans=(((ans*10)%mod+e[i])%mod)%mod;</div><div class="line">        &#125;</div><div class="line">        cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>模拟<br>st和ed记录要存入vector的数字 num记录次数 注意存在数字不在括号里的情况 这里用flag是否为-1特判<br>flag==2说明进入记录出现多少次的阶段</p>
<h2 id="HDU-6148"><a href="#HDU-6148" class="headerlink" title="HDU 6148"></a>HDU 6148</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>当一个数字，从左到右依次看过去数字没有出现先递增接着递减的“山峰”现象，就被称作 Valley Number。它可以递增，也可以递减，还可以先递减再递增。在递增或递减的过程中可以出现相等的情况。<br>比如，1，10，12，212，32122都是 Valley Number。<br>121，12331，21212则不是。<br>度度熊想知道不大于N的Valley Number数有多少。<br>注意，前导0是不合法的。</p>
<p>第一行为T，表示输入数据组数。<br>每组数据包含一个数N。<br>● 1≤T≤200<br>● 1≤length(N)≤100</p>
<p>对每组数据输出不大于N的Valley Number个数，结果对 1 000 000 007 取模。</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">const LL mod = 1e9+7;</div><div class="line">int dp[105][15][2];</div><div class="line">char s[105];</div><div class="line">int bit[105];</div><div class="line">LL dfs(int pos,int status,int pre,int <span class="built_in">limit</span>)&#123;</div><div class="line">    <span class="keyword">if</span>(pos&lt;1) <span class="built_in">return</span> 1;</div><div class="line">    <span class="keyword">if</span>(!<span class="built_in">limit</span> &amp;&amp; dp[pos][pre][status]!=-1) <span class="built_in">return</span> dp[pos][pre][status];</div><div class="line">    int end=<span class="built_in">limit</span>? bit[pos]:9;</div><div class="line">    LL ans=0;</div><div class="line">    <span class="keyword">if</span>(status)&#123;</div><div class="line">        <span class="keyword">for</span>(int i=pre;i&lt;=end;i++)&#123;</div><div class="line">            ans+=dfs(pos-1,1,i,<span class="built_in">limit</span>&amp;&amp;i==end);</div><div class="line">            ans%=mod;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=end;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(i&gt;pre) ans+=dfs(pos-1,1,i,<span class="built_in">limit</span>&amp;&amp;i==end);</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                <span class="keyword">if</span>(!i &amp;&amp; pre==10) ans+=dfs(pos-1,0,10,<span class="built_in">limit</span>&amp;&amp;i==end);</div><div class="line">                <span class="keyword">else</span> ans+=dfs(pos-1,0,i,<span class="built_in">limit</span>&amp;&amp;i==end);</div><div class="line">            &#125;</div><div class="line">            ans%=mod;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(!<span class="built_in">limit</span>) dp[pos][pre][status]=ans;</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    mm(dp,-1);</div><div class="line">    int t; scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        scanf(<span class="string">"%s"</span>,&amp;s);</div><div class="line">        int len=strlen(s);</div><div class="line">        mm(bit,0);</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;len;i++) bit[len-i]=s[i]-<span class="string">'0'</span>;</div><div class="line">        LL ans=dfs(len,0,10,1);</div><div class="line">        cout&lt;&lt;ans-1&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>数位dp裸题 记忆化搜索<br>dp表示dp[位置][前一个数字][状态：0下降 1：上升]<br>注意前导0的特判 pre=10代表前一位不存在 即该位置为前导0 所以直接pos-1进行下一位判断<br>跟普通的数位dp相比多了一个对status的判断 status=1后不能下降</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树状数组延伸]]></title>
      <url>http://xuboming8.github.io/2017/08/17/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E5%BB%B6%E4%BC%B8/</url>
      <content type="html"><![CDATA[<h1 id="单点修改-区间查询"><a href="#单点修改-区间查询" class="headerlink" title="单点修改+区间查询"></a>单点修改+区间查询</h1><p>这是树状数组最基本的应用<br><a href="http://monkeyxu.cn/2016/10/03/%E7%A5%9E%E5%A5%87%E7%9A%84%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/" target="_blank" rel="external">转跳链接</a><br><a id="more"></a></p>
<h2 id="poj-3321"><a href="#poj-3321" class="headerlink" title="poj 3321"></a>poj 3321</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>树上的单点修改和区间点权和<br>这里的区间求和是指子树(包括根)的所有结点权值和<br>单点修改为：1变0 0变1</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int tree[maxn];</div><div class="line">int n,step;</div><div class="line">vector&lt;vector&lt;int&gt; &gt;e(maxn);  </div><div class="line">int <span class="keyword">in</span>[maxn],out[maxn];</div><div class="line">int vis[maxn];</div><div class="line">void change(int x,int val)&#123;</div><div class="line">    <span class="keyword">while</span>(x&lt;=n) &#123;</div><div class="line">        tree[x]+=val;</div><div class="line">        x+=x&amp;(-x);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int sum(int x)&#123;</div><div class="line">    int res=0;</div><div class="line">    <span class="keyword">while</span> (x)&#123;</div><div class="line">        res+=tree[x];</div><div class="line">        x-=x&amp;(-x);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> res;</div><div class="line">&#125;</div><div class="line">void dfs(int x,int fa)&#123;</div><div class="line">	<span class="keyword">in</span>[x]=step;</div><div class="line">	int len=e[x].size();</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">		int next=e[x][i];</div><div class="line">		<span class="keyword">if</span>(next==fa) <span class="built_in">continue</span>;</div><div class="line">		step++;</div><div class="line">		dfs(next,x);</div><div class="line">	&#125;</div><div class="line">	out[x]=step;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">	mm(tree,0),mm(<span class="keyword">in</span>,0),mm(out,0),mm(vis,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">		int u,v;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">		e[u].push_back(v);</div><div class="line">		e[v].push_back(u);</div><div class="line">	&#125;</div><div class="line">	step=1;</div><div class="line">	dfs(1,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		change(i,1);</div><div class="line">		vis[i]=1;</div><div class="line">	&#125;</div><div class="line">	int q; scanf(<span class="string">"%d"</span>,&amp;q);</div><div class="line">	<span class="keyword">while</span>(q--)&#123;</div><div class="line">		char c; cin&gt;&gt;c;</div><div class="line">		<span class="keyword">if</span>(c==<span class="string">'C'</span>)&#123;</div><div class="line">			int x; scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">			<span class="keyword">if</span>(vis[<span class="keyword">in</span>[x]]) change(<span class="keyword">in</span>[x],-1);</div><div class="line">			<span class="keyword">else</span> change(<span class="keyword">in</span>[x],1);</div><div class="line">			vis[<span class="keyword">in</span>[x]]=!vis[<span class="keyword">in</span>[x]];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			int x; scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">			int ans=sum(out[x])-sum(<span class="keyword">in</span>[x]-1);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>由于是树上的树状数组问题 所以使用dfs序把树形结构转换为线性结构<br>维护两个时间戳in和out<br>注意开始时初始化均为1 利用vis数组可以快速判断执行+1操作还是-1操作</p>
<h1 id="区间修改-单点查询"><a href="#区间修改-单点查询" class="headerlink" title="区间修改+单点查询"></a>区间修改+单点查询</h1><p>维护一个差分数组c[i]=a[i]-a[i-1]<br>如果想要修改a[i]到a<a href="比如+v">j</a>，只需令c[i]+=v,c[j+1]-=v<br>单点询问只需sum(c[i])即可</p>
<h2 id="fzu-2277"><a href="#fzu-2277" class="headerlink" title="fzu 2277"></a>fzu 2277</h2><p><a href="http://monkeyxu.cn/2017/07/26/%E7%A6%8F%E5%BB%BA2017%E7%9C%81%E8%B5%9B/#F" target="_blank" rel="external">转跳链接</a><br>由于此题没有初始数组(均为0) 所以只需要维护一个差分数组即可<br>tree1和tree2实际就是差分数组<br>若有初始数据可以利用change加到树中 也可以creat加入 也可以求前缀和+sum的结果避免插入操作<br>注意这里的out+1是建立在dfs里out为step-1的基础上</p>
<h1 id="区间修改-区间查询"><a href="#区间修改-区间查询" class="headerlink" title="区间修改+区间查询"></a>区间修改+区间查询</h1><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/150294428604.jpg" alt=""></p>
<h2 id="codeVS-1082"><a href="#codeVS-1082" class="headerlink" title="codeVS 1082"></a>codeVS 1082</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>区间修改+区间查询裸题</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 200050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int n;</div><div class="line">LL a[maxn];</div><div class="line">LL tree1[maxn],tree2[maxn];</div><div class="line">void add(LL *tree,int x,LL val)&#123;</div><div class="line">    <span class="keyword">while</span>(x&lt;=n) &#123;</div><div class="line">        tree[x]+=val;</div><div class="line">        x+=x&amp;(-x);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">LL sum(LL *tree,int x)&#123;</div><div class="line">    LL res=0;</div><div class="line">    <span class="keyword">while</span>(x)&#123;</div><div class="line">        res+=tree[x];</div><div class="line">        x-=x&amp;(-x);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> res;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	mm(tree1,0),mm(tree2,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		scanf(<span class="string">"%lld"</span>,&amp;a[i]);</div><div class="line">		add(tree1,i,a[i]<span class="_">-a</span>[i-1]);</div><div class="line">		add(tree2,i,(i-1)*(a[i]<span class="_">-a</span>[i-1]));</div><div class="line">	&#125;</div><div class="line">	int q; scanf(<span class="string">"%d"</span>,&amp;q);</div><div class="line">	<span class="keyword">while</span>(q--)&#123;</div><div class="line">		int x; scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">		<span class="keyword">if</span>(x==1)&#123;</div><div class="line">			int l,r;</div><div class="line">			LL k;</div><div class="line">			scanf(<span class="string">"%d%d%lld"</span>,&amp;l,&amp;r,&amp;k);</div><div class="line">			add(tree1,l,k); add(tree1,r+1,-k);</div><div class="line">			add(tree2,l,k*(l-1)); add(tree2,r+1,-k*r);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			int l,r;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;l,&amp;r);</div><div class="line">			LL temp1=(l-1)*sum(tree1,l-1)-sum(tree2,l-1);</div><div class="line">			LL temp2=r*sum(tree1,r)-sum(tree2,r);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,temp2-temp1);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>注意维护好tree2数组 开LL</p>
<h1 id="二维树状数组"><a href="#二维树状数组" class="headerlink" title="二维树状数组"></a>二维树状数组</h1><p>涉及到区间修改单点查询+单点修改区间查询</p>
<h2 id="POJ-2155-区间修改单点查询"><a href="#POJ-2155-区间修改单点查询" class="headerlink" title="POJ 2155(区间修改单点查询)"></a>POJ 2155(区间修改单点查询)</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>区间修改 矩形内0变1 1变0<br>问单点的值为多少</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int tree[maxn][maxn];</div><div class="line">int n;</div><div class="line">int sum(int i,int j)&#123;  </div><div class="line">    int s=0;  </div><div class="line">    <span class="keyword">while</span>(i&gt;0)&#123;  </div><div class="line">        int jj=j;  </div><div class="line">        <span class="keyword">while</span>(jj&gt;0)&#123;  </div><div class="line">            s+=tree[i][jj];  </div><div class="line">            jj-=jj&amp;-jj;  </div><div class="line">        &#125;  </div><div class="line">        i-=i&amp;-i;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> s;  </div><div class="line">&#125;  </div><div class="line">void add(int i,int j,int x)&#123;  </div><div class="line">    <span class="keyword">while</span>(i&lt;=n)&#123;  </div><div class="line">        int jj=j;  </div><div class="line">        <span class="keyword">while</span>(jj&lt;=n) &#123;  </div><div class="line">            tree[i][jj]+=x;  </div><div class="line">            jj+=jj&amp;-jj;  </div><div class="line">        &#125;  </div><div class="line">        i+=i&amp;-i;  </div><div class="line">    &#125;  </div><div class="line">&#125;    </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int q;</div><div class="line">		scanf(<span class="string">"%d%d "</span>,&amp;n,&amp;q);</div><div class="line">		mm(tree,0);</div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			char c; cin&gt;&gt;c;</div><div class="line">			<span class="keyword">if</span>(c==<span class="string">'C'</span>)&#123;</div><div class="line">				int x1,y1,x2,y2;</div><div class="line">				scanf(<span class="string">"%d%d%d%d"</span>,&amp;x1,&amp;y1,&amp;x2,&amp;y2);</div><div class="line">				add(x1,y1,1);</div><div class="line">				add(x1,y2+1,-1);</div><div class="line">				add(x2+1,y1,-1);</div><div class="line">				add(x2+1,y2+1,1);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				int x,y;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum(x,y)%2);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(t) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>区间修改和一维树状数组一样 利用差分数组 注意修改的方式即可<br>本题记录的是修改的次数 偶数次修改不变 奇数次修改变位 所以最后答案%2即可</p>
<h2 id="POJ-1195-单点修改区间查询"><a href="#POJ-1195-单点修改区间查询" class="headerlink" title="POJ 1195(单点修改区间查询)"></a>POJ 1195(单点修改区间查询)</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>0表示初始化 3表示退出 1表示单点修改 2表示区间查询</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int tree[maxn][maxn];</div><div class="line">int n;</div><div class="line">int sum(int i,int j)&#123;  </div><div class="line">    int s=0;  </div><div class="line">    <span class="keyword">while</span>(i&gt;0)&#123;  </div><div class="line">        int jj=j;  </div><div class="line">        <span class="keyword">while</span>(jj&gt;0)&#123;  </div><div class="line">            s+=tree[i][jj];  </div><div class="line">            jj-=jj&amp;-jj;  </div><div class="line">        &#125;  </div><div class="line">        i-=i&amp;-i;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> s;  </div><div class="line">&#125;  </div><div class="line">void add(int i,int j,int x)&#123;  </div><div class="line">    <span class="keyword">while</span>(i&lt;=n)&#123;  </div><div class="line">        int jj=j;  </div><div class="line">        <span class="keyword">while</span>(jj&lt;=n) &#123;  </div><div class="line">            tree[i][jj]+=x;  </div><div class="line">            jj+=jj&amp;-jj;  </div><div class="line">        &#125;  </div><div class="line">        i+=i&amp;-i;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int x;</div><div class="line">	<span class="keyword">while</span>(1)&#123;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">		<span class="keyword">if</span>(x==3) <span class="built_in">break</span>;</div><div class="line">		<span class="keyword">if</span>(x==0)&#123;</div><div class="line">			mm(tree,0);</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(x==1)&#123;</div><div class="line">			int a,b,c;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</div><div class="line">			a++,b++;</div><div class="line">			add(a,b,c);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(x==2)&#123;</div><div class="line">			int x1,x2,y1,y2;</div><div class="line">			scanf(<span class="string">"%d%d%d%d"</span>,&amp;x1,&amp;y1,&amp;x2,&amp;y2);</div><div class="line">			x1++,x2++,y1++,y2++;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum(x2,y2)-sum(x2,y1-1)-sum(x1-1,y2)+sum(x1-1,y1-1));</div><div class="line">		&#125;</div><div class="line">	&#125; </div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>裸题<br>注意树状数组的下标要从1开始 本题是从0开始所以所有的坐标都要+1<br>以及利用容斥对矩形查询的方式</p>
<h2 id="HDU-1892-单点修改区间查询"><a href="#HDU-1892-单点修改区间查询" class="headerlink" title="HDU 1892(单点修改区间查询)"></a>HDU 1892(单点修改区间查询)</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>S表示区间查询<br>A表示单点增加<br>D表示单点减少<br>M表示把点A的值移到点B上</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1010</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int num[maxn][maxn];</div><div class="line">int tree[maxn][maxn];</div><div class="line">int lowbit(int x)&#123;</div><div class="line">    <span class="built_in">return</span> x&amp;(-x);</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    mm(tree,0);</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;maxn;i++)&#123;</div><div class="line">        <span class="keyword">for</span>(int j=1;j&lt;maxn;j++)&#123;</div><div class="line">        	num[i][j]=1;</div><div class="line">        	tree[i][j]=lowbit(i)*lowbit(j);</div><div class="line">		&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int sum(int i,int j)&#123;  </div><div class="line">    int s=0;  </div><div class="line">    <span class="keyword">while</span>(i&gt;0)&#123;  </div><div class="line">        int jj=j;  </div><div class="line">        <span class="keyword">while</span>(jj&gt;0)&#123;  </div><div class="line">            s+=tree[i][jj];  </div><div class="line">            jj-=jj&amp;-jj;  </div><div class="line">        &#125;  </div><div class="line">        i-=i&amp;-i;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> s;  </div><div class="line">&#125;  </div><div class="line">void add(int i,int j,int x)&#123;  </div><div class="line">    <span class="keyword">while</span>(i&lt;maxn)&#123;  </div><div class="line">        int jj=j;  </div><div class="line">        <span class="keyword">while</span>(jj&lt;maxn)&#123;  </div><div class="line">            tree[i][jj]+=x;  </div><div class="line">            jj+=jj&amp;-jj;  </div><div class="line">        &#125;  </div><div class="line">        i+=i&amp;-i;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div><div class="line">int flag=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t; scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;flag++&lt;&lt;<span class="string">":"</span>&lt;&lt;endl;</div><div class="line">        init();</div><div class="line">        int q; scanf(<span class="string">"%d"</span>,&amp;q);</div><div class="line">        <span class="keyword">while</span>(q--)&#123;</div><div class="line">            char c; cin&gt;&gt;c;</div><div class="line">	         <span class="keyword">if</span>(c==<span class="string">'S'</span>)&#123;</div><div class="line">                int x1,y1,x2,y2;</div><div class="line">                scanf(<span class="string">"%d%d%d%d"</span>,&amp;x1,&amp;y1,&amp;x2,&amp;y2);</div><div class="line">                x1++,y1++,x2++,y2++;</div><div class="line">                int x3=min(x1,x2),y3=min(y1,y2);</div><div class="line">                int x4=max(x1,x2),y4=max(y1,y2);</div><div class="line">                int ans=sum(x4,y4)-sum(x4,y3-1)-sum(x3-1,y4)+sum(x3-1,y3-1);</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">            &#125;</div><div class="line">	        <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">'A'</span>)&#123;</div><div class="line">                int x,y,k;</div><div class="line">                scanf(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;k);</div><div class="line">                x++,y++;</div><div class="line">                add(x,y,k);</div><div class="line">                num[x][y]+=k;</div><div class="line">            &#125;</div><div class="line">	        <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">'D'</span>)&#123;</div><div class="line">                int x,y,k;</div><div class="line">                scanf(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;k);</div><div class="line">                x++,y++;</div><div class="line">                k=min(num[x][y],k);</div><div class="line">                num[x][y]-=k;</div><div class="line">                add(x,y,-k);</div><div class="line">            &#125;</div><div class="line">	        <span class="keyword">else</span>&#123;</div><div class="line">                int x1,y1,x2,y2,k;</div><div class="line">                scanf(<span class="string">"%d%d%d%d%d"</span>,&amp;x1,&amp;y1,&amp;x2,&amp;y2,&amp;k);</div><div class="line">                x1++,y1++,x2++,y2++;</div><div class="line">                k=min(num[x1][y1],k);</div><div class="line">                num[x1][y1]-=k;</div><div class="line">                num[x2][y2]+=k;</div><div class="line">                add(x1,y1,-k);</div><div class="line">                add(x2,y2,k);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>同样这题的下标从0开始 所以+1<br>本题需要注意2个点的坐标无固定的大小关系 所以S操作要判断出谁是左上谁是右下<br>同样需要注意本题需要一个num数组用来存放每个点的值 为了在减少到0以下时值为0<br>最后注意memset不能赋1 以及初始化tree为1的快速方法</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[图论-团专题]]></title>
      <url>http://xuboming8.github.io/2017/08/14/%E5%9B%BE%E8%AE%BA-%E5%9B%A2%E4%B8%93%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="图论-团专题"><a href="#图论-团专题" class="headerlink" title="图论-团专题"></a>图论-团专题</h1><h2 id="poj-3692"><a href="#poj-3692" class="headerlink" title="poj 3692"></a>poj 3692</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>有n个和女生互相认识 m个男生互相认识 其中有k对男女互相认识 求最多有多少个男女生互相认识<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 205</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int n,m,k;</div><div class="line">int g[maxn][maxn],linker[maxn];</div><div class="line">bool used[maxn];</div><div class="line">bool dfs(int u)&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;m;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(g[u][i]&amp;&amp;!used[i])&#123;</div><div class="line">			used[i]=<span class="literal">true</span>;</div><div class="line">			<span class="keyword">if</span>(linker[i]==-1||dfs(linker[i]))&#123;</div><div class="line">				linker[i]=u;</div><div class="line">				<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">hungary</span></span>()&#123;</div><div class="line">	int ans=0;</div><div class="line">	mm(linker,-1);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">		mm(used,0);</div><div class="line">		<span class="keyword">if</span>(dfs(i)) ans++;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int flag=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m&gt;&gt;k)&#123;</div><div class="line">		<span class="keyword">if</span>(n==0 &amp;&amp; m==0 &amp;&amp; k==0) <span class="built_in">break</span>;</div><div class="line">		cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;flag++&lt;&lt;<span class="string">": "</span>;</div><div class="line">		mm(g,1);</div><div class="line">		<span class="keyword">while</span>(k--)&#123;</div><div class="line">			int u,v;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v;</div><div class="line">			g[u-1][v-1]=0;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;m+n-hungary()&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>问题转换为求最大团个数(互相认识==点点之间都有路径 等价求最大子图)<br>注意hungary模版下标从0开始<br>最大团顶点数 = 原图补图的最大独立集顶点数 = 补图顶点数-最大匹配数<br>最大匹配用那个hungary模版 注意建好补图就好了</p>
<h2 id="HDU-5952-求图中有多少个团的顶点数恰为k"><a href="#HDU-5952-求图中有多少个团的顶点数恰为k" class="headerlink" title="HDU 5952(求图中有多少个团的顶点数恰为k)"></a>HDU 5952(求图中有多少个团的顶点数恰为k)</h2><p><a href="http://monkeyxu.cn/2016/11/15/11-13-%E5%91%A8%E8%B5%9B/#Counting-Cliques" target="_blank" rel="external">转跳链接</a></p>
<h2 id="cf-round428-E"><a href="#cf-round428-E" class="headerlink" title="cf round428 E"></a>cf round428 E</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出n≤40个点的邻接矩阵，要求给每个点赋值，使得点的权值和为K，每条边权值为两端点点权的乘积，最大化边的权值和。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int N=55;</div><div class="line">const int M=11111;</div><div class="line">struct node&#123;</div><div class="line">    int u,v;</div><div class="line">    int next;</div><div class="line">&#125;edge[N*N];</div><div class="line">int n,k,num;</div><div class="line">int head[N];</div><div class="line">int g[N][N];</div><div class="line">int mx;</div><div class="line">int All[M][N],Some[M][N],None[M][N];</div><div class="line">void addedge(int u,int v)&#123;</div><div class="line">    edge[num].u=u;</div><div class="line">    edge[num].v=v;</div><div class="line">    edge[num].next=head[u];</div><div class="line">    head[u]=num++;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    mx=0,num=0;</div><div class="line">    memset (head,-1,sizeof(head));</div><div class="line">    memset(g,0,sizeof(g));</div><div class="line">&#125;</div><div class="line">void BronKerbosch(int id,int lenAll,int lenSome,int lenNone)&#123;</div><div class="line">    <span class="keyword">if</span>(lenSome==0 &amp;&amp; lenNone==0)&#123;</div><div class="line">        <span class="keyword">if</span>(lenAll&gt;mx) mx=lenAll;</div><div class="line">        <span class="built_in">return</span> ;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(lenSome==0) <span class="built_in">return</span> ;</div><div class="line">    int i,j,u,v,tid,tlenAll,tlenSome,tlenNone;</div><div class="line">    u=Some[id][1]; tid=id+1;</div><div class="line">    <span class="keyword">for</span>(i=1;i&lt;=lenSome;i++)&#123;</div><div class="line">        v=Some[id][i];</div><div class="line">        <span class="keyword">if</span>(g[u][v]) <span class="built_in">continue</span>;</div><div class="line">        tlenAll=lenAll+1;</div><div class="line">        <span class="keyword">for</span>(j=1;j&lt;=lenAll;j++) All[tid][j]=All[id][j];</div><div class="line">        All[tid][tlenAll]=v;</div><div class="line">        tlenSome=0;</div><div class="line">        <span class="keyword">for</span>(j=1;j&lt;=lenSome;j++)</div><div class="line">            <span class="keyword">if</span>(g[v][Some[id][j]])</div><div class="line">                Some[tid][++tlenSome]=Some[id][j];</div><div class="line">        tlenNone=0;</div><div class="line">        <span class="keyword">for</span>(j=1;j&lt;=lenNone;j++)</div><div class="line">            <span class="keyword">if</span>(g[v][None[id][j]])</div><div class="line">                None[tid][++tlenNone]=None[id][j];</div><div class="line">        BronKerbosch(tid,tlenAll,tlenSome,tlenNone);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">solve</span></span>()&#123;</div><div class="line">    int i,j;</div><div class="line">    <span class="keyword">for</span>(i=1;i&lt;=n;i++) Some[0][i]=i;</div><div class="line">    BronKerbosch(0,0,n,0);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    init();</div><div class="line">    scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">    	<span class="keyword">for</span>(int j=1;j&lt;=n;j++)&#123;</div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;g[i][j]);</div><div class="line">            <span class="keyword">if</span>(g[i][j]==1) addedge(i,j);</div><div class="line">        &#125;</div><div class="line">	&#125;</div><div class="line">    solve();</div><div class="line">	double ans=1.0*k*k*(mx-1)/(2.0*mx);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%.10lf\n"</span>,ans);</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>K平均分配给最大团内的每一个点<br>每个点分得的权值为K/mx (mx为最大团的顶点数) 答案为K²(mx-1)/2mx<br>最大团用Bron−Kerbosch算法 可以比普通的求补图的最大独立集快</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[回文串专题]]></title>
      <url>http://xuboming8.github.io/2017/08/14/%E5%9B%9E%E6%96%87%E4%B8%B2%E4%B8%93%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="回文串专题"><a href="#回文串专题" class="headerlink" title="回文串专题"></a>回文串专题</h1><h2 id="hihocoder-1032-最长回文串"><a href="#hihocoder-1032-最长回文串" class="headerlink" title="hihocoder 1032(最长回文串)"></a>hihocoder 1032(最长回文串)</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>输出最长回文串<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">string s,s1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t; cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		cin&gt;&gt;s;</div><div class="line">		int len=s.size();</div><div class="line">		s1.resize(len*2+2);</div><div class="line">		s1[0]=<span class="string">'$'</span>,s1[1]=<span class="string">'#'</span>;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">			s1[(1+i)&lt;&lt;1]=s[i];</div><div class="line">			s1[(1+i)&lt;&lt;1|1]=<span class="string">'#'</span>;</div><div class="line">		&#125;</div><div class="line">		vector&lt;int&gt;p(s1.size(),0);</div><div class="line">		int ans=0;</div><div class="line">		<span class="keyword">for</span>(int id=0,i=1;i&lt;s1.size();i++)&#123;</div><div class="line">			<span class="keyword">if</span>(p[id]+id&gt;i) p[i]=min(p[2*id-i],p[id]+id-i);</div><div class="line">			<span class="keyword">else</span> p[i]=1;</div><div class="line">			<span class="keyword">while</span>(s1[i+p[i]]==s1[i-p[i]]) ++p[i];</div><div class="line">			<span class="keyword">if</span>(i+p[i]&gt;id+p[id]) id=i;</div><div class="line">			ans=max(ans,p[i]);</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans-1&lt;&lt;endl;</div><div class="line">	&#125;	</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>最长回文串On算法：Manacher算法<br>算法的核心就在这一句上了：p[i] = min(p[2×id-i], p[id] + id - i);</p>
<h2 id="hihocoder-1149-回文总数变形"><a href="#hihocoder-1149-回文总数变形" class="headerlink" title="hihocoder 1149(回文总数变形)"></a>hihocoder 1149(回文总数变形)</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>输出回文数量 注意aba中的aa也计算在内</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">const int mod = 1e5+7;</div><div class="line">char s[maxn];</div><div class="line">int dp[maxn][maxn];</div><div class="line">int len;</div><div class="line">int flag=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t; cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		cout&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;flag++&lt;&lt;<span class="string">": "</span>;</div><div class="line">		scanf(<span class="string">"%s"</span>,s);</div><div class="line">		len=strlen(s);</div><div class="line">		mm(dp,0);</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;len;j++)&#123;</div><div class="line">			dp[j][j]=1;</div><div class="line">			<span class="keyword">for</span>(int i=j-1;i&gt;=0;i--)&#123;</div><div class="line">				dp[i][j]=(dp[i+1][j]+dp[i][j-1]-dp[i+1][j-1]+mod)%mod;</div><div class="line">				<span class="keyword">if</span>(s[i]==s[j]) dp[i][j]=(dp[i][j]+1+dp[i+1][j-1])%mod;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;dp[0][len-1]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>dp[i][j]表示区间i-j内的回文数量<br>dp[i][j]=dp[i+1][j]+dp[i][j-1]-dp[i+1][j-1]<br>若s[i]==s[j] 需要加上dp[i+1][j-1] 由于aba中的aa也算一种 所以再加1</p>
<h2 id="hihocoder-1323-通过操作变成回文串"><a href="#hihocoder-1323-通过操作变成回文串" class="headerlink" title="hihocoder 1323(通过操作变成回文串)"></a>hihocoder 1323(通过操作变成回文串)</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定一个字符串 S ，最少需要几次增删改操作可以把 S 变成一个回文字符串？<br>一次操作可以在任意位置插入一个字符，或者删除任意一个字符，或者把任意一个字符修改成任意其他字符<br>S 的长度不超过100, 只包含’A’-‘Z’。<br>输出最少的修改次数</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int dp[maxn][maxn];</div><div class="line">char s[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	scanf(<span class="string">"%s"</span>,s+1);</div><div class="line">	int len=strlen(s+1);</div><div class="line">	mm(dp,0);</div><div class="line">	<span class="keyword">for</span>(int i=len;i&gt;=1;i--)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=i+1;j&lt;=len;j++)&#123;</div><div class="line">			<span class="keyword">if</span>(s[i]==s[j]) dp[i][j]=dp[i+1][j-1];</div><div class="line">			<span class="keyword">else</span> dp[i][j]=min(dp[i+1][j],min(dp[i][j-1],dp[i+1][j-1]))+1;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[1][len]);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>dp[i][j]表示区间i-j变成回文串的最少操作次数<br>当s[i] == s[j]时有dp[i][j] = dp[i+1][j-1]，这个式子的意思就是当你找到两个字符相等的时候最优的解就是它里面一层的结果即dp[i+1][j-1]（<br>左边界加1并且有边界减去1），这样从中心往外加下去。当s[i] != s[j]的时候就要考虑增、删、改这三种操作了，仔细分析你会发现其实增和删的操作是<br>一样的增加一个字符和删除一个字符的效果是一样的这时的递推关系式为 dp[i][j] = min(dp[i+1][j]，dp[i][j-1]，dp[i+1][j-1])；这个递推关系<br>的意思就是要么增加或删除左边的一个字符，要么增加或删除右边的一个字符，要么修改两边中的一个，就有三种选择，选择其中最优的一种情况就得到了<br>最后的结果。<br>注意逆序更新即可</p>
<h2 id="cf-round427-D-k阶回文串"><a href="#cf-round427-D-k阶回文串" class="headerlink" title="cf round427 D(k阶回文串)"></a>cf round427 D(k阶回文串)</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>定义k阶回文串为本身是回文串 且左边和右边相等 也都是回文串<br>k阶就是k层 问给定的字符串是几阶回文串</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 5050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int dp[maxn][maxn];</div><div class="line">int ans[maxn],len;</div><div class="line">char s[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">		int l=0;</div><div class="line">		<span class="keyword">while</span>(i<span class="_">-l</span>&gt;=0 &amp;&amp; i+l&lt;len &amp;&amp; s[i<span class="_">-l</span>]==s[i+l]) dp[i<span class="_">-l</span>][i+l]=1,l++;</div><div class="line">		l=0;</div><div class="line">		<span class="keyword">while</span>(i<span class="_">-l</span>&gt;=0 &amp;&amp; i+1+l&lt;len &amp;&amp; s[i<span class="_">-l</span>]==s[i+l+1]) dp[i<span class="_">-l</span>][i+l+1]=1,l++;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">solve</span></span>()&#123;</div><div class="line">	<span class="keyword">for</span>(int t=0;t&lt;len;t++)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i+t&lt;len;i++)&#123;</div><div class="line">			int j=i+t,mid;</div><div class="line">	    	<span class="keyword">if</span>(!dp[i][j]) <span class="built_in">continue</span>;</div><div class="line">	    	<span class="keyword">if</span>(t%2==0) mid=(i+j)/2-1;</div><div class="line">	    	<span class="keyword">else</span> mid=(i+j)/2;</div><div class="line">			<span class="keyword">if</span>(dp[i][mid] &amp;&amp; dp[i][j]) dp[i][j]=max(dp[i][j],dp[i][mid]+1);</div><div class="line">			ans[dp[i][j]]++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	scanf(<span class="string">"%s"</span>,s);</div><div class="line">	len=strlen(s);</div><div class="line">	mm(dp,0),mm(ans,0);</div><div class="line">	init();</div><div class="line">	solve();</div><div class="line">	<span class="keyword">for</span>(int i=len-1;i&gt;=1;i--) ans[i]+=ans[i+1];</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=len;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(i==1) <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans[i]);</div><div class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">" %d"</span>,ans[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>dp[i][j]表示区间i-j是否是回文串 0表示不是 1表示是<br>接着枚举间隔和起点 计算出终点和中点 注意mid需要奇偶性判断<br>如果dp[i][mid]和dp[i][j]都是回文串 那么dp[mid][j]也是回文串且左右相等 满足题意<br>dp更新k数 该阶数的ans值++<br>最后由于题意里k阶回文串是包括1到k-1阶回文串的 所以逆序累加输出答案即可</p>
<h2 id="HDU-6103-回文字符累加"><a href="#HDU-6103-回文字符累加" class="headerlink" title="HDU 6103(回文字符累加)"></a>HDU 6103(回文字符累加)</h2><p><a href="http://monkeyxu.cn/2017/08/11/muti%E5%A4%9A%E6%A0%A1-6/#HDU-6103" target="_blank" rel="external">转跳链接</a><br>补充思路：题意其实就是回文串的变形 所以枚举mid向两边延伸 由于回文串有偶数和奇数个两种情况 而枚举的mid向两边延伸考虑的是奇数的情况<br>所以偶数的情况需要再做考虑 向右延伸+1即可 由于本题有和的限制 所以枚举的时候超过限制对头出队 类似与单调队列窗口的滑动</p>
<h2 id="HDU-6156-计算k进制下l-r内的回文数"><a href="#HDU-6156-计算k进制下l-r内的回文数" class="headerlink" title="HDU 6156(计算k进制下l-r内的回文数)"></a>HDU 6156(计算k进制下l-r内的回文数)</h2><p><a href="http://monkeyxu.cn/2017/08/20/2017ccpc%E7%BD%91%E8%B5%9B/#HDU-6156" target="_blank" rel="external">转跳链接</a></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>回文串问题多用dp解决 多为枚举mid再向两边扩展 扩展的时候再枚举间隔 注意奇偶情况即可<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//dp[i][j]表示区间内是否有回文串</div><div class="line">mm(dp,0);</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">		int l=0;</div><div class="line">		<span class="keyword">while</span>(i<span class="_">-l</span>&gt;=0 &amp;&amp; i+l&lt;len &amp;&amp; s[i<span class="_">-l</span>]==s[i+l]) dp[i<span class="_">-l</span>][i+l]=1,l++;</div><div class="line">		l=0;</div><div class="line">		<span class="keyword">while</span>(i<span class="_">-l</span>&gt;=0 &amp;&amp; i+1+l&lt;len &amp;&amp; s[i<span class="_">-l</span>]==s[i+l+1]) dp[i<span class="_">-l</span>][i+l+1]=1,l++;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//dp[i][j]表示区间内回文串的个数</div><div class="line">mm(dp,0);</div><div class="line"><span class="keyword">for</span>(int j=0;j&lt;len;j++)&#123;</div><div class="line">	dp[j][j]=1;</div><div class="line">	<span class="keyword">for</span>(int i=j-1;i&gt;=0;i--)&#123;</div><div class="line">		dp[i][j]=dp[i+1][j]+dp[i][j-1]-dp[i+1][j-1];</div><div class="line">		<span class="keyword">if</span>(s[i]==s[j]) dp[i][j]+=dp[i+1][j-1];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">cout&lt;&lt;dp[0][len-1]&lt;&lt;endl;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cf round428]]></title>
      <url>http://xuboming8.github.io/2017/08/14/cf-round428/</url>
      <content type="html"><![CDATA[<h1 id="cf-round428"><a href="#cf-round428" class="headerlink" title="cf round428"></a>cf round428</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>ai表示每天可以有ai个糖果 要去A需要给Bk个糖果<br>每天最多只能给8个 问多少天可以给B k个糖果 若不能输出-1<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int a[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int n,k;</div><div class="line">	cin&gt;&gt;n&gt;&gt;k;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];</div><div class="line">	int sum=0,left=0,day,flag=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		left+=a[i];</div><div class="line">		<span class="keyword">if</span>(left&gt;8)&#123;</div><div class="line">			sum+=8;</div><div class="line">			left-=8;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			sum+=left;</div><div class="line">			left=0;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(sum&gt;=k)&#123;</div><div class="line">			day=i;</div><div class="line">			flag=1;</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(flag==0) cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">	<span class="keyword">else</span> cout&lt;&lt;day&lt;&lt;endl;</div><div class="line"> 	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>模拟<br>注意处理好剩下的糖果</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>{1, 2}, {3, 4}, {4, 5}, {5, 6} or {7, 8}算是相邻的位置 给出n行<br>给出k个军队 每个军队有ai个人 相邻的位置不能做不同军队的人 问是否能满足题意</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int maxn = 1e2 + 17;</div><div class="line">int n, k, have[5], cnt[5];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">	ios::sync_with_stdio(0), cin.tie(0);</div><div class="line">	cin &gt;&gt; n &gt;&gt; k;</div><div class="line">	have[2] = 2 * n, have[4] = n;</div><div class="line">	<span class="keyword">for</span>(int i = 0; i &lt; k; i++)&#123;</div><div class="line">		int x;</div><div class="line">		cin &gt;&gt; x;</div><div class="line">		<span class="keyword">while</span>(x &gt;= 3)</div><div class="line">			<span class="keyword">if</span>(have[4] &gt; 0)</div><div class="line">				x -= 4, have[4]--;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(have[2] &gt; 0)</div><div class="line">				x -= 2, have[2]--;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				<span class="built_in">return</span> cout &lt;&lt; <span class="string">"NO"</span> &lt;&lt; <span class="string">'\n'</span>, 0;</div><div class="line">		<span class="keyword">if</span>(x &gt; 0)</div><div class="line">			cnt[x]++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(cnt[2])</div><div class="line">		<span class="keyword">if</span>(have[2] &gt; 0)</div><div class="line">			cnt[2]--, have[2]--;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(have[4] &gt; 0)</div><div class="line">			cnt[2]--, have[4]--, have[1]++;</div><div class="line">		<span class="keyword">else</span></div><div class="line">            cnt[2]--, cnt[1] += 2;</div><div class="line">	<span class="keyword">if</span>(cnt[1] &gt; have[1] + have[2] + have[4] * 2)</div><div class="line">		<span class="built_in">return</span> cout &lt;&lt; <span class="string">"NO"</span> &lt;&lt; <span class="string">'\n'</span>, 0;</div><div class="line">	cout &lt;&lt; <span class="string">"YES"</span> &lt;&lt; <span class="string">'\n'</span>;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>模拟<br>把位置转换为4 2 和剩下的即可</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出一棵树 求树上所有叶子结点深度的期望</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">int du[maxn]; </div><div class="line">double ans;</div><div class="line">void dfs(int x,int fa,double epx,int deep)&#123;</div><div class="line">	int len=e[x].size();</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">		int next=e[x][i];</div><div class="line">		<span class="keyword">if</span>(next==fa) <span class="built_in">continue</span>;</div><div class="line">		<span class="keyword">if</span>(du[next]==1) ans+=epx*(deep+1);</div><div class="line">		dfs(next,x,epx*1.0/(du[next]-1),deep+1);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int n; cin&gt;&gt;n;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++) e[i].clear();</div><div class="line">	mm(du,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n-1;i++)&#123;</div><div class="line">		int u,v;</div><div class="line">		cin&gt;&gt;u&gt;&gt;v;</div><div class="line">		e[u].push_back(v);</div><div class="line">		e[v].push_back(u);</div><div class="line">		du[u]++,du[v]++;</div><div class="line">	&#125;</div><div class="line">	dfs(1,0,1.0/du[1],0);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.6lf\n"</span>,ans);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>dfs里维护一个概率即可 du判断是否是叶子结点</p>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p><a href="http://monkeyxu.cn/2017/08/14/%E5%9B%BE%E8%AE%BA-%E5%9B%A2%E4%B8%93%E9%A2%98/#cf-round428-E" target="_blank" rel="external">转跳链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2017百度之星预赛B]]></title>
      <url>http://xuboming8.github.io/2017/08/14/2017%E7%99%BE%E5%BA%A6%E4%B9%8B%E6%98%9F%E9%A2%84%E8%B5%9BB/</url>
      <content type="html"><![CDATA[<h1 id="2017百度之星预赛B"><a href="#2017百度之星预赛B" class="headerlink" title="2017百度之星预赛B"></a>2017百度之星预赛B</h1><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><a id="more"></a>
<p>車是中国象棋中的一种棋子，它能攻击同一行或同一列中没有其他棋子阻隔的棋子。一天，小度在棋盘上摆起了许多車……他想知道，<br>在一共N×M个点的矩形棋盘中摆最多个数的車使其互不攻击的方案数。他经过思考，得出了答案。但他仍不满足，想增加一个条件：对于任何一个車A，<br>如果有其他一个車B在它的上方（車B行号小于車A），那么車A必须在車B的右边（車A列号大于車B）。<br>现在要问问你，满足要求的方案数是多少。</p>
<p>第一行一个正整数T，表示数据组数。<br>对于每组数据：一行，两个正整数N和M（N&lt;=1000，M&lt;=1000）<br>对于每组数据输出一行，代表方案数模1000000007（1e9+7）。</p>
<h3 id="参考AC代码-分块打表"><a href="#参考AC代码-分块打表" class="headerlink" title="参考AC代码(分块打表)"></a>参考AC代码(分块打表)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line"><span class="comment">#define LL long long </span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">const LL mod=1e9+7;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">LL fac[] = &#123;1, 641102369, 578095319, 5832229, 259081142, 974067448, 316220877, 690120224, 251368199, 980250487, 682498929, </div><div class="line">    134623568, 95936601, 933097914, 167332441, 598816162, 336060741, 248744620, 626497524, 288843364, 491101308, 245341950, </div><div class="line">    565768255, 246899319, 968999, 586350670, 638587686, 881746146, 19426633, 850500036, 76479948, 268124147, 842267748, </div><div class="line">    886294336, 485348706, 463847391, 544075857, 898187927, 798967520, 82926604, 723816384, 156530778, 721996174, 299085602, </div><div class="line">    323604647, 172827403, 398699886, 530389102, 294587621, 813805606, 67347853, 497478507, 196447201, 722054885, 228338256, </div><div class="line">    407719831, 762479457, 746536789, 811667359, 778773518, 27368307, 438371670, 59469516, 5974669, 766196482, 606322308, 86609485, </div><div class="line">    889750731, 340941507, 371263376, 625544428, 788878910, 808412394, 996952918, 585237443, 1669644, 361786913, 480748381, </div><div class="line">    595143852, 837229828, 199888908, 526807168, 579691190, 145404005, 459188207, 534491822, 439729802, 840398449, 899297830, </div><div class="line">    235861787, 888050723, 656116726, 736550105, 440902696, 85990869, 884343068, 56305184, 973478770, 168891766, 804805577, </div><div class="line">    927880474, 876297919, 934814019, 676405347, 567277637, 112249297, 44930135, 39417871, 47401357, 108819476, 281863274, </div><div class="line">    60168088, 692636218, 432775082, 14235602, 770511792, 400295761, 697066277, 421835306, 220108638, 661224977, 261799937, </div><div class="line">    168203998, 802214249, 544064410, 935080803, 583967898, 211768084, 751231582, 972424306, 623534362, 335160196, 243276029, </div><div class="line">    554749550, 60050552, 797848181, 395891998, 172428290, 159554990, 887420150, 970055531, 250388809, 487998999, 856259313, </div><div class="line">    82104855, 232253360, 513365505, 244109365, 1559745, 695345956, 261384175, 849009131, 323214113, 747664143, 444090941, </div><div class="line">    659224434, 80729842, 570033864, 664989237, 827348878, 195888993, 576798521, 457882808, 731551699, 212938473, 509096183, </div><div class="line">    827544702, 678320208, 677711203, 289752035, 66404266, 555972231, 195290384, 97136305, 349551356, 785113347, 83489485, </div><div class="line">    66247239, 52167191, 307390891, 547665832, 143066173, 350016754, 917404120, 296269301, 996122673, 23015220, 602139210, </div><div class="line">    748566338, 187348575, 109838563, 574053420, 105574531, 304173654, 542432219, 34538816, 325636655, 437843114, 630621321, </div><div class="line">    26853683, 933245637, 616368450, 238971581, 511371690, 557301633, 911398531, 848952161, 958992544, 925152039, 914456118, </div><div class="line">    724691727, 636817583, 238087006, 946237212, 910291942, 114985663, 492237273, 450387329, 834860913, 763017204, 368925948, </div><div class="line">    475812562, 740594930, 45060610, 806047532, 464456846, 172115341, 75307702, 116261993, 562519302, 268838846, 173784895, </div><div class="line">    243624360, 61570384, 481661251, 938269070, 95182730, 91068149, 115435332, 495022305, 136026497, 506496856, 710729672, </div><div class="line">    113570024, 366384665, 564758715, 270239666, 277118392, 79874094, 702807165, 112390913, 730341625, 103056890, 677948390,</div><div class="line">     339464594, 167240465, 108312174, 839079953, 479334442, 271788964, 135498044, 277717575, 591048681, 811637561, 353339603, </div><div class="line">     889410460, 839849206, 192345193, 736265527, 316439118, 217544623, 788132977, 618898635, 183011467, 380858207, 996097969, </div><div class="line">     898554793, 335353644, 54062950, 611251733, 419363534, 965429853, 160398980, 151319402, 990918946, 607730875, 450718279, </div><div class="line">     173539388, 648991369, 970937898, 500780548, 780122909, 39052406, 276894233, 460373282, 651081062, 461415770, 358700839, </div><div class="line">     643638805, 560006119, 668123525, 686692315, 673464765, 957633609, 199866123, 563432246, 841799766, 385330357, 504962686, </div><div class="line">     954061253, 128487469, 685707545, 299172297, 717975101, 577786541, 318951960, 773206631, 306832604, 204355779, 573592106, </div><div class="line">     30977140, 450398100, 363172638, 258379324, 472935553, 93940075, 587220627, 776264326, 793270300, 291733496, 522049725, </div><div class="line">     579995261, 335416359, 142946099, 472012302, 559947225, 332139472, 499377092, 464599136, 164752359, 309058615, 86117128, </div><div class="line">     580204973, 563781682, 954840109, 624577416, 895609896, 888287558, 836813268, 926036911, 386027524, 184419613, 724205533, </div><div class="line">     403351886, 715247054, 716986954, 830567832, 383388563, 68409439, 6734065, 189239124, 68322490, 943653305, 405755338, </div><div class="line">     811056092, 179518046, 825132993, 343807435, 985084650, 868553027, 148528617, 160684257, 882148737, 591915968, 701445829, </div><div class="line">     529726489, 302177126, 974886682, 241107368, 798830099, 940567523, 11633075, 325334066, 346091869, 115312728, 473718967, </div><div class="line">     218129285, 878471898, 180002392, 699739374, 917084264, 856859395, 435327356, 808651347, 421623838, 105419548, 59883031, </div><div class="line">     322487421, 79716267, 715317963, 429277690, 398078032, 316486674, 384843585, 940338439, 937409008, 940524812, 947549662, </div><div class="line">     833550543, 593524514, 996164327, 987314628, 697611981, 636177449, 274192146, 418537348, 925347821, 952831975, 893732627, </div><div class="line">     1277567, 358655417, 141866945, 581830879, 987597705, 347046911, 775305697, 125354499, 951540811, 247662371, 343043237, </div><div class="line">     568392357, 997474832, 209244402, 380480118, 149586983, 392838702, 309134554, 990779998, 263053337, 325362513, 780072518, </div><div class="line">     551028176, 990826116, 989944961, 155569943, 596737944, 711553356, 268844715, 451373308, 379404150, 462639908, 961812918, </div><div class="line">     654611901, 382776490, 41815820, 843321396, 675258797, 845583555, 934281721, 741114145, 275105629, 666247477, 325912072, </div><div class="line">     526131620, 252551589, 432030917, 554917439, 818036959, 754363835, 795190182, 909210595, 278704903, 719566487, 628514947, </div><div class="line">     424989675, 321685608, 50590510, 832069712, 198768464, 702004730, 99199382, 707469729, 747407118, 302020341, 497196934, </div><div class="line">     5003231, 726997875, 382617671, 296229203, 183888367, 703397904, 552133875, 732868367, 350095207, 26031303, 863250534, </div><div class="line">     216665960, 561745549, 352946234, 784139777, 733333339, 503105966, 459878625, 803187381, 16634739, 180898306, 68718097, </div><div class="line">     985594252, 404206040, 749724532, 97830135, 611751357, 31131935, 662741752, 864326453, 864869025, 167831173, 559214642, </div><div class="line">     718498895, 91352335, 608823837, 473379392, 385388084, 152267158, 681756977, 46819124, 313132653, 56547945, 442795120, </div><div class="line">     796616594, 256141983, 152028387, 636578562, 385377759, 553033642, 491415383, 919273670, 996049638, 326686486, 160150665, </div><div class="line">     141827977, 540818053, 693305776, 593938674, 186576440, 688809790, 565456578, 749296077, 519397500, 551096742, 696628828, </div><div class="line">     775025061, 370732451, 164246193, 915265013, 457469634, 923043932, 912368644, 777901604, 464118005, 637939935, 956856710, </div><div class="line">     490676632, 453019482, 462528877, 502297454, 798895521, 100498586, 699767918, 849974789, 811575797, 438952959, 606870929,</div><div class="line">     907720182, 179111720, 48053248, 508038818, 811944661, 752550134, 401382061, 848924691, 764368449, 34629406, 529840945, </div><div class="line">     435904287, 26011548, 208184231, 446477394, 206330671, 366033520, 131772368, 185646898, 648711554, 472759660, 523696723,</div><div class="line">     271198437, 25058942, 859369491, 817928963, 330711333, 724464507, 437605233, 701453022, 626663115, 281230685, 510650790,</div><div class="line">     596949867, 295726547, 303076380, 465070856, 272814771, 538771609, 48824684, 951279549, 939889684, 564188856, 48527183,</div><div class="line">     201307702, 484458461, 861754542, 326159309, 181594759, 668422905, 286273596, 965656187, 44135644, 359960756, 936229527,</div><div class="line">      407934361, 267193060, 456152084, 459116722, 124804049, 262322489, 920251227, 816929577, 483924582, 151834896, 167087470,</div><div class="line">       490222511, 903466878, 361583925, 368114731, 339383292, 388728584, 218107212, 249153339, 909458706, 322908524, </div><div class="line">       202649964, 92255682, 573074791, 15570863, 94331513, 744158074, 196345098, 334326205, 9416035, 98349682, 882121662, </div><div class="line">       769795511, 231988936, 888146074, 137603545, 582627184, 407518072, 919419361, 909433461, 986708498, 310317874, 373745190, </div><div class="line">       263645931, 256853930, 876379959, 702823274, 147050765, 308186532, 175504139, 180350107, 797736554, 606241871, 384547635, </div><div class="line">       273712630, 586444655, 682189174, 666493603, 946867127, 819114541, 502371023, 261970285, 825871994, 126925175, 701506133,</div><div class="line">        314738056, 341779962, 561011609, 815463367, 46765164, 49187570, 188054995, 957939114, 64814326, 933376898, 329837066, </div><div class="line">        338121343, 765215899, 869630152, 978119194, 632627667, 975266085, 435887178, 282092463, 129621197, 758245605, 827722926,</div><div class="line">         201339230, 918513230, 322096036, 547838438, 985546115, 852304035, 593090119, 689189630, 555842733, 567033437, </div><div class="line">         469928208, 212842957, 117842065, 404149413, 155133422, 663307737, 208761293, 206282795, 717946122, 488906585, 414236650, </div><div class="line">         280700600, 962670136, 534279149, 214569244, 375297772, 811053196, 922377372, 289594327, 219932130, 211487466, 701050258, </div><div class="line">         398782410, 863002719, 27236531, 217598709, 375472836, 810551911, 178598958, 247844667, 676526196, 812283640, 863066876, </div><div class="line">         857241854, 113917835, 624148346, 726089763, 564827277, 826300950, 478982047, 439411911, 454039189, 633292726, 48562889,</div><div class="line">         802100365, 671734977, 945204804, 508831870, 398781902, 897162044, 644050694, 892168027, 828883117, 277714559, 713448377,</div><div class="line">         624500515, 590098114, 808691930, 514359662, 895205045, 715264908, 628829100, 484492064, 919717789, 513196123, 748510389,</div><div class="line">        403652653, 574455974, 77123823, 172096141, 819801784, 581418893, 15655126, 15391652, 875641535, 203191898, </div><div class="line">        264582598, 880691101, 907800444, 986598821, 340030191, 264688936, 369832433, 785804644, 842065079, 423951674, </div><div class="line">        663560047, 696623384, 496709826, 161960209, 331910086, 541120825, 951524114, 841656666, 162683802, 629786193, </div><div class="line">        190395535, 269571439, 832671304, 76770272, 341080135, 421943723, 494210290, 751040886, 317076664, 672850561, </div><div class="line">        72482816, 493689107, 135625240, 100228913, 684748812, 639655136, 906233141, 929893103, 277813439, 814362881, </div><div class="line">        562608724, 406024012, 885537778, 10065330, 60625018, 983737173, 60517502, 551060742, 804930491, 823845496, </div><div class="line">        727416538, 946421040, 678171399, 842203531, 175638827, 894247956, 538609927, 885362182, 946464959, 116667533, </div><div class="line">        749816133, 241427979, 871117927, 281804989, 163928347, 563796647, 640266394, 774625892, 59342705, 256473217, </div><div class="line">        674115061, 918860977, 322633051, 753513874, 393556719, 304644842, 767372800, 161362528, 754787150, 627655552, </div><div class="line">        677395736, 799289297, 846650652, 816701166, 687265514, 787113234, 358757251, 701220427, 607715125, 245795606, </div><div class="line">        600624983, 10475577, 728620948, 759404319, 36292292, 491466901, 22556579, 114495791, 647630109, 586445753, 482254337,</div><div class="line">        718623833, 763514207, 66547751, 953634340, 351472920, 308474522, 494166907, 634359666, 172114298, 865440961, </div><div class="line">        364380585, 921648059, 965683742, 260466949, 117483873, 962540888, 237120480, 620531822, 193781724, 213092254, </div><div class="line">        107141741, 602742426, 793307102, 756154604, 236455213, 362928234, 14162538, 753042874, 778983779, 25977209, 49389215,</div><div class="line">        698308420, 859637374, 49031023, 713258160, 737331920, 923333660, 804861409, 83868974, 682873215, 217298111, </div><div class="line">        883278906, 176966527, 954913, 105359006, 390019735, 10430738, 706334445, 315103615, 567473423, 708233401, 48160594, </div><div class="line">        946149627, 346966053, 281329488, 462880311, 31503476, 185438078, 965785236, 992656683, 916291845, 881482632, </div><div class="line">        899946391, 321900901, 512634493, 303338827, 121000338, 967284733, 492741665, 152233223, 165393390, 680128316, </div><div class="line">        917041303, 532702135, 741626808, 496442755, 536841269, 131384366, 377329025, 301196854, 859917803, 676511002, 373451745, </div><div class="line">        847645126, 823495900, 576368335, 73146164, 954958912, 847549272, 241289571, 646654592, 216046746, 205951465, 3258987, </div><div class="line">        780882948, 822439091, 598245292, 869544707, 698611116, 0</div><div class="line">&#125;;</div><div class="line">const LL M=1e6;</div><div class="line">LL get(LL x)&#123;</div><div class="line">    <span class="keyword">if</span>(x&gt;=mod) <span class="built_in">return</span> 0;</div><div class="line">    <span class="keyword">if</span>(x==0) <span class="built_in">return</span> 1;</div><div class="line">    LL res=fac[x/M]%mod;</div><div class="line">    <span class="keyword">for</span>(LL i=x/M*M+1;i&lt;=x;i++)&#123;</div><div class="line">        res=res*i%mod;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> res;</div><div class="line">&#125;</div><div class="line">LL solve(int n,int m)&#123;</div><div class="line">    LL a=get(m),b=get(n-m),c=get(n);</div><div class="line">    a=qpow(a,mod-2),b=qpow(b,mod-2);</div><div class="line">    <span class="built_in">return</span> c%mod*a%mod*b%mod;</div><div class="line">&#125; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n,m;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">        <span class="keyword">if</span>(n&lt;m) swap(n,m);</div><div class="line">        cout&lt;&lt;solve(n,m)&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码-暴力求阶乘"><a href="#参考AC代码-暴力求阶乘" class="headerlink" title="参考AC代码(暴力求阶乘)"></a>参考AC代码(暴力求阶乘)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long </span></div><div class="line">using namespace std;</div><div class="line">const LL mod=1e9+7;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">LL get(LL x)&#123;</div><div class="line">    LL ans=1;</div><div class="line">    <span class="keyword">while</span>(x)&#123;</div><div class="line">        ans=(ans*x)%mod;</div><div class="line">        x--;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">LL solve(int n,int m)&#123;</div><div class="line">    LL a=get(m),b=get(n-m),c=get(n);</div><div class="line">    a=qpow(a,mod-2),b=qpow(b,mod-2);</div><div class="line">    <span class="built_in">return</span> a%mod*b%mod*c%mod;</div><div class="line">&#125; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n,m;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">        <span class="keyword">if</span>(n&lt;m) swap(n,m);</div><div class="line">        cout&lt;&lt;solve(n,m)&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码-预处理组合数"><a href="#参考AC代码-预处理组合数" class="headerlink" title="参考AC代码(预处理组合数)"></a>参考AC代码(预处理组合数)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1005</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">const int mod=1e9+7;</div><div class="line">int c[maxn][maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">	mm(c,0);</div><div class="line">	c[0][0]=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;maxn;i++)&#123;</div><div class="line">		c[i][0]=c[i][i]=1;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;i;j++) c[i][j]=(c[i-1][j]+c[i-1][j-1])%mod;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	init();</div><div class="line">	int t; scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int n,m;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">		<span class="keyword">if</span>(n&lt;m) swap(n,m);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,c[n][m]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>由于向右的限制关系 实际答案为Cnm的组合数 则问题转换为组合数取模<br>思路一：可以解决nm过大的问题 此题其实不需要<br>思路二：暴力求阶乘 水过<br>思路一和思路二注意要求逆元<br>思路三：预处理组合数 当nm再大一两维就会mle</p>
<h2 id="HDU-6115"><a href="#HDU-6115" class="headerlink" title="HDU 6115"></a>HDU 6115</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>我们将A省简化为由N个城市组成，某些城市之间存在双向道路，而且A省的交通有一个特点就是任意两个城市之间都能通过道路相互到达，且在不重复经过城市的情况下<br>任意两个城市之间的到达方案都是唯一的聪明的你一定已经发现，这些城市构成了树这样一个结构。<br>现在百度陆续开了许许多多的子公司。每家子公司又会在各城市中不断兴建属于该子公司的办公室。<br>由于各个子公司之间经常有资源的流动，所以公司员工常常想知道，两家子公司间的最小距离。<br>我们可以把子公司看成一个由办公室组成的集合。那么两个子公司A和B的最小距离定义为min(dist(x，y))（x∈A，y∈B）其中dist(x，y)表示两个办公室之间的最短路径长度<br>现在共有Q个询问，每次询问分别在两个子公司间的最小距离</p>
<p>第一行一个正整数T，表示数据组数。<br>对于每组数据：<br>第一行两个正整数N和M。城市编号为1至N，子公司编号为1至M。<br>接下来N-1行给定所有道路的两端城市编号和道路长度。<br>接下来M行，依次按编号顺序给出各子公司办公室所在位置，每行第一个整数G，表示办公室数，接下来G个数为办公室所在位置。<br>接下来一个整数Q，表示询问数。<br>接下来Q行，每行两个正整数a,b(a不等于b），表示询问的两个子公司。<br>【数据范围】<br>0&lt;=边权&lt;=100<br>1&lt;=N,M,Q,工厂总数&lt;=100000<br>对于每个询问，输出一行，表示答案。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">    int to,w;</div><div class="line">    node(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">vector&lt;int&gt;e2[maxn];</div><div class="line">int n; </div><div class="line">int vis[maxn],deep[maxn],f[maxn],anc[maxn][25];</div><div class="line">int dis[maxn];</div><div class="line">void dfs(int x,int fa)&#123;</div><div class="line">    anc[x][0]=f[x];</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=20;i++) anc[x][i]=anc[anc[x][i-1]][i-1];</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e[x].size();i++)&#123;</div><div class="line">        int next=e[x][i].to;</div><div class="line">        <span class="keyword">if</span>(next!=fa)&#123;</div><div class="line">            f[next]=x;</div><div class="line">            deep[next]=deep[x]+1;</div><div class="line">            dfs(next,x);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int lca(int x,int y)&#123;</div><div class="line">    <span class="keyword">if</span>(deep[x]&lt;deep[y]) swap(x,y);</div><div class="line">    <span class="keyword">for</span>(int i=20;i&gt;=0;i--) <span class="keyword">if</span>(deep[anc[x][i]]&gt;=deep[y]) x=anc[x][i];</div><div class="line">    <span class="keyword">if</span>(x==y) <span class="built_in">return</span> x;</div><div class="line">    <span class="keyword">for</span>(int i=20;i&gt;=0;i--) <span class="keyword">if</span>(anc[x][i]!=anc[y][i]) x=anc[x][i],y=anc[y][i];</div><div class="line">    <span class="built_in">return</span> f[x];</div><div class="line">&#125;</div><div class="line">void dfs2(int id)&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e[id].size();i++)&#123;</div><div class="line">        int next=e[id][i].to,ww=e[id][i].w;</div><div class="line">        <span class="keyword">if</span>(vis[next]) <span class="built_in">continue</span>;</div><div class="line">        dis[next]=dis[id]+ww;</div><div class="line">        vis[next]=1;</div><div class="line">        dfs2(next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int solve(int x,int y)&#123;</div><div class="line">    int f=lca(x,y);</div><div class="line">    int ans=dis[x]+dis[y]-2*dis[f];</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n,m;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear(),e2[i].clear();</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n-1;i++)&#123;</div><div class="line">            int u,v,w;</div><div class="line">            scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">            e[u].push_back(node(v,w));</div><div class="line">            e[v].push_back(node(u,w));</div><div class="line">        &#125;</div><div class="line">        memset(f,0,sizeof(f));</div><div class="line">        memset(anc,0,sizeof(anc));</div><div class="line">        memset(deep,0,sizeof(deep));</div><div class="line">        deep[1]=1;</div><div class="line">        dfs(1,0);</div><div class="line">        memset(dis,0,sizeof(dis));</div><div class="line">        memset(vis,0,sizeof(vis));</div><div class="line">        vis[1]=1;</div><div class="line">        dfs2(1);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            int num; scanf(<span class="string">"%d"</span>,&amp;num);</div><div class="line">            <span class="keyword">while</span>(num--)&#123;</div><div class="line">                int x; scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">                e2[i].push_back(x);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        int q;</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;q);</div><div class="line">        <span class="keyword">while</span>(q--)&#123;</div><div class="line">            int a,b;</div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</div><div class="line">            int M<span class="keyword">in</span>=inf;</div><div class="line">            int len1=e2[a].size(),len2=e2[b].size();</div><div class="line">            <span class="keyword">for</span>(int i=0;i&lt;len1;i++)&#123;</div><div class="line">                <span class="keyword">for</span>(int j=0;j&lt;len2;j++)&#123;</div><div class="line">                    int x=e2[a][i];</div><div class="line">                    int y=e2[b][j];</div><div class="line">                    M<span class="keyword">in</span>=min(M<span class="keyword">in</span>,solve(x,y));</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,M<span class="keyword">in</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>暴力枚举子公司的办公室 问题就转换为求树上两点的最短距离 lca水过</p>
<h2 id="HDU-6118"><a href="#HDU-6118" class="headerlink" title="HDU 6118"></a>HDU 6118</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>度度熊参与了喵哈哈村的商业大会，但是这次商业大会遇到了一个难题：<br>喵哈哈村以及周围的村庄可以看做是一共由n个片区，m条公路组成的地区。<br>由于生产能力的区别，第i个片区能够花费a[i]元生产1个商品，但是最多生产b[i]个。<br>同样的，由于每个片区的购买能力的区别，第i个片区也能够以c[i]的价格出售最多d[i]个物品。<br>由于这些因素，度度熊觉得只有合理的调动物品，才能获得最大的利益。<br>据测算，每一个商品运输1公里，将会花费1元。<br>那么喵哈哈村最多能够实现多少盈利呢？</p>
<p>本题包含若干组测试数据。<br>每组测试数据包含：<br>第一行两个整数n,m表示喵哈哈村由n个片区、m条街道。<br>接下来n行，每行四个整数a[i],b[i],c[i],d[i]表示的第i个地区，能够以a[i]的价格生产，最多生产b[i]个，以c[i]的价格出售，最多出售d[i]个。<br>接下来m行，每行三个整数,u[i],v[i],k[i]，表示该条公路连接u[i],v[i]两个片区，距离为k[i]<br>可能存在重边，也可能存在自环。<br>满足:<br>1&lt;=n&lt;=500,<br>1&lt;=m&lt;=1000,<br>1&lt;=a[i],b[i],c[i],d[i],k[i]&lt;=1000,<br>1&lt;=u[i],v[i]&lt;=n<br>输出最多能赚多少钱。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 550</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line">using namespace std;</div><div class="line">struct Edge&#123;</div><div class="line">    int from,to,<span class="built_in">cap</span>,flow,cost;</div><div class="line">    Edge(int from,int to,int <span class="built_in">cap</span>,int flow,int cost):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow),cost(cost)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">struct MCMF&#123;</div><div class="line">    int n,m,s,t;</div><div class="line">    vector&lt;Edge&gt;edges;</div><div class="line">    vector&lt;int&gt;G[maxn];</div><div class="line">    int inq[maxn],d[maxn],p[maxn],a[maxn];</div><div class="line">    void init(int n)&#123;</div><div class="line">        this-&gt;n=n;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;n;i++) G[i].clear();</div><div class="line">        edges.clear();</div><div class="line">    &#125;</div><div class="line">    void AddEdge(int from,int to,int <span class="built_in">cap</span>,int cost)&#123;</div><div class="line">        edges.push_back(Edge(from,to,<span class="built_in">cap</span>,0,cost));</div><div class="line">        edges.push_back(Edge(to,from,0,0,-cost));</div><div class="line">        m=edges.size();</div><div class="line">        G[from].push_back(m-2);</div><div class="line">        G[to].push_back(m-1);</div><div class="line">    &#125;</div><div class="line">    bool BellmanFord(int s,int t,int &amp;flow,int&amp; cost)&#123;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;n;i++) d[i]=inf;</div><div class="line">        memset(inq,0,sizeof(inq));</div><div class="line">        d[s]=0,inq[s]=1,p[s]=0,a[s]=inf;</div><div class="line">        queue&lt;int&gt;Q;</div><div class="line">        Q.push(s);</div><div class="line">        <span class="keyword">while</span>(!Q.empty())&#123;</div><div class="line">            int u=Q.front();  Q.pop();</div><div class="line">            inq[u]=0;</div><div class="line">            <span class="keyword">for</span>(int i=0;i&lt;G[u].size();i++)&#123;</div><div class="line">                Edge&amp; e=edges[G[u][i]];</div><div class="line">                <span class="keyword">if</span>(e.cap&gt;e.flow &amp;&amp; d[e.to]&gt;d[u]+e.cost)&#123;</div><div class="line">                    d[e.to]=d[u]+e.cost;</div><div class="line">                    p[e.to]=G[u][i];</div><div class="line">                    a[e.to]=min(a[u],e.cap-e.flow);</div><div class="line">                    <span class="keyword">if</span>(!inq[e.to])&#123;</div><div class="line">                        Q.push(e.to);</div><div class="line">                        inq[e.to]=1;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(d[t]&gt;0) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">        flow+=a[t];</div><div class="line">        cost+=d[t]*a[t];</div><div class="line">        int u=t;</div><div class="line">        <span class="keyword">while</span>(u!=s)&#123;</div><div class="line">            edges[p[u]].flow+=a[t];</div><div class="line">            edges[p[u]^1].flow-=a[t];</div><div class="line">            u=edges[p[u]].from;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">    &#125;</div><div class="line">    int Mincost(int s,int t)&#123;</div><div class="line">        int flow=0,cost=0;</div><div class="line">        <span class="keyword">while</span>(BellmanFord(s,t,flow,cost));</div><div class="line">        <span class="built_in">return</span> cost;</div><div class="line">    &#125;</div><div class="line">&#125;mc;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int nn,mm;</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;nn,&amp;mm)!=EOF)&#123;</div><div class="line">        mc.init(maxn);</div><div class="line">        int S=0,T=nn+1;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">            int a,b,c,d;</div><div class="line">            scanf(<span class="string">"%d%d%d%d"</span>,&amp;a,&amp;b,&amp;c,&amp;d);</div><div class="line">            mc.AddEdge(S,i,b,a);</div><div class="line">            mc.AddEdge(i,T,d,-c);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=mm;i++)&#123;</div><div class="line">            int u,v,w;</div><div class="line">            scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">            mc.AddEdge(u,v,inf,w);</div><div class="line">            mc.AddEdge(v,u,inf,w);</div><div class="line">        &#125;</div><div class="line">        int ans=-mc.Mincost(S,T);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>流量不固定的s-t最小流裸题<br>注意流量增广为正时停止增广 城市和城市之间建双向边 因为可以双边贸易<br>注意a c w和ans的正负就好了</p>
<h2 id="HDU-6119"><a href="#HDU-6119" class="headerlink" title="HDU 6119"></a>HDU 6119</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>度度熊喜欢着喵哈哈村的大明星——星星小姐。<br>为什么度度熊会喜欢星星小姐呢？<br>首先星星小姐笑起来非常动人，其次星星小姐唱歌也非常好听。<br>但这都不是最重要的，最重要的是，星星小姐拍的一手好代码！<br>于是度度熊关注了星星小姐的贴吧。<br>一开始度度熊决定每天都在星星小姐的贴吧里面签到。<br>但是度度熊是一个非常健忘的孩子，总有那么几天，度度熊忘记签到，于是就断掉了他的连续签到。<br>不过度度熊并不是非常悲伤，因为他有m张补签卡，每一张补签卡可以使得某一忘签到的天，变成签到的状态。<br>那么问题来了，在使用最多m张补签卡的情况下，度度熊最多连续签到多少天呢？</p>
<p>本题包含若干组测试数据。<br>第一行两个整数n，m，表示有n个区间，这n个区间内的天数，度度熊都签到了；m表示m张补签卡。<br>接下来n行，每行两个整数(l[i],r[i])，表示度度熊从第l[i]天到第r[i]天，都进行了签到操作。<br>数据范围：<br>1&lt;=n&lt;=100000<br>0&lt;=m&lt;=1000000000<br>0&lt;=l[i]&lt;=r[i]&lt;=1000000000<br>注意，区间可能存在交叉的情况。<br>输出度度熊最多连续签到多少天。</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">    int l,r;</div><div class="line">&#125;pre[maxn],cur[maxn];</div><div class="line">int cmp(node a,node b)&#123;</div><div class="line">    <span class="keyword">if</span>(a.l==b.l) <span class="built_in">return</span> a.r&lt;b.r;</div><div class="line">    <span class="built_in">return</span> a.l&lt;b.l;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int n,m;</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)&#123;</div><div class="line">        mm(pre,0),mm(cur,0);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d%d"</span>,&amp;pre[i].l,&amp;pre[i].r);</div><div class="line">        sort(pre+1,pre+1+n,cmp);</div><div class="line">        cur[1].l=pre[1].l,cur[1].r=pre[1].r;</div><div class="line">        int num=1;</div><div class="line">        <span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(pre[i].l&lt;=cur[num].r)&#123;</div><div class="line">                <span class="keyword">if</span>(pre[i].r&gt;cur[num].r) cur[num].r=pre[i].r;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                num++;</div><div class="line">                cur[num].l=pre[i].l;</div><div class="line">                cur[num].r=pre[i].r;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        int ans=cur[1].r-cur[1].l+1+m;</div><div class="line">        int sum=0,f=1;</div><div class="line">        <span class="keyword">for</span>(int i=2;i&lt;=num;i++)&#123;</div><div class="line">            sum+=cur[i].l-cur[i-1].r-1;</div><div class="line">            <span class="keyword">while</span>(sum&gt;m)&#123;</div><div class="line">                sum-=cur[f+1].l-cur[f].r-1;</div><div class="line">                f++;                             //f维护最左边的位置</div><div class="line">            &#125;</div><div class="line">            ans=max(ans,cur[i].r-cur[f].l+1+m-sum);  //m-sum剩余还能签到的天数</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>区间排序后合并<br>每次去维护间隔 用m去补签 若间隔和大于m 则从左删去一些间隔保持间隔和小于sum 同时维护ans最大值<br>类似于一个最大窗口为m的单调队列</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2017百度之星预赛A]]></title>
      <url>http://xuboming8.github.io/2017/08/14/2017%E7%99%BE%E5%BA%A6%E4%B9%8B%E6%98%9F%E5%A4%8D%E8%B5%9BA/</url>
      <content type="html"><![CDATA[<h1 id="2017百度之星预赛A"><a href="#2017百度之星预赛A" class="headerlink" title="2017百度之星预赛A"></a>2017百度之星预赛A</h1><h2 id="HDU-6108"><a href="#HDU-6108" class="headerlink" title="HDU 6108"></a>HDU 6108</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><a id="more"></a>
<p>根据小学数学的知识，我们知道一个正整数x是3的倍数的条件是x每一位加起来的和是3的倍数。反之，如果一个数每一位加起来是3的倍数，则这个数肯定是3的倍数。<br>现在给定进制P，求有多少个B满足P进制下，一个正整数是B的倍数的充分必要条件是每一位加起来的和是B的倍数。</p>
<p>第一行一个正整数T表示数据组数(1&lt;=T&lt;=20)。<br>接下来T行，每行一个正整数P(2 &lt; P &lt; 1e9)，表示一组询问。<br>对于每组数据输出一行，每一行一个数表示答案。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int solve(int x)&#123;</div><div class="line">    int ans=0;</div><div class="line">    int m=sqrt(x+0.5);</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">        <span class="keyword">if</span>(x%i==0)&#123;</div><div class="line">            <span class="keyword">if</span>(i*i==x) ans++;</div><div class="line">            <span class="keyword">else</span> ans+=2;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int p;</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;p);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,solve(p-1));</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>计算后发现最后就是求p-1的因数个数</p>
<h2 id="HDU-6110"><a href="#HDU-6110" class="headerlink" title="HDU 6110"></a>HDU 6110</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>求树上路径交集长度<br>给出边的序号 每次询问2个边的序号</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 500050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,m</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,m+1,r</span></div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">    int to,w;</div><div class="line">    node(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">struct path&#123;</div><div class="line">    int a,b,c;</div><div class="line">    <span class="function"><span class="title">path</span></span>()&#123;&#125;</div><div class="line">    path(int a,int b,int c):a(a),b(b),c(c)&#123;&#125;</div><div class="line">&#125;p[maxn],T[maxn&lt;&lt;2];</div><div class="line">int deep[maxn],f[maxn],anc[maxn][25];</div><div class="line">int dist[maxn];</div><div class="line">void dfs(int x,int fa)&#123;</div><div class="line">    anc[x][0]=f[x];</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=20;i++) anc[x][i]=anc[anc[x][i-1]][i-1];</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e[x].size();i++)&#123;</div><div class="line">        int next=e[x][i].to;</div><div class="line">        <span class="keyword">if</span>(next!=fa)&#123;</div><div class="line">            f[next]=x;</div><div class="line">            deep[next]=deep[x]+1;</div><div class="line">            dist[next]=dist[x]+e[x][i].w;</div><div class="line">            dfs(next,x);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int lca(int x,int y)&#123;</div><div class="line">    <span class="keyword">if</span>(deep[x]&lt;deep[y]) swap(x,y);</div><div class="line">    <span class="keyword">for</span>(int i=20;i&gt;=0;i--) <span class="keyword">if</span>(deep[anc[x][i]]&gt;=deep[y]) x=anc[x][i];</div><div class="line">    <span class="keyword">if</span>(x==y) <span class="built_in">return</span> x;</div><div class="line">    <span class="keyword">for</span>(int i=20;i&gt;=0;i--) <span class="keyword">if</span>(anc[x][i]!=anc[y][i]) x=anc[x][i],y=anc[y][i];</div><div class="line">    <span class="built_in">return</span> f[x];</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">    mm(f,0),mm(anc,0),mm(deep,0),mm(dist,0);</div><div class="line">    deep[1]=1;</div><div class="line">    dfs(1,0);</div><div class="line">&#125;</div><div class="line">int cmp(int a,int b)&#123;</div><div class="line">    <span class="built_in">return</span> deep[a]&lt;deep[b];</div><div class="line">&#125;</div><div class="line">path mix(path x,path y)&#123;</div><div class="line">    <span class="keyword">if</span>(!x.c || !y.c) <span class="built_in">return</span> path(0,0,0);</div><div class="line">    int cs[6];</div><div class="line">    cs[1]=lca(x.a,y.a);</div><div class="line">    cs[2]=lca(x.a,y.b);</div><div class="line">    cs[3]=lca(x.b,y.a);</div><div class="line">    cs[4]=lca(x.b,y.b);</div><div class="line">    sort(cs+1,cs+1+4,cmp);</div><div class="line">    int Max=max(deep[x.c],deep[y.c]),M<span class="keyword">in</span>=min(deep[x.c],deep[y.c]);</div><div class="line">    <span class="keyword">if</span>(deep[cs[1]]&lt;M<span class="keyword">in</span> || deep[cs[3]]&lt;Max) <span class="built_in">return</span> path(0,0,0);</div><div class="line">    <span class="built_in">return</span> path(cs[3],cs[4],lca(cs[3],cs[4]));</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">    <span class="keyword">if</span>(l==r)&#123;</div><div class="line">        T[rt]=p[l];</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    int m=(l+r)&gt;&gt;1;</div><div class="line">    build(lson);</div><div class="line">    build(rson);</div><div class="line">    T[rt]=mix(T[rt&lt;&lt;1],T[rt&lt;&lt;1|1]);</div><div class="line">&#125;</div><div class="line">path query(int rt,int l,int r,int L,int R)&#123;</div><div class="line">    <span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R) <span class="built_in">return</span> T[rt];</div><div class="line">    int m=(l+r)&gt;&gt;1;</div><div class="line">    <span class="keyword">if</span>(m&gt;=R) <span class="built_in">return</span> query(lson,L,R);</div><div class="line">    <span class="keyword">if</span>(m&lt;L) <span class="built_in">return</span> query(rson,L,R);</div><div class="line">    <span class="built_in">return</span> mix(query(lson,L,R),query(rson,L,R));</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int n,m,Q;</div><div class="line">    <span class="keyword">while</span>(~scanf(<span class="string">"%d"</span>,&amp;n))&#123;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">            int u,v,w;</div><div class="line">            scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">            e[u].push_back(node(v,w));</div><div class="line">            e[v].push_back(node(u,w));</div><div class="line">        &#125;</div><div class="line">        init();</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;m);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;p[i].a,&amp;p[i].b);</div><div class="line">            p[i].c = lca(p[i].a,p[i].b);</div><div class="line">        &#125;</div><div class="line">        build(1,1,m);</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;Q);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=Q;i++)&#123;</div><div class="line">            int a,b;</div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</div><div class="line">            path ans = query(1,1,m,a,b);</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dist[ans.a]+dist[ans.b]-2*dist[ans.c]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>lca求交集+线段树维护区间<br>算出路径的4个lca 按照深度排序 若1的深度小于最小值或者3的深度小于最大值 这时不存在交集<br>否则返回3-&gt;4 就是该段的区间交集<br>接着对区间的合并用线段树 方便构建和查询<br>算区间长度用lca即可</p>
<h2 id="HDU-6112"><a href="#HDU-6112" class="headerlink" title="HDU 6112"></a>HDU 6112</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>今天是2017年8月6日，农历闰六月十五。<br>小度独自凭栏，望着一轮圆月，发出了“今夕何夕，见此良人”的寂寞感慨。<br>为了排遣郁结，它决定思考一个数学问题：接下来最近的哪一年里的同一个日子，和今天的星期数一样？比如今天是8月6日，星期日。下一个也是星期日的8月6日发生在2023年。<br>小贴士：在公历中，能被4整除但不能被100整除，或能被400整除的年份即为闰年。</p>
<p>第一行为T，表示输入数据组数。<br>每组数据包含一个日期，格式为YYYY-MM-DD。<br>1 ≤ T ≤ 10000<br>YYYY ≥ 2017<br>日期一定是个合法的日期<br>对每组数据输出答案年份，题目保证答案不会超过四位数。</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int check(int year)&#123;</div><div class="line">    <span class="keyword">if</span>((year%4==0 &amp;&amp; year%100!=0) || year%400==0) <span class="built_in">return</span> 366;</div><div class="line">    <span class="built_in">return</span> 365;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        string s;</div><div class="line">        cin&gt;&gt;s;</div><div class="line">        int year=(s[0]-<span class="string">'0'</span>)*1000+(s[1]-<span class="string">'0'</span>)*100+(s[2]-<span class="string">'0'</span>)*10+s[3]-<span class="string">'0'</span>;</div><div class="line">        int month=(s[5]-<span class="string">'0'</span>)*10+s[6]-<span class="string">'0'</span>;</div><div class="line">        int day=(s[8]-<span class="string">'0'</span>)*10+s[9]-<span class="string">'0'</span>;</div><div class="line">        int i;</div><div class="line">        <span class="keyword">if</span>(check(year)==366 &amp;&amp; month==2 &amp;&amp; day==29)&#123;</div><div class="line">            int ans=0;</div><div class="line">            <span class="keyword">for</span>(i=year+1;;i++)&#123;</div><div class="line">                ans+=check(i);</div><div class="line">                <span class="keyword">if</span>(ans%7==0 &amp;&amp; check(i)==366) <span class="built_in">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(month&gt;=3)&#123;</div><div class="line">            int ans=0;</div><div class="line">            <span class="keyword">for</span>(i=year+1;;i++)&#123;</div><div class="line">                ans+=check(i);</div><div class="line">                <span class="keyword">if</span>(ans%7==0) <span class="built_in">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            int ans=0;</div><div class="line">            <span class="keyword">for</span>(i=year;;i++)&#123;</div><div class="line">                ans+=check(i);</div><div class="line">                <span class="keyword">if</span>(ans%7==0) <span class="built_in">break</span>;</div><div class="line">            &#125;</div><div class="line">            i++;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>转化为求7的倍数<br>需要注意月份小于3 需要加前一年的天数 最后i++<br>月份大于等于3 需要加今年的天数<br>最后特判闰年的2月29号即可</p>
<h2 id="HDU-6113"><a href="#HDU-6113" class="headerlink" title="HDU 6113"></a>HDU 6113</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>度度熊是一个喜欢计算机的孩子，在计算机的世界中，所有事物实际上都只由0和1组成。<br>现在给你一个n*m的图像，你需要分辨他究竟是0，还是1，或者两者均不是。<br>图像0的定义：存在1字符且1字符只能是由一个连通块组成，存在且仅存在一个由0字符组成的连通块完全被1所包围。<br>图像1的定义：存在1字符且1字符只能是由一个连通块组成，不存在任何0字符组成的连通块被1所完全包围。<br>连通的含义是，只要连续两个方块有公共边，就看做是连通。<br>完全包围的意思是，该连通块不与边界相接触。</p>
<p>本题包含若干组测试数据。<br>每组测试数据包含：<br>第一行两个整数n,m表示图像的长与宽。<br>接下来n行m列将会是只有01组成的字符画。<br>满足1&lt;=n,m&lt;=100<br>如果这个图是1的话，输出1；如果是0的话，输出0，都不是输出-1。</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int g[105][105];</div><div class="line">int dirx[4]=&#123;0,0,1,-1&#125;;</div><div class="line">int diry[4]=&#123;1,-1,0,0&#125;;</div><div class="line">int vis[105][105];</div><div class="line">int n,m;</div><div class="line">int f;</div><div class="line">void dfs1(int x,int y)&#123;</div><div class="line">    <span class="keyword">if</span>(x&lt;1 || x&gt;n || y&lt;1 || y&gt;m) <span class="built_in">return</span>;</div><div class="line">    vis[x][y]=1;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;4;i++)&#123;</div><div class="line">        int xx=x+dirx[i];</div><div class="line">        int yy=y+diry[i];</div><div class="line">        <span class="keyword">if</span>(!vis[xx][yy] &amp;&amp; g[xx][yy]==1) dfs1(xx,yy);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void dfs2(int x,int y)&#123;</div><div class="line">    <span class="keyword">if</span>(x&lt;1 || x&gt;n || y&lt;1 || y&gt;m)&#123;</div><div class="line">        f=0;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    vis[x][y]=1;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;4;i++)&#123;</div><div class="line">        int xx=x+dirx[i];</div><div class="line">        int yy=y+diry[i];</div><div class="line">        <span class="keyword">if</span>(!vis[xx][yy]) dfs2(xx,yy);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)&#123;</div><div class="line">        int stx=-1,sty=-1;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            char s[105];</div><div class="line">            scanf(<span class="string">"%s"</span>,s+1);</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=m;j++)&#123;</div><div class="line">                g[i][j]=s[j]-<span class="string">'0'</span>;</div><div class="line">                <span class="keyword">if</span>(g[i][j]==1) stx=i,sty=j;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(stx==-1 &amp;&amp; sty==-1)&#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">            <span class="built_in">continue</span>;</div><div class="line">        &#125;</div><div class="line">        mm(vis,0);</div><div class="line">        dfs1(stx,sty);</div><div class="line">        int flag=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=m;j++)&#123;</div><div class="line">                <span class="keyword">if</span>(g[i][j]==1 &amp;&amp; vis[i][j]==0)&#123;</div><div class="line">                    flag=1;</div><div class="line">                    <span class="built_in">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(flag) <span class="built_in">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(flag)&#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">            <span class="built_in">continue</span>;</div><div class="line">        &#125;</div><div class="line">        int cnt=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=m;j++)&#123;</div><div class="line">                <span class="keyword">if</span>(g[i][j]==0 &amp;&amp; vis[i][j]==0)&#123;</div><div class="line">                    f=1;</div><div class="line">                    dfs2(i,j);</div><div class="line">                    <span class="keyword">if</span>(f==1) cnt++;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span>(cnt&gt;1) <span class="built_in">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(cnt&gt;1) <span class="built_in">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(cnt==0) <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(cnt==1) <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>实际就是1的连通块个数和0的被包围连通块个数<br>若图中没有1 输出-1 若1的连通块个数不为1 输出-1<br>寻找0被包围的连通块个数 在之前vis的基础上进行dfs f用来判断是否被包围 若到达边界则未被包围<br>被包围的0连通块个数为1 输出0 个数为0 输出1 否则输出-1</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[muti多校-6]]></title>
      <url>http://xuboming8.github.io/2017/08/11/muti%E5%A4%9A%E6%A0%A1-6/</url>
      <content type="html"><![CDATA[<h1 id="muti多校-6"><a href="#muti多校-6" class="headerlink" title="muti多校-6"></a>muti多校-6</h1><h2 id="HDU-6096"><a href="#HDU-6096" class="headerlink" title="HDU 6096"></a>HDU 6096</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><a id="more"></a>
<p>给出n个单词和q次询问<br>每次询问包括一个前缀和后缀 问满足条件的单词共多少个</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define maxn 500050</span></div><div class="line">using namespace std;</div><div class="line">char s[maxn],t[maxn],st[maxn*2];</div><div class="line">struct Trie&#123;</div><div class="line">	int num,root,next[maxn*2][26],v[maxn*2];</div><div class="line">	vector&lt;int&gt;g[2*maxn];</div><div class="line">	int <span class="function"><span class="title">newnode</span></span>()&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;26;i++) next[num][i]=-1;</div><div class="line">		v[num]=0;</div><div class="line">		<span class="built_in">return</span> num++;</div><div class="line">	&#125;</div><div class="line">	void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">		num=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;2*maxn;i++) g[i].clear();</div><div class="line">		root=newnode();</div><div class="line">	&#125;</div><div class="line">	void build(char *s,int len)&#123;</div><div class="line">		int lens=strlen(s);</div><div class="line">		int now=root;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;lens;i++)&#123;</div><div class="line">			int id=s[i]-<span class="string">'a'</span>;</div><div class="line">			<span class="keyword">if</span>(next[now][id]==-1) next[now][id]=newnode();</div><div class="line">			now=next[now][id];</div><div class="line">			g[now].pb(len);</div><div class="line">			v[now]++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	void dfs(int x)&#123;</div><div class="line">		sort(g[x].begin(),g[x].end());</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;26;i++)&#123;</div><div class="line">			int temp=next[x][i];</div><div class="line">			<span class="keyword">if</span>(temp!=-1) dfs(temp);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;trie;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">	int T; scanf(<span class="string">"%d"</span>,&amp;T);</div><div class="line">	<span class="keyword">while</span>(T--)&#123;</div><div class="line">		int n,q;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;q);</div><div class="line">		trie.init();</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">			scanf(<span class="string">"%s"</span>,s);</div><div class="line">			int len=strlen(s);</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;len;j++)&#123;</div><div class="line">				st[2*j]=s[j];</div><div class="line">				st[2*j+1]=s[len-j-1];</div><div class="line">			&#125;</div><div class="line">			st[len*2]=<span class="string">'\0'</span>;</div><div class="line">			trie.build(st,len);</div><div class="line"></div><div class="line">		&#125;</div><div class="line">		trie.dfs(0);</div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			scanf(<span class="string">"%s %s"</span>,&amp;s,&amp;t);</div><div class="line">			int len1=strlen(s);</div><div class="line">			int len2=strlen(t);</div><div class="line">			int len=max(len1,len2);</div><div class="line">			int sum=len1+len2;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">				<span class="keyword">if</span>(i&lt;len1) st[2*i]=s[i];</div><div class="line">				<span class="keyword">else</span> st[2*i]=<span class="string">'*'</span>;</div><div class="line">				<span class="keyword">if</span>(i&lt;len2) st[2*i+1]=t[len2-i-1];</div><div class="line">				<span class="keyword">else</span> st[2*i+1]=<span class="string">'*'</span>;</div><div class="line">			&#125;</div><div class="line">			len*=2;</div><div class="line">			queue&lt;int&gt;q[2];</div><div class="line">			q[0].push(0);</div><div class="line">			int ans=0,temp=0;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">				int id=st[i]-<span class="string">'a'</span>;</div><div class="line">				<span class="keyword">while</span>(!q[temp].empty())&#123;</div><div class="line">					int now=q[temp].front(); q[temp].pop();</div><div class="line">					<span class="keyword">if</span>(st[i]==<span class="string">'*'</span>)&#123;</div><div class="line">						<span class="keyword">for</span>(int j=0;j&lt;26;j++)&#123;</div><div class="line">							int x=trie.next[now][j];</div><div class="line">							<span class="keyword">if</span>(x!=-1) q[1-temp].push(x);</div><div class="line">						&#125;</div><div class="line">					&#125;</div><div class="line">					<span class="keyword">else</span>&#123;</div><div class="line">						int x=trie.next[now][id];</div><div class="line">						<span class="keyword">if</span>(x!=-1) q[1-temp].push(x);</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">				temp=1-temp; </div><div class="line">			&#125;</div><div class="line">			<span class="keyword">while</span>(!q[temp].empty())&#123;</div><div class="line">				int now=q[temp].front();</div><div class="line">				q[temp].pop();</div><div class="line">				int pos=lower_bound(trie.g[now].begin(),trie.g[now].end(),sum)-trie.g[now].begin();</div><div class="line">				ans+=trie.v[now];</div><div class="line">				ans-=pos;</div><div class="line">			&#125;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>普通trie的情况下加了后缀的限制<br>存储单词的时候按照第一位 第n位 第2位 第n-1位这样存储 例如cedf存储为cfdeedfc 相当于奇数位正序 偶数位逆序<br>查询前后缀的时候同理 如果前后缀大小不等用&#42;补齐 代表可以用任何字母代替 例如ce f存储为cfe*<br>字典树存放的为：num代表给每个结点的编号 当有新的结点时候调用newnode num++ next模拟指针 v代表经过该结点的字符串个数<br>g存储经过该结点的所有字符串的长度<br>用2个队列互相更新 从0的根开始 q[0]和q[1]互相转换 相当于向下遍历字典树的过程<br>通过更新队列后逐个弹出g[temp]里的结点序号 通过lower_bound找到该长度在g中的位置 用v-pos就是答案 表示所有经过该结点的<br>字符串个数减去长度小于sum就是答案 只有大于sum才能在前后缀的基础上继续延伸满足题意<br>注意：第一个st应加\0 不然strlen不能处理</p>
<h2 id="HDU-6098"><a href="#HDU-6098" class="headerlink" title="HDU 6098"></a>HDU 6098</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出数组n 要求从i=2开始到n 共n-1个数字 依次输出A中index%i!=0的最大值</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">template&lt;typename T&gt; inline void <span class="built_in">read</span>(T &amp;x)&#123;x=0;T f=1;char ch;<span class="keyword">do</span>&#123;ch=getchar();<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-1;&#125;<span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>);<span class="keyword">do</span> x=x*10+ch-<span class="string">'0'</span>,ch=getchar();<span class="keyword">while</span>(ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>);x*=f;&#125;</div><div class="line">inline void out(int x)&#123;<span class="keyword">if</span>(x&gt;9) out(x/10);putchar(x%10+<span class="string">'0'</span>);&#125;</div><div class="line">vector&lt;pii&gt;a;</div><div class="line">int dp[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int t; <span class="built_in">read</span>(t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        a.clear();</div><div class="line">        mm(dp,0);</div><div class="line">        int n; <span class="built_in">read</span>(n);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            int x; <span class="built_in">read</span>(x);</div><div class="line">            a.pb(mp(x,i));</div><div class="line">        &#125;</div><div class="line">        sort(a.begin(),a.end(),greater&lt;pii&gt;());</div><div class="line">        int len=a.size();</div><div class="line">        <span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;len;j++)&#123;</div><div class="line">                int num=a[j].fi,id=a[j].se;</div><div class="line">                <span class="keyword">if</span>(id%i!=0)&#123;</div><div class="line">                    dp[i]=num;</div><div class="line">                    <span class="built_in">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(i==2) <span class="built_in">printf</span>(<span class="string">"%d"</span>,dp[i]);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">" %d"</span>,dp[i]);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>任何nlogn算法都可以卡过<br>这里介绍一种：给数组A从大到小排序 从最大数开始 dp数组预处理出index%i!=0的最大数<br>实际情况是只要找到第一个满足该位置条件的直接保存退出判断下一个</p>
<h2 id="HDU-6103"><a href="#HDU-6103" class="headerlink" title="HDU 6103"></a>HDU 6103</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>定义2个长度为n的字符串的dist为Ai-B(n-1-i) i从0到n-1 类似于与回文 A的第0位-B的第n-1位+A的第1位+B的第n-1位···<br>现在给出一个string 要求在里面找出2个子串满足长度最大 且他们的dist和不能超过m</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 25005</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">template&lt;typename T&gt; inline void <span class="built_in">read</span>(T &amp;x)&#123;x=0;T f=1;char ch;<span class="keyword">do</span>&#123;ch=getchar();<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-1;&#125;<span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>);<span class="keyword">do</span> x=x*10+ch-<span class="string">'0'</span>,ch=getchar();<span class="keyword">while</span>(ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>);x*=f;&#125;</div><div class="line">inline void out(int x)&#123;<span class="keyword">if</span>(x&gt;9) out(x/10);putchar(x%10+<span class="string">'0'</span>);&#125;</div><div class="line">char s[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t; scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int m; scanf(<span class="string">"%d"</span>,&amp;m);</div><div class="line">        scanf(<span class="string">"%s"</span>,s+1);</div><div class="line">        int n=strlen(s+1);</div><div class="line">        int ans=0;</div><div class="line">        queue&lt;int&gt;q;</div><div class="line">        <span class="keyword">for</span>(int mid=1;mid&lt;=n;mid++)&#123;</div><div class="line">            <span class="keyword">while</span>(!q.empty()) q.pop();</div><div class="line">            int now=0,len=0;</div><div class="line">            <span class="keyword">for</span>(int l=1;;l++)&#123;</div><div class="line">                int i=mid<span class="_">-l</span>,j=mid+l-1;</div><div class="line">                <span class="keyword">if</span>(i&lt;1 || j&gt;n) <span class="built_in">break</span>;</div><div class="line">                now+=abs(s[j]<span class="_">-s</span>[i]);</div><div class="line">                len++;</div><div class="line">                <span class="keyword">if</span>(now&gt;m)&#123;</div><div class="line">                    <span class="keyword">if</span>(!q.empty())&#123;</div><div class="line">                        now-=q.front();</div><div class="line">                        q.pop();</div><div class="line">                        len--;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                q.push(abs(s[j]<span class="_">-s</span>[i]));</div><div class="line">                <span class="keyword">if</span>(len&gt;ans &amp;&amp; now&lt;=m) ans=len;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int mid=1;mid&lt;=n;mid++)&#123;</div><div class="line">            <span class="keyword">while</span>(!q.empty()) q.pop();</div><div class="line">            int now=0,len=0;</div><div class="line">            <span class="keyword">for</span>(int l=1;;l++)&#123;</div><div class="line">                int i=mid<span class="_">-l</span>,j=mid+l;</div><div class="line">                <span class="keyword">if</span>(i&lt;1 || j&gt;n) <span class="built_in">break</span>;</div><div class="line">                now+=abs(s[j]<span class="_">-s</span>[i]);</div><div class="line">                len++;</div><div class="line">                <span class="keyword">if</span>(now&gt;m)&#123;</div><div class="line">                    <span class="keyword">if</span>(!q.empty())&#123;</div><div class="line">                        now-=q.front();</div><div class="line">                        q.pop();</div><div class="line">                        len--;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                q.push(abs(s[j]<span class="_">-s</span>[i]));</div><div class="line">                <span class="keyword">if</span>(len&gt;ans &amp;&amp; now&lt;=m) ans=len;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>枚举1-n的所有位置作为mid 向两边扩散<br>再枚举向两边扩散的距离 两种情况是因为剩余的个数有奇数和偶数个两种 所以第二种情况跳了一格满足了奇数<br>扩散中越界break并且实时更新now和ans 如果now大于m 那么从队列中去掉队首 即入队最早的元素(最接近mid) </p>
<h2 id="HDU-6105"><a href="#HDU-6105" class="headerlink" title="HDU 6105"></a>HDU 6105</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出一棵树，Alice 和 Bob 轮流操作， Alice先手， Alice的操作是选一个未染色的点将其染成白色，Bob的操作是选一个未染色的点将其染成黑色<br>并且和这个点有直连边的点也被强制染成黑色（无论这些直连点之前是否有颜色）Bob还有一个小技能是去掉一条边，最后当所有点都有颜色的时候，<br>如果有白色点则Alice赢，否则Bob赢。</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 550</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">int flag;</div><div class="line">void dfs(int x)&#123;</div><div class="line">    int num=0,len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(e[next].size()==0) num++;</div><div class="line">        <span class="keyword">if</span>(num&gt;=2)&#123;</div><div class="line">            flag=1;</div><div class="line">            <span class="built_in">return</span>;</div><div class="line">        &#125;</div><div class="line">        dfs(next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t; scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n,k;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">        <span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">            int x; scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">            e[x].pb(i);</div><div class="line">        &#125;</div><div class="line">        flag=0;</div><div class="line">        dfs(1);</div><div class="line">        <span class="keyword">if</span>(n&amp;1 || n/2-1&gt;k || flag) puts(<span class="string">"Alice"</span>);</div><div class="line">        <span class="keyword">else</span> puts(<span class="string">"Bob"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>我们通过总结发现只要满足下面四个任意一个条件Alice就必胜，否则Bob获胜<br>1.Bob的技能使用次数不足以把所有节点分成若干两个一组的点对。<br>2.节点个数为奇数。<br>3.存在大于等于两个节点的父亲节点是同一个。<br>4.某个节点存在大于等于两个子节点，其下面节点的个数(包括自身)为奇数。</p>
<p>1.只有在两个一组的情况下，Alice把一个点染成白色，Bob把另一个点染成黑色，同时前一个点也变成了黑色，以此类推，Bob能获胜，<br>否则Bob无法每次都把Alice染的白色变为黑色。<br>2.奇数的话，其余都成了两个一组，并能全部为黑色，但剩下的一个点会被Alice染成白色，而Bob无法操作了。<br>3.这种情况下，Alice只要把父亲节点染为白色，然后Bob只能染其中一个叶子节点，虽然父亲节点也变成了黑色，但只要Alice把另一个叶子节点染成白色，<br>Bob对这个点就无可奈何了(注意前提是叶子节点)。<br>4.这样的话，由于子节点下的节点个数为奇数，这样的点只有一个时，我可以加上它的父节点使这些点的个数为偶数(暂不考虑子树中还有不满足的情况)，<br>但大于等于两个的话，必然留下至少一棵子树节点个数为奇数(条件2)，即Alice必胜。</p>
<h2 id="HDU-6106"><a href="#HDU-6106" class="headerlink" title="HDU 6106"></a>HDU 6106</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>班级上的人参加活动<br>给出参加A B C 参加A和B A和C B和C AB和C的人数 要求判断至少参加一个活动的人数<br>有的数据自相矛盾需要忽略</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">template&lt;typename T&gt; inline void <span class="built_in">read</span>(T &amp;x)&#123;x=0;T f=1;char ch;<span class="keyword">do</span>&#123;ch=getchar();<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-1;&#125;<span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>);<span class="keyword">do</span> x=x*10+ch-<span class="string">'0'</span>,ch=getchar();<span class="keyword">while</span>(ch&lt;=<span class="string">'9'</span>&amp;&amp;ch&gt;=<span class="string">'0'</span>);x*=f;&#125;</div><div class="line">inline void out(int x)&#123;<span class="keyword">if</span>(x&gt;9) out(x/10);putchar(x%10+<span class="string">'0'</span>);&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    int t; <span class="built_in">read</span>(t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n; <span class="built_in">read</span>(n);</div><div class="line">        int ans=-1;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            int a,b,c,ab,bc,ac,abc;</div><div class="line">            <span class="built_in">read</span>(a),<span class="built_in">read</span>(b),<span class="built_in">read</span>(c),<span class="built_in">read</span>(ab),<span class="built_in">read</span>(bc),<span class="built_in">read</span>(ac),<span class="built_in">read</span>(abc);</div><div class="line">            int x1=a-ab-ac+abc;</div><div class="line">            int x2=b-ab-bc+abc;</div><div class="line">            int x3=c-ac-bc+abc;</div><div class="line">            int x4=ab-abc;</div><div class="line">            int x5=ac-abc;</div><div class="line">            int x6=bc-abc;</div><div class="line">            int x7=abc;</div><div class="line">            int re;</div><div class="line">            <span class="keyword">if</span>(x1&lt;0 || x2&lt;0 || x3&lt;0 || x4&lt;0 || x5&lt;0 || x6&lt;0 || x7&lt;0) re=0;</div><div class="line">            <span class="keyword">else</span> re=x1+x2+x3+x4+x5+x6+x7;</div><div class="line">            ans=max(ans,re);</div><div class="line">        &#125;</div><div class="line">        out(ans); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>画出图 相当于容斥原理 要求图上的每个部分人数都必须大于0 小于0忽略<br>最后相加求最大值就是答案</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[背包组合数相关]]></title>
      <url>http://xuboming8.github.io/2017/08/10/%E8%83%8C%E5%8C%85%E7%BB%84%E5%90%88%E6%95%B0%E7%9B%B8%E5%85%B3/</url>
      <content type="html"><![CDATA[<h1 id="背包组合数相关"><a href="#背包组合数相关" class="headerlink" title="背包组合数相关"></a>背包组合数相关</h1><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>背包组合问题通常用01背包dp解决<br>相关问题有数组中的数字求单次组合数和无限次组合数<br>前者用dp[i]表示i的组合数有dp[i]种 接着逆序遍历所有数字用dp[i]+=dp[i-k]更新<br>无限次更新通过hash和背包思想 通常问是否能组合某个数字或者所有数字<br>还可用bitset s|=s&#60;&#60;num[i]表示把第个数字压入bitset中 最后判断第i位的数字是否为1就代表是否能取到<br><a id="more"></a></p>
<h2 id="HDU-6092"><a href="#HDU-6092" class="headerlink" title="HDU 6092"></a>HDU 6092</h2><p>通过所有组合数的个数反推集合中的每个元素<br><a href="http://monkeyxu.cn/2017/08/09/muti%E5%A4%9A%E6%A0%A1-5/#HDU-6092" target="_blank" rel="external">多校5转跳链接</a></p>
<h2 id="openjudge-2985"><a href="#openjudge-2985" class="headerlink" title="openjudge 2985"></a>openjudge 2985</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出大小为n的数组 单次组合后问和为t的组合数有多少种组合方式</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1000</span></div><div class="line">using namespace std;</div><div class="line">int dp[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">	int n,t; </div><div class="line">	cin&gt;&gt;n&gt;&gt;t;</div><div class="line">	memset(dp,0,sizeof dp);</div><div class="line">	dp[0]=1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		int x; cin&gt;&gt;x;</div><div class="line">		<span class="keyword">for</span>(int j=t;j&gt;=x;j--) dp[j]+=dp[j-x];</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;dp[t]&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>逆序更新dp 每次跳的间隔就是数字的大小</p>
<h2 id="HDU-5890"><a href="#HDU-5890" class="headerlink" title="HDU 5890"></a>HDU 5890</h2><p>有限制条件的(每次不允许取某3个数字)下的取10个数字 问和是否能等于87<br>bitset+预处理dp<br><a href="http://monkeyxu.cn/2017/04/25/Bitset%E4%BC%98%E5%8C%96/#HDU-5890" target="_blank" rel="external">转跳链接</a></p>
<h2 id="2017蓝桥杯B组第八题"><a href="#2017蓝桥杯B组第八题" class="headerlink" title="2017蓝桥杯B组第八题"></a>2017蓝桥杯B组第八题</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>求n个数字的无限次组合后是否能取到所有的正数<br>有限个输出答案 无限个输出INF</p>
<h3 id="参考伪代码"><a href="#参考伪代码" class="headerlink" title="参考伪代码"></a>参考伪代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">	<span class="keyword">for</span>(int j=0;j+num[i]&lt;N;j++)&#123;</div><div class="line">		<span class="keyword">if</span>(hashh[j]) hashh[j+num[i]]=1;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>exgcd变形+背包<br>如果n个数字的gcd&gt;1 直接输出INF<br>伪代码中的N取到10000即可 开始hashh初始化为0 hashh[0]=1即可<br>最后判断hashh中0的个数就是答案</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[muti多校-5]]></title>
      <url>http://xuboming8.github.io/2017/08/09/muti%E5%A4%9A%E6%A0%A1-5/</url>
      <content type="html"><![CDATA[<h1 id="muti多校-5"><a href="#muti多校-5" class="headerlink" title="muti多校-5"></a>muti多校-5</h1><h2 id="HDU-6085"><a href="#HDU-6085" class="headerlink" title="HDU 6085"></a>HDU 6085</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>有n个小孩和m个糖果 每个小孩有Ai的钱 每个糖果值Bi的钱 小孩只会买一种糖果<br>给出q次询问 每次询问包含一个k 问有多少个小孩买糖果满足余下k的钱 最后的结果mod2<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 50050</span></div><div class="line">using namespace std;</div><div class="line">bitset&lt;maxn&gt;a,b,ans,bb;</div><div class="line">void solve(int maxk)&#123;</div><div class="line">    bb.reset(),ans.reset();</div><div class="line">    <span class="keyword">for</span>(int i=maxk;i&gt;=0;i--)&#123;</div><div class="line">        ans[i]=(bb&amp;(a&gt;&gt;i)).count()&amp;1;</div><div class="line">        <span class="keyword">if</span>(b[i])&#123;</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;maxn;j+=i) bb.flip(j);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t; scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        a.reset(),b.reset();</div><div class="line">        int n,m,q;</div><div class="line">        scanf(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;q);</div><div class="line">        int maxk=0;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">            int x; </div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">            a.set(x);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;m;i++)&#123;</div><div class="line">            int x; </div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">            b.set(x);</div><div class="line">            maxk=max(maxk,x);</div><div class="line">        &#125;</div><div class="line">        solve(maxk);</div><div class="line">        <span class="keyword">while</span>(q--)&#123;</div><div class="line">            int x; scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">            puts(ans[x]?<span class="string">"1"</span>:<span class="string">"0"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>压位操作 理解后补上</p>
<h2 id="HDU-6090"><a href="#HDU-6090" class="headerlink" title="HDU 6090"></a>HDU 6090</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定n个点，m条边，让你安排点和边构成一个无向图。dis(i,j)，表示i到j最小的边数，如果无法到达，dis(i,j)为n,问每个点到其他所有的点的最小dis之和</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int t; cin&gt;&gt;t;</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        LL n,m;</div><div class="line">        cin&gt;&gt;n&gt;&gt;m;</div><div class="line">        <span class="keyword">if</span>(m&gt;=n*(n-1)/2LL) cout&lt;&lt;n*(n-1)&lt;&lt;endl;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(m&gt;n-1) cout&lt;&lt;2LL*n*n-2LL*n-2LL*m&lt;&lt;endl;</div><div class="line">        <span class="keyword">else</span> cout&lt;&lt;n*n*n-n*n-n*(m*m+m)+2LL*m*m&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>考虑贪心地一条一条边添加进去。<br>当m≤n−1时，我们需要最小化距离为n的点对数，所以肯定是连出一个大小为m+1的联通块，剩下的点都是孤立点。在这个联通块中，为了最小化内部的距离和，<br>肯定是连成一个菊花的形状，即一个点和剩下所有点直接相邻。<br>当m&gt;n−1时，肯定先用最开始n-1条边连成一个菊花，这时任意两点之间距离的最大值是2。因此剩下的每一条边唯一的作用就是将一对点的距离缩减为1。<br>这样我们就能知道了最终图的形状了，稍加计算就能得到答案。要注意m有可能大于 n(n-1)/2<br>若点边关系为n(n-1)/2&lt;=m说明每一个点可以直接连接任意一点，则距离和为n(n-1)<br>若点边关系为(上不满足)m&gt;n-1不是等于，在菊花形状上加边，每加一条边距离减2<br>若点边关系为（上不满足）m&lt;=n-1有几个孤立点y(y=n-(m+1))则，孤立点距离和为y<em>n</em>(n-1)+(n-y)<em>y</em>n,相连点，只有一点可直达其它<br>点，则距离和为m+m+2m(m-1)</p>
<h2 id="HDU-6092"><a href="#HDU-6092" class="headerlink" title="HDU 6092"></a>HDU 6092</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>T组测试，接下来一行n和m，下面一行m+1个数字代表B（0~m）求A序列，Bi 代表A序列中的所有子集之和为i的有Bi个，A序列总和为m，n个元素</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 10050</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">int a[55],b[maxn],dp[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t; scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n,m;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=m;i++) scanf(<span class="string">"%d"</span>,&amp;b[i]);</div><div class="line">        mm(dp,0),dp[0]=1;</div><div class="line">        int num=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            int x=b[i]-dp[i];</div><div class="line">            <span class="keyword">if</span>(x&lt;=0) <span class="built_in">continue</span>;</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=x;j++)&#123;</div><div class="line">                a[++num]=i;</div><div class="line">                <span class="keyword">for</span>(int k=m;k&gt;=i;k--) dp[k]+=dp[k-i];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(num&gt;=n) <span class="built_in">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(i==1) <span class="built_in">printf</span>(<span class="string">"%d"</span>,a[i]);</div><div class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">" %d"</span>,a[i]);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>dp[i]表示数组a中组合数为i的个数 通过逆序更新 类似于01背包<br>如果bi是数组b中除了b0以外第一个值不为0的位置 那么i就是数组a中的最小数 在a中加入该数字 并且更新dp<br>接着再在b中继续寻找第一个不为0的数字直到数组a的大小达到n</p>
<h2 id="HDU-6095"><a href="#HDU-6095" class="headerlink" title="HDU 6095"></a>HDU 6095</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>任意两个人相比,相差大于K,分低的淘汰,否则两人都有可能赢,剩下的继续比,问有最多多少人可能赢?</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int a[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int t; cin&gt;&gt;t;</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n,k;</div><div class="line">        cin&gt;&gt;n&gt;&gt;k;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];</div><div class="line">        sort(a+1,a+1+n);</div><div class="line">        int ans=1;</div><div class="line">        <span class="keyword">for</span>(int i=n-1;i&gt;=1;i--)&#123;</div><div class="line">            <span class="keyword">if</span>(a[i+1]<span class="_">-a</span>[i]&lt;=k) ans++;</div><div class="line">            <span class="keyword">else</span> <span class="built_in">break</span>;</div><div class="line">        &#125;</div><div class="line">        cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>签到题<br>排序后逆序遍历 i-1和i的位置比 如果差值小于等于k 那么ans++ 否则break 后面的数字与i的差值都会大于k无法获胜</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[muti多校-4]]></title>
      <url>http://xuboming8.github.io/2017/08/08/muti%E5%A4%9A%E6%A0%A1-4/</url>
      <content type="html"><![CDATA[<h1 id="muti多校-4"><a href="#muti多校-4" class="headerlink" title="muti多校-4"></a>muti多校-4</h1><h2 id="HDU-6070"><a href="#HDU-6070" class="headerlink" title="HDU 6070"></a>HDU 6070</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>求区间AC率的最小值<br>区间内的该题的最后一次提交算AC<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 60050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson rt&lt;&lt;1,l,m</span></div><div class="line"><span class="comment">#define rson rt&lt;&lt;1|1,m+1,r</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int a[maxn],last[maxn];</div><div class="line">double t[maxn&lt;&lt;2],lazy[maxn&lt;&lt;2],mid;</div><div class="line">void push_up(int rt)&#123;</div><div class="line">    t[rt]=min(t[rt&lt;&lt;1],t[rt&lt;&lt;1|1]);</div><div class="line">&#125;</div><div class="line">void push_down(int rt)&#123;</div><div class="line">    <span class="keyword">if</span>(lazy[rt])&#123;</div><div class="line">        lazy[rt&lt;&lt;1]+=lazy[rt];</div><div class="line">        lazy[rt&lt;&lt;1|1]+=lazy[rt];</div><div class="line">        t[rt&lt;&lt;1]+=lazy[rt];</div><div class="line">        t[rt&lt;&lt;1|1]+=lazy[rt];</div><div class="line">        lazy[rt]=0;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void build(int rt,int l,int r)&#123;</div><div class="line">    t[rt]=mid*l;</div><div class="line">    lazy[rt]=0;</div><div class="line">    <span class="keyword">if</span>(l==r) <span class="built_in">return</span>;</div><div class="line">    int m=(l+r)&gt;&gt;1;</div><div class="line">    build(lson);</div><div class="line">    build(rson);</div><div class="line">&#125; </div><div class="line">void update(int rt,int l,int r,int L,int R)&#123;</div><div class="line">    <span class="keyword">if</span>(l&gt;=L &amp;&amp; r&lt;=R)&#123;</div><div class="line">        t[rt]+=1;</div><div class="line">        lazy[rt]+=1;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    push_down(rt);</div><div class="line">    int m=(l+r)&gt;&gt;1;</div><div class="line">    <span class="keyword">if</span>(m&gt;=L) update(lson,L,R);</div><div class="line">    <span class="keyword">if</span>(m&lt;R) update(rson,L,R);</div><div class="line">    push_up(rt);</div><div class="line">&#125;</div><div class="line">double query(int rt,int l,int r,int R)&#123;</div><div class="line">    <span class="keyword">if</span>(r&lt;=R) <span class="built_in">return</span> t[rt];</div><div class="line">    push_down(rt);</div><div class="line">    int m=(l+r)&gt;&gt;1;</div><div class="line">    double ans=query(lson,R);</div><div class="line">    <span class="keyword">if</span>(m&lt;R) ans=min(ans,query(rson,R));</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    int Case; scanf(<span class="string">"%d"</span>,&amp;Case);</div><div class="line">    <span class="keyword">while</span>(Case--)&#123;</div><div class="line">        int n; scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">        double l=0.0,r=1.0,ans=-1;</div><div class="line">        <span class="keyword">while</span>(l-r&lt;=eps)&#123;</div><div class="line">            mid=(l+r)/2.0;</div><div class="line">            build(1,1,n);</div><div class="line">            mm(last,0);</div><div class="line">            int flag=0;</div><div class="line">            <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">                update(1,1,n,last[a[i]]+1,i);</div><div class="line">                double re=query(1,1,n,i);</div><div class="line">                <span class="keyword">if</span>(re-mid*(i+1)&lt;=eps)&#123;</div><div class="line">                    flag=1;</div><div class="line">                    <span class="built_in">break</span>;</div><div class="line">                &#125;</div><div class="line">                last[a[i]]=i;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(flag) ans=mid,r=mid-eps;</div><div class="line">            <span class="keyword">else</span> l=mid+eps;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%.10lf\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>对于这种区间最优比率问题（分数规划问题）我们常规的解法是二分答案来求<br>根据题目意思我们二分答案后可以转化成<br>size(l,r)/(r-l+1)&lt;=mid   -&gt;   size(l,r)+l×mid &lt;=(r+1)*mid<br>这里我们可以枚举右边的r ，然后用最值线段树来维护左边的最小值，<br>我们build的时候将线段树初始化为l×mid,然后对于枚举i,a[i]的贡献区间为<br>[last[a[i]]+1,i]+1 因为如果前面已经存在了a[i]，该数就对之前的区间<br>没有贡献了<br>二分最低比例 线段树其实维护的本质是区间内不同数字的个数</p>
<h2 id="HDU-6073"><a href="#HDU-6073" class="headerlink" title="HDU 6073"></a>HDU 6073</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>求图中所有最大完美匹配权值乘积的和<br>左边和右边各n个点 左边每个点发出两条边连接右边</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 300050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">const LL mod=998244353;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">    int v,w,mark,next;</div><div class="line">&#125;e[maxn&lt;&lt;2];</div><div class="line">int head[maxn&lt;&lt;1],cnt,du[maxn&lt;&lt;1];</div><div class="line">bool vis[maxn&lt;&lt;1];</div><div class="line">void add(int u,int v,int w)&#123;</div><div class="line">    e[cnt].next=head[u];</div><div class="line">    e[cnt].v=v;</div><div class="line">    e[cnt].w=w;</div><div class="line">    e[cnt].mark=0;</div><div class="line">    head[u]=cnt++;</div><div class="line">&#125;</div><div class="line">LL p[2];</div><div class="line">void dfs(int id,int k)&#123;</div><div class="line">    vis[id]=1;</div><div class="line">    <span class="keyword">for</span>(int i=head[id];i;i=e[i].next)&#123;</div><div class="line">        <span class="keyword">if</span>(e[i].mark) <span class="built_in">continue</span>;</div><div class="line">        e[i].mark=e[i^1].mark=1;</div><div class="line">        p[k]*=e[i].w;</div><div class="line">        p[k]%=mod;</div><div class="line">        dfs(e[i].v,1-k);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t; scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        mm(du,0),mm(head,0),mm(vis,0);</div><div class="line">        int n; scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">        cnt=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=2;j++)&#123;</div><div class="line">                int v,w;</div><div class="line">                scanf(<span class="string">"%d%d"</span>,&amp;v,&amp;w);</div><div class="line">                add(i,v+n,w);</div><div class="line">                add(v+n,i,w);</div><div class="line">                du[i]++,du[v+n]++;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        queue&lt;int&gt;q;</div><div class="line">        <span class="keyword">for</span>(int i=1+n;i&lt;=n+n;i++) <span class="keyword">if</span>(du[i]==1) q.push(i);</div><div class="line">        LL ans=1;</div><div class="line">        <span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">            int now=q.front(); q.pop();</div><div class="line">            vis[now]=1;</div><div class="line">            <span class="keyword">for</span>(int i=head[now];i;i=e[i].next)&#123;</div><div class="line">                <span class="keyword">if</span>(e[i].mark) <span class="built_in">continue</span>;</div><div class="line">                e[i].mark=e[i^1].mark=1;</div><div class="line">                vis[e[i].v]=1;</div><div class="line">                ans*=e[i].w;</div><div class="line">                ans%=mod;</div><div class="line">                <span class="keyword">for</span>(int j=head[e[i].v];j;j=e[j].next)&#123;</div><div class="line">                    e[j].mark=e[j^1].mark=1;</div><div class="line">                    du[e[j].v]--;</div><div class="line">                    <span class="keyword">if</span>(du[e[j].v]==1) q.push(e[j].v);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(vis[i]) <span class="built_in">continue</span>;</div><div class="line">            p[0]=p[1]=1;</div><div class="line">            dfs(i,0);</div><div class="line">            ans*=(p[0]+p[1])%mod;</div><div class="line">            ans%=mod;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>首先如果一个点的度数为1，那么它的匹配方案是固定的，继而我们可以去掉这一对点。通过拓扑我们可以不断去掉所有度数为1的点。<br>那么剩下的图中左右各有m个点，每个点度数都不小于2，且左边每个点度数都是2，而右侧总度数是2m，因此右侧只能是每个点度数都是2。<br>这说明这个图每个连通块是个环，在环上间隔着取即可，一共两种方案。<br>前向星存边时正边反边存在一起 通过i^1优化计算 vis记录点是否删除 mark记录边是否取过</p>
<h2 id="HDU-6075"><a href="#HDU-6075" class="headerlink" title="HDU 6075"></a>HDU 6075</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>有一个数组 要求输出2个任意的m和k 满足数组中超过一半的数字%m==k </p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int t; cin&gt;&gt;t;</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n; cin&gt;&gt;n;</div><div class="line">        int cnt1=0,cnt2=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            int x; cin&gt;&gt;x;</div><div class="line">            <span class="keyword">if</span>(x&amp;1) cnt1++;</div><div class="line">            <span class="keyword">else</span> cnt2++;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(cnt1&gt;=cnt2) cout&lt;&lt;<span class="string">"2 1"</span>&lt;&lt;endl;</div><div class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">"2 0"</span>&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>模2余1 转换成奇偶性问题</p>
<h2 id="HDU-6077"><a href="#HDU-6077" class="headerlink" title="HDU 6077"></a>HDU 6077</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>通过数字字符串输出时钟显示的时间</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">char g[10][30];</div><div class="line">const string s[10]=&#123;</div><div class="line"><span class="string">".XX.X..XX..X....X..XX..X.XX."</span>,</div><div class="line"><span class="string">".......X...X.......X...X...."</span>,</div><div class="line"><span class="string">".XX....X...X.XX.X...X....XX."</span>,</div><div class="line"><span class="string">".XX....X...X.XX....X...X.XX."</span>,</div><div class="line"><span class="string">"....X..XX..X.XX....X...X...."</span>,</div><div class="line"><span class="string">".XX.X...X....XX....X...X.XX."</span>,</div><div class="line"><span class="string">".XX.X...X....XX.X..XX..X.XX."</span>,</div><div class="line"><span class="string">".XX....X...X.......X...X...."</span>,</div><div class="line"><span class="string">".XX.X..XX..X.XX.X..XX..X.XX."</span>,</div><div class="line"><span class="string">".XX.X..XX..X.XX....X...X.XX."</span></div><div class="line">&#125;;</div><div class="line">int solve(int col)&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=9;i++)&#123;</div><div class="line">        int flag=1;</div><div class="line">        <span class="keyword">for</span>(int x=0;x&lt;7;x++)&#123;</div><div class="line">            <span class="keyword">for</span>(int y=0;y&lt;4;y++)&#123;</div><div class="line">                <span class="keyword">if</span>(g[x][col+y]!=s[i][x*4+y]) flag=0;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(flag) <span class="built_in">return</span> i;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int t; cin&gt;&gt;t;</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;7;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;21;j++) cin&gt;&gt;g[i][j];</div><div class="line">        &#125;</div><div class="line">        int t1=solve(0);</div><div class="line">        int t2=solve(5);</div><div class="line">        int t3=solve(12);</div><div class="line">        int t4=solve(17);</div><div class="line">        cout&lt;&lt;t1&lt;&lt;t2&lt;&lt;<span class="string">":"</span>&lt;&lt;t3&lt;&lt;t4&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>先预处理0-9字符串的位置情况 暴力判断即可</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[atcoder regular080]]></title>
      <url>http://xuboming8.github.io/2017/08/07/atcoder-regular080/</url>
      <content type="html"><![CDATA[<h1 id="atcoder-regular080"><a href="#atcoder-regular080" class="headerlink" title="atcoder regular080"></a>atcoder regular080</h1><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>有一个长度n的数组 问是否改变顺序后可以满足 任意两个相邻的元素乘积都是4的倍数<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n; cin&gt;&gt;n;</div><div class="line">	int cnt1=0,cnt2=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		int x; cin&gt;&gt;x;</div><div class="line">		<span class="keyword">if</span>(x%4==0) cnt1++;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(x%2==0) cnt2++;</div><div class="line">	&#125;</div><div class="line">	int pos=2*cnt1+1+(cnt2/2)*2;</div><div class="line">	<span class="keyword">if</span>(pos&gt;=n) cout&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;endl;</div><div class="line">	<span class="keyword">else</span> cout&lt;&lt;<span class="string">"No"</span>&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>记录是4的倍数的个数和剩下的数中是2倍数的个数<br>一个4可以解决掉他自己和左边右边各一个的位置 由于2个4会重叠一个位置 多个同理 所以cnt1和k可以解决掉2*cnt1+1个位置<br>一对2可以解决掉2个位置 总的位置加在一起大于等于n 满足 否则不满足</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>一个H×W的迷宫 要求要涂n种颜色 每种颜色的所有格子必须相邻 且每种颜色要涂ai个格子 输出满足条件的任意一组解</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 10050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int a[maxn];</div><div class="line">int g[105][105];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int h,w;</div><div class="line">	cin&gt;&gt;h&gt;&gt;w;</div><div class="line">	int n; cin&gt;&gt;n;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];</div><div class="line">	int pos=1;</div><div class="line">	mm(g,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=h;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(i&amp;1)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=w;j++)&#123;</div><div class="line">				<span class="keyword">if</span>(a[pos]&gt;0) g[i][j]=pos,a[pos]--;</div><div class="line">				<span class="keyword">else</span> pos++,g[i][j]=pos,a[pos]--;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">for</span>(int j=w;j&gt;=1;j--)&#123;</div><div class="line">				<span class="keyword">if</span>(a[pos]&gt;0) g[i][j]=pos,a[pos]--;</div><div class="line">				<span class="keyword">else</span> pos++,g[i][j]=pos,a[pos]--;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=h;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=w;j++)&#123;</div><div class="line">			<span class="keyword">if</span>(j==1) cout&lt;&lt;g[i][j];</div><div class="line">			<span class="keyword">else</span> cout&lt;&lt;<span class="string">" "</span>&lt;&lt;g[i][j];</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>模拟<br>蛇形输出即可</p>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>有n个元素的数组p p是一个1-n的全排列 另有一个空数组q<br>每次在p中挑取2个相邻的元素放到q的开头 最后要求q的序列字典序最小 输出序列</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 200050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">struct node&#123;</div><div class="line">	int m,l,r;</div><div class="line">	node(int m,int l,int r):m(m),l(l),r(r)&#123;&#125;</div><div class="line">	bool operator &lt; (const node&amp; x) const&#123;</div><div class="line">		<span class="built_in">return</span> m&gt;x.m;</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line">int dp[2][maxn][36]; </div><div class="line">int pos[maxn];</div><div class="line">int a[2][maxn];</div><div class="line">void makermq(int n,int f)&#123;  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;n;i++) dp[f][i][0]=a[f][i];  </div><div class="line">    <span class="keyword">for</span>(int j=1;(1&lt;&lt;j)&lt;=n;j++)  </div><div class="line">        <span class="keyword">for</span>(int i=0;i+(1&lt;&lt;j)-1&lt;n;i++)  </div><div class="line">            dp[f][i][j]=min(dp[f][i][j-1],dp[f][i+(1&lt;&lt;(j-1))][j-1]);  </div><div class="line">&#125;  </div><div class="line">int rmq(int s,int v,int f)&#123;</div><div class="line">    int k=(int)(<span class="built_in">log</span>((v<span class="_">-s</span>+1)*1.0)/<span class="built_in">log</span>(2.0));  </div><div class="line">    <span class="built_in">return</span> min(dp[f][s][k],dp[f][v-(1&lt;&lt;k)+1][k]);  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n; cin&gt;&gt;n;</div><div class="line">	mm(pos,0);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">		int x; cin&gt;&gt;x;</div><div class="line">		pos[x]=i;</div><div class="line">		a[i&amp;1][i]=x;</div><div class="line">		a[(i&amp;1)^1][i]=inf;</div><div class="line">	&#125;</div><div class="line">	makermq(n,0),makermq(n,1);</div><div class="line">	int x1=rmq(0,n-1,0);</div><div class="line">	priority_queue&lt;node&gt;q;</div><div class="line">	q.push(node(x1,0,n-1));</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		node x=q.top(); q.pop();</div><div class="line">		int v1=x.m;</div><div class="line">		int v2=rmq(pos[v1]+1,x.r,(pos[v1]&amp;1)^1);</div><div class="line">		cout&lt;&lt;v1&lt;&lt;<span class="string">" "</span>&lt;&lt;v2&lt;&lt;<span class="string">" "</span>;</div><div class="line">		int pos1=pos[v1],pos2=pos[v2];</div><div class="line">		<span class="keyword">if</span>(pos1!=x.l) q.push(node(rmq(x.l,pos1-1,x.l&amp;1),x.l,pos1-1));</div><div class="line">		<span class="keyword">if</span>(pos1+1!=pos2) q.push(node(rmq(pos1+1,pos2-1,(pos1+1)&amp;1),pos1+1,pos2-1));</div><div class="line">		<span class="keyword">if</span>(pos2!=x.r) q.push(node(rmq(pos2+1,x.r,(pos2+1)&amp;1),pos2+1,x.r));</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>把q数组的下标由1-&gt;n换成0-&gt;n-1<br>我们逆序 从q0开始取 思考后可以发现q0必须在p数组中下标为偶数的位置中 并且由于是字典序最小 所以选择偶数下标的最小值 记录位置为i<br>q1必须在大于i的位置中挑选是奇数下标位置中的最小值 记录位置j 可以i和j会把区间分成三个部分0-&gt;i-1 i-&gt;j j+1-&gt;n-1 在三个区间维护<br>偶数下标和奇数下标的最小值 每个区间放到优先队列中维护每个区间的偶数下标最小值 q2和q3以及后续的操作同上<br>每个区间奇数下标和偶数下标的最小值可以用RMQ解决 本代码中采用的是多开一维记录奇偶位置的st算法<br>而每个区间的偶数下标的最小值用优先队列维护 确定它后 在比它大的位置中找到奇数下标的最大值 这一循环就完成了</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2017百度之星资格赛&&cf edu26-D]]></title>
      <url>http://xuboming8.github.io/2017/08/06/2017%E7%99%BE%E5%BA%A6%E4%B9%8B%E6%98%9F-cf-edu26-D/</url>
      <content type="html"><![CDATA[<h1 id="2017百度之星资格赛-amp-amp-cf-edu26-D"><a href="#2017百度之星资格赛-amp-amp-cf-edu26-D" class="headerlink" title="2017百度之星资格赛&amp;&amp;cf edu26-D"></a>2017百度之星资格赛&amp;&amp;cf edu26-D</h1><h2 id="cf-edu26-D"><a href="#cf-edu26-D" class="headerlink" title="cf edu26-D"></a>cf edu26-D</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>有n个元素的数组 从中选k个 使得选中的数字乘积末尾的0最多<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int dp[205][20005];</div><div class="line">int get2(LL x)&#123;</div><div class="line">	int ans=0;</div><div class="line">	<span class="keyword">while</span>(x%2==0)&#123;</div><div class="line">		x/=2;</div><div class="line">		ans++;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int get5(LL x)&#123;</div><div class="line">	int ans=0;</div><div class="line">	<span class="keyword">while</span>(x%5==0)&#123;</div><div class="line">		x/=5;</div><div class="line">		ans++;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n,k;</div><div class="line">	cin&gt;&gt;n&gt;&gt;k;</div><div class="line">	mm(dp,-inf); dp[0][0]=0;</div><div class="line">	<span class="keyword">for</span>(int t=1;t&lt;=n;t++)&#123;</div><div class="line">		LL x;</div><div class="line">		cin&gt;&gt;x;</div><div class="line">		int num2=get2(x);</div><div class="line">		int num5=get5(x);</div><div class="line">		<span class="keyword">for</span>(int i=k;i&gt;=1;i--)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=num2;j&lt;=20000;j++)&#123;</div><div class="line">				dp[i][j]=max(dp[i][j],dp[i-1][j-num2]+num5);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	int ans=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=20000;i++)&#123;</div><div class="line">		ans=max(ans,min(i,dp[k][i]));</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>末尾0的个数可以转化为因数2和因数5的个数<br>dp：dp[i][j]表示选择了i个数，且这i个数质因子中2的个数和为j时,质因子中5的个数和的最大值。<br>状态转移方程为：dp[j][l]=max(dp[j][l],dp[j-1][l-n2]+n5);<br>最后扫一遍即可(注意取2的个数与5的个数其中的较小值)</p>
<h2 id="2017Astar-1002"><a href="#2017Astar-1002" class="headerlink" title="2017Astar 1002"></a>2017Astar 1002</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>Problem Description</strong><br><!--more--><br>度度熊国王率领着喵哈哈族的勇士，准备进攻哗啦啦族。<br>哗啦啦族是一个强悍的民族，里面有充满智慧的谋士，拥有无穷力量的战士。<br>所以这一场战争，将会十分艰难。<br>为了更好的进攻哗啦啦族，度度熊决定首先应该从内部瓦解哗啦啦族。<br>第一步就是应该使得哗啦啦族内部不能同心齐力，需要内部有间隙。<br>哗啦啦族一共有n个将领，他们一共有m个强关系，摧毁每一个强关系都需要一定的代价。<br>现在度度熊命令你需要摧毁一些强关系，使得内部的将领，不能通过这些强关系，连成一个完整的连通块，以保证战争的顺利进行。<br>请问最少应该付出多少的代价。</p>
<p><strong>Input</strong><br>本题包含若干组测试数据。<br>第一行两个整数n，m，表示有n个将领，m个关系。<br>接下来m行，每行三个整数u,v,w。表示u将领和v将领之间存在一个强关系，摧毁这个强关系需要代价w<br>数据范围：<br>2&lt;=n&lt;=3000<br>1&lt;=m&lt;=100000<br>1&lt;=u,v&lt;=n<br>1&lt;=w&lt;=1000</p>
<p><strong>Output</strong><br>对于每组测试数据，输出最小需要的代价。</p>
<p><strong>Sample Input</strong><br>2 1<br>1 2 1<br>3 3<br>1 2 5<br>1 2 4<br>2 3 3</p>
<p><strong>Sample Output</strong><br>1<br>3</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 3050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int g[maxn][maxn];</div><div class="line">int n,m;</div><div class="line">void <span class="function"><span class="title">Mincut</span></span>()&#123;</div><div class="line">    int res=inf;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">        int sum=0;</div><div class="line">        <span class="keyword">for</span>(int j=1;j&lt;=n;j++)&#123;</div><div class="line">            <span class="keyword">if</span>(i!=j) sum+=g[i][j];</div><div class="line">        &#125;</div><div class="line">        res=min(res,sum);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,res);</div><div class="line">&#125;</div><div class="line">int p[maxn];</div><div class="line">int find(int x)&#123;</div><div class="line">    <span class="built_in">return</span> x==p[x]?x:p[x]=find(p[x]);</div><div class="line">&#125; </div><div class="line">void merge(int u,int v)&#123;</div><div class="line">    int x=find(u);</div><div class="line">    int y=find(v);</div><div class="line">    <span class="keyword">if</span>(x!=y) p[x]=y;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)&#123;</div><div class="line">        mm(g,0);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;maxn;i++) p[i]=i;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            int u,v,w;</div><div class="line">            cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">            g[u][v]+=w;</div><div class="line">            g[v][u]+=w;</div><div class="line">            merge(u,v);    </div><div class="line">        &#125;</div><div class="line">        int count=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(p[i]==i) count++;</div><div class="line">            <span class="keyword">if</span>(count&gt;1) <span class="built_in">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(count&gt;1) cout&lt;&lt;<span class="string">"0"</span>&lt;&lt;endl;</div><div class="line">        <span class="keyword">else</span> Mincut(); </div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>正解应该为最小割 但是过不掉 数据问题<br>AC思路为：先用并查集判断原图是否联通 不联通直接输出0 否则孤立每个点 把所有连接到该点的边权相加 维护最小值<br>注意边权要累加</p>
<h2 id="2017Astar-1003"><a href="#2017Astar-1003" class="headerlink" title="2017Astar 1003"></a>2017Astar 1003</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>Problem Description</strong><br>度度熊为了拯救可爱的公主，于是与邪恶大魔王战斗起来。<br>邪恶大魔王的麾下有n个怪兽，每个怪兽有a[i]的生命值，以及b[i]的防御力。<br>度度熊一共拥有m种攻击方式，第i种攻击方式，需要消耗k[i]的晶石，造成p[i]点伤害。<br>当然，如果度度熊使用第i个技能打在第j个怪兽上面的话，会使得第j个怪兽的生命值减少p[i]-b[j]，当然如果伤害小于防御，那么攻击就不会奏效。<br>如果怪兽的生命值降为0或以下，那么怪兽就会被消灭。<br>当然每个技能都可以使用无限次。<br>请问度度熊最少携带多少晶石，就可以消灭所有的怪兽。</p>
<p><strong>Input</strong><br>本题包含若干组测试数据。<br>第一行两个整数n，m,表示有n个怪兽，m种技能。<br>接下来n行，每行两个整数，a[i],b[i]，分别表示怪兽的生命值和防御力。<br>再接下来m行，每行两个整数k[i]和p[i]，分别表示技能的消耗晶石数目和技能的伤害值。<br>数据范围:<br>1&lt;=n&lt;=100000<br>1&lt;=m&lt;=1000<br>1&lt;=a[i]&lt;=1000<br>0&lt;=b[i]&lt;=10<br>0&lt;=k[i]&lt;=100000<br>0&lt;=p[i]&lt;=1000</p>
<p><strong>Output</strong><br>对于每组测试数据，输出最小的晶石消耗数量，如果不能击败所有的怪兽，输出-1</p>
<p><strong>Sample Input</strong><br>1 2<br>3 5<br>7 10<br>6 8<br>1 2<br>3 5<br>10 7<br>8 6</p>
<p><strong>Sample Output</strong><br>6<br>18</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">LL a[maxn],b[maxn];</div><div class="line">LL k[1050],p[1050]; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int n,m;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)&#123;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i]&gt;&gt;b[i];</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++) cin&gt;&gt;k[i]&gt;&gt;p[i];</div><div class="line">        LL ans=0;</div><div class="line">        LL dp[2100][15];</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=2050;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;=10;j++) dp[i][j]=INF;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=10;i++) dp[0][i]=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;=10;j++)&#123;</div><div class="line">                int harm=p[i]-j;</div><div class="line">                <span class="keyword">if</span>(harm&lt;=0) <span class="built_in">continue</span>;</div><div class="line">                <span class="keyword">for</span>(int v=harm;v&lt;=2050;v++)&#123;</div><div class="line">                    dp[v][j]=min(dp[v][j],dp[v-harm][j]+k[i]);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1000;i&lt;=2050;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;=10;j++) dp[1000][j]=min(dp[1000][j],dp[i][j]);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=999;i&gt;=1;i--)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;=10;j++) dp[i][j]=min(dp[i][j],dp[i+1][j]);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(dp[a[i]][b[i]]==INF)&#123;</div><div class="line">                ans=-1;</div><div class="line">                <span class="built_in">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> ans+=dp[a[i]][b[i]];</div><div class="line">        &#125;</div><div class="line">        cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>背包dp<br>dp[i][j]表示攻击血量为i 防御为j的怪物携带的最小晶石<br>注意开LL以及攻击溢出的情况(伤害i+1的血量可能比伤害i的血量消耗的晶石要少)<br>所以dp更新完后 再逆序更新维护最小值</p>
<h2 id="2017Astar-1004"><a href="#2017Astar-1004" class="headerlink" title="2017Astar 1004"></a>2017Astar 1004</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>Problem Description</strong><br>度度熊最期待每天的午饭时光，因为早饭菜品清淡，晚饭减肥不敢吃太多（胖纸的忧伤T.T）。<br>百度食堂的午餐超级丰富，祖国各大菜系应有尽有，度度熊在每个窗口都有爱吃的菜品，而且他还为喜爱的菜品打了分，吃货的情怀呀(&gt;.&lt;)。<br>但是，好吃的饭菜总是很贵，每天的午饭预算有限，请帮度度熊算一算，怎样打饭才能买到的最好吃的饭菜?(不超过预算、不重样、午餐等分最高的情况下，选择菜品序号加和最小，加和相等时字典序最小的组合)</p>
<p><strong>Input</strong><br>第一行一个整数T，表示T组数据。 每组测试数据将以如下格式从标准输入读入：<br>B<br>N<br>score_1 cost_1<br>score_2 cost_2<br>:<br>score_N cost_N<br>第一行，正整数B（0 &lt;= B &lt;= 1000），代表午餐的预算。<br>第二行，正整数N (0 &lt;= N &lt;= 100)，代表午餐可选的菜品数量<br>从第三行到第 (N + 2) 行，每行两个正整数，以空格分隔，score_i表示菜品的得分，cost_i表示菜品的价格(0 &lt;= score_i, cost_i &lt;= 100)。</p>
<p><strong>Output</strong><br>对于每组数据，输出两行： 第一行输出：”Case #i:”。i代表第i组测试数据。 第二行输出菜品的总得分和总花费，以空格分隔。 第三行输出所选菜品的序号，菜品序号从1开始，以空格分隔。</p>
<p><strong>Sample Input</strong><br>2<br>29<br>6<br>9 10<br>3 4<br>6 5<br>7 20<br>10 9<br>15 11<br>0<br>2<br>2 23<br>10 12</p>
<p><strong>Sample Output</strong><br>Case #1:<br>34 29<br>2 3 5 6<br>Case #2:<br>0 0</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int value[maxn],cost[maxn];</div><div class="line">int b,n;</div><div class="line">int flag=1;</div><div class="line">int dp1[1050],dp2[1050];</div><div class="line">vector&lt;int&gt;e;</div><div class="line">int dish[105][1050]; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int t; cin&gt;&gt;t;</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        e.clear();</div><div class="line">        cin&gt;&gt;b&gt;&gt;n;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;value[i]&gt;&gt;cost[i];</div><div class="line">        cout&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;flag++&lt;&lt;<span class="string">":"</span>&lt;&lt;endl;</div><div class="line">        mm(dp1,0),mm(dp2,inf),mm(dish,0);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=b;j&gt;=cost[i];j--)&#123;</div><div class="line">                <span class="keyword">if</span>(dp1[j]&lt;dp1[j-cost[i]]+value[i] || (dp1[j]==dp1[j-cost[i]]+value[i] &amp;&amp; dp2[j]&gt;dp2[j-cost[i]]+i))&#123;</div><div class="line">                    dp1[j]=dp1[j-cost[i]]+value[i];</div><div class="line">                    dp2[j]=dp2[j-cost[i]]+i;</div><div class="line">                    dish[i][j]=1;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        int s=b,total=0;</div><div class="line">        <span class="keyword">for</span>(int i=n;i&gt;=1;i--)&#123;</div><div class="line">            <span class="keyword">if</span>(dish[i][s])&#123;</div><div class="line">                total+=cost[i];</div><div class="line">                s-=cost[i];</div><div class="line">                e.pb(i);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        cout&lt;&lt;dp1[b]&lt;&lt;<span class="string">" "</span>&lt;&lt;total&lt;&lt;endl;</div><div class="line">        int len=e.size();</div><div class="line">        <span class="keyword">for</span>(int i=len-1;i&gt;=0;i--)&#123;</div><div class="line">            <span class="keyword">if</span>(i==0) cout&lt;&lt;e[i];</div><div class="line">            <span class="keyword">else</span> cout&lt;&lt;e[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(e.size()&gt;0) cout&lt;&lt;endl;</div><div class="line">    &#125;    </div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>类似于输出01背包字典序顺序<br>注意为了使得菜品的序列好最小 再开一个dp2来维护dp1 若dp1更新时同步更新dp2 若dp1相同但是dp2可以获得更小的字典序 同步更新dp1和dp2<br>dish记录位置 输出字典序即可</p>
<h2 id="2017Astar-1005"><a href="#2017Astar-1005" class="headerlink" title="2017Astar 1005"></a>2017Astar 1005</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>Problem Description</strong><br>对于一个串S，当它同时满足如下条件时，它就是一个01偏串：<br>1、只由0和1两种符组成；<br>2、在S的每一个前缀中，0的个数不超过1的个数；<br>3、S中0的个数和1的个数相等。<br>现在给定01偏串S，请计算一下S在所有长度为n的01偏串中作为子串出现的次数的总和。<br>由于结果比较大，结果对1e9+7取余后输出。<br>样例解释：<br>在第二个样例中，长度为4的偏串共两个1010，1100。10在1010中出现了两次，在1100中出现了1次。所以答案是3。</p>
<p><strong>Input</strong><br>第一行给出一个整数T(1&lt;=T&lt;=40),表示测试数据的数目。<br>每一组测试包含一个整数n和字符串S，中间用空格分开。(1&lt;=|S|&lt;=100000，1&lt;=n&lt;=1000000000)<br>输入保证S是一个01偏串。</p>
<p><strong>Output</strong><br>对于每一组数据，输出一个整数占一行，表示答案。</p>
<p><strong>Sample Input</strong><br>2<br>2 10<br>4 10</p>
<p><strong>Sample Output</strong><br>1<br>3</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">//LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">LL fac[] = &#123;1, 641102369, 578095319, 5832229, 259081142, 974067448, 316220877, 690120224, 251368199, 980250487, 682498929, </div><div class="line">	134623568, 95936601, 933097914, 167332441, 598816162, 336060741, 248744620, 626497524, 288843364, 491101308, 245341950, </div><div class="line">	565768255, 246899319, 968999, 586350670, 638587686, 881746146, 19426633, 850500036, 76479948, 268124147, 842267748, </div><div class="line">	886294336, 485348706, 463847391, 544075857, 898187927, 798967520, 82926604, 723816384, 156530778, 721996174, 299085602, </div><div class="line">	323604647, 172827403, 398699886, 530389102, 294587621, 813805606, 67347853, 497478507, 196447201, 722054885, 228338256, </div><div class="line">	407719831, 762479457, 746536789, 811667359, 778773518, 27368307, 438371670, 59469516, 5974669, 766196482, 606322308, 86609485, </div><div class="line">	889750731, 340941507, 371263376, 625544428, 788878910, 808412394, 996952918, 585237443, 1669644, 361786913, 480748381, </div><div class="line">	595143852, 837229828, 199888908, 526807168, 579691190, 145404005, 459188207, 534491822, 439729802, 840398449, 899297830, </div><div class="line">	235861787, 888050723, 656116726, 736550105, 440902696, 85990869, 884343068, 56305184, 973478770, 168891766, 804805577, </div><div class="line">	927880474, 876297919, 934814019, 676405347, 567277637, 112249297, 44930135, 39417871, 47401357, 108819476, 281863274, </div><div class="line">	60168088, 692636218, 432775082, 14235602, 770511792, 400295761, 697066277, 421835306, 220108638, 661224977, 261799937, </div><div class="line">	168203998, 802214249, 544064410, 935080803, 583967898, 211768084, 751231582, 972424306, 623534362, 335160196, 243276029, </div><div class="line">	554749550, 60050552, 797848181, 395891998, 172428290, 159554990, 887420150, 970055531, 250388809, 487998999, 856259313, </div><div class="line">	82104855, 232253360, 513365505, 244109365, 1559745, 695345956, 261384175, 849009131, 323214113, 747664143, 444090941, </div><div class="line">	659224434, 80729842, 570033864, 664989237, 827348878, 195888993, 576798521, 457882808, 731551699, 212938473, 509096183, </div><div class="line">	827544702, 678320208, 677711203, 289752035, 66404266, 555972231, 195290384, 97136305, 349551356, 785113347, 83489485, </div><div class="line">	66247239, 52167191, 307390891, 547665832, 143066173, 350016754, 917404120, 296269301, 996122673, 23015220, 602139210, </div><div class="line">	748566338, 187348575, 109838563, 574053420, 105574531, 304173654, 542432219, 34538816, 325636655, 437843114, 630621321, </div><div class="line">	26853683, 933245637, 616368450, 238971581, 511371690, 557301633, 911398531, 848952161, 958992544, 925152039, 914456118, </div><div class="line">	724691727, 636817583, 238087006, 946237212, 910291942, 114985663, 492237273, 450387329, 834860913, 763017204, 368925948, </div><div class="line">	475812562, 740594930, 45060610, 806047532, 464456846, 172115341, 75307702, 116261993, 562519302, 268838846, 173784895, </div><div class="line">	243624360, 61570384, 481661251, 938269070, 95182730, 91068149, 115435332, 495022305, 136026497, 506496856, 710729672, </div><div class="line">	113570024, 366384665, 564758715, 270239666, 277118392, 79874094, 702807165, 112390913, 730341625, 103056890, 677948390,</div><div class="line">	 339464594, 167240465, 108312174, 839079953, 479334442, 271788964, 135498044, 277717575, 591048681, 811637561, 353339603, </div><div class="line">	 889410460, 839849206, 192345193, 736265527, 316439118, 217544623, 788132977, 618898635, 183011467, 380858207, 996097969, </div><div class="line">	 898554793, 335353644, 54062950, 611251733, 419363534, 965429853, 160398980, 151319402, 990918946, 607730875, 450718279, </div><div class="line">	 173539388, 648991369, 970937898, 500780548, 780122909, 39052406, 276894233, 460373282, 651081062, 461415770, 358700839, </div><div class="line">	 643638805, 560006119, 668123525, 686692315, 673464765, 957633609, 199866123, 563432246, 841799766, 385330357, 504962686, </div><div class="line">	 954061253, 128487469, 685707545, 299172297, 717975101, 577786541, 318951960, 773206631, 306832604, 204355779, 573592106, </div><div class="line">	 30977140, 450398100, 363172638, 258379324, 472935553, 93940075, 587220627, 776264326, 793270300, 291733496, 522049725, </div><div class="line">	 579995261, 335416359, 142946099, 472012302, 559947225, 332139472, 499377092, 464599136, 164752359, 309058615, 86117128, </div><div class="line">	 580204973, 563781682, 954840109, 624577416, 895609896, 888287558, 836813268, 926036911, 386027524, 184419613, 724205533, </div><div class="line">	 403351886, 715247054, 716986954, 830567832, 383388563, 68409439, 6734065, 189239124, 68322490, 943653305, 405755338, </div><div class="line">	 811056092, 179518046, 825132993, 343807435, 985084650, 868553027, 148528617, 160684257, 882148737, 591915968, 701445829, </div><div class="line">	 529726489, 302177126, 974886682, 241107368, 798830099, 940567523, 11633075, 325334066, 346091869, 115312728, 473718967, </div><div class="line">	 218129285, 878471898, 180002392, 699739374, 917084264, 856859395, 435327356, 808651347, 421623838, 105419548, 59883031, </div><div class="line">	 322487421, 79716267, 715317963, 429277690, 398078032, 316486674, 384843585, 940338439, 937409008, 940524812, 947549662, </div><div class="line">	 833550543, 593524514, 996164327, 987314628, 697611981, 636177449, 274192146, 418537348, 925347821, 952831975, 893732627, </div><div class="line">	 1277567, 358655417, 141866945, 581830879, 987597705, 347046911, 775305697, 125354499, 951540811, 247662371, 343043237, </div><div class="line">	 568392357, 997474832, 209244402, 380480118, 149586983, 392838702, 309134554, 990779998, 263053337, 325362513, 780072518, </div><div class="line">	 551028176, 990826116, 989944961, 155569943, 596737944, 711553356, 268844715, 451373308, 379404150, 462639908, 961812918, </div><div class="line">	 654611901, 382776490, 41815820, 843321396, 675258797, 845583555, 934281721, 741114145, 275105629, 666247477, 325912072, </div><div class="line">	 526131620, 252551589, 432030917, 554917439, 818036959, 754363835, 795190182, 909210595, 278704903, 719566487, 628514947, </div><div class="line">	 424989675, 321685608, 50590510, 832069712, 198768464, 702004730, 99199382, 707469729, 747407118, 302020341, 497196934, </div><div class="line">	 5003231, 726997875, 382617671, 296229203, 183888367, 703397904, 552133875, 732868367, 350095207, 26031303, 863250534, </div><div class="line">	 216665960, 561745549, 352946234, 784139777, 733333339, 503105966, 459878625, 803187381, 16634739, 180898306, 68718097, </div><div class="line">	 985594252, 404206040, 749724532, 97830135, 611751357, 31131935, 662741752, 864326453, 864869025, 167831173, 559214642, </div><div class="line">	 718498895, 91352335, 608823837, 473379392, 385388084, 152267158, 681756977, 46819124, 313132653, 56547945, 442795120, </div><div class="line">	 796616594, 256141983, 152028387, 636578562, 385377759, 553033642, 491415383, 919273670, 996049638, 326686486, 160150665, </div><div class="line">	 141827977, 540818053, 693305776, 593938674, 186576440, 688809790, 565456578, 749296077, 519397500, 551096742, 696628828, </div><div class="line">	 775025061, 370732451, 164246193, 915265013, 457469634, 923043932, 912368644, 777901604, 464118005, 637939935, 956856710, </div><div class="line">	 490676632, 453019482, 462528877, 502297454, 798895521, 100498586, 699767918, 849974789, 811575797, 438952959, 606870929,</div><div class="line">	 907720182, 179111720, 48053248, 508038818, 811944661, 752550134, 401382061, 848924691, 764368449, 34629406, 529840945, </div><div class="line">	 435904287, 26011548, 208184231, 446477394, 206330671, 366033520, 131772368, 185646898, 648711554, 472759660, 523696723,</div><div class="line">	 271198437, 25058942, 859369491, 817928963, 330711333, 724464507, 437605233, 701453022, 626663115, 281230685, 510650790,</div><div class="line">	 596949867, 295726547, 303076380, 465070856, 272814771, 538771609, 48824684, 951279549, 939889684, 564188856, 48527183,</div><div class="line">     201307702, 484458461, 861754542, 326159309, 181594759, 668422905, 286273596, 965656187, 44135644, 359960756, 936229527,</div><div class="line">	  407934361, 267193060, 456152084, 459116722, 124804049, 262322489, 920251227, 816929577, 483924582, 151834896, 167087470,</div><div class="line">	   490222511, 903466878, 361583925, 368114731, 339383292, 388728584, 218107212, 249153339, 909458706, 322908524, </div><div class="line">	   202649964, 92255682, 573074791, 15570863, 94331513, 744158074, 196345098, 334326205, 9416035, 98349682, 882121662, </div><div class="line">	   769795511, 231988936, 888146074, 137603545, 582627184, 407518072, 919419361, 909433461, 986708498, 310317874, 373745190, </div><div class="line">	   263645931, 256853930, 876379959, 702823274, 147050765, 308186532, 175504139, 180350107, 797736554, 606241871, 384547635, </div><div class="line">	   273712630, 586444655, 682189174, 666493603, 946867127, 819114541, 502371023, 261970285, 825871994, 126925175, 701506133,</div><div class="line">	    314738056, 341779962, 561011609, 815463367, 46765164, 49187570, 188054995, 957939114, 64814326, 933376898, 329837066, </div><div class="line">	    338121343, 765215899, 869630152, 978119194, 632627667, 975266085, 435887178, 282092463, 129621197, 758245605, 827722926,</div><div class="line">	     201339230, 918513230, 322096036, 547838438, 985546115, 852304035, 593090119, 689189630, 555842733, 567033437, </div><div class="line">	     469928208, 212842957, 117842065, 404149413, 155133422, 663307737, 208761293, 206282795, 717946122, 488906585, 414236650, </div><div class="line">	     280700600, 962670136, 534279149, 214569244, 375297772, 811053196, 922377372, 289594327, 219932130, 211487466, 701050258, </div><div class="line">	     398782410, 863002719, 27236531, 217598709, 375472836, 810551911, 178598958, 247844667, 676526196, 812283640, 863066876, </div><div class="line">	     857241854, 113917835, 624148346, 726089763, 564827277, 826300950, 478982047, 439411911, 454039189, 633292726, 48562889,</div><div class="line">	     802100365, 671734977, 945204804, 508831870, 398781902, 897162044, 644050694, 892168027, 828883117, 277714559, 713448377,</div><div class="line">	     624500515, 590098114, 808691930, 514359662, 895205045, 715264908, 628829100, 484492064, 919717789, 513196123, 748510389,</div><div class="line">        403652653, 574455974, 77123823, 172096141, 819801784, 581418893, 15655126, 15391652, 875641535, 203191898, </div><div class="line">        264582598, 880691101, 907800444, 986598821, 340030191, 264688936, 369832433, 785804644, 842065079, 423951674, </div><div class="line">        663560047, 696623384, 496709826, 161960209, 331910086, 541120825, 951524114, 841656666, 162683802, 629786193, </div><div class="line">        190395535, 269571439, 832671304, 76770272, 341080135, 421943723, 494210290, 751040886, 317076664, 672850561, </div><div class="line">        72482816, 493689107, 135625240, 100228913, 684748812, 639655136, 906233141, 929893103, 277813439, 814362881, </div><div class="line">        562608724, 406024012, 885537778, 10065330, 60625018, 983737173, 60517502, 551060742, 804930491, 823845496, </div><div class="line">        727416538, 946421040, 678171399, 842203531, 175638827, 894247956, 538609927, 885362182, 946464959, 116667533, </div><div class="line">        749816133, 241427979, 871117927, 281804989, 163928347, 563796647, 640266394, 774625892, 59342705, 256473217, </div><div class="line">        674115061, 918860977, 322633051, 753513874, 393556719, 304644842, 767372800, 161362528, 754787150, 627655552, </div><div class="line">        677395736, 799289297, 846650652, 816701166, 687265514, 787113234, 358757251, 701220427, 607715125, 245795606, </div><div class="line">        600624983, 10475577, 728620948, 759404319, 36292292, 491466901, 22556579, 114495791, 647630109, 586445753, 482254337,</div><div class="line">        718623833, 763514207, 66547751, 953634340, 351472920, 308474522, 494166907, 634359666, 172114298, 865440961, </div><div class="line">        364380585, 921648059, 965683742, 260466949, 117483873, 962540888, 237120480, 620531822, 193781724, 213092254, </div><div class="line">        107141741, 602742426, 793307102, 756154604, 236455213, 362928234, 14162538, 753042874, 778983779, 25977209, 49389215,</div><div class="line">        698308420, 859637374, 49031023, 713258160, 737331920, 923333660, 804861409, 83868974, 682873215, 217298111, </div><div class="line">        883278906, 176966527, 954913, 105359006, 390019735, 10430738, 706334445, 315103615, 567473423, 708233401, 48160594, </div><div class="line">        946149627, 346966053, 281329488, 462880311, 31503476, 185438078, 965785236, 992656683, 916291845, 881482632, </div><div class="line">	    899946391, 321900901, 512634493, 303338827, 121000338, 967284733, 492741665, 152233223, 165393390, 680128316, </div><div class="line">	    917041303, 532702135, 741626808, 496442755, 536841269, 131384366, 377329025, 301196854, 859917803, 676511002, 373451745, </div><div class="line">	    847645126, 823495900, 576368335, 73146164, 954958912, 847549272, 241289571, 646654592, 216046746, 205951465, 3258987, </div><div class="line">	    780882948, 822439091, 598245292, 869544707, 698611116, 0&#125;;</div><div class="line">const LL M=1e6;</div><div class="line">LL get(LL x)&#123;</div><div class="line">    <span class="keyword">if</span>(x&gt;=mod) <span class="built_in">return</span> 0;</div><div class="line">    <span class="keyword">if</span>(x==0) <span class="built_in">return</span> 1;</div><div class="line">    LL res=fac[x/M]%mod;</div><div class="line">    <span class="keyword">for</span>(LL i=x/M*M+1;i&lt;=x;i++)&#123;</div><div class="line">        res=res*i%mod;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> res;</div><div class="line">&#125;</div><div class="line">LL qpow(LL n,LL m)&#123;</div><div class="line">    LL res = 1;</div><div class="line">    <span class="keyword">while</span>(m)&#123;</div><div class="line">        <span class="keyword">if</span>(m&amp;1) res = res*n%mod;</div><div class="line">        n = n*n%mod;</div><div class="line">        m &gt;&gt;= 1;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> res;</div><div class="line">&#125;</div><div class="line">LL solve(LL x)&#123;</div><div class="line">    LL a=get(2*x+1),b=get(x+1),c=get(x);</div><div class="line">    b=qpow(b,mod-2),c=qpow(c,mod-2);</div><div class="line">    <span class="built_in">return</span> a*b%mod*c%mod;</div><div class="line">&#125;</div><div class="line">char s[100050]; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t; scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        LL n;</div><div class="line">        scanf(<span class="string">"%I64d%s"</span>,&amp;n,s);</div><div class="line">        LL len=strlen(s);</div><div class="line">        <span class="keyword">if</span>((n-len)&amp;1 || (n-len)&lt;0) puts(<span class="string">"0"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,solve((n-len)/2));</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">//http://www.cnblogs.com/fancy-itlife/p/4312170.html lucas定理转跳</div><div class="line">//blog.csdn.net/WuBaizhe/article/details/76820871 本题详细题解转跳</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>卡特兰数变形+组合数取模<br>AC代码用的是分块打表解决组合数取模的问题 组合数取模当mod比较小时 还可以用LUCAS定理</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[并查集]]></title>
      <url>http://xuboming8.github.io/2017/08/03/%E5%B9%B6%E6%9F%A5%E9%9B%86/</url>
      <content type="html"><![CDATA[<h1 id="并查集简单应用-amp-简单搜索"><a href="#并查集简单应用-amp-简单搜索" class="headerlink" title="并查集简单应用&amp;简单搜索"></a>并查集简单应用&amp;简单搜索</h1><h2 id="hihocoder-1322"><a href="#hihocoder-1322" class="headerlink" title="hihocoder 1322"></a>hihocoder 1322</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>判断给定的是否是一棵树<br><a id="more"></a></p>
<h3 id="参考AC代码-dfs版"><a href="#参考AC代码-dfs版" class="headerlink" title="参考AC代码(dfs版)"></a>参考AC代码(dfs版)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 550</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">int vis[maxn];</div><div class="line">void dfs(int x)&#123;</div><div class="line">	vis[x]=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[x].size();i++)&#123;</div><div class="line">		int next=e[x][i];</div><div class="line">		<span class="keyword">if</span>(!vis[next]) dfs(next);	</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t; cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int n,m;</div><div class="line">		cin&gt;&gt;n&gt;&gt;m;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">		mm(vis,0);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			int x,y;</div><div class="line">			cin&gt;&gt;x&gt;&gt;y;</div><div class="line">			e[x].pb(y);</div><div class="line">			e[y].pb(x);</div><div class="line">		&#125;</div><div class="line">		dfs(1);</div><div class="line">		int flag=1;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(!vis[i])&#123;</div><div class="line">				flag=0;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125; </div><div class="line">		<span class="keyword">if</span>(flag &amp;&amp; n==m+1) cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码-并查集版"><a href="#参考AC代码-并查集版" class="headerlink" title="参考AC代码(并查集版)"></a>参考AC代码(并查集版)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 505</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int p[maxn];</div><div class="line">int find(int x)&#123;</div><div class="line">	<span class="built_in">return</span> p[x]==x?x:p[x]=find(p[x]);</div><div class="line">&#125;</div><div class="line">void solve(int u,int v)&#123;</div><div class="line">	int x=find(u);</div><div class="line">	int y=find(v);</div><div class="line">	<span class="keyword">if</span>(x!=y) p[x]=y;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t; cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int n,m;</div><div class="line">		cin&gt;&gt;n&gt;&gt;m;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) p[i]=i;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			int x,y;</div><div class="line">			cin&gt;&gt;x&gt;&gt;y;</div><div class="line">			solve(x,y);</div><div class="line">		&#125;</div><div class="line">		int count=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(p[i]==i) count++;</div><div class="line">			<span class="keyword">if</span>(count&gt;1) <span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(count==1 &amp;&amp; n==m+1) cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>dfs版：从1点开始遍历 所有经过的点标记 如果所有的点都被标记且n==m+1 yes 否则no<br>并查集版：只有一个联通分量并且该连通分量里无环(n==m+1)</p>
<h2 id="HDU-1232"><a href="#HDU-1232" class="headerlink" title="HDU 1232"></a>HDU 1232</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>求加多少条边后图中的任意两点都有路径</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line">using namespace std;</div><div class="line">int p[maxn];</div><div class="line">int find(int x)&#123;</div><div class="line">    <span class="built_in">return</span> x==p[x]?x:p[x]=find(p[x]);</div><div class="line">&#125;</div><div class="line">void solve(int u,int v)&#123;</div><div class="line">    int x=find(u);</div><div class="line">    int y=find(v);</div><div class="line">    <span class="keyword">if</span>(x!=y) p[x]=y;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int n,m;</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)&amp;&amp;n)&#123;</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;m);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) p[i]=i;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            int x,y;</div><div class="line">            cin&gt;&gt;x&gt;&gt;y;</div><div class="line">            solve(x,y);</div><div class="line">        &#125;        </div><div class="line">        int count=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(p[i]==i) count++;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,count-1);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>转换为：连通分量个数-1</p>
<h2 id="HDU-1213"><a href="#HDU-1213" class="headerlink" title="HDU 1213"></a>HDU 1213</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>求连通分量个数</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int p[maxn];</div><div class="line">int find(int x)&#123;</div><div class="line">    <span class="built_in">return</span> x==p[x]?x:p[x]=find(p[x]);</div><div class="line">&#125;</div><div class="line">void solve(int u,int v)&#123;</div><div class="line">    int x=find(u);</div><div class="line">    int y=find(v);</div><div class="line">    <span class="keyword">if</span>(x!=y) p[x]=y;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int t;</div><div class="line">    cin&gt;&gt;t;</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n,m;</div><div class="line">        cin&gt;&gt;n&gt;&gt;m;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) p[i]=i;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            int x,y;</div><div class="line">            cin&gt;&gt;x&gt;&gt;y;</div><div class="line">            solve(x,y);</div><div class="line">        &#125;</div><div class="line">        int count=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(p[i]==i) count++;</div><div class="line">        &#125;</div><div class="line">        cout&lt;&lt;count&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-1272"><a href="#HDU-1272" class="headerlink" title="HDU 1272"></a>HDU 1272</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>判断给定图是否为一棵树</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int p[maxn];</div><div class="line">int find(int x)&#123;</div><div class="line">    <span class="built_in">return</span> x==p[x]?x:p[x]=find(p[x]);</div><div class="line">&#125;</div><div class="line">void solve(int u,int v)&#123;</div><div class="line">    int x=find(u);</div><div class="line">    int y=find(v);</div><div class="line">    <span class="keyword">if</span>(x!=y) p[x]=y;</div><div class="line">&#125;</div><div class="line">vector&lt;int&gt;e;</div><div class="line"><span class="built_in">set</span>&lt;int&gt;s;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int x,y;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;x&gt;&gt;y)&#123;</div><div class="line">        <span class="keyword">if</span>(x==-1 &amp;&amp; y==-1) <span class="built_in">break</span>;</div><div class="line">        <span class="keyword">if</span>(x==0 &amp;&amp; y==0)&#123;</div><div class="line">            cout&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;endl;</div><div class="line">            <span class="built_in">continue</span>;</div><div class="line">        &#125;</div><div class="line">        e.clear(),s.clear();</div><div class="line">        int n=0,m=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;maxn;i++) p[i]=i;</div><div class="line">        <span class="keyword">while</span>(x!=0 &amp;&amp; y!=0)&#123;</div><div class="line">            <span class="keyword">if</span>(!s.count(x)) e.pb(x);</div><div class="line">            <span class="keyword">if</span>(!s.count(y)) e.pb(y);</div><div class="line">            s.insert(x),s.insert(y);</div><div class="line">            m++;</div><div class="line">            solve(x,y);</div><div class="line">            cin&gt;&gt;x&gt;&gt;y;</div><div class="line">        &#125;</div><div class="line">        n=e.size();</div><div class="line">        int count=0;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;e.size();i++)&#123;</div><div class="line">            int num=e[i];</div><div class="line">            <span class="keyword">if</span>(p[num]==num) count++;</div><div class="line">            <span class="keyword">if</span>(count&gt;1) <span class="built_in">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(count==1 &amp;&amp; n==m+1) cout&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;endl;</div><div class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">"No"</span>&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>注意本题中空树要输出yes<br>点也不是从0开始的 用set判重后加入vector确定顶点个数 也可用hash判断<br>之后和判树一样</p>
<h2 id="HDU-1325"><a href="#HDU-1325" class="headerlink" title="HDU 1325"></a>HDU 1325</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>判断有向图是否为树</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int hashh[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int x,y;</div><div class="line">	int f=1;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;x&gt;&gt;y)&#123;</div><div class="line">		<span class="keyword">if</span>(x&lt;0 &amp;&amp; y&lt;0) <span class="built_in">break</span>;</div><div class="line">		<span class="keyword">if</span>(x==0 &amp;&amp; y==0)&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;f++&lt;&lt;<span class="string">" is a tree."</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125; </div><div class="line">		mm(hashh,0);</div><div class="line">		int flag=0;</div><div class="line">		int n=0,m=0;</div><div class="line">		<span class="keyword">while</span>(x!=0 &amp;&amp; y!=0)&#123;</div><div class="line">			<span class="keyword">if</span>(hashh[x]==0) n++;</div><div class="line">			<span class="keyword">if</span>(hashh[y]==0) n++;</div><div class="line">			m++;</div><div class="line">			<span class="keyword">if</span>(hashh[y]==2) flag=1;</div><div class="line">			hashh[x]=1,hashh[y]=2; </div><div class="line">			cin&gt;&gt;x&gt;&gt;y;</div><div class="line">		&#125;</div><div class="line">		int cnt=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;maxn;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(hashh[i]==0) <span class="built_in">continue</span>;</div><div class="line">			<span class="keyword">if</span>(hashh[i]==1) cnt++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(cnt&gt;1) flag=1;</div><div class="line">		<span class="keyword">if</span>(flag==0 &amp;&amp; n==m+1) cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;f++&lt;&lt;<span class="string">" is a tree."</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;f++&lt;&lt;<span class="string">" is not a tree."</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>跟上题类似 区别在于无向图变成了有向图<br>满足树需要三个条件：<br>1.无环 通过n==m+1判断<br>2.无入度大于1的点 通过hash判断 u-&gt;v 令u的hash值为1 v的hash值为2 hash为2的点不能再有入度<br>3.只有一个入度为0的点(只能有一个根) 通过计算hash值为1的点 大于1是森林不是树</p>
<h2 id="HDU-1856"><a href="#HDU-1856" class="headerlink" title="HDU 1856"></a>HDU 1856</h2><h3 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h3><p>求最大连通分量的顶点数</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int p[maxn],num[maxn];</div><div class="line">int find(int x)&#123;</div><div class="line">    <span class="built_in">return</span> x==p[x]?x:p[x]=find(p[x]);</div><div class="line">&#125;</div><div class="line">int solve(int u,int v)&#123;</div><div class="line">    int x=find(u);</div><div class="line">    int y=find(v);</div><div class="line">    <span class="keyword">if</span>(x!=y)&#123;</div><div class="line">        p[x]=y;</div><div class="line">        num[y]+=num[x];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int m;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;m)&#123;</div><div class="line">        <span class="keyword">if</span>(m==0)&#123;</div><div class="line">            cout&lt;&lt;<span class="string">"1"</span>&lt;&lt;endl;</div><div class="line">            <span class="built_in">continue</span>;</div><div class="line">        &#125;</div><div class="line">        int n=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;maxn;i++)&#123;</div><div class="line">            p[i]=i;</div><div class="line">            num[i]=1;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            int x,y;</div><div class="line">            cin&gt;&gt;x&gt;&gt;y;</div><div class="line">            n=max(n,max(x,y));</div><div class="line">            solve(x,y);</div><div class="line">        &#125;</div><div class="line">        int ans=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(num[i]&gt;ans) ans=num[i];</div><div class="line">        &#125;</div><div class="line">        cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>统计每个结点下的子结点个数 用dfs会爆栈 所以使用并查集<br>每次合并的时候还要合并num顶点数 最后统计num最大值的就是所求</p>
<h2 id="HDU-1102"><a href="#HDU-1102" class="headerlink" title="HDU 1102"></a>HDU 1102</h2><h3 id="题目要求-6"><a href="#题目要求-6" class="headerlink" title="题目要求"></a>题目要求</h3><p>在最小生成树上加一个限制条件：<br>给出一些边确定已在MST中 用剩下的边构成MST</p>
<h3 id="参考AC代码-kruskal"><a href="#参考AC代码-kruskal" class="headerlink" title="参考AC代码(kruskal)"></a>参考AC代码(kruskal)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">struct edge&#123;</div><div class="line">    int u,v,w;</div><div class="line">    edge(int u,int v,int w):u(u),v(v),w(w)&#123;&#125;</div><div class="line">    bool operator &lt; (const edge&amp; x) const&#123;</div><div class="line">        <span class="built_in">return</span> w&lt;x.w;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">int p[maxn];</div><div class="line">int n,ans,q;</div><div class="line">vector&lt;edge&gt;e;</div><div class="line">int find(int x)&#123;</div><div class="line">    <span class="built_in">return</span> x==p[x]?x:p[x]=find(p[x]);</div><div class="line">&#125;</div><div class="line">void merge(int u,int v)&#123;</div><div class="line">    int x=find(u);</div><div class="line">    int y=find(v);</div><div class="line">    <span class="keyword">if</span>(x!=y) p[x]=y;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">kruskal</span></span>()&#123;</div><div class="line">    sort(e.begin(),e.end());</div><div class="line">    int m=e.size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;m;i++)&#123;</div><div class="line">        int u=e[i].u,v=e[i].v;</div><div class="line">        int x=find(u),y=find(v);</div><div class="line">        <span class="keyword">if</span>(x!=y)&#123;</div><div class="line">            ans+=e[i].w;</div><div class="line">            p[x]=y;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n)&#123;</div><div class="line">        e.clear();</div><div class="line">        ans=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) p[i]=i;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=n;j++)&#123;</div><div class="line">                int x;</div><div class="line">                cin&gt;&gt;x;</div><div class="line">                <span class="keyword">if</span>(j&gt;i) e.pb(edge(i,j,x));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        cin&gt;&gt;q;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=q;i++)&#123;</div><div class="line">            int u,v;</div><div class="line">            cin&gt;&gt;u&gt;&gt;v;</div><div class="line">            merge(u,v);</div><div class="line">        &#125;</div><div class="line">        kruskal();</div><div class="line">        cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码-prim"><a href="#参考AC代码-prim" class="headerlink" title="参考AC代码(prim)"></a>参考AC代码(prim)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line">using namespace std;</div><div class="line">int g[maxn][maxn];</div><div class="line">int lowcost[maxn];</div><div class="line">int visit[maxn];</div><div class="line">int n;     </div><div class="line">int <span class="function"><span class="title">prime</span></span>()&#123;</div><div class="line">    int M<span class="keyword">in</span>,mincost=0,next;</div><div class="line">    memset(visit,0,sizeof(visit));</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">        lowcost[i]=g[1][i];</div><div class="line">    &#125;</div><div class="line">    visit[1]=1;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">        M<span class="keyword">in</span>=inf;</div><div class="line">        <span class="keyword">for</span>(int j=1;j&lt;=n;j++)&#123;</div><div class="line">            <span class="keyword">if</span>(!visit[j] &amp;&amp; M<span class="keyword">in</span>&gt;lowcost[j])&#123;</div><div class="line">                M<span class="keyword">in</span>=lowcost[j];</div><div class="line">                next=j;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        mincost+=M<span class="keyword">in</span>;</div><div class="line">        visit[next]=1;</div><div class="line">        <span class="keyword">for</span>(int j=1;j&lt;=n;j++)&#123;</div><div class="line">            <span class="keyword">if</span>(!visit[j] &amp;&amp; lowcost[j]&gt;g[next][j])&#123;</div><div class="line">                lowcost[j]=g[next][j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> mincost;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0);</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n)&#123;</div><div class="line">        memset(g,inf,sizeof(g));</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=n;j++)&#123;</div><div class="line">                cin&gt;&gt;g[i][j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        int q; cin&gt;&gt;q;</div><div class="line">        <span class="keyword">while</span>(q--)&#123;</div><div class="line">            int u,v;</div><div class="line">            cin&gt;&gt;u&gt;&gt;v;</div><div class="line">            g[u][v]=g[v][u]=0;</div><div class="line">        &#125;</div><div class="line">        int cost=prime();</div><div class="line">        cout&lt;&lt;cost&lt;&lt;endl;    </div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>kruskal：并查集的思想 把必须加入的边在跑kruskal之前写加入到并查集中<br>在加边的时候可以只加j&gt;i的边<br>prim:在跑prim之前先把必须加入的边权设为0</p>
<h2 id="HDU-1829"><a href="#HDU-1829" class="headerlink" title="HDU 1829"></a>HDU 1829</h2><h3 id="题目要求-7"><a href="#题目要求-7" class="headerlink" title="题目要求"></a>题目要求</h3><p>问给定的图是否是二分图</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 2050</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">bool flag;</div><div class="line">int color[maxn];</div><div class="line">bool DFS(int v,int c)&#123;   </div><div class="line">    color[v]=c;  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e[v].size();i++)&#123;  </div><div class="line">        <span class="keyword">if</span>(color[e[v][i]]==c)  </div><div class="line">            <span class="built_in">return</span> <span class="literal">false</span>;  </div><div class="line">        <span class="keyword">if</span>(color[e[v][i]]==0&amp;&amp;!DFS(e[v][i],-c))  </div><div class="line">            <span class="built_in">return</span> <span class="literal">false</span>;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> <span class="literal">true</span>;  </div><div class="line">&#125;  </div><div class="line">int f=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int n,m;</div><div class="line">		cin&gt;&gt;n&gt;&gt;m;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) e[i].clear();  </div><div class="line">		flag=<span class="literal">true</span>;</div><div class="line">		memset(color,0,sizeof(color));</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			int u,v;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v;</div><div class="line">			e[u].push_back(v);</div><div class="line">			e[v].push_back(u);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n&amp;&amp;flag;i++)</div><div class="line">			<span class="keyword">if</span>(color[i]==0)</div><div class="line">				flag=DFS(i,1);</div><div class="line">		cout&lt;&lt;<span class="string">"Scenario #"</span>&lt;&lt;f++&lt;&lt;<span class="string">":"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">if</span>(flag)</div><div class="line">			cout&lt;&lt;<span class="string">"No suspicious bugs found!"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"Suspicious bugs found!"</span>&lt;&lt;endl;</div><div class="line">		cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><p>dfs交叉染色模版</p>
<h2 id="HDU-1598"><a href="#HDU-1598" class="headerlink" title="HDU 1598"></a>HDU 1598</h2><h3 id="题目要求-8"><a href="#题目要求-8" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出一些边和边权<br>多个询问 每次循环一个起点和终点 若无法到达输出-1<br>否则输出起点到终点的路径上最大权-最小权的最小值</p>
<h3 id="参考AC代码-并查集"><a href="#参考AC代码-并查集" class="headerlink" title="参考AC代码(并查集)"></a>参考AC代码(并查集)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 205</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int p[maxn];</div><div class="line">struct node&#123;</div><div class="line">	int u,v,w;</div><div class="line">	node(int u,int v,int w):u(u),v(v),w(w)&#123;&#125;</div><div class="line">	bool operator &lt; (const node&amp; x) const&#123;</div><div class="line">		<span class="built_in">return</span> w&lt;x.w;</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;e;</div><div class="line">int find(int x)&#123;</div><div class="line">	<span class="built_in">return</span> x==p[x]?x:p[x]=find(p[x]);</div><div class="line">&#125;</div><div class="line">void merge(int u,int v)&#123;</div><div class="line">	int x=find(u);</div><div class="line">	int y=find(v);</div><div class="line">	<span class="keyword">if</span>(x!=y) p[x]=y;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n,m;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)&#123;</div><div class="line">		e.clear();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			int u,v,w;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">			e.pb(node(u,v,w));</div><div class="line">		&#125;</div><div class="line">		sort(e.begin(),e.end());</div><div class="line">		int q; cin&gt;&gt;q;</div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			int s,t;</div><div class="line">			cin&gt;&gt;s&gt;&gt;t;</div><div class="line">			int M<span class="keyword">in</span>=inf;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;m;i++)&#123;</div><div class="line">				<span class="keyword">for</span>(int j=1;j&lt;=n;j++) p[j]=j;</div><div class="line">				<span class="keyword">for</span>(int j=i;j&lt;m;j++)&#123;</div><div class="line">					merge(e[j].u,e[j].v);</div><div class="line">					<span class="keyword">if</span>(find(s)==find(t))&#123;</div><div class="line">						M<span class="keyword">in</span>=min(M<span class="keyword">in</span>,e[j].w<span class="_">-e</span>[i].w);</div><div class="line">						<span class="built_in">break</span>;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(M<span class="keyword">in</span>==inf) cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">			<span class="keyword">else</span> cout&lt;&lt;M<span class="keyword">in</span>&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码-二分dfs"><a href="#参考AC代码-二分dfs" class="headerlink" title="参考AC代码(二分dfs)"></a>参考AC代码(二分dfs)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 205</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">struct edge&#123;</div><div class="line">	int to,w;</div><div class="line">	edge(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;edge&gt;e[maxn];</div><div class="line">vector&lt;int&gt;sp;</div><div class="line">int vis[maxn];</div><div class="line">void dfs(int s,int low,int up)&#123;</div><div class="line">	vis[s]=1;</div><div class="line">	int len=e[s].size();</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">		int speed=e[s][i].w,next=e[s][i].to;</div><div class="line">		<span class="keyword">if</span>(speed&lt;=up &amp;&amp; speed&gt;=low &amp;&amp; !vis[next])</div><div class="line">		dfs(next,low,up);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void solve(int s,int t)&#123;</div><div class="line">	int l=0,r=1e9,mid,ans=inf;</div><div class="line">	<span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">		mid=(l+r)&gt;&gt;1;</div><div class="line">		int len=sp.size();</div><div class="line">		int f=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">			mm(vis,0);</div><div class="line">			int speed=sp[i];</div><div class="line">			dfs(s,speed,speed+mid);</div><div class="line">			<span class="keyword">if</span>(vis[t])&#123;</div><div class="line">				f=1;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(f)&#123;</div><div class="line">			ans=mid;</div><div class="line">			r=mid-1;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> l=mid+1;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(ans==inf) cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">	<span class="keyword">else</span> cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n,m;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">		sp.clear();</div><div class="line">		<span class="keyword">while</span>(m--)&#123;</div><div class="line">			int u,v,w;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">			e[u].pb(edge(v,w));</div><div class="line">			e[v].pb(edge(u,w));</div><div class="line">			sp.pb(w);</div><div class="line">		&#125;</div><div class="line">		sort(sp.begin(),sp.end());</div><div class="line">		int q; cin&gt;&gt;q;</div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			int s,t;</div><div class="line">			cin&gt;&gt;s&gt;&gt;t;</div><div class="line">			solve(s,t);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h3><p>1.类似于MST的贪心 边权排序后从最小的开始遍历 寻找比它的大的边权 同时维护差值的最小值<br>对于每一个最小边 更新并查集 接着把新边加入到并查集中 如s和t在一个连通分量中 更新Min<br>2.二分差值 贪心枚举下界 上界=下界+差值 在这个上下界内能从s跑到t 说明这个差值满足题意 继续二分直到找到最小值<br>对比：两种方法对比后 第二种方法的时间优于第一种 在于第一种方法复杂度n² 暴力枚举最小边和最大边<br>第二种方法复杂度nlogn 暴力枚举下界二分差值 等于确定了上下界</p>
<h2 id="HDU-1269"><a href="#HDU-1269" class="headerlink" title="HDU 1269"></a>HDU 1269</h2><h3 id="题目要求-9"><a href="#题目要求-9" class="headerlink" title="题目要求"></a>题目要求</h3><p>判断一个有向图是否为强连通图(任意两点ij都有路径i-&gt;j j-&gt;i)</p>
<h3 id="参考AC代码-6"><a href="#参考AC代码-6" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 10050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">int vis[maxn];</div><div class="line">void dfs(int x)&#123;</div><div class="line">    vis[x]=1;</div><div class="line">    int len=e[x].size();</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(!vis[next]) dfs(next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int n,m;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)&#123;</div><div class="line">        <span class="keyword">if</span>(n==0 &amp;&amp; m==0) <span class="built_in">break</span>;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            int u,v;</div><div class="line">            cin&gt;&gt;u&gt;&gt;v;</div><div class="line">            e[u].pb(v);</div><div class="line">        &#125;</div><div class="line">        int flag=1;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            mm(vis,0);</div><div class="line">            dfs(i);</div><div class="line">            <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">                <span class="keyword">if</span>(!vis[i])&#123;</div><div class="line">                    flag=0;</div><div class="line">                    <span class="built_in">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(flag==0) <span class="built_in">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(flag) cout&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;endl;</div><div class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">"No"</span>&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h3><p>本题使用的dfs暴力 每个点dfs一遍 判断是否经过所有的点<br>Kosaraju和Tarjan算法将在后续的博客中提到</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[multi多校-3]]></title>
      <url>http://xuboming8.github.io/2017/08/02/multi%E5%A4%9A%E6%A0%A1-3/</url>
      <content type="html"><![CDATA[<h1 id="muti多校-3"><a href="#muti多校-3" class="headerlink" title="muti多校-3"></a>muti多校-3</h1><h2 id="HDU-6058"><a href="#HDU-6058" class="headerlink" title="HDU 6058"></a>HDU 6058</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>求数组中所有连续区间的k大数之和<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line">typedef long long ll;</div><div class="line">const int N=500010;</div><div class="line">int Case,n,K,i,a[N],pos[N],pre[N],nxt[N];</div><div class="line">ll ans;</div><div class="line">inline void del(int i)&#123;</div><div class="line">  pre[nxt[i]]=pre[i];</div><div class="line">  nxt[pre[i]]=nxt[i];</div><div class="line">&#125;</div><div class="line">inline ll solve(int x)&#123;</div><div class="line">  static int a[100],b[100];</div><div class="line">  int i,ca=0,cb=0;</div><div class="line">  <span class="keyword">for</span>(i=x;i;i=pre[i])&#123;</div><div class="line">    a[++ca]=i-pre[i];</div><div class="line">    <span class="keyword">if</span>(ca==K)<span class="built_in">break</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">for</span>(i=x;i&lt;=n;i=nxt[i])&#123;</div><div class="line">    b[++cb]=nxt[i]-i;</div><div class="line">    <span class="keyword">if</span>(cb==K)<span class="built_in">break</span>;</div><div class="line">  &#125;</div><div class="line">  ll t=0;</div><div class="line">  <span class="keyword">for</span>(i=1;i&lt;=ca;i++)<span class="keyword">if</span>(K-i+1&lt;=cb) t+=1LL*a[i]*b[K-i+1];</div><div class="line">  <span class="built_in">return</span> t;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">  scanf(<span class="string">"%d"</span>,&amp;Case);</div><div class="line">  <span class="keyword">while</span>(Case--)&#123;</div><div class="line">    scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;K);</div><div class="line">    <span class="keyword">for</span>(i=1;i&lt;=n;i++)scanf(<span class="string">"%d"</span>,&amp;a[i]),pos[a[i]]=i;</div><div class="line">    <span class="keyword">for</span>(i=0;i&lt;=n+1;i++)pre[i]=i-1,nxt[i]=i+1;</div><div class="line">    pre[0]=0;</div><div class="line">    nxt[n+1]=n+1;</div><div class="line">    ans=0;</div><div class="line">    <span class="keyword">for</span>(i=1;i&lt;=n;i++)&#123;</div><div class="line">      int x=pos[i];</div><div class="line">      ans+=solve(x)*i;</div><div class="line">      del(x);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>用双向链表模拟<br>pre和next模拟指针<br>对数字hash处理记录位置 从1开始处理 处理好之后把1删除处理2 因为1对2的处理没有影响 后续相同<br>删除操作需要修改pre和next数组<br>对于每个位置预处理左边和右边比它大的k个数字<br>注意：i==1表示向左取一个段 并未取到端点 若a[i]=1表示左端点未取 自然做乘法操作时乘1<br>若a[i]&gt;1表示中间有小于它的数字 自然有a[i]种情况<br>a和b代表段长并未是总长 因为如i取到2 说明必取1个点 所以能变化的区间只有这个点的后面的段了<br>综上 i是取的段数并未取段末的点 所以不能在k==1时break 也需要用k+i-i来判断右边的段数</p>
<h2 id="HDU-6060"><a href="#HDU-6060" class="headerlink" title="HDU 6060"></a>HDU 6060</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出一颗n个节点的树，要求将2-n号节点分成k部分，然后再将每一部分加上1号节点，定义每一部分的val为其中的点在原图上的最小斯坦纳树，问总的val最大可能是多少。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1000050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int n,k;</div><div class="line">LL ans;</div><div class="line">int sz[maxn];</div><div class="line">struct node&#123;</div><div class="line">    int to,w;</div><div class="line">    node(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">void dfs(int id,int fa,int ww)&#123;</div><div class="line">    sz[id]=1;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e[id].size();i++)&#123;</div><div class="line">        int next=e[id][i].to,we=e[id][i].w;</div><div class="line">        <span class="keyword">if</span>(next==fa) <span class="built_in">continue</span>;</div><div class="line">        dfs(next,id,we);</div><div class="line">        sz[id]+=sz[next];</div><div class="line">    &#125;</div><div class="line">    int temp=min(k,sz[id]);</div><div class="line">    ans+=(LL)ww*(LL)temp;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;k)&#123;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">        mm(sz,0),ans=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n-1;i++)&#123;</div><div class="line">            int x,y,z;</div><div class="line">            cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;</div><div class="line">            e[x].pb(node(y,z));</div><div class="line">            e[y].pb(node(x,z));</div><div class="line">        &#125;</div><div class="line">        dfs(1,0,0);</div><div class="line">        cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/150164389435.jpg" alt=""><br>ans开LL</p>
<h2 id="HDU-6063"><a href="#HDU-6063" class="headerlink" title="HDU 6063"></a>HDU 6063</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>计算<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/150164398526.jpg" alt=""><br>期中u为莫比乌斯函数</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int flag=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    LL n,k;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;k)&#123;</div><div class="line">        cout&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;flag++&lt;&lt;<span class="string">": "</span>;</div><div class="line">        n%=mod;</div><div class="line">        cout&lt;&lt;qpow(n,k)&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>打表可以发现答案就是n^k<br>注意n需要先mod</p>
<h2 id="HDU-6066"><a href="#HDU-6066" class="headerlink" title="HDU 6066"></a>HDU 6066</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>求数组中小于等于35的个数</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int t;</div><div class="line">    cin&gt;&gt;t;</div><div class="line">    int sum=0;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=t;i++)&#123;</div><div class="line">        int x;</div><div class="line">        cin&gt;&gt;x;</div><div class="line">        <span class="keyword">if</span>(x&lt;=35) sum++;</div><div class="line">    &#125;</div><div class="line">    cout&lt;&lt;sum&lt;&lt;endl;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>水题</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[multi多校-2]]></title>
      <url>http://xuboming8.github.io/2017/08/01/multi%E5%A4%9A%E6%A0%A1-2/</url>
      <content type="html"><![CDATA[<h1 id="muti多校-2"><a href="#muti多校-2" class="headerlink" title="muti多校-2"></a>muti多校-2</h1><h2 id="HDU-6045"><a href="#HDU-6045" class="headerlink" title="HDU 6045"></a>HDU 6045</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>A和B两个人答题 每题有ABC三个选项 给出n道题和两人分别答对的题目数量<br>再给出假设两个人分别答题情况判断是否可行<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 80050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">char a[maxn],b[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int t;</div><div class="line">    cin&gt;&gt;t;</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n,x,y;</div><div class="line">        cin&gt;&gt;n&gt;&gt;x&gt;&gt;y;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;b[i];</div><div class="line">        int num1=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) <span class="keyword">if</span>(a[i]==b[i]) num1++;</div><div class="line">        int num2=n-num1;</div><div class="line">        <span class="keyword">if</span>(x+y&lt;=num1*2+num2 &amp;&amp; num2&gt;=abs(x-y)) cout&lt;&lt;<span class="string">"Not lying"</span>&lt;&lt;endl;</div><div class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">"Lying"</span>&lt;&lt;endl;</div><div class="line">    &#125;    </div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>找出A和B位置相同的个数num1 不相同的个数num2<br>有两个限制条件：A和B最多答对的题目个数为2*num1+num2 相同位置都可对 不同位置只可对一个<br>另一个为abs(x-y)为A和B至少答题不一样的个数 它必须小于等于总得不同题个数num2</p>
<h2 id="HDU-6055"><a href="#HDU-6055" class="headerlink" title="HDU 6055"></a>HDU 6055</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出二维坐标系上一些整点 判断他们可以形成多少正多边形</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 450</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int vis[maxn][maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int n;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n)&#123;</div><div class="line">        mm(vis,0);</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">            int x,y;</div><div class="line">            cin&gt;&gt;x&gt;&gt;y;</div><div class="line">            vis[x+100][y+100]=1;</div><div class="line">        &#125;</div><div class="line">        int sum=0;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;202;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;202;j++)&#123;</div><div class="line">                <span class="keyword">if</span>(!vis[i][j]) <span class="built_in">continue</span>;</div><div class="line">                vis[i][j]=0;</div><div class="line">                <span class="keyword">for</span>(int k=i;k&lt;202;k++)&#123;</div><div class="line">                    <span class="keyword">for</span>(int p=j+1;p&lt;202;p++)&#123;</div><div class="line">                        <span class="keyword">if</span>(!vis[k][p]) <span class="built_in">continue</span>;</div><div class="line">                        int xx=k-i,yy=p-j;</div><div class="line">                        <span class="keyword">if</span>(vis[i+yy][j-xx] &amp;&amp; vis[i+xx+yy][j+yy-xx]) sum++;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                vis[i][j]=1;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        cout&lt;&lt;sum&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>由于必须为整点 所以只能为正方形<br>把题目要求的-100到100扩大到0到200 同时数组多开2倍<br>暴力枚举2个点判断剩下2个点是否可行</p>
<h2 id="HDU-6047"><a href="#HDU-6047" class="headerlink" title="HDU 6047"></a>HDU 6047</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出数组a和数组b 每次可以在数组b中选取一个数字(选取过的数字不可再选) 在数组a范围b[i]到末尾的数字中选取a[i]-i最大的数字放到末尾<br>重复以下步骤直到数组b被用完 问添加到末尾的数字总和最大是多少</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 250050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">LL a[maxn],b[maxn];</div><div class="line">LL Max[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int n;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n)&#123;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            cin&gt;&gt;a[i];</div><div class="line">            a[i]-=i;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;b[i];</div><div class="line">        sort(b+1,b+1+n);</div><div class="line">        mm(Max,0),Max[n]=a[n];</div><div class="line">        <span class="keyword">for</span>(int i=n-1;i&gt;=1;i--) Max[i]=max(Max[i+1],a[i]);</div><div class="line">        LL ans=Max[b[1]]%mod;</div><div class="line">        LL temp=(Max[b[1]]-(n+1))%mod;</div><div class="line">        <span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">            LL x=max(Max[b[i]],temp);</div><div class="line">            ans=(ans+x%mod)%mod;</div><div class="line">            temp=max(temp,x-(n+i));</div><div class="line">        &#125;</div><div class="line">        cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>贪心 维护最大值<br>b数组从小到大排序 从最小的开始选取 可以确保选取区间最大<br>temp维护所有添加数字的最大值 Max记录原数组的后缀最大值<br>记录值时直接-i方便后续维护</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[福建2017省赛]]></title>
      <url>http://xuboming8.github.io/2017/07/26/%E7%A6%8F%E5%BB%BA2017%E7%9C%81%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="福建2017省赛"><a href="#福建2017省赛" class="headerlink" title="福建2017省赛"></a>福建2017省赛</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>鸡兔同笼<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int n,m;</div><div class="line">		cin&gt;&gt;n&gt;&gt;m;</div><div class="line">		cout&lt;&lt;(m-2*n)/2&lt;&lt;<span class="string">" "</span>&lt;&lt;(4*n-m)/2&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>列方程推出一般表达式</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出2个三角形三个顶点 共6个坐标 判断2个三角形是相交 还是包含 还是相离的关系<br>注意重合也算相交</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;cmath&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstdlib&gt;</span></div><div class="line"><span class="comment">#include&lt;queue&gt;</span></div><div class="line"><span class="comment">#include&lt;map&gt;</span></div><div class="line"><span class="comment">#include&lt;stack&gt;</span></div><div class="line"><span class="comment">#include&lt;set&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line"><span class="comment">#define zero(x)(((x)&gt;0?(x):-(x))&lt;eps)</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">const int maxisn=10;</div><div class="line">int dcmp(double x)&#123;</div><div class="line">    <span class="keyword">if</span>(x&gt;eps) <span class="built_in">return</span> 1;</div><div class="line">    <span class="built_in">return</span> x&lt;-eps ? -1 : 0;</div><div class="line">&#125;</div><div class="line">inline double Sqr(double x)&#123;</div><div class="line">    <span class="built_in">return</span> x*x;</div><div class="line">&#125;</div><div class="line">struct Point&#123;</div><div class="line">    double x,y;</div><div class="line">    <span class="function"><span class="title">Point</span></span>()&#123;x=y=0;&#125;</div><div class="line">    Point(double x,double y):x(x),y(y)&#123;&#125;;</div><div class="line">    friend Point operator + (const Point &amp;a,const Point &amp;b) &#123;</div><div class="line">        <span class="built_in">return</span> Point(a.x+b.x,a.y+b.y);</div><div class="line">    &#125;</div><div class="line">    friend Point operator - (const Point &amp;a,const Point &amp;b) &#123;</div><div class="line">        <span class="built_in">return</span> Point(a.x-b.x,a.y-b.y);</div><div class="line">    &#125;</div><div class="line">    friend bool operator == (const Point &amp;a,const Point &amp;b) &#123;</div><div class="line">        <span class="built_in">return</span> dcmp(a.x-b.x)==0&amp;&amp;dcmp(a.y-b.y)==0;</div><div class="line">    &#125;</div><div class="line">    friend Point operator * (const Point &amp;a,const double &amp;b) &#123;</div><div class="line">        <span class="built_in">return</span> Point(a.x*b,a.y*b);</div><div class="line">    &#125;</div><div class="line">    friend Point operator * (const double &amp;a,const Point &amp;b) &#123;</div><div class="line">        <span class="built_in">return</span> Point(a*b.x,a*b.y);</div><div class="line">    &#125;</div><div class="line">    friend Point operator / (const Point &amp;a,const double &amp;b) &#123;</div><div class="line">        <span class="built_in">return</span> Point(a.x/b,a.y/b);</div><div class="line">    &#125;</div><div class="line">    friend bool operator &lt; (const Point &amp;a, const Point &amp;b) &#123;</div><div class="line">        <span class="built_in">return</span> a.x &lt; b.x || (a.x == b.x &amp;&amp; a.y &lt; b.y);</div><div class="line">    &#125;</div><div class="line">    inline double dot(const Point &amp;b)const&#123;</div><div class="line">        <span class="built_in">return</span> x*b.x+y*b.y;</div><div class="line">    &#125;</div><div class="line">    inline double cross(const Point &amp;b,const Point &amp;c)const&#123;</div><div class="line">        <span class="built_in">return</span> (b.x-x)*(c.y-y)-(c.x-x)*(b.y-y);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;;</div><div class="line">Point a[222],b[222];</div><div class="line">Point LineCross(const Point &amp;a,const Point &amp;b,const Point &amp;c,const Point &amp;d)&#123;</div><div class="line">    double u=a.cross(b,c),v=b.cross(a,d);</div><div class="line">    <span class="built_in">return</span> Point((c.x*v+d.x*u)/(u+v),(c.y*v+d.y*u)/(u+v));</div><div class="line">&#125;</div><div class="line">double PolygonArea(Point p[],int n)&#123;</div><div class="line">     <span class="keyword">if</span>(n&lt;3) <span class="built_in">return</span> 0.0;</div><div class="line">     double s=p[0].y*(p[n-1].x-p[1].x);</div><div class="line">     p[n]=p[0];</div><div class="line">     <span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">        s+=p[i].y*(p[i-1].x-p[i+1].x);</div><div class="line">     &#125;</div><div class="line">     <span class="built_in">return</span> fabs(s*0.5);</div><div class="line">&#125;</div><div class="line">double CPIA(Point a[],Point b[],int na,int nb)&#123;</div><div class="line">    Point p[maxisn],temp[maxisn];</div><div class="line">    int i,j,tn,sflag,eflag;</div><div class="line">    a[na]=a[0],b[nb]=b[0];</div><div class="line">    memcpy(p,b,sizeof(Point)*(nb+1));</div><div class="line">    <span class="keyword">for</span>(i=0;i&lt;na&amp;&amp;nb&gt;2;++i)&#123;</div><div class="line">        sflag=dcmp(a[i].cross(a[i+1],p[0]));</div><div class="line">        <span class="keyword">for</span>(j=tn=0;j&lt;nb;++j,sflag=eflag)&#123;</div><div class="line">            <span class="keyword">if</span>(sflag&gt;=0) temp[tn++]=p[j];</div><div class="line">            eflag=dcmp(a[i].cross(a[i+1],p[j+1]));</div><div class="line">            <span class="keyword">if</span>((sflag^eflag)==-2)</div><div class="line">                temp[tn++]=LineCross(a[i],a[i+1],p[j],p[j+1]);</div><div class="line">        &#125;</div><div class="line">        memcpy(p,temp,sizeof(Point)*tn);</div><div class="line">        nb=tn,p[nb]=p[0];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(nb&lt;3) <span class="built_in">return</span> 0.0;</div><div class="line">    <span class="built_in">return</span> PolygonArea(p,nb);</div><div class="line">&#125;</div><div class="line">double SPIA(Point a[],Point b[],int na,int nb)&#123;</div><div class="line">    int i,j;</div><div class="line">    Point t1[4],t2[4];</div><div class="line">    double res=0.0,if_clock_t1,if_clock_t2;</div><div class="line">    a[na]=t1[0]=a[0];</div><div class="line">    b[nb]=t2[0]=b[0];</div><div class="line">    <span class="keyword">for</span>(i=2;i&lt;na;i++)&#123;</div><div class="line">        t1[1]=a[i-1],t1[2]=a[i];</div><div class="line">        if_clock_t1=dcmp(t1[0].cross(t1[1],t1[2]));</div><div class="line">        <span class="keyword">if</span>(if_clock_t1&lt;0) swap(t1[1],t1[2]);</div><div class="line">        <span class="keyword">for</span>(j=2;j&lt;nb;j++)&#123;</div><div class="line">            t2[1]=b[j-1],t2[2]=b[j];</div><div class="line">            if_clock_t2=dcmp(t2[0].cross(t2[1],t2[2]));</div><div class="line">            <span class="keyword">if</span>(if_clock_t2&lt;0) swap(t2[1],t2[2]);</div><div class="line">            res+=CPIA(t1,t2,3,3)*if_clock_t1*if_clock_t2;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> res;</div><div class="line">&#125;</div><div class="line">double length(Point p1,Point p2)&#123;</div><div class="line">    double res=sqrt((p1.x-p2.x)*(p1.x-p2.x)+(p1.y-p2.y)*(p1.y-p2.y));</div><div class="line">    <span class="built_in">return</span> res;</div><div class="line">&#125;</div><div class="line">double area_triangle(double l1,double l2,double l3)&#123;</div><div class="line">    double s=(l1+l2+l3)/2.0;</div><div class="line">    double res=sqrt(s*(s<span class="_">-l</span>1)*(s<span class="_">-l</span>2)*(s<span class="_">-l</span>3));</div><div class="line">    <span class="built_in">return</span> res;</div><div class="line">&#125;</div><div class="line">double xmult(Point p1,Point p2,Point p0)&#123;</div><div class="line">    <span class="built_in">return</span> (p1.x-p0.x)*(p2.y-p0.y)-(p2.x-p0.x)*(p1.y-p0.y);</div><div class="line">&#125;</div><div class="line">int parallel(Point u1,Point u2,Point v1,Point v2)&#123;</div><div class="line">    <span class="built_in">return</span> zero((u1.x-u2.x)*(v1.y-v2.y)-(v1.x-v2.x)*(u1.y-u2.y));</div><div class="line">&#125;</div><div class="line">int dot_online_in(Point p,Point l1,Point l2)&#123;</div><div class="line">    <span class="built_in">return</span> zero(xmult(p,l1,l2))&amp;&amp;(l1.x-p.x)*(l2.x-p.x)&lt;eps&amp;&amp;(l1.y-p.y)*(l2.y-p.y)&lt;eps;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;3;i++) cin&gt;&gt;a[i].x&gt;&gt;a[i].y;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;3;i++) cin&gt;&gt;b[i].x&gt;&gt;b[i].y;</div><div class="line">		double area=fabs(SPIA(a,b,3,3));</div><div class="line">		double l1=length(a[0],a[1]),l2=length(a[0],a[2]),l3=length(a[1],a[2]);</div><div class="line">		double l4=length(b[0],b[1]),l5=length(b[0],b[2]),l6=length(b[1],b[2]);</div><div class="line">		<span class="keyword">if</span>(area&gt;eps)&#123;</div><div class="line">			<span class="keyword">if</span>(abs(area-area_triangle(l1,l2,l3))&lt;eps) cout&lt;&lt;<span class="string">"contain"</span>&lt;&lt;endl;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(abs(area-area_triangle(l4,l5,l6))&lt;eps) cout&lt;&lt;<span class="string">"contain"</span>&lt;&lt;endl;</div><div class="line">			<span class="keyword">else</span> cout&lt;&lt;<span class="string">"intersect"</span>&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			bool flag=<span class="literal">false</span>;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;2;i++)&#123;</div><div class="line">				<span class="keyword">for</span>(int ii=i+1;ii&lt;3;ii++)&#123;</div><div class="line">					<span class="keyword">for</span>(int j=0;j&lt;3;j++)&#123;</div><div class="line">						<span class="keyword">if</span>(dot_online_in(b[j],a[i],a[ii]))&#123;</div><div class="line">							flag=<span class="literal">true</span>;</div><div class="line">							<span class="built_in">break</span>;</div><div class="line">						&#125;</div><div class="line">					&#125;</div><div class="line">					<span class="keyword">if</span>(flag) <span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">if</span>(flag) <span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(flag) cout&lt;&lt;<span class="string">"intersect"</span>&lt;&lt;endl;</div><div class="line">			<span class="keyword">else</span> cout&lt;&lt;<span class="string">"disjoint"</span>&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>使用多边形面积交的模版<br>先判断2个三角形有没有相交的面积 如果有 判断是相交还是包含<br>如果相交面积等于任意一个三角形的面积 那么为包含 否则为相离<br>如果没有相交的面积 判断是相离还是相交 如果三角形b的任意一个顶点在三角形a的任意一条边上 为相交<br>否则为相离<br>注意模版中的判0操作均为eps</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>A和B各有一个数字<br>每次可以进行2个操作 翻转操作和/10操作 注意0/0=0<br>如果两者数字可以相等 A赢 否则B赢</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#define maxn 1000050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">char a[maxn],b[maxn];</div><div class="line">int nextl[maxn];</div><div class="line">int lena,lenb;</div><div class="line">void <span class="function"><span class="title">getnext</span></span>()&#123;</div><div class="line">	nextl[0]=-1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;lenb;i++)&#123;</div><div class="line">		int j=nextl[i-1];</div><div class="line">		<span class="keyword">while</span>(b[j+1]!=b[i] &amp;&amp; j&gt;-1) j=nextl[j];</div><div class="line">		nextl[i]=(b[j+1]==b[i])?j+1:-1;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int kmp(char *a,char *b)&#123;</div><div class="line">	getnext();</div><div class="line">	int sum=0,i=0,j=0;</div><div class="line">	<span class="keyword">while</span>(i&lt;lena &amp;&amp; j&lt;lenb)&#123;</div><div class="line">		<span class="keyword">if</span>(j==-1 || a[i]==b[j]) i++,j++;</div><div class="line">		<span class="keyword">else</span> j=nextl[j];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(j==lenb) <span class="built_in">return</span> 1;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t; cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		cin&gt;&gt;a&gt;&gt;b;</div><div class="line">		lena=strlen(a),lenb=strlen(b);</div><div class="line">		<span class="keyword">if</span>(lena&lt;lenb)&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"Bob"</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(lenb==1 &amp;&amp; b[0]==<span class="string">'0'</span>)&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"Alice"</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(kmp(a,b))&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"Alice"</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		reverse(b,b+lenb);</div><div class="line">		<span class="keyword">if</span>(kmp(a,b))&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"Alice"</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;<span class="string">"Bob"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>kmp<br>如果A的长度小于B B赢<br>如果B等于0 A赢<br>否则判断A是否匹配B和B的逆串 匹配则A赢</p>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>题意: 给定一棵根为1, n个结点的树. 有q个操作,有两种不同的操作<br>(1) 1 v k x : a[v] += x, a[v’] += x – k, a[v ’’] += x – 2 * k … ;<br>v’为v的儿子   v ’’是v ’的儿子<br>(2) 2 v : 输出a[v] % (1e9 + 7);</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#define maxn 300050</span></div><div class="line"><span class="comment">#define pb  push_back  </span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;  </div><div class="line">const LL mod = 1e9+7;  </div><div class="line">vector&lt;int&gt; e[maxn];   </div><div class="line">LL x,k;  </div><div class="line">int n;</div><div class="line">int step;  </div><div class="line">int <span class="keyword">in</span>[maxn],out[maxn];</div><div class="line">int dep[maxn];</div><div class="line">LL tree1[maxn],tree2[maxn];  </div><div class="line">void change(LL *tree,int x,LL val)&#123;</div><div class="line">    <span class="keyword">while</span>(x&lt;=n) &#123;</div><div class="line">        tree[x]+=val;</div><div class="line">        x+=x&amp;(-x);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">LL sum(LL *tree,int x)&#123;</div><div class="line">    LL res=0;</div><div class="line">    <span class="keyword">while</span> (x)&#123;</div><div class="line">        res+=tree[x];</div><div class="line">        x-=x&amp;(-x);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> res;</div><div class="line">&#125;</div><div class="line">void dfs(int u,int fa,int depth)&#123;  </div><div class="line">    <span class="keyword">in</span>[u]=step++,dep[u]=depth;  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e[u].size();i++)&#123;  </div><div class="line">        int v = e[u][i];  </div><div class="line">        <span class="keyword">if</span>(v==fa) <span class="built_in">continue</span>;  </div><div class="line">        dfs(v,u,depth+1);  </div><div class="line">    &#125;  </div><div class="line">    out[u]=step;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;  </div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;  </div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);  </div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;n);  </div><div class="line">        step=1;  </div><div class="line">        <span class="keyword">for</span>(int i = 0; i&lt;=n; i++) e[i].clear();  </div><div class="line">        <span class="keyword">for</span>(int i = 2; i&lt;=n; i++)&#123;</div><div class="line">            int p; scanf(<span class="string">"%d"</span>,&amp;p);  </div><div class="line">            e[p].push_back(i);  </div><div class="line">        &#125;  </div><div class="line">        dfs(1,0,0);  </div><div class="line">        int q; scanf(<span class="string">"%d"</span>,&amp;q);   </div><div class="line">        mm(tree1,0),mm(tree2,0);</div><div class="line">        <span class="keyword">while</span>(q--)&#123;</div><div class="line">        	int <span class="built_in">type</span>;</div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;<span class="built_in">type</span>);  </div><div class="line">            <span class="keyword">if</span>(<span class="built_in">type</span>==1)&#123;  </div><div class="line">            	int v;</div><div class="line">				scanf(<span class="string">"%d%lld%lld"</span>,&amp;v,&amp;x,&amp;k);</div><div class="line">                LL A=(x+k*dep[v])%mod;  </div><div class="line">                change(tree1,<span class="keyword">in</span>[v],A);  </div><div class="line">                change(tree1,out[v],-A);   </div><div class="line">                change(tree2,<span class="keyword">in</span>[v],k);  </div><div class="line">                change(tree2,out[v],-k);  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">            	int v;</div><div class="line">                scanf(<span class="string">"%d"</span>,&amp;v);   </div><div class="line">                LL A = sum(tree1,<span class="keyword">in</span>[v]);  </div><div class="line">                LL B = sum(tree2,<span class="keyword">in</span>[v]);  </div><div class="line">                LL ans=((A-B*dep[v])%mod+mod)%mod;  </div><div class="line">                <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>例如选定一棵以u节点为根节点的子树，v是这棵子树上的点。用dep[]数组来维护每个节点的深度。<br>那么一次更新操作相当于对 a[v] += x + (d[u] - d[v])<em>k   整理得  a[v] += (x + k</em>d[u] )- k*d[v]  括号部分对这个子树上的所有顶点是一个定值，<br>可以用线段树或者树状数组维护。而后一部分的d[v]是每个节点的深度属性，无需维护，所以我们只需要再开一个树状数组/线段树来维护k的和。<br>通过对这两个量的维护我们就可以针对每一个询问得到想要的结果。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hiho杂选]]></title>
      <url>http://xuboming8.github.io/2017/07/26/hiho%E6%9D%82%E9%80%89/</url>
      <content type="html"><![CDATA[<h1 id="hiho杂选"><a href="#hiho杂选" class="headerlink" title="hiho杂选"></a>hiho杂选</h1><h2 id="1319"><a href="#1319" class="headerlink" title="1319"></a>1319</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><a id="more"></a>
<p><strong>描述</strong><br>给定一个包含 N × M 个单位正方形的矩阵，矩阵中每个正方形上都写有一个数字。<br>对于两个单位正方形 a 和 b ，如果 a 和 b 有一条共同的边，并且它们的数字相等，那么 a 和 b 是相连的。<br>相连还具有传递性，如果 a 和 b 相连，b 和 c 相连，那么 a 和 c 也相连。<br>给定一个单位正方形 s，s 和与 s 相连的所有单位正方形会组成一个区域 R 。小Hi想知道 R 的周长是多少？</p>
<p><strong>输入</strong><br>第一行包含4个整数 N , M ，x 和 y ， N 和 M 是矩阵的大小， x 和 y 是给定的单位正方形 s 的坐标。(1 ≤ N , M ≤ 100, 0 ≤ x &lt; N , 0 ≤ y &lt; M )<br>以下是一个 N × M 的矩阵 A，Aij 表示相应的正方形上的数字。(0 ≤ Aij ≤ 100)</p>
<p><strong>输出</strong><br>输出一个整数表示 R 的周长。</p>
<p><strong>样例输入</strong><br>6 5 2 1<br>0 0 1 2 2<br>3 1 1 3 7<br>4 3 1 3 7<br>4 3 0 3 2<br>4 3 3 0 1<br>4 5 5 5 5</p>
<p><strong>样例输出</strong><br>10</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int dirx[4]=&#123;0,0,1,-1&#125;;</div><div class="line">int diry[4]=&#123;1,-1,0,0&#125;;</div><div class="line">int n,m,r,ans=0;</div><div class="line">int g[maxn][maxn];</div><div class="line">int vis[maxn][maxn];</div><div class="line">void dfs(int x,int y)&#123;</div><div class="line">	<span class="keyword">if</span>(x&lt;0 || x&gt;=n || y&lt;0 || y&gt;=m || g[x][y]!=r)&#123;</div><div class="line">		ans++;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(vis[x][y]) <span class="built_in">return</span> ;</div><div class="line">	vis[x][y]=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;4;i++)&#123;</div><div class="line">		int nextx=x+dirx[i];</div><div class="line">		int nexty=y+diry[i];</div><div class="line">		dfs(nextx,nexty);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int x,y;</div><div class="line">	cin&gt;&gt;n&gt;&gt;m&gt;&gt;x&gt;&gt;y;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;m;j++) cin&gt;&gt;g[i][j];</div><div class="line">	&#125;</div><div class="line">	mm(vis,0);</div><div class="line">	r=g[x][y];</div><div class="line">	dfs(x,y);</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>dfs<br>关键是只有在越界或者下一个访问的数字不等于g[x][y]时 ans++ 否则经过相同的数字不计算边长</p>
<h2 id="1318"><a href="#1318" class="headerlink" title="1318"></a>1318</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>描述</strong><br>如果一个二进制数包含连续的两个1，我们就称这个二进制数是非法的。<br>小Hi想知道在所有 n 位二进制数（一共有2n个）中，非法二进制数有多少个。<br>例如对于 n = 3,有 011, 110, 111 三个非法二进制数。<br>由于结果可能很大，你只需要输出模109+7的余数。</p>
<p><strong>输入</strong><br>一个整数 n (1 ≤ n ≤ 100)。</p>
<p><strong>输出</strong><br>n 位非法二进制数的数目模109+7的余数。</p>
<p><strong>样例输入</strong><br>3</p>
<p><strong>样例输出</strong><br>3</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">LL dp[maxn];</div><div class="line">LL solve(int x)&#123;</div><div class="line">	LL re=1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=x;i++) re=(re*2LL)%mod;</div><div class="line">	<span class="built_in">return</span> re;</div><div class="line">&#125; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n;</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	mm(dp,0);</div><div class="line">	dp[0]=0,dp[1]=0;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">		dp[i]=(dp[i-1]+dp[i-2]+solve(i-2))%mod;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;dp[n]&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>数位dp<br>dp[i]表示到i位的非法数字<br>如果第i位是0 那么前i-1位必须是非法数字 为dp[i-1]<br>如果第i位是1 那么第i-1位有2种情况 如果是0 那么前i-2位必须是非法数字 这部分是dp[i-2] 如果是1 那么第i和第i-1位<br>已经构成了非法数字 前i-2位一共有2^(i-2)种排序 注意该运算要边移位边取模<br>dp方程：dp[i]=dp[i-1]+dp[i-2]+2^(i-2)</p>
<h2 id="1523"><a href="#1523" class="headerlink" title="1523"></a>1523</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>描述</strong><br>给定一个1-N的排列A1, A2, … AN，每次操作小Hi可以选择一个数，把它放到数组的最左边。<br>请计算小Hi最少进行几次操作就能使得新数组是递增排列的。</p>
<p><strong>输入</strong><br>第一行包含一个整数N。<br>第二行包含N个两两不同整数A1, A2, … AN。(1 &lt;= Ai &lt;= N)<br>对于60%的数据 1 &lt;= N &lt;= 20<br>对于100%的数据 1 &lt;= N &lt;= 100000</p>
<p><strong>输出</strong><br>一个整数代表答案</p>
<p><strong>样例输入</strong><br>5<br>2 3 1 4 5</p>
<p><strong>样例输出</strong><br>1</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int a[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n; cin&gt;&gt;n;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];</div><div class="line">	<span class="keyword">for</span>(int i=n;i&gt;=1;i--)&#123;</div><div class="line">		<span class="keyword">if</span>(a[i]==n) n--; </div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;n&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>思维题<br>最多移动n次 从末尾开始遍历 找到从n开始逐一下降的最远距离是数字几 其余的数字都应移动 答案为自减后的n</p>
<h2 id="1330"><a href="#1330" class="headerlink" title="1330"></a>1330</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>描述</strong><br>小Hi想知道，如果他每次都按照一种固定的顺序重排数组，那么最少经过几次重排之后数组会恢复初始的顺序？<br>具体来讲，给定一个1 - N 的排列 P，小Hi每次重排都是把第 i 个元素放到第 Pi个位置上。例如对于 P = (2, 3, 1)，假设初始数组是(1, 2, 3)，重排一次之后变为(3, 1, 2)，重排两次之后变为(2, 3, 1)，重排三次之后变回(1, 2, 3)。<br>被排数组中的元素可以认为是两两不同的。</p>
<p><strong>输入</strong><br>第一行一个整数 N ，代表数组的长度。 (1 ≤ N ≤ 100)<br>第二行N个整数，代表1 - N 的一个排列 P 。</p>
<p><strong>输出</strong><br>输出最少重排的次数。</p>
<p><strong>样例输入</strong><br>3<br>2 3 1</p>
<p><strong>样例输出</strong><br>3</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int a[maxn];</div><div class="line">LL lcm(LL a,LL b)&#123;</div><div class="line">	<span class="built_in">return</span> a*b/gcd(a,b);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n; cin&gt;&gt;n;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];</div><div class="line">	int ans=1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(i==a[i]) <span class="built_in">continue</span>;</div><div class="line">		int len=1;</div><div class="line">		int p=a[i];</div><div class="line">		<span class="keyword">while</span>(i!=p)&#123;</div><div class="line">			p=a[p];</div><div class="line">			len++;</div><div class="line">		&#125;</div><div class="line">		ans=lcm(ans,len);</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>如果该位置i=a[i]无需判断<br>其余位置求循环次数的最小公倍数</p>
<h2 id="hihocoder-1564"><a href="#hihocoder-1564" class="headerlink" title="hihocoder 1564"></a>hihocoder 1564</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>H公司有 N 台服务器，编号1~N，组成了一个树形结构。其中中央服务器处于根节点，终端服务器处于叶子节点。<br>中央服务器会向终端服务器发送消息。一条消息会通过中间节点，到达所有的终端服务器。消息每经过一台服务器(包括根节点的中央服务器和叶子节点的终端服务器)<br>就会被处理并存储下来，其中编号为 i 的服务器，执行处理和存储这个过程会花费 Ai 毫秒的时间。消息从一台服务器传输到另一台服务器的时间可以忽略不计。<br>由于 Ai 各不相同，从中央服务器发出消息到各个终端处理并储存完毕的时间也是不相同的。例如如下的网络，假设1是中央服务器，而2和4是终端服务器。<br>   1<br>  / \<br> 2   3<br>     |<br>     4<br>如果A1=1, A2=4, A3=3, A4=2，那么假设1发出消息的时刻是0，终端2处理完的时刻是A1+A2=5，而终端4处理完的时刻是A1+A3+A4=6。<br>CEO交给小Ho一个任务，要求每台终端处理完消息的时间是完全一致的。小Ho想到了一个天才的解决方案：强行增加某些服务器的处理时间 Ai。例如在上例中，<br>将 A2从4增加到5即可使所有终端都在6毫秒后处理完毕。<br>当然小Ho希望所有服务器增加的处理时间总和最少。你能帮助小Ho吗？</p>
<p>第一行包含一个整数 N。<br>第二行包含N个整数，A1, A2, … AN，表示每个节点处理信息花费的时间。<br>以下 N-1行每行包含两个整数 a 和 b，表示 a 是 b 的父节点。<br>对于30%的数据，满足 1 ≤ N ≤ 103<br>对于100%的数据，满足1 ≤ N ≤ 105, 1 ≤ Ai ≤ 105</p>
<p>输出一个整数表示增加的处理时间之和最小是多少。</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">LL ans,b[maxn];</div><div class="line">int a[maxn];</div><div class="line">int <span class="keyword">in</span>[maxn];</div><div class="line">void dfs(int x)&#123;</div><div class="line">	<span class="keyword">if</span>(e[x].size()==0)&#123;</div><div class="line">		b[x]=(LL)a[x];</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	LL mx=-1;</div><div class="line">	int len=e[x].size();</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">		int next=e[x][i];</div><div class="line">		dfs(next);</div><div class="line">		mx=max(mx,b[next]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)&#123;</div><div class="line">		int next=e[x][i];</div><div class="line">		ans+=mx-b[next];</div><div class="line">	&#125;</div><div class="line">	b[x]=a[x]+mx;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int n;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">	mm(<span class="keyword">in</span>,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">		int u,v;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">		e[u].push_back(v);</div><div class="line">		<span class="keyword">in</span>[v]++;</div><div class="line">	&#125;</div><div class="line">	int root=1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(!<span class="keyword">in</span>[i])&#123;</div><div class="line">			root=i;</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	dfs(root);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>b维护子树结点修改后的值(实际为最大值 包括这棵子树的跟)<br>in数组是为了找到根 mx数组记录子树下结点的dist最大值<br>dfs从叶子结点开始向上遍历 把所有子树的结点都修改成最大值 就可以确保这一棵树的dist相等<br>一层一层遍历上去 随着子树的合并 不断更新b数组来维护修改的后子树的最大值 即可</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[multi多校-1]]></title>
      <url>http://xuboming8.github.io/2017/07/26/multi%E5%A4%9A%E6%A0%A1-1/</url>
      <content type="html"><![CDATA[<h1 id="muti多校-1"><a href="#muti多校-1" class="headerlink" title="muti多校-1"></a>muti多校-1</h1><h2 id="HDU-6033"><a href="#HDU-6033" class="headerlink" title="HDU 6033"></a>HDU 6033</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>找出小于等于2^m次方的最大的10^x次方的数 输出x<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int flag=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int m;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;m)&#123;</div><div class="line">        cout&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;flag++&lt;&lt;<span class="string">": "</span>;</div><div class="line">        cout&lt;&lt;(int)(m*<span class="built_in">log</span>(2)/<span class="built_in">log</span>(10))&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>解对数不等式1&lt;=2^m/10^x&lt;10 解得x=(int)(m*ln(2)/ln(10))</p>
<h2 id="HDU-6034"><a href="#HDU-6034" class="headerlink" title="HDU 6034"></a>HDU 6034</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>最大映射<br>给出若干个字符串 期中a-z可以有数字0-25替换 且一一对应 每一个字符串不能含有前导0 并且满足至少有一个字母不出现在首位<br>替换后每个字符串当成26进制数处理 求最大和</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int flag=1;</div><div class="line">struct node&#123;</div><div class="line">    int t[maxn];</div><div class="line">&#125;a[30];</div><div class="line">int vis[30],k[30];</div><div class="line">int cmp(int x,int y)&#123;</div><div class="line">    <span class="keyword">if</span>(a[x].t[0]&gt;a[y].t[0]) <span class="built_in">return</span> 1;</div><div class="line">    <span class="keyword">if</span>(a[x].t[0]&lt;a[y].t[0]) <span class="built_in">return</span> 0;</div><div class="line">    <span class="keyword">for</span>(int i=a[x].t[0];i&gt;=1;i--)&#123;</div><div class="line">        <span class="keyword">if</span>(a[x].t[i]&gt;a[y].t[i]) <span class="built_in">return</span> 1;</div><div class="line">        <span class="keyword">if</span>(a[x].t[i]&lt;a[y].t[i]) <span class="built_in">return</span> 0;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int n;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n)&#123;</div><div class="line">        cout&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;flag++&lt;&lt;<span class="string">": "</span>;</div><div class="line">        mm(vis,0);</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=25;i++) mm(a[i].t,0);</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=25;i++) k[i]=i;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            string s;</div><div class="line">            cin&gt;&gt;s;</div><div class="line">            vis[s[0]-<span class="string">'a'</span>]=1;</div><div class="line">            int len=s.length();</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;len;j++)&#123;</div><div class="line">                a[s[j]-<span class="string">'a'</span>].t[len-j]++;</div><div class="line">                a[s[j]-<span class="string">'a'</span>].t[0]=max(a[s[j]-<span class="string">'a'</span>].t[0],len-j);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        int maxlen=0;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=25;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=a[i].t[0];j++)&#123;</div><div class="line">                a[i].t[j+1]+=a[i].t[j]/26;</div><div class="line">                a[i].t[j]%=26;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">while</span>(a[i].t[a[i].t[0]+1]&gt;0)&#123;</div><div class="line">                a[i].t[0]++;</div><div class="line">                a[i].t[a[i].t[0]+1]+=a[i].t[a[i].t[0]]/26;</div><div class="line">                a[i].t[a[i].t[0]]%=26;</div><div class="line">            &#125;</div><div class="line">            maxlen=max(maxlen,a[i].t[0]);</div><div class="line">        &#125;</div><div class="line">        sort(k,k+26,cmp);</div><div class="line">        LL ans=0;</div><div class="line">        int now=25;</div><div class="line">        <span class="keyword">while</span>(vis[k[now]] &amp;&amp; now&gt;0) now--;</div><div class="line">        <span class="keyword">for</span>(int i=now;i&lt;=25;i++) k[i]=k[i+1];</div><div class="line">        LL base=1;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=maxlen;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;25;j++)&#123;</div><div class="line">                ans=(ans+(LL)(25-j)*base*a[k[j]].t[i])%mod;</div><div class="line">                ans%=mod; </div><div class="line">            &#125;</div><div class="line">            base=(base*26)%mod;</div><div class="line">        &#125;</div><div class="line">        cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>node a数组表示对于26个字母 对应的权值 t[0]存放该字母权重的长度 t[1]开始存放权重<br>开始对于每个字符串 从首位开始遍历 对应len-j的位置++<br>再对t[1]开始的权重进行转换进制操作 转换成26进制 注意可能在原来t[0]的长度上溢出 实时维护t[0]的长度并且找出maxnlen<br>数组k表示对26个字母的映射 对数组k排序 cmp针对权重比较<br>对于前导0的处理：从25开始从尾部遍历 找到第一个未在开头出现(vis数组判断)并且出现次数最小的位置 令该位置为0 把后面的数字<br>全部左移一位 由于最后一位是0不影响结果所以无需把该位置移到最后<br>对于1-maxlen 遍历每个位置 对于每个位置遍历0-24(25位置是0无需考虑) 利用k[j]找到从大到小权重对应的字母 用替换的数字<em>基数base</em>该位置大小即可<br>注意取模操作</p>
<h2 id="HDU-6043"><a href="#HDU-6043" class="headerlink" title="HDU 6043"></a>HDU 6043</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>Q有n双袜子 每双袜子对应1-n的一个编号且唯一<br>每天早上Q穿上编号最小的数字 每天晚上脱下 并且把袜子放入篮子里<br>篮子里的袜子如果等于n-1 Q会把这些袜子洗掉 在第二天的傍晚放回衣柜<br>问第k天早上穿上袜子的编号是多少</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int flag=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//    freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    LL n,k;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;k)&#123;</div><div class="line">        cout&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;flag++&lt;&lt;<span class="string">": "</span>;</div><div class="line">        LL re;</div><div class="line">        <span class="keyword">if</span>(n&gt;=k) re=k;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            LL temp=k-n;</div><div class="line">            LL ans=(temp-1)/(n-1);</div><div class="line">            <span class="keyword">if</span>(ans&amp;1)&#123;</div><div class="line">                re=(temp-1)%(n-1)+1;</div><div class="line">                <span class="keyword">if</span>(re==n-1) re=n;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> re=(temp-1)%(n-1)+1;</div><div class="line">        &#125;</div><div class="line">        cout&lt;&lt;re&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>用优先队列模拟后打表找规律<br>发现规律<br>(n==4)<br>1234 123 124 123 124···<br>(n==5)<br>12345 1234 1235 1234 1235···<br>若k&lt;=n直接输出<br>否则减去前n项后 (k-1)/(n-1)找出循环次数<br>为奇为偶额外判断 若为奇数需特判ans==n-1的情况 此时ans=n</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cf round 425]]></title>
      <url>http://xuboming8.github.io/2017/07/25/cf-round-425/</url>
      <content type="html"><![CDATA[<h1 id="cf-round-425"><a href="#cf-round-425" class="headerlink" title="cf round 425"></a>cf round 425</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>n个火柴每次依次拿走k个 无法拿走的人输<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	LL n,k;</div><div class="line">	cin&gt;&gt;n&gt;&gt;k;</div><div class="line">	LL ans=n/k;</div><div class="line">	<span class="keyword">if</span>(ans&amp;1) cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">	<span class="keyword">else</span> cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>模拟</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>先给出一些字母 为好的字母 其余的字母均为差的字母<br>给出由小写字母和？&#42;组成的子串 ？代表可以由任意的好字母替换 &#42;最多只有一个 可以用差的字母 查的字母构成的子串<br>或者空的字符串组成<br>接下来有q个询问 对于每个询问给出目标字符串 问是否可以由母串变化得到</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int hashh[30];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	string s1,s;</div><div class="line">	cin&gt;&gt;s1;</div><div class="line">	mm(hashh,0);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;s1.length();i++) hashh[s1[i]-<span class="string">'0'</span>]++;</div><div class="line">	cin&gt;&gt;s;</div><div class="line">	int q; cin&gt;&gt;q;</div><div class="line">	<span class="keyword">while</span>(q--)&#123;</div><div class="line">		string t;</div><div class="line">		cin&gt;&gt;t;</div><div class="line">		int flag=1; </div><div class="line">		int j=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;s.length();i++)&#123;</div><div class="line">			<span class="keyword">if</span>(s[i]==<span class="string">'*'</span>)&#123;</div><div class="line">				<span class="keyword">if</span>(s.length()&gt;t.length()) <span class="built_in">continue</span>;</div><div class="line">				<span class="keyword">else</span>&#123;</div><div class="line">					int len=t.length()-s.length();</div><div class="line">					<span class="keyword">for</span>(;j&lt;=i+len;j++)&#123;</div><div class="line">						<span class="keyword">if</span>(hashh[t[j]-<span class="string">'0'</span>]&gt;0)&#123;</div><div class="line">							flag=0;</div><div class="line">							<span class="built_in">break</span>;</div><div class="line">						&#125;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">'?'</span>)&#123;</div><div class="line">				<span class="keyword">if</span>(hashh[t[j]-<span class="string">'0'</span>]==0)&#123;</div><div class="line">					flag=0;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">				j++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				<span class="keyword">if</span>(s[i]!=t[j])&#123;</div><div class="line">					flag=0;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">				j++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(j&lt;t.length())&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(flag) cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>模拟<br>注意&#42;的判断 若s的长度大于t的长度 那么&#42;为空串<br>&#42;可以替换的长度最多为s的长度-t的长度 这是为了确保后面的字符还能一一对应<br>最后特判如果t字符串未扫描到最后 输出NO</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出一棵树<br>接下来给出一些三元组 可以任意组成fst三个点<br>A要从s走到f 路径为最短路<br>B要从t走到f 路径为最短路<br>问他们相交的点最多为多少</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int vis[maxn],deep[maxn],f[maxn],anc[maxn][25];</div><div class="line">int dis[maxn];</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">void dfs(int x,int fa)&#123;</div><div class="line">    anc[x][0]=f[x];</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=20;i++) anc[x][i]=anc[anc[x][i-1]][i-1];</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e[x].size();i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next!=fa)&#123;</div><div class="line">            f[next]=x;</div><div class="line">            deep[next]=deep[x]+1;</div><div class="line">            dfs(next,x);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int lca(int x,int y)&#123;</div><div class="line">    <span class="keyword">if</span>(deep[x]&lt;deep[y]) swap(x,y);</div><div class="line">    <span class="keyword">for</span>(int i=20;i&gt;=0;i--) <span class="keyword">if</span>(deep[anc[x][i]]&gt;=deep[y]) x=anc[x][i];</div><div class="line">    <span class="keyword">if</span>(x==y) <span class="built_in">return</span> x;</div><div class="line">    <span class="keyword">for</span>(int i=20;i&gt;=0;i--) <span class="keyword">if</span>(anc[x][i]!=anc[y][i]) x=anc[x][i],y=anc[y][i];</div><div class="line">    <span class="built_in">return</span> f[x];</div><div class="line">&#125;</div><div class="line">void dfs2(int id)&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e[id].size();i++)&#123;</div><div class="line">        int next=e[id][i];</div><div class="line">        <span class="keyword">if</span>(vis[next]) <span class="built_in">continue</span>;</div><div class="line">        dis[next]=dis[id]+1;</div><div class="line">        vis[next]=1;</div><div class="line">        dfs2(next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int solve(int f,int s,int t)&#123;</div><div class="line">	int l1=lca(f,s);</div><div class="line">	int len1=dis[s]+dis[f]-2*dis[l1];</div><div class="line">	int l2=lca(f,t);</div><div class="line">	int len2=dis[f]+dis[t]-2*dis[l2];</div><div class="line">	int l3=lca(s,t);</div><div class="line">	int len3=dis[s]+dis[t]-2*dis[l3];</div><div class="line">	<span class="built_in">return</span> (len1+len2-len3)/2+1;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n,q;</div><div class="line">	cin&gt;&gt;n&gt;&gt;q;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">		int x;</div><div class="line">		cin&gt;&gt;x;</div><div class="line">		e[x].pb(i);</div><div class="line">		e[i].pb(x);</div><div class="line">	&#125;</div><div class="line">	mm(vis,0),mm(f,0),mm(anc,0),mm(deep,0),mm(dis,0);</div><div class="line">	deep[1]=1;</div><div class="line">	dfs(1,0);</div><div class="line">	vis[1]=1;</div><div class="line">	dfs2(1);</div><div class="line">	<span class="keyword">while</span>(q--)&#123;</div><div class="line">		int a,b,c;</div><div class="line">		cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</div><div class="line">		int ans=0;</div><div class="line">		ans=max(ans,solve(a,b,c));</div><div class="line">		ans=max(ans,solve(b,a,c));</div><div class="line">		ans=max(ans,solve(c,b,a));</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>求两条路径的共同长度 使用lca<br>　F<br>S　　T<br>如上图 s到f和t到f的共同长度=(len(s,f)+len(t,f)-len(s,t))/2<br>而树上两点距离使用lca len=dis[a]+dis[b]-2*dis[lca(a,b)]<br>dis表示到任意点的距离 本题是到点1的距离<br>最后需要注意公共长度需要+1 因为本题求得是公共点数 = 路径长度+1</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hihocoder编程练习赛19]]></title>
      <url>http://xuboming8.github.io/2017/07/24/hihocoder%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E8%B5%9B19/</url>
      <content type="html"><![CDATA[<h1 id="hihocoder编程练习赛19"><a href="#hihocoder编程练习赛19" class="headerlink" title="hihocoder编程练习赛19"></a>hihocoder编程练习赛19</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><a id="more"></a>
<p><strong>描述</strong><br>小Hi的学校大礼堂的地毯是由很多块N × M大小的基本地毯拼接而成的。<br>由于大礼堂面积非常大，可以认为整片地毯是由基本地毯无限延伸拼接的。<br>现在给出K张地毯的照片，请你判断哪些照片可能是小Hi学校大礼堂地毯的一部分。不需要考虑旋转照片的方向。</p>
<p><strong>输入</strong><br>第1行包含三个整数，N，M 和 K。<br>第2~N+1行包含一个N × M的矩阵，代表基本地毯的样式。其中每一个元素都是一个大写字母(A-Z)。<br>之后是 K 张照片的数据。<br>每张照片的第一行包含两个整数，H 和 W，代表照片的大小。<br>以下 H 行包含一个 H × W的矩阵，代表照片中地毯的样式。其中每一个元素都是一个大写字母(A-Z)。<br>对于80%的数据，1 ≤ N, M ≤ 10, 1 ≤ H, W ≤ 100<br>对于100%的数据， 1 ≤ N, M ≤ 50, 1 ≤ K ≤ 10, 1 ≤ H ≤ 100, 1 ≤ W ≤ 800。</p>
<p><strong>输出</strong><br>对于每张照片，输出YES或者NO代表它是否可能是大礼堂地毯的一部分。</p>
<p><strong>样例输入</strong><br>2 3 3<br>ABC<br>ABD<br>3 3<br>BCA<br>BDA<br>BCA<br>2 3<br>BAC<br>BAD<br>7 14<br>ABCABCABCABCAB<br>ABDABDABDABDAB<br>ABCABCABCABCAB<br>ABDABDABDABDAB<br>ABCABCABCABCAB<br>ABDABDABDABDAB<br>ABCABCABCABCAB</p>
<p><strong>样例输出</strong><br>YES<br>NO<br>YES</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define mem(a, b) memset(a,b,sizeof(a))</span></div><div class="line">using namespace std;</div><div class="line">typedef long long ll;</div><div class="line">const ll mod = 1e9+7;</div><div class="line">const int maxn = 10000 + 50;</div><div class="line">int n, m , k;</div><div class="line">char a[55][55];</div><div class="line">char g[120][850];</div><div class="line">char t[120][850];</div><div class="line">int c, r;</div><div class="line">bool check(int gi, int gj)&#123;</div><div class="line">	<span class="keyword">if</span>(gi + r  &gt; 120) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">	<span class="keyword">if</span>(gj + c  &gt; 850) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">	int p,q,i,j;</div><div class="line">	<span class="keyword">for</span>(i = gi,p=0; p &lt; r; p++,i++)</div><div class="line">		<span class="keyword">for</span>(j = gj,q=0; q &lt; c; q++,j++)</div><div class="line">			<span class="keyword">if</span>(g[i][j] != t[p][q]) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">	<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">	//freopen(<span class="string">"input.txt"</span>, <span class="string">"r"</span>, stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);cout.tie(0);</div><div class="line">	cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</div><div class="line">	<span class="keyword">for</span>(int i = 0; i &lt; n; i++)</div><div class="line">		<span class="keyword">for</span>(int j = 0; j &lt; m; j++)</div><div class="line">			cin &gt;&gt; a[i][j];</div><div class="line">	<span class="keyword">for</span>(int i = 0; i &lt; 120; i++)</div><div class="line">		<span class="keyword">for</span>(int j = 0; j &lt; 850; j++)&#123;</div><div class="line">			g[i][j] = a[i%n][j%m];</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">for</span>(int i = 0; i &lt; k; i++)&#123;</div><div class="line">		cin &gt;&gt; r &gt;&gt; c;</div><div class="line">		<span class="keyword">for</span>(int i = 0; i &lt; r; i++)</div><div class="line">			<span class="keyword">for</span>(int j = 0; j &lt; c; j++)</div><div class="line">				cin &gt;&gt; t[i][j];</div><div class="line">		bool <span class="built_in">fg</span> = <span class="literal">false</span>;</div><div class="line">		<span class="keyword">for</span>(int i = 0; i &lt; n; i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j = 0; j &lt; m; j++)&#123;</div><div class="line">				<span class="keyword">if</span>(t[0][0] == g[i][j])</div><div class="line">					<span class="keyword">if</span>(check(i,j))&#123;</div><div class="line">						<span class="built_in">fg</span> = <span class="literal">true</span>;</div><div class="line">						<span class="built_in">break</span>;</div><div class="line">					&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(<span class="built_in">fg</span>)&#123;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">fg</span>) cout &lt;&lt; <span class="string">"YES"</span> &lt;&lt; endl;</div><div class="line">		<span class="keyword">else</span> cout &lt;&lt; <span class="string">"NO"</span> &lt;&lt; endl;</div><div class="line">	&#125;</div><div class="line">	 <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>把原地摊扩充<br>在n*m中枚举每个起点后判断是否相同</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>描述</strong><br>给定一个{1..N}的排列A1, A2, … AN，每一次操作可以将相邻的两个数一起移动（保持两个数相邻且前后顺序不变）到任意位置。询问至少经过多少次操作，可以使得原序列变为1, 2, …, N。<br>例如对于54321，把32一起移动到最左端得到32541；再把25一起移动到最右端得到34125；再把12一起移动到最左端得到12345。</p>
<p><strong>输入</strong><br>第1行：1个正整数 T，表示输入数据的组数<br>第2..T+1行：每行一个字符串，表示初始排列<br>对于30%的数据：T = 1, 1 ≤ N ≤ 5<br>对于100%的数据：1 ≤ T ≤ 5, 1 ≤ N ≤ 8</p>
<p><strong>输出</strong><br>第1..T行：每行一个整数，第i行表示第i个排列变化为1, 2, …, N所需要的最少步数。若无可行方案，输出”-1”。</p>
<p><strong>样例输入</strong><br>2<br>54321<br>321</p>
<p><strong>样例输出</strong><br>3<br>-1</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int temp[10];</div><div class="line">void <span class="function"><span class="title">run</span></span>()&#123;</div><div class="line">    queue&lt;int&gt; q;</div><div class="line">    map&lt;int,int&gt; step;</div><div class="line">    int s;</div><div class="line">    cin&gt;&gt;s;</div><div class="line">    q.push(s);</div><div class="line">    step[s] = 0;</div><div class="line">    int len=0;</div><div class="line">    <span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">        int t = q.front();</div><div class="line">        int now = step[t];</div><div class="line">        q.pop();</div><div class="line">        len = 0;</div><div class="line">        <span class="keyword">while</span>( t&gt;0 )&#123;</div><div class="line">            temp[len++] = t%10;</div><div class="line">            t/=10;</div><div class="line">        &#125;</div><div class="line">        int a, b[8];</div><div class="line">        <span class="keyword">for</span>(int i=0; i&lt;len-1; i++)&#123;</div><div class="line">            int cnt=0;</div><div class="line">            a = temp[i] + temp[i+1]*10;</div><div class="line">            <span class="keyword">for</span>(int j=0; j&lt;len; j++)&#123;</div><div class="line">                <span class="keyword">if</span>( j==i || j==i+1 ) <span class="built_in">continue</span>;</div><div class="line">                b[cnt++] = temp[j];</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span>(int pos=0; pos&lt;=cnt; pos++)&#123;</div><div class="line">                int next = 0;</div><div class="line">                <span class="keyword">for</span>(int j=cnt; j&gt;=0; j--)&#123;</div><div class="line">                    <span class="keyword">if</span>( j&lt;cnt ) next = next*10 + b[j];</div><div class="line">                    <span class="keyword">if</span> (pos==j) next = next*100 + a;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span>( !step.count(next) )&#123;</div><div class="line">                    q.push(next);</div><div class="line">                    step[next] = now+1;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    int t=0;</div><div class="line">    <span class="keyword">for</span>(int i=1; i&lt;=len; i++)&#123;</div><div class="line">        t = t*10 + i;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (!step.count(t)) step[t] = -1;</div><div class="line">    cout&lt;&lt;step[t]&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">    int T;</div><div class="line">    cin&gt;&gt;T;</div><div class="line">    <span class="keyword">while</span>(T--) run();</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>bfs暴力枚举<br>每一个状态看成一个数字利用map映射到移动步骤中<br>判重用map里的count</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>描述</strong><br>H国有 n 个城市，编号1..n。城市间有n-1条铁路，保证任意两个城市可以通过铁路互达，且路线唯一。<br>现有 m 次询问，每次询问两条铁路线是否相交（有共同经过的城市或铁路）。</p>
<p><strong>输入</strong><br>第一行一个数 T，表示数据组数<br>对于每一组数据：<br>第一行两个数n, m<br>第2~n行，每行两个数x, y表示有一条铁路连接城市 x 和 y<br>接下来m行每行四个数，x1, y1, x2, y2 表示询问城市 x1 和 y1 之间的路线是否和城市 x2 和 y2 之间的路线相交。<br>对于40%的数据，1 ≤ n, m ≤ 100<br>对于60%的数据，1 ≤ n, m ≤ 1000<br>对于100%的数据，1 ≤ T ≤ 10, 1 ≤ n, m ≤ 100000 1 ≤ x, y, x1, y1, x2, y2 ≤ n</p>
<p><strong>输出</strong><br>对于每次询问输出YES或NO</p>
<p><strong>样例输入</strong><br>1<br>4 2<br>1 2<br>2 3<br>3 4<br>1 2 3 4<br>1 4 2 3</p>
<p><strong>样例输出</strong><br>NO<br>YES</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int deep[maxn],f[maxn],anc[maxn][25];</div><div class="line">vector&lt;int&gt;e[maxn]; </div><div class="line">void dfs(int x,int fa)&#123;</div><div class="line">    anc[x][0]=f[x];</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=20;i++) anc[x][i]=anc[anc[x][i-1]][i-1];</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e[x].size();i++)&#123;</div><div class="line">        int next=e[x][i];</div><div class="line">        <span class="keyword">if</span>(next!=fa)&#123;</div><div class="line">            f[next]=x;</div><div class="line">            deep[next]=deep[x]+1;</div><div class="line">            dfs(next,x);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int lca(int x,int y)&#123;</div><div class="line">    <span class="keyword">if</span>(deep[x]&lt;deep[y]) swap(x,y);</div><div class="line">    <span class="keyword">for</span>(int i=20;i&gt;=0;i--) <span class="keyword">if</span>(deep[anc[x][i]]&gt;=deep[y]) x=anc[x][i];</div><div class="line">    <span class="keyword">if</span>(x==y) <span class="built_in">return</span> x;</div><div class="line">    <span class="keyword">for</span>(int i=20;i&gt;=0;i--) <span class="keyword">if</span>(anc[x][i]!=anc[y][i]) x=anc[x][i],y=anc[y][i];</div><div class="line">    <span class="built_in">return</span> f[x];</div><div class="line">&#125;</div><div class="line">bool <span class="function"><span class="title">check</span></span>()&#123;</div><div class="line">	int x1,y1,x2,y2;</div><div class="line">	cin&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2;</div><div class="line">	int t1=lca(x1,y1);</div><div class="line">	int t2=lca(x2,y2);</div><div class="line">	<span class="keyword">if</span>(lca(t1,t2)==t1)&#123;</div><div class="line">		<span class="keyword">if</span>(lca(t2,x1)==t2 || lca(t2,y1)==t2) <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(lca(t1,t2)==t2)&#123;</div><div class="line">		<span class="keyword">if</span>(lca(t1,x2)==t1 || lca(t1,y2)==t1) <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int n,m;</div><div class="line">		cin&gt;&gt;n&gt;&gt;m;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">			int u,v;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v;</div><div class="line">			e[u].pb(v);</div><div class="line">			e[v].pb(u);</div><div class="line">		&#125;</div><div class="line">		mm(f,0);</div><div class="line">		mm(anc,0);</div><div class="line">		mm(deep,0);</div><div class="line">		deep[1]=1;</div><div class="line">		dfs(1,0);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(check()) cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">			<span class="keyword">else</span> cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>x1和y1的lca为t1<br>x2和y2的lca为t2<br>若相交 t1或t2必为交点<br>若t1是交点 那么x1或y1的至少一个和t2的lca为t2<br>若t2是交点 那么x2或y2的至少一个和t1的lca为t1</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[网络流拓展二]]></title>
      <url>http://xuboming8.github.io/2017/07/19/%E7%BD%91%E7%BB%9C%E6%B5%81%E6%8B%93%E5%B1%95%E4%BA%8C/</url>
      <content type="html"><![CDATA[<h1 id="网络流拓展二"><a href="#网络流拓展二" class="headerlink" title="网络流拓展二"></a>网络流拓展二</h1><h2 id="POJ-3680-区间k覆盖问题-离散"><a href="#POJ-3680-区间k覆盖问题-离散" class="headerlink" title="POJ 3680(区间k覆盖问题+离散)"></a>POJ 3680(区间k覆盖问题+离散)</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>枢轴上有一些带权值的区间 选出权和尽量大的一些区间 使得任意一个数最多被k个区间覆盖<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 410</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">struct Edge&#123;</div><div class="line">	int from,to,<span class="built_in">cap</span>,flow,cost;</div><div class="line">	Edge(int from,int to,int <span class="built_in">cap</span>,int flow,int cost):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow),cost(cost)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">struct MCMF&#123;</div><div class="line">	int n,m,s,t;</div><div class="line">	vector&lt;Edge&gt;edges;</div><div class="line">	vector&lt;int&gt;G[maxn];</div><div class="line">	int inq[maxn],d[maxn],p[maxn],a[maxn];</div><div class="line">	void init(int n)&#123;</div><div class="line">		this-&gt;n=n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) G[i].clear();</div><div class="line">		edges.clear();</div><div class="line">	&#125;</div><div class="line">	void AddEdge(int from,int to,int <span class="built_in">cap</span>,int cost)&#123;</div><div class="line">		edges.push_back(Edge(from,to,<span class="built_in">cap</span>,0,cost));</div><div class="line">		edges.push_back(Edge(to,from,0,0,-cost));</div><div class="line">		m=edges.size();</div><div class="line">		G[from].push_back(m-2);</div><div class="line">		G[to].push_back(m-1);</div><div class="line">	&#125;</div><div class="line">	bool BellmanFord(int s,int t,int &amp;flow,int&amp; cost)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) d[i]=inf;</div><div class="line">		memset(inq,0,sizeof(inq));</div><div class="line">		d[s]=0,inq[s]=1,p[s]=0,a[s]=inf;</div><div class="line">		queue&lt;int&gt;Q;</div><div class="line">		Q.push(s);</div><div class="line">		<span class="keyword">while</span>(!Q.empty())&#123;</div><div class="line">			int u=Q.front();  Q.pop();</div><div class="line">			inq[u]=0;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;G[u].size();i++)&#123;</div><div class="line">				Edge&amp; e=edges[G[u][i]];</div><div class="line">				<span class="keyword">if</span>(e.cap&gt;e.flow &amp;&amp; d[e.to]&gt;d[u]+e.cost)&#123;</div><div class="line">					d[e.to]=d[u]+e.cost;</div><div class="line">					p[e.to]=G[u][i];</div><div class="line">					a[e.to]=min(a[u],e.cap-e.flow);</div><div class="line">					<span class="keyword">if</span>(!inq[e.to])&#123;</div><div class="line">						Q.push(e.to);</div><div class="line">						inq[e.to]=1;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(d[t]==inf) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">		flow+=a[t];</div><div class="line">		cost+=d[t]*a[t];</div><div class="line">		int u=t;</div><div class="line">		<span class="keyword">while</span>(u!=s)&#123;</div><div class="line">			edges[p[u]].flow+=a[t];</div><div class="line">			edges[p[u]^1].flow-=a[t];</div><div class="line">			u=edges[p[u]].from;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	int Mincost(int s,int t)&#123;</div><div class="line">		int flow=0,cost=0;</div><div class="line">		<span class="keyword">while</span>(BellmanFord(s,t,flow,cost));</div><div class="line">		<span class="built_in">return</span> cost;</div><div class="line">	&#125;</div><div class="line">&#125;mc;</div><div class="line">int l[maxn],r[maxn],w[maxn],temp[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int nn,k;</div><div class="line">		cin&gt;&gt;nn&gt;&gt;k;</div><div class="line">		int cnt=0,mm=1;</div><div class="line">		mc.init(maxn);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">			cin&gt;&gt;l[i]&gt;&gt;r[i]&gt;&gt;w[i];</div><div class="line">			temp[++cnt]=l[i];</div><div class="line">			temp[++cnt]=r[i];</div><div class="line">		&#125;</div><div class="line">		sort(temp+1,temp+1+cnt);</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=cnt;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(temp[i]!=temp[i-1]) temp[++mm]=temp[i];</div><div class="line">		&#125;</div><div class="line">		int S=0,T=mm+1;</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=mm;i++) mc.AddEdge(i-1,i,k,0);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">			int u=lower_bound(temp+1,temp+1+mm,l[i])-temp;</div><div class="line">			int v=lower_bound(temp+1,temp+1+mm,r[i])-temp;</div><div class="line">			mc.AddEdge(u,v,1,-w[i]);</div><div class="line">		&#125;</div><div class="line">		mc.AddEdge(S,1,k,0);</div><div class="line">		mc.AddEdge(mm,T,k,0);</div><div class="line">		int ans=-mc.Mincost(S,T);</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>MCMF解法：<br>把所有点排序后离散化去重<br>相邻点加边 容量为k 费用为0<br>对于原来的区间[l,r] 找到排序后l和r的位置建边 容量为1 费用为-w<br>源点到点1建边 容量为k 费用为0 满足最多k区间覆盖<br>点mm到汇点建边 容量为k 费用为0<br>跑一遍MCMF 答案取反就是所求(求的是最大 MCMF是最小费用)</p>
<h2 id="HDU-4106-区间k覆盖变形"><a href="#HDU-4106-区间k覆盖变形" class="headerlink" title="HDU 4106(区间k覆盖变形)"></a>HDU 4106(区间k覆盖变形)</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>一共有n个水果 每个水果有一个权值 在连续m个水果中最多只能划k个 问所能划到的最大权值</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">struct Edge&#123;</div><div class="line">	int from,to,<span class="built_in">cap</span>,flow,cost;</div><div class="line">	Edge(int from,int to,int <span class="built_in">cap</span>,int flow,int cost):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow),cost(cost)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">struct MCMF&#123;</div><div class="line">	int n,m,s,t;</div><div class="line">	vector&lt;Edge&gt;edges;</div><div class="line">	vector&lt;int&gt;G[maxn];</div><div class="line">	int inq[maxn],d[maxn],p[maxn],a[maxn];</div><div class="line">	void init(int n)&#123;</div><div class="line">		this-&gt;n=n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) G[i].clear();</div><div class="line">		edges.clear();</div><div class="line">	&#125;</div><div class="line">	void AddEdge(int from,int to,int <span class="built_in">cap</span>,int cost)&#123;</div><div class="line">		edges.push_back(Edge(from,to,<span class="built_in">cap</span>,0,cost));</div><div class="line">		edges.push_back(Edge(to,from,0,0,-cost));</div><div class="line">		m=edges.size();</div><div class="line">		G[from].push_back(m-2);</div><div class="line">		G[to].push_back(m-1);</div><div class="line">	&#125;</div><div class="line">	bool BellmanFord(int s,int t,int &amp;flow,int&amp; cost)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) d[i]=inf;</div><div class="line">		memset(inq,0,sizeof(inq));</div><div class="line">		d[s]=0,inq[s]=1,p[s]=0,a[s]=inf;</div><div class="line">		queue&lt;int&gt;Q;</div><div class="line">		Q.push(s);</div><div class="line">		<span class="keyword">while</span>(!Q.empty())&#123;</div><div class="line">			int u=Q.front();  Q.pop();</div><div class="line">			inq[u]=0;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;G[u].size();i++)&#123;</div><div class="line">				Edge&amp; e=edges[G[u][i]];</div><div class="line">				<span class="keyword">if</span>(e.cap&gt;e.flow &amp;&amp; d[e.to]&gt;d[u]+e.cost)&#123;</div><div class="line">					d[e.to]=d[u]+e.cost;</div><div class="line">					p[e.to]=G[u][i];</div><div class="line">					a[e.to]=min(a[u],e.cap-e.flow);</div><div class="line">					<span class="keyword">if</span>(!inq[e.to])&#123;</div><div class="line">						Q.push(e.to);</div><div class="line">						inq[e.to]=1;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(d[t]==inf) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">		flow+=a[t];</div><div class="line">		cost+=d[t]*a[t];</div><div class="line">		int u=t;</div><div class="line">		<span class="keyword">while</span>(u!=s)&#123;</div><div class="line">			edges[p[u]].flow+=a[t];</div><div class="line">			edges[p[u]^1].flow-=a[t];</div><div class="line">			u=edges[p[u]].from;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	int Mincost(int s,int t)&#123;</div><div class="line">		int flow=0,cost=0;</div><div class="line">		<span class="keyword">while</span>(BellmanFord(s,t,flow,cost));</div><div class="line">		<span class="built_in">return</span> cost;</div><div class="line">	&#125;</div><div class="line">&#125;mc;</div><div class="line">int w[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int nn,mm,k;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;nn&gt;&gt;mm&gt;&gt;k)&#123;</div><div class="line">		int sum=0;</div><div class="line">		int S=0,T=nn-mm+3;</div><div class="line">		int fin=T-1;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">			cin&gt;&gt;w[i];</div><div class="line">			sum+=w[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(k==mm)&#123;</div><div class="line">			cout&lt;&lt;sum&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		mc.init(maxn);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;fin;i++) mc.AddEdge(i,i+1,k,0);</div><div class="line">		mc.AddEdge(S,1,k,0);</div><div class="line">		mc.AddEdge(fin,T,k,0);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">			int l=max(1,i-mm+1);</div><div class="line">			int r=min(i,fin-1)+1;</div><div class="line">			mc.AddEdge(l,r,1,-w[i]);</div><div class="line">		&#125;</div><div class="line">		int ans=-mc.Mincost(S,T);</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>POJ3680是区间内对点的限制 而本题是点对区间的限制 所以把区间变点 点代表区间<br>在n个点里面一共有n-m+1个长度为m的区间，现在把这n-m+1个区间两两之间用点隔开，那么一共用n-m+2个点<br>如果选n这个点则从点max(1,i-m+1)到点min(fin-1,i)+1之间的区间每个点(此点代表的是线段)可选的点数就会减一<br>除此之外其余的建边与上题一样 加剪枝防tle  </p>
<h2 id="POJ-3762-同3680"><a href="#POJ-3762-同3680" class="headerlink" title="POJ 3762(同3680)"></a>POJ 3762(同3680)</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出n个任务 每个任务有一个时间间隔以及完成的分数<br>给出k天时间 问能获得的最大分数</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 4050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">struct Edge&#123;</div><div class="line">	int from,to,<span class="built_in">cap</span>,flow,cost;</div><div class="line">	Edge(int from,int to,int <span class="built_in">cap</span>,int flow,int cost):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow),cost(cost)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">struct MCMF&#123;</div><div class="line">	int n,m,s,t;</div><div class="line">	vector&lt;Edge&gt;edges;</div><div class="line">	vector&lt;int&gt;G[maxn];</div><div class="line">	int inq[maxn],d[maxn],p[maxn],a[maxn];</div><div class="line">	void init(int n)&#123;</div><div class="line">		this-&gt;n=n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) G[i].clear();</div><div class="line">		edges.clear();</div><div class="line">	&#125;</div><div class="line">	void AddEdge(int from,int to,int <span class="built_in">cap</span>,int cost)&#123;</div><div class="line">		edges.push_back(Edge(from,to,<span class="built_in">cap</span>,0,cost));</div><div class="line">		edges.push_back(Edge(to,from,0,0,-cost));</div><div class="line">		m=edges.size();</div><div class="line">		G[from].push_back(m-2);</div><div class="line">		G[to].push_back(m-1);</div><div class="line">	&#125;</div><div class="line">	bool BellmanFord(int s,int t,int &amp;flow,int&amp; cost)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) d[i]=inf;</div><div class="line">		memset(inq,0,sizeof(inq));</div><div class="line">		d[s]=0,inq[s]=1,p[s]=0,a[s]=inf;</div><div class="line">		queue&lt;int&gt;Q;</div><div class="line">		Q.push(s);</div><div class="line">		<span class="keyword">while</span>(!Q.empty())&#123;</div><div class="line">			int u=Q.front();  Q.pop();</div><div class="line">			inq[u]=0;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;G[u].size();i++)&#123;</div><div class="line">				Edge&amp; e=edges[G[u][i]];</div><div class="line">				<span class="keyword">if</span>(e.cap&gt;e.flow &amp;&amp; d[e.to]&gt;d[u]+e.cost)&#123;</div><div class="line">					d[e.to]=d[u]+e.cost;</div><div class="line">					p[e.to]=G[u][i];</div><div class="line">					a[e.to]=min(a[u],e.cap-e.flow);</div><div class="line">					<span class="keyword">if</span>(!inq[e.to])&#123;</div><div class="line">						Q.push(e.to);</div><div class="line">						inq[e.to]=1;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(d[t]==inf) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">		flow+=a[t];</div><div class="line">		cost+=d[t]*a[t];</div><div class="line">		int u=t;</div><div class="line">		<span class="keyword">while</span>(u!=s)&#123;</div><div class="line">			edges[p[u]].flow+=a[t];</div><div class="line">			edges[p[u]^1].flow-=a[t];</div><div class="line">			u=edges[p[u]].from;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	int Mincost(int s,int t)&#123;</div><div class="line">		int flow=0,cost=0;</div><div class="line">		<span class="keyword">while</span>(BellmanFord(s,t,flow,cost));</div><div class="line">		<span class="built_in">return</span> cost;</div><div class="line">	&#125;</div><div class="line">&#125;mc;</div><div class="line">int l[maxn],r[maxn],w[maxn],temp[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	int nn,k;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;nn,&amp;k)!=EOF)&#123;</div><div class="line">		int len=0,len2=1;</div><div class="line">		mc.init(maxn);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">			int h1,m1,s1,h2,m2,s2;</div><div class="line">			scanf(<span class="string">"%d:%d:%d %d:%d:%d %d"</span>,&amp;h1,&amp;m1,&amp;s1,&amp;h2,&amp;m2,&amp;s2,&amp;w[i]);</div><div class="line">			int temp1=h1*3600+m1*60+s1;</div><div class="line">			int temp2=h2*3600+m2*60+s2;</div><div class="line">			l[i]=temp1,r[i]=temp2;</div><div class="line">			temp[++len]=temp1,temp[++len]=temp2;</div><div class="line">		&#125;</div><div class="line">		sort(temp+1,temp+1+len);</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=len;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(temp[i]!=temp[i-1]) temp[++len2]=temp[i];</div><div class="line">		&#125;</div><div class="line">		int S=0,T=len2+1;</div><div class="line">		mc.AddEdge(S,1,k,0);</div><div class="line">		mc.AddEdge(T-1,T,k,0);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;len2;i++) mc.AddEdge(i,i+1,k,0);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">			int u=lower_bound(temp+1,temp+1+len2,l[i])-temp;</div><div class="line">			int v=lower_bound(temp+1,temp+1+len2,r[i])-temp;</div><div class="line">			mc.AddEdge(u,v,1,-w[i]);</div><div class="line">		&#125;</div><div class="line">		int ans=-mc.Mincost(S,T);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>同3680<br>每个时刻最多重叠k次(k天)<br>注意本题输入最好用scanf 用scanf不能取消流的限制</p>
<h2 id="POJ-3422-区间累计k覆盖最大值"><a href="#POJ-3422-区间累计k覆盖最大值" class="headerlink" title="POJ 3422(区间累计k覆盖最大值)"></a>POJ 3422(区间累计k覆盖最大值)</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>N*N的地图上每格都有分数，分数只能获取一次。有人从左上方开始，每次向右或下移动一格，到右下方为止，记为一次环游。问第K次环游后累计分数的最大值</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;vector&gt;</span></div><div class="line"><span class="comment">#include &lt;queue&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#define maxn 5050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">struct Edge&#123;</div><div class="line">	int from,to,<span class="built_in">cap</span>,flow,cost;</div><div class="line">	Edge(int from,int to,int <span class="built_in">cap</span>,int flow,int cost):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow),cost(cost)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">struct MCMF&#123;</div><div class="line">	int n,m,s,t;</div><div class="line">	vector&lt;Edge&gt;edges;</div><div class="line">	vector&lt;int&gt;G[maxn];</div><div class="line">	int inq[maxn],d[maxn],p[maxn],a[maxn];</div><div class="line">	void init(int n)&#123;</div><div class="line">		this-&gt;n=n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) G[i].clear();</div><div class="line">		edges.clear();</div><div class="line">	&#125;</div><div class="line">	void AddEdge(int from,int to,int <span class="built_in">cap</span>,int cost)&#123;</div><div class="line">		edges.push_back(Edge(from,to,<span class="built_in">cap</span>,0,cost));</div><div class="line">		edges.push_back(Edge(to,from,0,0,-cost));</div><div class="line">		m=edges.size();</div><div class="line">		G[from].push_back(m-2);</div><div class="line">		G[to].push_back(m-1);</div><div class="line">	&#125;</div><div class="line">	bool BellmanFord(int s,int t,int &amp;flow,int&amp; cost)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) d[i]=inf;</div><div class="line">		memset(inq,0,sizeof(inq));</div><div class="line">		d[s]=0,inq[s]=1,p[s]=0,a[s]=inf;</div><div class="line">		queue&lt;int&gt;Q;</div><div class="line">		Q.push(s);</div><div class="line">		<span class="keyword">while</span>(!Q.empty())&#123;</div><div class="line">			int u=Q.front();  Q.pop();</div><div class="line">			inq[u]=0;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;G[u].size();i++)&#123;</div><div class="line">				Edge&amp; e=edges[G[u][i]];</div><div class="line">				<span class="keyword">if</span>(e.cap&gt;e.flow &amp;&amp; d[e.to]&gt;d[u]+e.cost)&#123;</div><div class="line">					d[e.to]=d[u]+e.cost;</div><div class="line">					p[e.to]=G[u][i];</div><div class="line">					a[e.to]=min(a[u],e.cap-e.flow);</div><div class="line">					<span class="keyword">if</span>(!inq[e.to])&#123;</div><div class="line">						Q.push(e.to);</div><div class="line">						inq[e.to]=1;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(d[t]==inf) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">		flow+=a[t];</div><div class="line">		cost+=d[t]*a[t];</div><div class="line">		int u=t;</div><div class="line">		<span class="keyword">while</span>(u!=s)&#123;</div><div class="line">			edges[p[u]].flow+=a[t];</div><div class="line">			edges[p[u]^1].flow-=a[t];</div><div class="line">			u=edges[p[u]].from;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	int Mincost(int s,int t)&#123;</div><div class="line">		int flow=0,cost=0;</div><div class="line">		<span class="keyword">while</span>(BellmanFord(s,t,flow,cost));</div><div class="line">		<span class="built_in">return</span> cost;</div><div class="line">	&#125;</div><div class="line">&#125;mc;</div><div class="line">int a[55][55],mark[55][55];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int nn,k;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;nn&gt;&gt;k)&#123;</div><div class="line">		mc.init(maxn);</div><div class="line">		mm(mark,0);</div><div class="line">		int num=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=nn;j++)&#123;</div><div class="line">				cin&gt;&gt;a[i][j];</div><div class="line">				mark[i][j]=++num;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		int S=0,T=2*num+1;</div><div class="line">		mc.AddEdge(S,1,k,0);</div><div class="line">		mc.AddEdge(T-1,T,k,0);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=nn;j++)&#123;</div><div class="line">				int u=mark[i][j],v=u+num;</div><div class="line">				mc.AddEdge(u,v,1,<span class="_">-a</span>[i][j]);</div><div class="line">				mc.AddEdge(u,v,k,0);</div><div class="line">				<span class="keyword">if</span>(i&lt;nn) mc.AddEdge(v,u+nn,k,0);</div><div class="line">				<span class="keyword">if</span>(j&lt;nn) mc.AddEdge(v,u+1,k,0);</div><div class="line"> 			&#125;</div><div class="line">		&#125;</div><div class="line">		int ans=-mc.Mincost(S,T);</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>可以为每个点创建伪点，由两条有向边相连。原始点到伪点连一条容量为1，权值为负分数的边；原始点到伪点连一条容量为k，权值为0的边。<br>前者表示分数只能拿一次，后者表示第二次第三次……可以继续走这个点，但是不拿分数。<br>多源多汇问题 建一个超级源点连向u的(1,1)位置 建一个超级汇点雨v的(1,1)相连 流量为k 费用为0<br>u连向v代表拆点的部分 v连向u代表向下和向右的过程</p>
<h2 id="HDU-3667-费用与流量平方"><a href="#HDU-3667-费用与流量平方" class="headerlink" title="HDU 3667(费用与流量平方)"></a>HDU 3667(费用与流量平方)</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>容量c均为整数 并且每条弧还有一个费用系数a 表示该弧流量为x时费用为ax²<br>问流量是否可以满足k 若满足输出最小费用那个 不满足输出-1</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int k;</div><div class="line">struct Edge&#123;</div><div class="line">	int from,to,<span class="built_in">cap</span>,flow,cost;</div><div class="line">	Edge(int from,int to,int <span class="built_in">cap</span>,int flow,int cost):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow),cost(cost)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">struct MCMF&#123;</div><div class="line">	int n,m,s,t;</div><div class="line">	vector&lt;Edge&gt;edges;</div><div class="line">	vector&lt;int&gt;G[maxn];</div><div class="line">	int inq[maxn],d[maxn],p[maxn],a[maxn];</div><div class="line">	void init(int n)&#123;</div><div class="line">		this-&gt;n=n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) G[i].clear();</div><div class="line">		edges.clear();</div><div class="line">	&#125;</div><div class="line">	void AddEdge(int from,int to,int <span class="built_in">cap</span>,int cost)&#123;</div><div class="line">		edges.push_back(Edge(from,to,<span class="built_in">cap</span>,0,cost));</div><div class="line">		edges.push_back(Edge(to,from,0,0,-cost));</div><div class="line">		m=edges.size();</div><div class="line">		G[from].push_back(m-2);</div><div class="line">		G[to].push_back(m-1);</div><div class="line">	&#125;</div><div class="line">	bool BellmanFord(int s,int t,int &amp;flow,int&amp; cost)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) d[i]=inf;</div><div class="line">		memset(inq,0,sizeof(inq));</div><div class="line">		d[s]=0,inq[s]=1,p[s]=0,a[s]=inf;</div><div class="line">		queue&lt;int&gt;Q;</div><div class="line">		Q.push(s);</div><div class="line">		<span class="keyword">while</span>(!Q.empty())&#123;</div><div class="line">			int u=Q.front();  Q.pop();</div><div class="line">			inq[u]=0;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;G[u].size();i++)&#123;</div><div class="line">				Edge&amp; e=edges[G[u][i]];</div><div class="line">				<span class="keyword">if</span>(e.cap&gt;e.flow &amp;&amp; d[e.to]&gt;d[u]+e.cost)&#123;</div><div class="line">					d[e.to]=d[u]+e.cost;</div><div class="line">					p[e.to]=G[u][i];</div><div class="line">					a[e.to]=min(a[u],e.cap-e.flow);</div><div class="line">					<span class="keyword">if</span>(!inq[e.to])&#123;</div><div class="line">						Q.push(e.to);</div><div class="line">						inq[e.to]=1;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(d[t]==inf) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">		flow+=a[t];</div><div class="line">		cost+=d[t]*a[t];</div><div class="line">		int u=t;</div><div class="line">		<span class="keyword">while</span>(u!=s)&#123;</div><div class="line">			edges[p[u]].flow+=a[t];</div><div class="line">			edges[p[u]^1].flow-=a[t];</div><div class="line">			u=edges[p[u]].from;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	void Mincost(int s,int t)&#123;</div><div class="line">		int flow=0,cost=0;</div><div class="line">		<span class="keyword">while</span>(BellmanFord(s,t,flow,cost));</div><div class="line">		<span class="keyword">if</span>(flow&lt;k) cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> cout&lt;&lt;cost&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">&#125;mc;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int nn,mm;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;nn&gt;&gt;mm&gt;&gt;k)&#123;</div><div class="line">		 mc.init(maxn);</div><div class="line">		 int S=0,T=nn;</div><div class="line">		 mc.AddEdge(S,1,k,0);</div><div class="line">		 <span class="keyword">for</span>(int i=1;i&lt;=mm;i++)&#123;</div><div class="line">		 	int u,v,a,c;</div><div class="line">		 	cin&gt;&gt;u&gt;&gt;v&gt;&gt;a&gt;&gt;c;</div><div class="line">		 	<span class="keyword">for</span>(int k=1;k&lt;=c;k++)&#123;</div><div class="line">		 		int x=2*k-1;</div><div class="line">		 		mc.AddEdge(u,v,1,x*a);</div><div class="line">			 &#125; </div><div class="line">		 &#125;</div><div class="line">		 mc.Mincost(S,T);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>蓝书P366<br>拆边 容量为c 就把u-v拆成c条边 每条变容量为1 费用为a 3a 5a···<br>跑MCMF即可<br>本题需要注意多了一个是否满足k流 所以需要判断flow==k时输出mincost 否则不满足k流直接输出-1<br>S=0 与点1额外建边容量为k 费用为0 把流量限制在k之内 防止重边的干扰</p>
<h2 id="UVA-11613-流量不固定s-t最小费用流"><a href="#UVA-11613-流量不固定s-t最小费用流" class="headerlink" title="UVA 11613(流量不固定s-t最小费用流)"></a>UVA 11613(流量不固定s-t最小费用流)</h2><h3 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出m个月 每个月可以生产make_limit个产品 成本为make_cost 该月售价为price 最多售出sell_price件<br>每个产品可以封存max_store月 每个产品每个月封存需要花store_cost的钱<br>问这m个月能获得的最大利润是多少</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 210</span></div><div class="line"><span class="comment">#define inf 1000000000</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const int INF=1000000000;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">struct Edge&#123;</div><div class="line">	int from,to,<span class="built_in">cap</span>,flow,cost;</div><div class="line">	Edge(int from,int to,int <span class="built_in">cap</span>,int flow,int cost):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow),cost(cost)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">struct MCMF&#123;</div><div class="line">	int n,m,s,t;</div><div class="line">	vector&lt;Edge&gt;edges;</div><div class="line">	vector&lt;int&gt;G[maxn];</div><div class="line">	int inq[maxn],d[maxn],p[maxn],a[maxn];</div><div class="line">	void init(int n)&#123;</div><div class="line">		this-&gt;n=n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) G[i].clear();</div><div class="line">		edges.clear();</div><div class="line">	&#125;</div><div class="line">	void AddEdge(int from,int to,int <span class="built_in">cap</span>,int cost)&#123;</div><div class="line">		edges.push_back(Edge(from,to,<span class="built_in">cap</span>,0,cost));</div><div class="line">		edges.push_back(Edge(to,from,0,0,-cost));</div><div class="line">		m=edges.size();</div><div class="line">		G[from].push_back(m-2);</div><div class="line">		G[to].push_back(m-1);</div><div class="line">	&#125;</div><div class="line">	bool BellmanFord(int s,int t,LL&amp; ans)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) d[i]=inf;</div><div class="line">		memset(inq,0,sizeof(inq));</div><div class="line">		d[s]=0,inq[s]=1,p[s]=0,a[s]=inf;</div><div class="line">		queue&lt;int&gt;Q;</div><div class="line">		Q.push(s);</div><div class="line">		<span class="keyword">while</span>(!Q.empty())&#123;</div><div class="line">			int u=Q.front();  Q.pop();</div><div class="line">			inq[u]=0;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;G[u].size();i++)&#123;</div><div class="line">				Edge&amp; e=edges[G[u][i]];</div><div class="line">				<span class="keyword">if</span>(e.cap&gt;e.flow &amp;&amp; d[e.to]&gt;d[u]+e.cost)&#123;</div><div class="line">					d[e.to]=d[u]+e.cost;</div><div class="line">					p[e.to]=G[u][i];</div><div class="line">					a[e.to]=min(a[u],e.cap-e.flow);</div><div class="line">					<span class="keyword">if</span>(!inq[e.to])&#123;</div><div class="line">						Q.push(e.to);</div><div class="line">						inq[e.to]=1;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(d[t]&gt;0) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">		ans+=(LL)d[t]*(LL)a[t];</div><div class="line">		int u=t;</div><div class="line">		<span class="keyword">while</span>(u!=s)&#123;</div><div class="line">			edges[p[u]].flow+=a[t];</div><div class="line">			edges[p[u]^1].flow-=a[t];</div><div class="line">			u=edges[p[u]].from;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	LL Mincost(int s,int t)&#123;</div><div class="line">		LL cost=0;</div><div class="line">		<span class="keyword">while</span>(BellmanFord(s,t,cost));</div><div class="line">		<span class="built_in">return</span> cost;</div><div class="line">	&#125;</div><div class="line">&#125;mc;</div><div class="line">int flag=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		mc.init(maxn);</div><div class="line">		int month,store_cost;</div><div class="line">		cin&gt;&gt;month&gt;&gt;store_cost;</div><div class="line">		int S=0,T=2*month+1;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=month;i++)&#123;</div><div class="line">			int make_cost,make_limit,price,sell_limit,max_store;</div><div class="line">			cin&gt;&gt;make_cost&gt;&gt;make_limit&gt;&gt;price&gt;&gt;sell_limit&gt;&gt;max_store;</div><div class="line">			mc.AddEdge(S,i,make_limit,make_cost);</div><div class="line">			mc.AddEdge(i+month,T,sell_limit,-price);</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;=max_store;j++)&#123;</div><div class="line">				<span class="keyword">if</span>(i+j&lt;=month) mc.AddEdge(i,month+i+j,inf,store_cost*j);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		LL ans=-mc.Mincost(S,T);</div><div class="line">		cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;flag++&lt;&lt;<span class="string">": "</span>&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>蓝书P367<br>费用有正有负<br>在最短增广路费用为正时停止增光<br>流量不固定 BF里不需要flow参数 开LL<br>建超级源点和超级汇点 建图 月份和月份之间保存封存的费用</p>
<h2 id="LA-3231-公平分配问题"><a href="#LA-3231-公平分配问题" class="headerlink" title="LA 3231(公平分配问题)"></a>LA 3231(公平分配问题)</h2><h3 id="题目要求-6"><a href="#题目要求-6" class="headerlink" title="题目要求"></a>题目要求</h3><p>把m个任务分配给n个处理器 其中每个任务有两个候选处理器 可任选一个分配 要求所有处理器中 任务数最多的那个处理器所分配的任务数<br>尽量少 不同任务的候选处理器集保证不同</p>
<h3 id="参考AC代码-6"><a href="#参考AC代码-6" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 11005</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">struct Edge&#123;</div><div class="line">  int from, to, <span class="built_in">cap</span>, flow;</div><div class="line">&#125;;</div><div class="line">struct Dinic&#123;</div><div class="line">  int n, m, s, t;</div><div class="line">  vector&lt;Edge&gt; edges;   </div><div class="line">  vector&lt;int&gt; G[maxn];   </div><div class="line">  bool vis[maxn];         </div><div class="line">  int d[maxn];           </div><div class="line">  int cur[maxn];       </div><div class="line">void ClearAll(int n)&#123;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">&#125;</div><div class="line">void AddEdge(int from, int to, int <span class="built_in">cap</span>)&#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, <span class="built_in">cap</span>, 0&#125;);</div><div class="line">    edges.push_back((Edge)&#123;to, from, 0, 0&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-2);</div><div class="line">    G[to].push_back(m-1);</div><div class="line">&#125;</div><div class="line">bool <span class="function"><span class="title">BFS</span></span>()&#123;</div><div class="line">    memset(vis, 0, sizeof(vis));</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    Q.push(s);</div><div class="line">    vis[s] = 1;</div><div class="line">    d[s] = 0;</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      int x = Q.front(); Q.pop();</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[x].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[x][i]];</div><div class="line">        <span class="keyword">if</span>(!vis[e.to] &amp;&amp; e.cap &gt; e.flow) &#123;</div><div class="line">          vis[e.to] = 1;</div><div class="line">          d[e.to] = d[x] + 1;</div><div class="line">          Q.push(e.to);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> vis[t];</div><div class="line">&#125;</div><div class="line">int DFS(int x, int a)&#123;</div><div class="line">    <span class="keyword">if</span>(x == t || a == 0) <span class="built_in">return</span> a;</div><div class="line">    int flow = 0, f;</div><div class="line">    <span class="keyword">for</span>(int&amp; i = cur[x]; i &lt; G[x].size(); i++) &#123;</div><div class="line">      Edge&amp; e = edges[G[x][i]];</div><div class="line">      <span class="keyword">if</span>(d[x] + 1 == d[e.to] &amp;&amp; (f = DFS(e.to, min(a, e.cap-e.flow))) &gt; 0) &#123;</div><div class="line">        e.flow += f;</div><div class="line">        edges[G[x][i]^1].flow -= f;</div><div class="line">        flow += f;</div><div class="line">        a -= f;</div><div class="line">        <span class="keyword">if</span>(a == 0) <span class="built_in">break</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">int Maxflow(int s, int t)&#123;</div><div class="line">    this-&gt;s = s; this-&gt;t = t;</div><div class="line">    int flow = 0;</div><div class="line">    <span class="keyword">while</span>(BFS()) &#123;</div><div class="line">      memset(cur, 0, sizeof(cur));</div><div class="line">      flow += DFS(s, inf);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">  &#125;</div><div class="line">&#125;g;</div><div class="line">vector&lt;pii&gt;e;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int nn,mm;</div><div class="line">		cin&gt;&gt;nn&gt;&gt;mm;</div><div class="line">		int l=1,r=mm,ans=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=mm;i++)&#123;</div><div class="line">			int x,y;</div><div class="line">			cin&gt;&gt;x&gt;&gt;y;</div><div class="line">			e.pb(mp(x,y));</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">			int S=0,T=nn+mm+1;</div><div class="line">			int mid=(l+r)&gt;&gt;1;</div><div class="line">			g.ClearAll(maxn);</div><div class="line">			<span class="keyword">for</span>(int i=1;i&lt;=mm;i++)&#123;</div><div class="line">				g.AddEdge(S,i,1);</div><div class="line">				g.AddEdge(i,e[i-1].fi+mm,1);</div><div class="line">				g.AddEdge(i,e[i-1].se+mm,1);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">for</span>(int i=1;i&lt;=nn;i++) g.AddEdge(i+mm,T,mid);</div><div class="line">			<span class="keyword">if</span>(g.Maxflow(S,T)==mm)&#123;</div><div class="line">				ans=mid;</div><div class="line">				r=mid-1;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> l=mid+1;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><p>二分网络流<br>蓝书P367</p>
<h2 id="ZOJ-2587-最小割唯一判断"><a href="#ZOJ-2587-最小割唯一判断" class="headerlink" title="ZOJ 2587(最小割唯一判断)"></a>ZOJ 2587(最小割唯一判断)</h2><h3 id="题目要求-7"><a href="#题目要求-7" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出一张无向网络图,并给出起点和终点,破坏图的每一条边需要一定的费用,问破坏起点和终点的连通性的费用是否唯一.</p>
<h3 id="参考AC代码-7"><a href="#参考AC代码-7" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 850</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">struct Edge &#123;</div><div class="line">	int from, to, <span class="built_in">cap</span>, flow;</div><div class="line">&#125;;</div><div class="line">struct Dinic &#123;</div><div class="line">	int n, m, s, t;</div><div class="line">	vector&lt;Edge&gt; edges;</div><div class="line">	vector&lt;int&gt; G[maxn];</div><div class="line">	bool vis[maxn];</div><div class="line">	int d[maxn];</div><div class="line">	int cur[maxn];</div><div class="line">	int vis1[maxn],vis2[maxn];</div><div class="line">	int cnt1,cnt2;</div><div class="line">	void ClearAll(int n) &#123;</div><div class="line">		<span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">		edges.clear();</div><div class="line">	&#125;</div><div class="line">	void AddEdge(int from, int to, int <span class="built_in">cap</span>) &#123;</div><div class="line">		edges.push_back((Edge)&#123;from, to, <span class="built_in">cap</span>, 0&#125;);</div><div class="line">		edges.push_back((Edge)&#123;to, from, <span class="built_in">cap</span>, 0&#125;);</div><div class="line">		m = edges.size();</div><div class="line">		G[from].push_back(m-2);</div><div class="line">		G[to].push_back(m-1);</div><div class="line">	&#125;</div><div class="line">	bool <span class="function"><span class="title">BFS</span></span>() &#123;</div><div class="line">		memset(vis, 0, sizeof(vis));</div><div class="line">		queue&lt;int&gt; Q;</div><div class="line">		Q.push(s);</div><div class="line">		vis[s] = 1;</div><div class="line">		d[s] = 0;</div><div class="line">		<span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">			int x = Q.front();</div><div class="line">			Q.pop();</div><div class="line">			<span class="keyword">for</span>(int i = 0; i &lt; G[x].size(); i++) &#123;</div><div class="line">				Edge&amp; e = edges[G[x][i]];</div><div class="line">				<span class="keyword">if</span>(!vis[e.to] &amp;&amp; e.cap &gt; e.flow) &#123;</div><div class="line">					vis[e.to] = 1;</div><div class="line">					d[e.to] = d[x] + 1;</div><div class="line">					Q.push(e.to);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> vis[t];</div><div class="line">	&#125;</div><div class="line">	int DFS(int x, int a) &#123;</div><div class="line">		<span class="keyword">if</span>(x == t || a == 0) <span class="built_in">return</span> a;</div><div class="line">		int flow = 0, f;</div><div class="line">		<span class="keyword">for</span>(int&amp; i = cur[x]; i &lt; G[x].size(); i++) &#123;</div><div class="line">			Edge&amp; e = edges[G[x][i]];</div><div class="line">			<span class="keyword">if</span>(d[x] + 1 == d[e.to] &amp;&amp; (f = DFS(e.to, min(a, e.cap-e.flow))) &gt; 0) &#123;</div><div class="line">				e.flow += f;</div><div class="line">				edges[G[x][i]^1].flow -= f;</div><div class="line">				flow += f;</div><div class="line">				a -= f;</div><div class="line">				<span class="keyword">if</span>(a == 0) <span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> flow;</div><div class="line">	&#125;</div><div class="line">	int Maxflow(int s, int t) &#123;</div><div class="line">		this-&gt;s = s;</div><div class="line">		this-&gt;t = t;</div><div class="line">		int flow = 0;</div><div class="line">		<span class="keyword">while</span>(BFS()) &#123;</div><div class="line">			memset(cur, 0, sizeof(cur));</div><div class="line">			flow += DFS(s, inf);</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> flow;</div><div class="line">	&#125;</div><div class="line">	void dfs1(int x) &#123;</div><div class="line">		vis1[x]=1;</div><div class="line">		cnt1++;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;G[x].size();i++)&#123;</div><div class="line">			int k=G[x][i];</div><div class="line">			<span class="keyword">if</span>(!vis1[edges[k].to] &amp;&amp; edges[k].cap&gt;edges[k].flow)&#123;</div><div class="line">				dfs1(edges[k].to);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	void dfs2(int x) &#123;</div><div class="line">		vis2[x]=1;</div><div class="line">		cnt2++;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;G[x].size();i++)&#123;</div><div class="line">			int k=G[x][i];</div><div class="line">			<span class="keyword">if</span>(!vis2[edges[k].to] &amp;&amp; edges[k^1].cap&gt;edges[k^1].flow)&#123;</div><div class="line">				dfs2(edges[k].to);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;g;</div><div class="line">int nn,mm,S,T;</div><div class="line">int <span class="function"><span class="title">main</span></span>() &#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;nn&gt;&gt;mm&gt;&gt;S&gt;&gt;T) &#123;</div><div class="line">		<span class="keyword">if</span>(nn==0 &amp;&amp; mm==0 &amp;&amp; S==0 &amp;&amp; T==0) <span class="built_in">break</span>;</div><div class="line">		g.ClearAll(maxn);</div><div class="line">		<span class="keyword">for</span>(int i=1; i&lt;=mm; i++) &#123;</div><div class="line">			int x,y,c;</div><div class="line">			cin&gt;&gt;x&gt;&gt;y&gt;&gt;c;</div><div class="line">			g.AddEdge(x,y,c);</div><div class="line">		&#125;</div><div class="line">		int ans=g.Maxflow(S,T);</div><div class="line">		mm(g.vis1,0),mm(g.vis2,0);</div><div class="line">		g.cnt1=0,g.cnt2=0;</div><div class="line">		g.dfs1(S),g.dfs2(T);</div><div class="line">		<span class="keyword">if</span>(g.cnt1+g.cnt2==nn) cout&lt;&lt;<span class="string">"UNIQUE"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> cout&lt;&lt;<span class="string">"AMBIGUOUS"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h3><p>破坏两点的连通性的最小费用,很容易联想到 网络流中的最小割,<br>建立源点 汇点 同时 因为图是无向图,我们需要将每条边建两次(正反向) 也可以直接把反向容量设为cap<br>然后就是判断这个最小割是否唯一了：<br>首先 从源点开始 dfs  通过非饱和边  统计所有能走到的点  记为s1<br>然后 从汇点开始 dfs  通过非饱和边  统计所有能走到的点 记为s2<br>如果s1+s2==n则说明最小割唯一 </p>
<h2 id="UVA-11248-扩弧"><a href="#UVA-11248-扩弧" class="headerlink" title="UVA 11248(扩弧)"></a>UVA 11248(扩弧)</h2><h3 id="题目要求-8"><a href="#题目要求-8" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定一个有向网络 每条变均有一个容量 问是否存在一个从点1到点N 流量为C的流 如果不存在 是否可以恰好修改一条弧的容量 使得存在这样的流<br>蓝书P368</p>
<h3 id="参考AC代码-8"><a href="#参考AC代码-8" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">struct Edge&#123;</div><div class="line">  int from, to, <span class="built_in">cap</span>, flow;</div><div class="line">&#125;;</div><div class="line">int cmp(Edge a,Edge b)&#123;</div><div class="line">	<span class="keyword">if</span>(a.from==b.from) <span class="built_in">return</span> a.to&lt;b.to;</div><div class="line">	<span class="built_in">return</span> a.from&lt;b.from;</div><div class="line">&#125;</div><div class="line">struct Dinic&#123;</div><div class="line">  int n, m, s, t;</div><div class="line">  vector&lt;Edge&gt; edges;   </div><div class="line">  vector&lt;int&gt; G[maxn];   </div><div class="line">  bool vis[maxn];         </div><div class="line">  int d[maxn];           </div><div class="line">  int cur[maxn];       </div><div class="line">void ClearAll(int n)&#123;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">ClearFlow</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;edges.size();i++) edges[i].flow=0;    </div><div class="line">&#125;</div><div class="line">void AddEdge(int from, int to, int <span class="built_in">cap</span>)&#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, <span class="built_in">cap</span>, 0&#125;);</div><div class="line">    edges.push_back((Edge)&#123;to, from, 0, 0&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-2);</div><div class="line">    G[to].push_back(m-1);</div><div class="line">&#125;</div><div class="line">bool <span class="function"><span class="title">BFS</span></span>()&#123;</div><div class="line">    memset(vis, 0, sizeof(vis));</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    Q.push(s);</div><div class="line">    vis[s] = 1;</div><div class="line">    d[s] = 0;</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      int x = Q.front(); Q.pop();</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[x].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[x][i]];</div><div class="line">        <span class="keyword">if</span>(!vis[e.to] &amp;&amp; e.cap &gt; e.flow) &#123;</div><div class="line">          vis[e.to] = 1;</div><div class="line">          d[e.to] = d[x] + 1;</div><div class="line">          Q.push(e.to);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> vis[t];</div><div class="line">&#125;</div><div class="line">int DFS(int x, int a)&#123;</div><div class="line">    <span class="keyword">if</span>(x == t || a == 0) <span class="built_in">return</span> a;</div><div class="line">    int flow = 0, f;</div><div class="line">    <span class="keyword">for</span>(int&amp; i = cur[x]; i &lt; G[x].size(); i++) &#123;</div><div class="line">      Edge&amp; e = edges[G[x][i]];</div><div class="line">      <span class="keyword">if</span>(d[x] + 1 == d[e.to] &amp;&amp; (f = DFS(e.to, min(a, e.cap-e.flow))) &gt; 0) &#123;</div><div class="line">        e.flow += f;</div><div class="line">        edges[G[x][i]^1].flow -= f;</div><div class="line">        flow += f;</div><div class="line">        a -= f;</div><div class="line">        <span class="keyword">if</span>(a == 0) <span class="built_in">break</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">int Maxflow(int s, int t)&#123;</div><div class="line">    this-&gt;s = s; this-&gt;t = t;</div><div class="line">    int flow = 0;</div><div class="line">    <span class="keyword">while</span>(BFS()) &#123;</div><div class="line">      memset(cur, 0, sizeof(cur));</div><div class="line">      flow += DFS(s, inf);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">vector&lt;int&gt;<span class="function"><span class="title">Mincut</span></span>()&#123;    </div><div class="line">	vector&lt;int&gt; ans;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;edges.size();i++)&#123;</div><div class="line">  		Edge&amp; e=edges[i];</div><div class="line">  		<span class="keyword">if</span>(vis[e.from] &amp;&amp; !vis[e.to] &amp;&amp; e.cap&gt;0) ans.push_back(i);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">Reduce</span></span>()&#123;   </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;edges.size();i++) edges[i].cap-=edges[i].flow;</div><div class="line">  &#125;</div><div class="line">&#125;g;</div><div class="line">int nn,mm,c;</div><div class="line">int flag=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;nn&gt;&gt;mm&gt;&gt;c)&#123;</div><div class="line">		<span class="keyword">if</span>(nn==0 &amp;&amp; mm==0 &amp;&amp; c==0) <span class="built_in">break</span>;</div><div class="line">		cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;flag++&lt;&lt;<span class="string">": "</span>;</div><div class="line">		g.ClearAll(maxn);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=mm;i++)&#123;</div><div class="line">			int x,y,z;</div><div class="line">			cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;</div><div class="line">			g.AddEdge(x,y,z);</div><div class="line">		&#125;</div><div class="line">		int S=1,T=nn;</div><div class="line">		int ans=g.Maxflow(S,T);</div><div class="line">		<span class="keyword">if</span>(ans&gt;=c) cout&lt;&lt;<span class="string">"possible"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			vector&lt;int&gt;cut=g.Mincut();</div><div class="line">			vector&lt;Edge&gt;re;</div><div class="line">			g.Reduce();</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;cut.size();i++)&#123;</div><div class="line">				Edge&amp; e=g.edges[cut[i]];</div><div class="line">				int temp=e.cap;</div><div class="line">				e.cap=c;</div><div class="line">				g.ClearFlow();</div><div class="line">				<span class="keyword">if</span>(ans+g.Maxflow(S,T)&gt;=c) re.pb(e);</div><div class="line">				e.cap=temp; </div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(re.size()==0) cout&lt;&lt;<span class="string">"not possible"</span>&lt;&lt;endl;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				sort(re.begin(),re.end(),cmp);</div><div class="line">				<span class="keyword">for</span>(int i=0;i&lt;re.size();i++)&#123;</div><div class="line">					<span class="keyword">if</span>(i==0) cout&lt;&lt;<span class="string">"possible option:("</span>&lt;&lt;re[i].from&lt;&lt;<span class="string">","</span>&lt;&lt;re[i].to&lt;&lt;<span class="string">")"</span>;</div><div class="line">					<span class="keyword">else</span> cout&lt;&lt;<span class="string">",("</span>&lt;&lt;re[i].from&lt;&lt;<span class="string">","</span>&lt;&lt;re[i].to&lt;&lt;<span class="string">")"</span>;</div><div class="line">				&#125;</div><div class="line">				cout&lt;&lt;endl;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h3><p>先跑一次最大流，最大流如果大于等于C，就不用括弧了<br>如果不行的话，就进行括弧。<br>扩大哪些弧的容量呢。答案是割边的容量，因为最小割==最大流<br>我们先找出所有的割边，如何找割边呢，如果是dinic算法的话，就找到vis[u] == ture 而vis[v] == false 且该边容量大于0的边，这些边就是割边了<br>接着将割边一条一条的扩容，只需要扩大到C的容量就可以了，然后在残余网络上跑最大流就可以了<br>还有一个问题是怎么求残余网络，只需要将所有边的容量减去流量就是残余网络了<br>加上2个优化：第一个优化是求完最大流后把流量留着 以后每次在它的基础上增广<br>第二个优化是每次没必要求出最大流 增广到流量至少为C时就停下来</p>
<h2 id="LA-2957"><a href="#LA-2957" class="headerlink" title="LA 2957"></a>LA 2957</h2><h3 id="题目要求-9"><a href="#题目要求-9" class="headerlink" title="题目要求"></a>题目要求</h3><p>宇宙中有n个星球 你的任务是用最短的时间把k个超级计算机从星球S运送到星球T 每个超级计算机需要一整艘飞船来运输<br>行星之间有m条双向隧道 每条隧道需要一天时间来通过 且不能有两艘飞船同时使用同一条隧道 隧道不会连接两个相同的<br>行星 且每一对行星之间最多只有一条隧道<br>蓝书P368</p>
<h3 id="参考AC代码-9"><a href="#参考AC代码-9" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 2550</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">struct Edge&#123;</div><div class="line">  int from, to, <span class="built_in">cap</span>, flow;</div><div class="line">&#125;;</div><div class="line">struct Dinic&#123;</div><div class="line">  int n, m, s, t;</div><div class="line">  vector&lt;Edge&gt; edges;   </div><div class="line">  vector&lt;int&gt; G[maxn];   </div><div class="line">  bool vis[maxn];         </div><div class="line">  int d[maxn];           </div><div class="line">  int cur[maxn];       </div><div class="line">void clearNodes(int a, int b)&#123;</div><div class="line">    <span class="keyword">for</span>(int i = a; i &lt;= b; i++) G[i].clear();</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123; edges.clear();&#125;</div><div class="line">void AddEdge(int from, int to, int <span class="built_in">cap</span>)&#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, <span class="built_in">cap</span>, 0&#125;);</div><div class="line">    edges.push_back((Edge)&#123;to, from, 0, 0&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-2);</div><div class="line">    G[to].push_back(m-1);</div><div class="line">&#125;</div><div class="line">bool <span class="function"><span class="title">BFS</span></span>()&#123;</div><div class="line">    memset(vis, 0, sizeof(vis));</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    Q.push(s);</div><div class="line">    vis[s] = 1;</div><div class="line">    d[s] = 0;</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      int x = Q.front(); Q.pop();</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[x].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[x][i]];</div><div class="line">        <span class="keyword">if</span>(!vis[e.to] &amp;&amp; e.cap &gt; e.flow) &#123;</div><div class="line">          vis[e.to] = 1;</div><div class="line">          d[e.to] = d[x] + 1;</div><div class="line">          Q.push(e.to);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> vis[t];</div><div class="line">&#125;</div><div class="line">int DFS(int x, int a)&#123;</div><div class="line">    <span class="keyword">if</span>(x == t || a == 0) <span class="built_in">return</span> a;</div><div class="line">    int flow = 0, f;</div><div class="line">    <span class="keyword">for</span>(int&amp; i = cur[x]; i &lt; G[x].size(); i++) &#123;</div><div class="line">      Edge&amp; e = edges[G[x][i]];</div><div class="line">      <span class="keyword">if</span>(d[x] + 1 == d[e.to] &amp;&amp; (f = DFS(e.to, min(a, e.cap-e.flow))) &gt; 0) &#123;</div><div class="line">        e.flow += f;</div><div class="line">        edges[G[x][i]^1].flow -= f;</div><div class="line">        flow += f;</div><div class="line">        a -= f;</div><div class="line">        <span class="keyword">if</span>(a == 0) <span class="built_in">break</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">int Maxflow(int s, int t,int <span class="built_in">limit</span>)&#123;</div><div class="line">    this-&gt;s = s; this-&gt;t = t;</div><div class="line">    int flow = 0;</div><div class="line">    <span class="keyword">while</span>(BFS()) &#123;</div><div class="line">      memset(cur, 0, sizeof(cur));</div><div class="line">      flow += DFS(s, <span class="built_in">limit</span>-flow);</div><div class="line">      <span class="keyword">if</span>(flow==<span class="built_in">limit</span>) <span class="built_in">break</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">&#125;g;</div><div class="line">const int maxm=210;</div><div class="line">int u[maxm],v[maxm];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n,m,S,T,k;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m&gt;&gt;k&gt;&gt;S&gt;&gt;T)&#123;</div><div class="line">		<span class="keyword">if</span>(n==0 &amp;&amp; m==0 &amp;&amp; k==0 &amp;&amp; S==0 &amp;&amp; T==0) <span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;m;i++) cin&gt;&gt;u[i]&gt;&gt;v[i];</div><div class="line">		g.init();</div><div class="line">		g.clearNodes(0,n-1);</div><div class="line">		int day=1;</div><div class="line">		int flow=0;</div><div class="line">		<span class="keyword">for</span>(;;)&#123;</div><div class="line">			g.clearNodes(day*n,day*n+n-1);</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;n;i++) g.AddEdge((day-1)*n+i,day*n+i,inf);</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;m;i++)&#123;</div><div class="line">				g.AddEdge((day-1)*n+u[i]-1,day*n+v[i]-1,1);</div><div class="line">				g.AddEdge((day-1)*n+v[i]-1,day*n+u[i]-1,1);</div><div class="line">			&#125;</div><div class="line">			flow+=g.Maxflow(S-1,day*n+T-1,k-flow);</div><div class="line">			<span class="keyword">if</span>(flow==k) <span class="built_in">break</span>;</div><div class="line">			day++;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;day&lt;&lt;endl;</div><div class="line">		int idx=0;</div><div class="line">		vector&lt;int&gt;location(k,S);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=day;i++)&#123;</div><div class="line">			idx+=2*n;</div><div class="line">			vector&lt;int&gt;move(k,0);</div><div class="line">			vector&lt;int&gt;a,b;</div><div class="line">			vector&lt;pii&gt;pi;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;m;i++)&#123;</div><div class="line">				int f1=g.edges[idx].flow; idx+=2;</div><div class="line">				int f2=g.edges[idx].flow; idx+=2;</div><div class="line">				<span class="keyword">if</span>(f1==1 &amp;&amp; f2==0) &#123; a.pb(u[i]); b.pb(v[i]); &#125;</div><div class="line">				<span class="keyword">if</span>(f2==1 &amp;&amp; f1==0) &#123; a.pb(v[i]); b.pb(u[i]); &#125;</div><div class="line">			&#125;</div><div class="line">			cout&lt;&lt;a.size();</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;a.size();i++)&#123;</div><div class="line">				<span class="keyword">for</span>(int j=0;j&lt;k;j++)&#123;</div><div class="line">					<span class="keyword">if</span>(!move[j] &amp;&amp; location[j]==a[i])&#123;</div><div class="line">						pi.pb(mp(j+1,b[i]));</div><div class="line">						move[j]=1;</div><div class="line">						location[j]=b[i];</div><div class="line">						<span class="built_in">break</span>;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			sort(pi.begin(),pi.end());</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;pi.size();i++) cout&lt;&lt;<span class="string">" "</span>&lt;&lt;pi[i].fi&lt;&lt;<span class="string">" "</span>&lt;&lt;pi[i].se;</div><div class="line">			cout&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h3><p>蓝书P368<br>注意点：<br>第一天的点编号为0-&gt;n-1<br>对于i+1天 清空后与第i天建边<br>为满足流恰好等于k 每次在原有最大流的基础上增广 设置一个limit=k-flow 每次增广剩下的流量<br>对于Maxflow函数中 同样为确保流量尽可能等于limit又不超过limit 每次增广limit-flow的流量<br>对于输出解 idx初始值=2*n是为了跳过原地不动的点 对于每个u[i]和v[i] 其实建边了四次 正向2次 反向2次<br>所以idx+2实际上是判断u[i]-&gt;v[i]和v[i]-&gt;u[i]的流量 如果前驱flow==1后驱flow==0 存入a和b 反向同理<br>最后对于每一天遍历满足条件a边的大小和k个计算机 如果该计算机未走动过(move[j]==0)并且此时它的位置在a[i]处 存入pi排序输出</p>
<h2 id="LA-2531"><a href="#LA-2531" class="headerlink" title="LA 2531"></a>LA 2531</h2><h3 id="题目要求-10"><a href="#题目要求-10" class="headerlink" title="题目要求"></a>题目要求</h3><p>有n支队伍进行比赛 每支队伍需要打的比赛数目相同 每场比赛恰好有一支队伍胜 另一只队伍负 给出每支队伍目前胜的场数和败的场数 以及<br>每两个队伍还剩下的比赛场数 确定所有可能得冠军的球队(获胜场数最多的得冠军 可以并列)<br>蓝书P369</p>
<h3 id="参考AC代码-10"><a href="#参考AC代码-10" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 700</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int n;</div><div class="line">struct Edge&#123;</div><div class="line">  int from, to, <span class="built_in">cap</span>, flow;</div><div class="line">&#125;;</div><div class="line">struct Dinic&#123;</div><div class="line">  int n, m, s, t;</div><div class="line">  vector&lt;Edge&gt; edges;   </div><div class="line">  vector&lt;int&gt; G[maxn];   </div><div class="line">  bool vis[maxn];         </div><div class="line">  int d[maxn];           </div><div class="line">  int cur[maxn];       </div><div class="line">void ClearAll(int n)&#123;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">&#125;</div><div class="line">void AddEdge(int from, int to, int <span class="built_in">cap</span>)&#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, <span class="built_in">cap</span>, 0&#125;);</div><div class="line">    edges.push_back((Edge)&#123;to, from, 0, 0&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-2);</div><div class="line">    G[to].push_back(m-1);</div><div class="line">&#125;</div><div class="line">bool <span class="function"><span class="title">BFS</span></span>()&#123;</div><div class="line">    memset(vis, 0, sizeof(vis));</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    Q.push(s);</div><div class="line">    vis[s] = 1;</div><div class="line">    d[s] = 0;</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      int x = Q.front(); Q.pop();</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[x].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[x][i]];</div><div class="line">        <span class="keyword">if</span>(!vis[e.to] &amp;&amp; e.cap &gt; e.flow) &#123;</div><div class="line">          vis[e.to] = 1;</div><div class="line">          d[e.to] = d[x] + 1;</div><div class="line">          Q.push(e.to);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> vis[t];</div><div class="line">&#125;</div><div class="line">int DFS(int x, int a)&#123;</div><div class="line">    <span class="keyword">if</span>(x == t || a == 0) <span class="built_in">return</span> a;</div><div class="line">    int flow = 0, f;</div><div class="line">    <span class="keyword">for</span>(int&amp; i = cur[x]; i &lt; G[x].size(); i++) &#123;</div><div class="line">      Edge&amp; e = edges[G[x][i]];</div><div class="line">      <span class="keyword">if</span>(d[x] + 1 == d[e.to] &amp;&amp; (f = DFS(e.to, min(a, e.cap-e.flow))) &gt; 0) &#123;</div><div class="line">        e.flow += f;</div><div class="line">        edges[G[x][i]^1].flow -= f;</div><div class="line">        flow += f;</div><div class="line">        a -= f;</div><div class="line">        <span class="keyword">if</span>(a == 0) <span class="built_in">break</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">int Maxflow(int s, int t)&#123;</div><div class="line">    this-&gt;s = s; this-&gt;t = t;</div><div class="line">    int flow = 0;</div><div class="line">    <span class="keyword">while</span>(BFS()) &#123;</div><div class="line">      memset(cur, 0, sizeof(cur));</div><div class="line">      flow += DFS(s, inf);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">&#125;g;</div><div class="line">const int maxm=25+5;</div><div class="line">int a[maxm][maxm],w[maxm],d[maxm];</div><div class="line">int ID(int u,int v)&#123; <span class="built_in">return</span> n*u+v; &#125;</div><div class="line">int ID(int u)&#123; <span class="built_in">return</span> n*n+u; &#125;</div><div class="line">bool canW<span class="keyword">in</span>(int team)&#123;</div><div class="line">	int total=w[team];</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++) total+=a[team][i];  // 计算team全胜后的总胜利场数</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++) <span class="keyword">if</span>(w[i]&gt;total) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">	g.ClearAll(maxn);</div><div class="line">	int full=0;</div><div class="line">	int s=0,t=n*n+n+1;  // 构图。s=0, 结点(u,v)的编号为u*n+v 结点u的编号为n^2+u+1, t=n^2+n</div><div class="line">	<span class="keyword">for</span>(int u=0;u&lt;n;u++)&#123;</div><div class="line">		<span class="keyword">for</span>(int v=u+1;v&lt;n;v++)&#123;</div><div class="line">			<span class="keyword">if</span>(a[u][v]&gt;0) g.AddEdge(s,ID(u,v),a[u][v]);  // S到(u,v)的弧</div><div class="line">			full+=a[u][v];</div><div class="line">			g.AddEdge(ID(u,v),ID(u),inf);  // (u,v)到u的弧</div><div class="line">			g.AddEdge(ID(u,v),ID(v),inf);  // (u,v)到v的弧</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(total-w[u]&gt;0) g.AddEdge(ID(u),t,total-w[u]);  // u到T的弧</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> g.Maxflow(s,t)==full;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) cin&gt;&gt;w[i]&gt;&gt;d[i];</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;n;j++) cin&gt;&gt;a[i][j];</div><div class="line">		&#125;</div><div class="line">		bool first=<span class="literal">true</span>;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(canW<span class="keyword">in</span>(i))&#123;</div><div class="line">				<span class="keyword">if</span>(first) first=<span class="literal">false</span>;</div><div class="line">				<span class="keyword">else</span> cout&lt;&lt;<span class="string">" "</span>;</div><div class="line">				cout&lt;&lt;i+1;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-10"><a href="#思路-10" class="headerlink" title="思路"></a>思路</h3><p>见注释<br>蓝书P369</p>
<h2 id="2017新疆网赛J-拆点"><a href="#2017新疆网赛J-拆点" class="headerlink" title="2017新疆网赛J(拆点)"></a>2017新疆网赛J(拆点)</h2><p><a href="http://monkeyxu.cn/2017/09/09/2017%E6%96%B0%E7%96%86%E8%B5%9B%E5%8C%BA%E7%BD%91%E8%B5%9B/#J" target="_blank" rel="external">转跳链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cf edu25]]></title>
      <url>http://xuboming8.github.io/2017/07/17/cf-edu25/</url>
      <content type="html"><![CDATA[<h1 id="cf-edu25"><a href="#cf-edu25" class="headerlink" title="cf edu25"></a>cf edu25</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>转换<br>num是几输出几个1 每个数字之间以0间隔<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n;</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	string s;</div><div class="line">	cin&gt;&gt;s;</div><div class="line">	int cnt=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(s[i]==<span class="string">'0'</span>)&#123;</div><div class="line">			cout&lt;&lt;cnt;</div><div class="line">			cnt=0;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(s[i]==<span class="string">'1'</span>) cnt++;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;cnt&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>模拟</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>X代表己方 O代表对方 .代表该位置可以下<br>模拟五子棋 问走一步后己方是否能取得胜利</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">char g[15][15];</div><div class="line">bool <span class="function"><span class="title">check</span></span>()&#123;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=10;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=6;j++)&#123;</div><div class="line">			int flag=0;</div><div class="line">			<span class="keyword">for</span>(int k=0;k&lt;=4;k++)&#123;</div><div class="line">				<span class="keyword">if</span>(g[i][j+k]!=<span class="string">'X'</span>) flag=1;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(!flag) <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=10;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=6;j++)&#123;</div><div class="line">			int flag=0;</div><div class="line">			<span class="keyword">for</span>(int k=0;k&lt;=4;k++)&#123;</div><div class="line">				<span class="keyword">if</span>(g[j+k][i]!=<span class="string">'X'</span>) flag=1;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(!flag) <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=6;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=6;j++)&#123;</div><div class="line">			int flag=0;</div><div class="line">			<span class="keyword">for</span>(int k=0;k&lt;=4;k++)&#123;</div><div class="line">				<span class="keyword">if</span>(g[i+k][j+k]!=<span class="string">'X'</span>) flag=1; </div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(!flag) <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=6;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=10;j&gt;=4;j--)&#123;</div><div class="line">			int flag=0;</div><div class="line">			<span class="keyword">for</span>(int k=0;k&lt;=4;k++)&#123;</div><div class="line">				<span class="keyword">if</span>(g[i+k][j-k]!=<span class="string">'X'</span>) flag=1;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(!flag) <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=10;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=10;j++) cin&gt;&gt;g[i][j];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=10;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=10;j++)&#123;</div><div class="line">			<span class="keyword">if</span>(g[i][j]==<span class="string">'.'</span>)&#123;</div><div class="line">				g[i][j]=<span class="string">'X'</span>;</div><div class="line">				<span class="keyword">if</span>(check())&#123;</div><div class="line">					cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">					<span class="built_in">return</span> 0;</div><div class="line">				&#125;</div><div class="line">				g[i][j]=<span class="string">'.'</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>把所有.的位置模拟成X后判断是否满足五子棋的规则<br>check判断规则的时候 遍历起点和长度为小于等于4的窗<br>四种情况均考虑到即可</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>有n个难度值为ai的题目 k代表起始难度<br>每次能解决题目的难度必须小于2k<br>如果不能解决需要去别的oj找题目更新k<br>问最少需要找多少题目</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">LL a[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	LL n,k;</div><div class="line">	cin&gt;&gt;n&gt;&gt;k;</div><div class="line">	<span class="keyword">for</span>(LL i=1;i&lt;=n;i++) cin&gt;&gt;a[i];</div><div class="line">	sort(a+1,a+1+n);</div><div class="line">	LL ans=0,<span class="built_in">limit</span>=2*k;</div><div class="line">	<span class="keyword">for</span>(LL i=1;i&lt;=n;i++)&#123;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">limit</span>&lt;a[i])&#123;</div><div class="line">			ans++;</div><div class="line">			<span class="built_in">limit</span>*=2;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">limit</span>=max(<span class="built_in">limit</span>,2*a[i]);</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>limit为当前可以解决的题目的最大难度<br>如果小于a[i] 根据最优策略 必须找到难度为limit的题目最大程度扩大limit<br>同时做出题目后同时更新limit上限</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>字符串s里可能存在一些?可以用任意字符替代<br>同时定义舒适度为:交换s里任意2个位置 该操作可以不相交的重复多次 有子串t的最大个数<br>输出填充好的s要求满足有最大的舒适度</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int hashh[30];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	string s,t;</div><div class="line">	cin&gt;&gt;s&gt;&gt;t;</div><div class="line">	queue&lt;int&gt;q;</div><div class="line">	int num=0;</div><div class="line">	mm(hashh,0);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;s.length();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(s[i]==<span class="string">'?'</span>)&#123;</div><div class="line">			q.push(i);</div><div class="line">			num++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> hashh[s[i]-<span class="string">'a'</span>]++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(t.length()&lt;s.length()) t+=t;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;t.length();i++)&#123;</div><div class="line">		int id=t[i]-<span class="string">'a'</span>;</div><div class="line">		<span class="keyword">if</span>(!num &amp;&amp; !hashh[id]) <span class="built_in">break</span>;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(hashh[id]) hashh[id]--;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			num--;</div><div class="line">			s[q.front()]=t[i];</div><div class="line">			q.pop();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;s&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>queue存放?的位置 num记录?的个数 同时hash每个字母出现的次数<br>扩充t满足长度大于s 遍历t<br>如果没有?并且s里不存在这个字母 break掉<br>否则把queue里第一个位置存放该字母 出队列 num–</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[atcoder078regular]]></title>
      <url>http://xuboming8.github.io/2017/07/16/atcoder078regular/</url>
      <content type="html"><![CDATA[<h1 id="atcoder078regular"><a href="#atcoder078regular" class="headerlink" title="atcoder078regular"></a>atcoder078regular</h1><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>转换成前缀和减后缀和绝对值的最小值<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 200050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">LL a[maxn];</div><div class="line">LL fisum[maxn],basum[maxn]; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n;</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	mm(fisum,0),mm(basum,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		cin&gt;&gt;a[i];</div><div class="line">		fisum[i]=fisum[i-1]+a[i];</div><div class="line">	&#125;</div><div class="line">	basum[n]=a[n];</div><div class="line">	<span class="keyword">for</span>(int i=n-1;i&gt;=1;i--) basum[i]=basum[i+1]+a[i];</div><div class="line">	LL ans=INF;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;n;i++) ans=min(ans,abs(fisum[i]-basum[i+1]));</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>2个人给一张图涂色 1号点涂黑色 N号点图白色 接着Fennec开始涂黑色 接着轮到Snuke涂白色 谁不能涂色输掉比赛<br>要求涂色规则为：涂黑色必须确保他的相邻点是黑色并且该点未涂颜色 白色同理</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int vis[maxn],dis1[maxn],dis2[maxn];</div><div class="line">struct node&#123;</div><div class="line">	int to,w;</div><div class="line">	node(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">void dfs(int id,int dis[])&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[id].size();i++)&#123;</div><div class="line">		int next=e[id][i].to,ww=e[id][i].w;</div><div class="line">		<span class="keyword">if</span>(vis[next]) <span class="built_in">continue</span>;</div><div class="line">		dis[next]=dis[id]+ww;</div><div class="line">		vis[next]=1;</div><div class="line">		dfs(next,dis);</div><div class="line">	&#125;</div><div class="line">&#125; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	mm(vis,0),mm(dis1,0),mm(dis2,0);</div><div class="line">	int n;</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">		int x,y;</div><div class="line">		cin&gt;&gt;x&gt;&gt;y;</div><div class="line">		e[x].pb(node(y,1));</div><div class="line">		e[y].pb(node(x,1));</div><div class="line">	&#125;</div><div class="line">	vis[1]=1;</div><div class="line">	dfs(1,dis1);</div><div class="line">	mm(vis,0),vis[n]=1;</div><div class="line">	dfs(n,dis2);</div><div class="line">	int ans=0;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;n;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(dis1[i]&lt;=dis2[i]) ans++;</div><div class="line">		<span class="keyword">else</span> ans--;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(ans&gt;0) cout&lt;&lt;<span class="string">"Fennec"</span>&lt;&lt;endl;</div><div class="line">	<span class="keyword">else</span> cout&lt;&lt;<span class="string">"Snuke"</span>&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>算出每个点到1和n的距离<br>若到1近或者相等(F先手)ans++ 否则ans– 若ans&gt;0先手赢</p>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>一个无向联通图 删去一些边 要求1到N只有一条路径 并且删除的边权最小</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int F[1 &lt;&lt; 15][15], Mx[15][1 &lt;&lt; 15], Sm[1 &lt;&lt; 15], B[15][15], Tmp[15], n, m;</div><div class="line">vector &lt;int&gt; hsh[1 &lt;&lt; 15];</div><div class="line">void cmax(int&amp; x, int y) &#123;<span class="keyword">if</span>(x &lt; y) x = y;&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	scanf(<span class="string">"%d%d"</span>, &amp;n, &amp;m), memset(B, -1, sizeof B);</div><div class="line">	<span class="keyword">for</span>(int i = 1; i &lt;= m; i++) &#123;</div><div class="line">		int a, b, c;</div><div class="line">		scanf(<span class="string">"%d%d%d"</span>, &amp;a, &amp;b, &amp;c), a--, b--;</div><div class="line">		B[a][b] = B[b][a] = c;</div><div class="line">	&#125;</div><div class="line">	memset(Mx, -1, sizeof Mx), memset(F, 200, sizeof F);</div><div class="line">	<span class="keyword">for</span>(int i = 0; i &lt; (1 &lt;&lt; n); i++)</div><div class="line">		<span class="keyword">for</span>(int j = 0; j &lt; n; j++) <span class="keyword">if</span>(i &gt;&gt; j &amp; 1) hsh[i].push_back(j);</div><div class="line">	<span class="keyword">for</span>(int i = 0; i &lt; (1 &lt;&lt; n); i++)</div><div class="line">		<span class="keyword">for</span>(int j = 0; j &lt; n; j++) <span class="keyword">if</span>(i &gt;&gt; j &amp; 1)</div><div class="line">			<span class="keyword">for</span>(int k = j + 1; k &lt; n; k++) <span class="keyword">if</span>((i &gt;&gt; k &amp; 1) &amp;&amp; B[j][k] != -1) Sm[i] += B[j][k];</div><div class="line">	<span class="keyword">for</span>(int i = 0; i &lt; n; i++)</div><div class="line">		<span class="keyword">for</span>(int j = 1; j &lt; (1 &lt;&lt; n); j++)</div><div class="line">			<span class="keyword">for</span>(int k = 0; k &lt; n; k++) <span class="keyword">if</span>(j &gt;&gt; k &amp; 1) &#123;</div><div class="line">				Mx[i][j] = max(B[i][k], Mx[i][j - (1 &lt;&lt; k)]);</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">	<span class="keyword">for</span>(int i = 1; i &lt; (1 &lt;&lt; n); i += 2) F[i][0] = Sm[i];</div><div class="line">	<span class="keyword">for</span>(int i = 1; i &lt; (1 &lt;&lt; n); i += 2) &#123;</div><div class="line">		memset(Tmp, 200, sizeof Tmp);</div><div class="line">		<span class="keyword">for</span>(int j = 0; j &lt; n; j++) <span class="keyword">if</span>(F[i][j] &gt;= 0)</div><div class="line">			<span class="keyword">for</span>(int k = 0; k &lt; n; k++) <span class="keyword">if</span>(B[j][k] != -1)</div><div class="line">				cmax(Tmp[k], F[i][j] + B[j][k]);</div><div class="line">		<span class="keyword">for</span>(int s = (1 &lt;&lt; n) - i - 1, j = s; j; j = (j - 1) &amp; s)</div><div class="line">			<span class="keyword">for</span>(int k = 0; k &lt; hsh[j].size(); k++)</div><div class="line">				cmax(F[i + j][hsh[j][k]], Tmp[hsh[j][k]] + Sm[j]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Sm[(1 &lt;&lt; n) - 1] - F[(1 &lt;&lt; n) - 1][n - 1]);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>集合相关dp<br>不理解</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cf round 423]]></title>
      <url>http://xuboming8.github.io/2017/07/15/cf-round-423/</url>
      <content type="html"><![CDATA[<h1 id="cf-round-423"><a href="#cf-round-423" class="headerlink" title="cf round 423"></a>cf round 423</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>一家餐厅有n张一人桌 有m张双人桌<br>每次来一个人或者两个人<br>一个人首先选择坐在单人桌 若没有优先考虑都空的双人桌 最后考虑已有一个人的双人桌 都没有的话拒绝这个人<br>两个人考虑是否有都空的双人桌 若没有拒绝这2个人<br>输出一共拒绝了多少个人<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 200050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int t[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n,a,b;</div><div class="line">	cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;</div><div class="line">	int aa=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;t[i];</div><div class="line">	int ans=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(t[i]==1)&#123;</div><div class="line">			<span class="keyword">if</span>(a&gt;0) a--;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(b&gt;0) b-=1,aa+=1;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(aa&gt;0) aa--;</div><div class="line">			<span class="keyword">else</span> ans++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">if</span>(b&gt;0) b--;</div><div class="line">			<span class="keyword">else</span> ans+=2;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>模拟 aa表示有一个人的双人桌</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>有一个矩形被W和B填空 问最少需要把多少个W换成B 可以满足所有的B构成一个矩形</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">char g[maxn][maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n,m;</div><div class="line">	cin&gt;&gt;n&gt;&gt;m;</div><div class="line">	int cnt=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=m;j++)&#123;</div><div class="line">			cin&gt;&gt;g[i][j];</div><div class="line">			<span class="keyword">if</span>(g[i][j]==<span class="string">'B'</span>) cnt++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	int top=0,bo=0,l=0,r=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		int flag=0;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=m;j++)&#123;</div><div class="line">			<span class="keyword">if</span>(g[i][j]==<span class="string">'B'</span>)&#123;</div><div class="line">				top=i,flag=1;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(flag) <span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=n;i&gt;=1;i--)&#123;</div><div class="line">		int flag=0;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=m;j++)&#123;</div><div class="line">			<span class="keyword">if</span>(g[i][j]==<span class="string">'B'</span>)&#123;</div><div class="line">				bo=i,flag=1;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(flag) <span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int j=1;j&lt;=m;j++)&#123;</div><div class="line">		int flag=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(g[i][j]==<span class="string">'B'</span>)&#123;</div><div class="line">				l=j,flag=1;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(flag) <span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int j=m;j&gt;=1;j--)&#123;</div><div class="line">		int flag=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(g[i][j]==<span class="string">'B'</span>)&#123;</div><div class="line">				r=j,flag=1;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(flag) <span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">//	cout&lt;&lt;top&lt;&lt;<span class="string">" "</span>&lt;&lt;bo&lt;&lt;<span class="string">" "</span>&lt;&lt;l&lt;&lt;<span class="string">" "</span>&lt;&lt;r&lt;&lt;endl;</div><div class="line">	int len=max(abs(top-bo)+1,abs(l-r)+1);</div><div class="line">	<span class="keyword">if</span>(len&gt;min(n,m))&#123;</div><div class="line">		cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;len*len-cnt&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>模拟<br>算出B的最上方 最下方 最左方 最右方 以及B的总数cnt<br>利用这4个数值算出矩形的面积 减去cnt即可<br>注意如果矩形的边长大于n和m的最小值 则无法满足矩形输出-1</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出若干个字符串s 以及该字符串在总最终字符串出现的次数以及位置<br>用子串去填空最终字符串<br>输出满足条件字典序最小的最终字符串</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 2000000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int vis[maxn&lt;&lt;2];</div><div class="line">char ans[maxn];</div><div class="line">string s;</div><div class="line">void update(int l,int r,int rt,int L,int R)&#123;</div><div class="line">	<span class="keyword">if</span>(vis[rt]==(r<span class="_">-l</span>+1)) <span class="built_in">return</span>;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		vis[rt]=1;</div><div class="line">		ans[l]=s[l-L];</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int m=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(m&lt;L) update(rson,L,R);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(m&gt;=R) update(lson,L,R);</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		update(lson,L,R);</div><div class="line">		update(rson,L,R);</div><div class="line">	&#125;</div><div class="line">	vis[rt]=vis[rt&lt;&lt;1]+vis[rt&lt;&lt;1|1];</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n;</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	int Max=-1;</div><div class="line">	mm(vis,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;maxn;i++) ans[i]=<span class="string">'A'</span>;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		cin&gt;&gt;s;</div><div class="line">		int len=s.length();</div><div class="line">		int t;</div><div class="line">		cin&gt;&gt;t;</div><div class="line">		<span class="keyword">while</span>(t--)&#123;</div><div class="line">			int x;</div><div class="line">			cin&gt;&gt;x;</div><div class="line">			Max=max(Max,x+len-1);</div><div class="line">			update(1,2000000,1,x,x+len-1);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=Max;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(ans[i]==<span class="string">'A'</span>) cout&lt;&lt;<span class="string">"a"</span>;</div><div class="line">		<span class="keyword">else</span> cout&lt;&lt;ans[i];</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>线段树单点更新<br>vis用来判断该区间是否全被修改过 若已修改则跳过该区间<br>ans里未更新的输出a满足字典序最小</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>n个点 用最少的边连接 确保有k个度为1 其余n-k个点度大于1 要求最远点的距离最小<br>输出距离以及每条边的端点 多解输出一组即可</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define maxn 200050</div><div class="line">#define inf 0x3f3f3f3f</div><div class="line">#define LL long long</div><div class="line">#define pb push_back</div><div class="line">#define pii pair&lt;int,int&gt;</div><div class="line">#define fi first</div><div class="line">#define se second</div><div class="line">#define mm(a,b) memset(a,b,sizeof(a))</div><div class="line">#define mp(a,b) make_pair(a,b)</div><div class="line">#define lson l,m,rt&lt;&lt;1</div><div class="line">#define rson m+1,r,rt&lt;&lt;1|1</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;return b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;while(y)&#123;if(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;return re;&#125;</div><div class="line">vector&lt;pii&gt;ans;</div><div class="line">int deep[maxn],num[maxn],out[maxn];</div><div class="line">int main()&#123;</div><div class="line">//	freopen(&quot;input.txt&quot;,&quot;r&quot;,stdin);</div><div class="line">//	freopen(&quot;ouput.txt&quot;,&quot;w&quot;,sdout);</div><div class="line">	ios::sync_with_stdio(false);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n,k;</div><div class="line">	cin&gt;&gt;n&gt;&gt;k;</div><div class="line">	mm(deep,0),mm(num,0),mm(out,0);</div><div class="line">	int center=n-k-1;</div><div class="line">	for(int i=0;i&lt;k;i++) num[i]=center;</div><div class="line">	for(int i=0;i&lt;center;i++)&#123;</div><div class="line">		int pos=i%k;</div><div class="line">		ans.pb(mp(num[pos],i));</div><div class="line">		num[pos]=i;</div><div class="line">		deep[pos]++;</div><div class="line">	&#125;</div><div class="line">	for(int i=center+1;i&lt;n;i++)&#123;</div><div class="line">		int pos=(i-1)%k;</div><div class="line">		ans.pb(mp(num[pos],i));</div><div class="line">		num[pos]=i;</div><div class="line">		deep[pos]++;</div><div class="line">		out[pos]=deep[pos];</div><div class="line">	&#125;</div><div class="line">	sort(out,out+k,greater&lt;int&gt;());</div><div class="line">	cout&lt;&lt;out[0]+out[1]&lt;&lt;endl;</div><div class="line">	int len=ans.size();</div><div class="line">	for(int i=0;i&lt;len;i++) cout&lt;&lt;ans[i].fi+1&lt;&lt;&quot; &quot;&lt;&lt;ans[i].se+1&lt;&lt;endl;</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>入度为1的点越多可以确保最远点的距离越小<br>ans存放边的情况 num记录每条路径最远点的数值 deep记录每条路径的深度 out记录每条路径最终的深度<br>先连接n-k个入度大于1的点 找到中心点n-k-1(-1是因为滚动数组点要从0开始 输出的时候+1)<br>利用滚动数组把0-&gt;center-1与center相连接 num和deep更新维护<br>之后把k个入度为1的点%k算出是哪条路径加上 更新num和deep 同时维护out<br>out由大到小排序后out[0]+out[1]即为所求<br>ans输出边</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cf round 424]]></title>
      <url>http://xuboming8.github.io/2017/07/14/cf-round-424/</url>
      <content type="html"><![CDATA[<h1 id="cf-round-424"><a href="#cf-round-424" class="headerlink" title="cf round 424"></a>cf round 424</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>问一组序列是否满足前半部分严格递增 中间连续 末尾严格递减<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 150</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int a[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n;</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];</div><div class="line">	int flag1=1,flag2=1;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(flag1==1)&#123;</div><div class="line">			<span class="keyword">if</span>(a[i]==a[i-1])&#123;</div><div class="line">				flag1=2;</div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(a[i]&lt;a[i-1])&#123;</div><div class="line">				flag1=3;</div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(flag1==2)&#123;</div><div class="line">			<span class="keyword">if</span>(a[i]&lt;a[i-1])&#123;</div><div class="line">				flag1=3;</div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(a[i]&gt;a[i-1])&#123;</div><div class="line">				flag2=0;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(flag1==3)&#123;</div><div class="line">			<span class="keyword">if</span>(a[i]==a[i-1] || a[i]&gt;a[i-1])&#123;</div><div class="line">				flag2=0;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(flag2) cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">	<span class="keyword">else</span> cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>模拟<br>题面较坑 注意可以跳过连续的部分直接进入下降部分</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出两组26个字母的排列顺序<br>给出一组字符串由大小写字母和数字组成 是对应第一组字母排序输入 要求输出对应按照第二组字母的次序</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int hashh[30];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	string s1,s2,s3;</div><div class="line">	cin&gt;&gt;s1&gt;&gt;s2&gt;&gt;s3;</div><div class="line">	mm(hashh,0);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;s1.length();i++) hashh[s1[i]-<span class="string">'a'</span>+1]=i+1;</div><div class="line">//	<span class="keyword">for</span>(int i=1;i&lt;=26;i++) cout&lt;&lt;hashh[i]&lt;&lt;endl;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;s3.length();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(s3[i]&gt;=<span class="string">'0'</span> &amp;&amp; s3[i]&lt;=<span class="string">'9'</span>) cout&lt;&lt;s3[i];</div><div class="line">		<span class="keyword">if</span>(s3[i]&gt;=<span class="string">'A'</span> &amp;&amp; s3[i]&lt;=<span class="string">'Z'</span>)&#123;</div><div class="line">			char ch=(char)(s3[i]-<span class="string">'0'</span>+32+<span class="string">'0'</span>);</div><div class="line">			int pos=hashh[ch-<span class="string">'a'</span>+1];</div><div class="line">			cout&lt;&lt;char(s2[pos-1]-<span class="string">'0'</span>-32+<span class="string">'0'</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(s3[i]&gt;=<span class="string">'a'</span> &amp;&amp; s3[i]&lt;=<span class="string">'z'</span>)&#123;</div><div class="line">			int pos=hashh[s3[i]-<span class="string">'a'</span>+1];</div><div class="line">			cout&lt;&lt;s2[pos-1];</div><div class="line">		&#125;</div><div class="line">	&#125;  </div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>模拟 hash位置</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>主角看电视，电视里有k个评委给参赛者打分，每个评委打了ai分，即参赛者的初始分加上这些评委打分，等于一个结果<br>但是主角不是很记得所有结果，只记得n个结果，即bj（加上若干个ai的结果），现问你他的初始分有多少种可能（注意a按时间顺序给出，b不是按时间顺序给出)</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 2050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int a[maxn],b[maxn];</div><div class="line">LL sum[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n,k;</div><div class="line">	cin&gt;&gt;n&gt;&gt;k;</div><div class="line">	mm(sum,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		cin&gt;&gt;a[i];</div><div class="line">		sum[i]=sum[i-1]+a[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=k;i++) cin&gt;&gt;b[i];</div><div class="line">	sort(sum+1,sum+1+n);</div><div class="line">	int len=unique(sum+1,sum+1+n)-(sum+1);</div><div class="line">	int ans=len;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=len;i++)&#123;</div><div class="line">		int st=b[1]-sum[i];</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=k;j++)&#123;</div><div class="line">			<span class="keyword">if</span>(!binary_search(sum+1,sum+1+n,b[j]-st))&#123;</div><div class="line">				ans--;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>前缀和去重排序用于二分搜索<br>最大长度等于去重后的前缀和长度<br>遍历前缀和与b[1]相减用于找到起始位置st<br>从该位置开始每个bi都可以用st+sum找到 查找方式为二分 若找不到 ans减1 继续下一种情况</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>一条直线上给出n个人和k把钥匙的坐标 再给出警察局的坐标<br>每个人都需要拿到钥匙去警察局 问最短的总移动距离是多少<br>一个人可以经过钥匙不拿 两个人同时到达钥匙处只能由一个人拿起</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">vector&lt;LL&gt;people,key;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	LL n,k,p;</div><div class="line">	cin&gt;&gt;n&gt;&gt;k&gt;&gt;p;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		LL x;</div><div class="line">		cin&gt;&gt;x;</div><div class="line">		people.pb(x);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=k;i++)&#123;</div><div class="line">		LL x;</div><div class="line">		cin&gt;&gt;x;</div><div class="line">		key.pb(x);</div><div class="line">	&#125;</div><div class="line">	sort(people.begin(),people.end());</div><div class="line">	sort(key.begin(),key.end());</div><div class="line">	LL ans=INF;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=k-n;i++)&#123;</div><div class="line">		LL c=-1;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;n;j++) c=max(c,abs(people[j]-key[i+j])+abs(key[i+j]-p));</div><div class="line">		ans=min(ans,c);</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>人和钥匙坐标排序<br>外层i遍历人拿钥匙的间隔 对于每种间隔遍历所有人拿钥匙去警察局的情况 找到最大值 同时更新最小值<br>1 2 3<br>1 2 3 4 5<br>如下图可以为:<br>1-&gt;1 2-&gt;2 3-&gt;3<br>1-&gt;2 2-&gt;3 3-&gt;4<br>1-&gt;3 2-&gt;4 3-&gt;5<br>三种情况 间隔分别为0 1 2</p>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>n张卡片 每张卡片上有一个数字 可以重复<br>每次拿走最上面的一张 如果这张的数字是剩下卡片的最小值 删去 否则放到卡片的最下面<br>问一共要重复多少步骤才能全部拿走</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">LL n;</div><div class="line">LL a[maxn],tree[maxn];</div><div class="line">vector&lt;int&gt;s[maxn];</div><div class="line">void change(int x,LL val)&#123;</div><div class="line">    <span class="keyword">while</span>(x&lt;=n) &#123;</div><div class="line">        tree[x]+=val;</div><div class="line">        x+=x&amp;(-x);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">LL sum(int x)&#123;</div><div class="line">    LL res=0;</div><div class="line">    <span class="keyword">while</span> (x)&#123;</div><div class="line">        res+=tree[x];</div><div class="line">        x-=x&amp;(-x);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> res;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	mm(tree,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		cin&gt;&gt;a[i];</div><div class="line">		s[a[i]].pb(i);</div><div class="line">		change(i,1LL);</div><div class="line">	&#125;</div><div class="line">	sort(a+1,a+1+n);</div><div class="line">	LL ans=0;</div><div class="line">	int pre=0;</div><div class="line">	vector&lt;int&gt;::iterator cur;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		cur=upper_bound(s[a[i]].begin(),s[a[i]].end(),pre);</div><div class="line">		<span class="keyword">if</span>(cur==s[a[i]].end()) cur=s[a[i]].begin();</div><div class="line">		<span class="keyword">if</span>(*cur&gt;=pre) ans+=sum(*cur)-sum(pre);</div><div class="line">		<span class="keyword">else</span> ans+=sum(n)-sum(pre)+sum(*cur);</div><div class="line">		change(*cur,-1LL);</div><div class="line">		pre=*cur;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>树状数组维护区间内是否还存在该点 存在为1 不存在为0 每一轮累加的结果就是该轮的操作次数<br>vector存放每个卡片上数字出现的位置<br>a排序后从最小的数字开始<br>cur有2种情况：若该数字有多个位置 upper_bound可以确保下一轮从上一轮的末尾出发 若已经进入下一个数字 cur置为首地址<br>同时更新pre代表上一轮拿走卡片的位置 拿走的位置树状数组置0<br>更新ans注意如果cur比pre大 直接累加中间部分 否则循环累加pre-n以及0-cur的部分</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[上海大学oj比赛]]></title>
      <url>http://xuboming8.github.io/2017/07/11/%E4%B8%8A%E6%B5%B7%E5%A4%A7%E5%AD%A6oj%E6%AF%94%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="上海大学oj比赛"><a href="#上海大学oj比赛" class="headerlink" title="上海大学oj比赛"></a>上海大学oj比赛</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>输出矩阵中每一列1的个数<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int a[maxn][maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n,m;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=m;j++) cin&gt;&gt;a[i][j];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			int ans=0;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=n;j++)&#123;</div><div class="line">				<span class="keyword">if</span>(a[j][i]==1) ans++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(i==1) cout&lt;&lt;ans;</div><div class="line">			<span class="keyword">else</span> cout&lt;&lt;<span class="string">" "</span>&lt;&lt;ans;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>描述</strong><br>假设神无月的段位系统如下：<br>从低到高的段位依次简记为：D、C、B、A、S。玩家打排位赛，每胜利1局增加10分，输1局扣除5分。每一个段位都需要积分，累计100分才可以进入晋级赛，<br>晋级赛采用三局两胜制（3局中达到2局胜利就晋级成功，有2局失败就算晋级失败, 连胜或连败两局，第三局不需要打了）。晋级成功后，成为下一个段位，<br>积分变为0，重新开始算分；如果晋级失败，则积分变为60，重新开始算分。为方便计算，如果该玩家一直输，积分降为0后，不再降分，也不会掉段位。<br>大圣同学最近对神无月非常喜欢，一直在努力成为王者。他从新兵0分开始打排位赛(刚开始处在段位D)，他告诉你最近若干场比赛的最后胜利情况，请你写<br>个算法猜猜他现在所处的段位。当段位到达S时，段位将不再提高。</p>
<p><strong>输入</strong><br>有若干组数据。<br>每组的第一行为一个N（0&lt;N&lt;500），表示有N场比赛数据。<br>第二行有N个数字，每个数字之间有空格隔开，每个数字代表每场比赛的输赢情况，1表示赢，0表示输。<br>注意：当第n场比赛结束时，若大圣同学正处于晋级赛，并且还无法决定晋级成功或失败，那么可以忽略这场晋级赛</p>
<p><strong>输出</strong><br>对于每组比赛数据，输出最后所处的段位的一个英文字符（D、C、B、A、S这五个段位中的一个）</p>
<p><strong>样例输入</strong><br>15<br>1 1 1 1 1 1 1 1 1 1 1 1 1 0 1<br>30<br>1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1</p>
<p><strong>样例输出</strong><br>C<br>B</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 550</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int a[maxn];</div><div class="line">int point,flag;</div><div class="line">char cur;</div><div class="line">int win[3],len;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];</div><div class="line">		flag=0,point=0,cur=<span class="string">'D'</span>;</div><div class="line">		mm(win,0),len=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(cur==<span class="string">'S'</span>) <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">if</span>(flag==0)&#123;</div><div class="line">				<span class="keyword">if</span>(a[i]==1) point+=10;</div><div class="line">				<span class="keyword">if</span>(a[i]==0)&#123;</div><div class="line">					point-=5;</div><div class="line">					<span class="keyword">if</span>(point&lt;0) point=0;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">if</span>(point&gt;=100) flag=1;</div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(flag==1)&#123;</div><div class="line">				<span class="keyword">if</span>(a[i]==1) win[len++]=1;</div><div class="line">				<span class="keyword">if</span>(a[i]==0) win[len++]=0;</div><div class="line">				<span class="keyword">if</span>(len==2 &amp;&amp; win[0]==1 &amp;&amp; win[1]==1)&#123;</div><div class="line">					<span class="keyword">if</span>(cur==<span class="string">'A'</span>) cur=<span class="string">'S'</span>;</div><div class="line">					<span class="keyword">else</span> cur=char(cur-1);</div><div class="line">					point=0,mm(win,0),len=0,flag=0;</div><div class="line">					<span class="built_in">continue</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">if</span>(len==2 &amp;&amp; win[0]==0 &amp;&amp; win[1]==0)&#123;</div><div class="line">					point=60,mm(win,0),len=0,flag=0;</div><div class="line">					<span class="built_in">continue</span>;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(len==3)&#123;</div><div class="line">				int f=0;</div><div class="line">				<span class="keyword">for</span>(int i=0;i&lt;3;i++) <span class="keyword">if</span>(win[i]==1) f++;</div><div class="line">				<span class="keyword">if</span>(f&gt;=2)&#123;</div><div class="line">					<span class="keyword">if</span>(cur==<span class="string">'A'</span>) cur=<span class="string">'S'</span>;</div><div class="line">					<span class="keyword">else</span> cur=char(cur-1);</div><div class="line">					point=0;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> point=60;</div><div class="line">				mm(win,0),len=0,flag=0;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;(char)cur&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>模拟<br>注意点：<br>分减到负数直接为0<br>分只要超过100进入晋级赛<br>连胜2场或连输2场 已经知道结果无需打第三场晋级赛<br>段位到S后直接输出结果 无需判断后续<br>DCBAS可以用数组存储 本方法中需要注意A的后面是S</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>问字符串中最多可以组成多少个I LOVE CES（不区分大小写，没有空格，即只要有这8个字符就可以组成一个</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int hashh[30];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	string s;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;s)&#123;</div><div class="line">		int ans=inf;</div><div class="line">		mm(hashh,0);</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;s.length();i++) <span class="keyword">if</span>(s[i]&gt;=<span class="string">'A'</span> &amp;&amp; s[i]&lt;=<span class="string">'Z'</span>) s[i]=char(s[i]+32); </div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;s.length();i++) hashh[s[i]-<span class="string">'a'</span>+1]++;</div><div class="line">//		<span class="keyword">for</span>(int i=1;i&lt;=26;i++) cout&lt;&lt;hashh[i]&lt;&lt;<span class="string">" "</span>; cout&lt;&lt;endl;</div><div class="line">		ans=min(ans,hashh[<span class="string">'i'</span>-<span class="string">'a'</span>+1]);</div><div class="line">		ans=min(ans,hashh[<span class="string">'l'</span>-<span class="string">'a'</span>+1]);</div><div class="line">		ans=min(ans,hashh[<span class="string">'o'</span>-<span class="string">'a'</span>+1]);</div><div class="line">		ans=min(ans,hashh[<span class="string">'v'</span>-<span class="string">'a'</span>+1]);</div><div class="line">		ans=min(ans,hashh[<span class="string">'e'</span>-<span class="string">'a'</span>+1]/2);</div><div class="line">		ans=min(ans,hashh[<span class="string">'c'</span>-<span class="string">'a'</span>+1]);</div><div class="line">		ans=min(ans,hashh[<span class="string">'s'</span>-<span class="string">'a'</span>+1]);</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>统计字母的个数的最小值 注意e/2即可</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>求n个数字取任意k个有多少种方法</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int a[maxn][maxn];</div><div class="line">int n;</div><div class="line">LL quick_pow(LL x,LL y)&#123;</div><div class="line">	LL re=1,base=x%mod;</div><div class="line">	<span class="keyword">while</span>(y)&#123;</div><div class="line">		<span class="keyword">if</span>(y&amp;1) re=(re*base)%mod;</div><div class="line">		base=(base*base)%mod;</div><div class="line">		y&gt;&gt;=1;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> re;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)&#123;</div><div class="line">		cout&lt;&lt;quick_pow(2,n)-1&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>2^n-1<br>快速幂</p>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>输入一个字符串 a代表0···z代表25 相当于26进制数 把它转换成m进制数 输出结果</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int a[15];</div><div class="line">int len;</div><div class="line">LL base[15]; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	base[0]=(LL)1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=10;i++) base[i]=base[i-1]*(LL)26;</div><div class="line">	string s;</div><div class="line">	int m;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;s&gt;&gt;m)&#123;</div><div class="line">		mm(a,0),len=0;</div><div class="line">		stack&lt;int&gt;ss;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;s.length();i++) a[++len]=(int)(s[i]-<span class="string">'a'</span>);</div><div class="line">		LL ans=0;</div><div class="line"> 		<span class="keyword">for</span>(int i=len;i&gt;=1;i--) ans+=base[len-i]*a[i];</div><div class="line">		<span class="keyword">if</span>(ans==0)&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"0"</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span>(ans)&#123;</div><div class="line">			ss.push(ans%(LL)m);</div><div class="line">			ans/=(LL)m;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span>(!ss.empty())&#123;</div><div class="line">			cout&lt;&lt;ss.top();</div><div class="line">			ss.pop();</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>用栈模拟<br>注意ans=0的情况 特判</p>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><h3 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>描述</strong><br>如果一个序列有奇数个正整数组成，不妨令此序列为a1,a2,a3,…,a2∗k+1(0&lt;=k)，并且a1,a2…ak+1是一个严格递增的序列，ak+1,ak+2,…,a2∗k+1,是一个严格递减的序列，则称此序列是A序列。<br>比如1 2 5 4 3就是一个A序列。<br>现在Jazz有一个长度为n的数组，他希望让你求出这个数组所有满足A序列定义的子序列里面最大的那个长度。（子序列可以不连续）<br>比如1 2 5 4 3 6 7 8 9，最长的A序列子串是1 2 5 4 3。</p>
<p><strong>输入</strong><br>多组输入，每组两行。<br>第一行是n，表示给的数组的长度。<br>第二行有n个数(int范围)，即给你的数组。<br>1&lt;=n&lt;=500000。</p>
<p><strong>输出</strong><br>每组输入输出一行，即最长的A序列子串的长度。</p>
<p><strong>样例输入</strong><br>9<br>1 2 5 4 3 6 7 8 9</p>
<p><strong>样例输出</strong><br>5</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 500050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int a[maxn],l[maxn],r[maxn]; </div><div class="line">int s[maxn],len;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) l[i]=r[i]=1;</div><div class="line">		mm(s,0);</div><div class="line">		s[1]=a[1],len=1;</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(a[i]&gt;s[len])&#123;</div><div class="line">				s[++len]=a[i];</div><div class="line">				l[i]=len;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				int k=lower_bound(s+1,s+1+len,a[i])<span class="_">-s</span>;</div><div class="line">				s[k]=a[i];</div><div class="line">				l[i]=k;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		mm(s,0);</div><div class="line">		s[1]=a[n],len=1;</div><div class="line">		<span class="keyword">for</span>(int i=n-1;i&gt;=1;i--)&#123;</div><div class="line">			<span class="keyword">if</span>(a[i]&gt;s[len])&#123;</div><div class="line">				s[++len]=a[i];</div><div class="line">				r[i]=len;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				int k=lower_bound(s+1,s+1+len,a[i])<span class="_">-s</span>;</div><div class="line">				s[k]=a[i];</div><div class="line">				r[i]=k;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">//		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) cout&lt;&lt;l[i]&lt;&lt;<span class="string">" "</span>; cout&lt;&lt;endl;</div><div class="line">//		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) cout&lt;&lt;r[i]&lt;&lt;<span class="string">" "</span>; cout&lt;&lt;endl;</div><div class="line">		int ans=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) ans=max(ans,min(2*l[i]-1,2*r[i]-1));</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>预处理每个位置 以该数为终点的lis用数组l存储 以该数为起点的lis用数组r存储<br>数组r从末尾遍历等价于正序的lis 所以算法不变<br>lis用nlogn的算法 防止超时 把l和r更新加入其中即可<br>ans更新min(2×l[i]-1,2×r[i]-1)和ans的最大值即可</p>
<h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><h3 id="题目要求-6"><a href="#题目要求-6" class="headerlink" title="题目要求"></a>题目要求</h3><p>敌方和我方有一些怪兽 每一个怪兽有一个生命值和攻击力 对方怪兽的出场顺序已知 每只怪兽每秒进行一次攻击 直到一方死亡为止<br>问我方改变怪兽出场顺序后可不可以战胜对方(对方无怪兽 我方至少有一只)</p>
<h3 id="参考AC代码-6"><a href="#参考AC代码-6" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">vector&lt;pii&gt;s1,s2;</div><div class="line">int cmp(pii x,pii y)&#123;</div><div class="line">	<span class="keyword">if</span>(x.se==y.se) <span class="built_in">return</span> x.fi&lt;y.fi;</div><div class="line">	<span class="built_in">return</span> x.se&gt;y.se;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int n;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=n;i++) s1.clear(),s2.clear();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			int x,y;</div><div class="line">			cin&gt;&gt;x&gt;&gt;y;</div><div class="line">			s1.pb(mp(x,y));</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			int x,y;</div><div class="line">			cin&gt;&gt;x&gt;&gt;y;</div><div class="line">			s2.pb(mp(x,y));</div><div class="line">		&#125;</div><div class="line">		sort(s2.begin(),s2.end(),cmp);</div><div class="line">		int len1=0,len2=0;</div><div class="line">		<span class="keyword">for</span>(;len1&lt;n &amp;&amp; len2&lt;n;)&#123;</div><div class="line">			int temp1=ceil((double)s1[len1].fi/(double)s2[len2].se);</div><div class="line">			int temp2=ceil((double)s2[len2].fi/(double)s1[len1].se);</div><div class="line">			<span class="keyword">if</span>(temp1&lt;temp2)&#123;</div><div class="line">				s2[len2].fi-=s1[len1].se*temp1;</div><div class="line">				len1++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(temp1&gt;temp2)&#123;</div><div class="line">				s1[len1].fi-=s2[len2].se*temp2;</div><div class="line">				len2++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> len1++,len2++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(len2&lt;n) cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>贪心<br>我方希望用攻击力最大 生命值最小的怪兽先跟对方打 所以先排序 模拟战斗过程即可<br>temp1表示敌方死亡时间 temp2表示我方死亡时间 注意上取整 模拟三种情况即可</p>
<h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><h3 id="题目要求-7"><a href="#题目要求-7" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>描述</strong><br>给定一个长度为n的非负整数序列，下标为0,1,…,n−1.<br>定义：sequence(K)： 由下标为K的倍数组成的子序列,即下标为0,K,2K,…,[n−1/k]∗k<br>query(K,S): 询问sequence(K)中的第S大的数字</p>
<p><strong>输入</strong><br>第一行一个整数T，表示测试组数。<br>对于每组数据，第一行输入两个整数n,m，1&lt;=n&lt;=20000, 1&lt;=m&lt;=100000，n表示序列的长度，m表示询问个数。<br>接下来一行是n个整数a0,a1,..,an−1,0&lt;=ai&lt;231, i=0,1,…,n−1，表示序列。<br>接下来m行，每行两个整数K,S<br>0&lt;K&lt;=109, 1&lt;=S&lt;=n</p>
<p><strong>输出</strong><br>每组数据对于每个询问输出一行，若sequence(K)的元素个数小于S，输出−1；否则输出query(K,S)</p>
<p><strong>样例输入</strong><br>1<br>5 2<br>2 5 3 4 1<br>2 4<br>2 1</p>
<p><strong>样例输出</strong><br>-1<br> 3</p>
<h3 id="参考AC代码-7"><a href="#参考AC代码-7" class="headerlink" title="参考AC代码"></a>参考AC代码</h3> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 20050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">vector&lt;LL&gt;e[maxn];</div><div class="line">LL a[maxn];</div><div class="line">int cmp(LL x,LL y)&#123;</div><div class="line">	<span class="built_in">return</span> x&gt;y;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int n,m;</div><div class="line">		cin&gt;&gt;n&gt;&gt;m;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=n;j+=i)&#123;</div><div class="line">				e[i].pb(a[j]);</div><div class="line">			&#125;</div><div class="line">			sort(e[i].begin(),e[i].end(),cmp);</div><div class="line">		&#125;		</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			int k,s;</div><div class="line">			cin&gt;&gt;k&gt;&gt;s;</div><div class="line">			<span class="keyword">if</span>(k&gt;=n)&#123;</div><div class="line">				<span class="keyword">if</span>(s&gt;1) cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">				<span class="keyword">else</span> cout&lt;&lt;a[1]&lt;&lt;endl;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				<span class="keyword">if</span>(e[k].size()&lt;s) cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">				<span class="keyword">else</span> cout&lt;&lt;e[k][s-1]&lt;&lt;endl;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125; </div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><p> 用vector存储<br> 一维坐标表示间隔大小 每一行放的是该间隔大小下的所有数字 排序<br> 输出时需要判断k&gt;=n的情况(因为预处理是默认k&lt;=n 未考虑k&gt;n的情况)<br> 若s==1 输出数组的第一个数字</p>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><h3 id="题目要求-8"><a href="#题目要求-8" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>描述</strong><br>有一天，空和白很无聊，决定玩盛大游戏，考虑到两个人玩，他们随便掏了一个游戏出来：在一个n∗m的棋盘上，首先把史蒂芬妮·多拉放在左上角(1,1)的位置<br>每次一个人可以将她往下，往右，往右下丢一格。当前回合，谁不能丢史蒂芬妮，谁就输了。（注意，不可以把活人丢出棋盘啦！）游戏总是空先手<br>白说，这是一个垃圾游戏！我们每次把史蒂芬妮丢素数个位置吧！（换句话说，每次丢2或3或5或7或…格）空答应了。<br>我们都知道，空和白都很聪明，不管哪方存在一个可以必胜的最优策略，都会按照最优策略保证胜利。<br>玩了一局，空已经知道了这个游戏的套路，现在他决定考考你，对于给定的n和m，空是赢是输？如果空必胜，输出“Sora”（无引号）；<br>反之，输出“Shiro”（无引号）</p>
<p><strong>输入</strong><br>第一行有一个T表示数组组数，1&lt;=T&lt;100000<br>从第二行开始，每行为棋盘大小，n、m分别表示行列。<br>1=&lt;n&lt;=500，1=&lt;m&lt;=500</p>
<p><strong>输出</strong><br>对于每组数据，按题目要求输出。</p>
<p><strong>样例输入</strong><br>4<br>1 1<br>2 2<br>10 10<br>30 30</p>
<p><strong>样例输出</strong><br>Shiro<br>Shiro<br>Shiro<br>Sora</p>
<h3 id="参考AC代码-8"><a href="#参考AC代码-8" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 500</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int vis[maxn+5],prime[maxn+5],len=0;</div><div class="line">int dp[maxn][maxn];</div><div class="line">void <span class="function"><span class="title">pur_solve</span></span>()&#123;</div><div class="line">	mm(vis,0),vis[0]=vis[1]=1;</div><div class="line">	int m=sqrt(maxn+0.5);</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=m;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(!vis[i])&#123;</div><div class="line">			<span class="keyword">for</span>(int j=i*i;j&lt;=maxn;j+=i) vis[j]=1;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=maxn;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(!vis[i]) prime[len++]=i;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int dfs(int x,int y)&#123;</div><div class="line">	<span class="keyword">if</span>(dp[x][y]!=-1) <span class="built_in">return</span> dp[x][y];</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len &amp;&amp; x&gt;=prime[i];i++)&#123;</div><div class="line">		<span class="keyword">if</span>(dfs(x-prime[i],y)==0)&#123;</div><div class="line">			dp[x][y]=1;</div><div class="line">			<span class="built_in">return</span> dp[x][y];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len &amp;&amp; y&gt;=prime[i];i++)&#123;</div><div class="line">		<span class="keyword">if</span>(dfs(x,y-prime[i])==0)&#123;</div><div class="line">			dp[x][y]=1;</div><div class="line">			<span class="built_in">return</span> dp[x][y];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len &amp;&amp; x&gt;=prime[i] &amp;&amp; y&gt;=prime[i];i++)&#123;</div><div class="line">		<span class="keyword">if</span>(dfs(x-prime[i],y-prime[i])==0)&#123;</div><div class="line">			dp[x][y]=1;</div><div class="line">			<span class="built_in">return</span> dp[x][y];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	dp[x][y]=0;</div><div class="line">	<span class="built_in">return</span> dp[x][y];</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	pur_solve();</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	mm(dp,-1);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int n,m;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">		dp[0][0]=dp[0][1]=dp[1][0]=dp[1][1]=0;</div><div class="line">		<span class="keyword">if</span>(dfs(n-1,m-1)) puts(<span class="string">"Sora"</span>);</div><div class="line">		<span class="keyword">else</span> puts(<span class="string">"Shiro"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h3><p>博弈+记忆化搜索<br>如果一个点能够走到必败点 那它就是必胜点<br>如果一个点走不到必败点 只能走到必胜点 这个点就是必败点<br>可以将问题转化成取石子：<br>有两堆石子，数量分别为n个和m个（n*m的棋盘），每次可以取走其中一堆质数个石子，<br>也可以同时取走两堆数量相同的质数个石子，到谁不能取谁失败<br>很明显，(0, 0)，(0,1)，(1,0)都是必输态<br>那么(2,0)，(0,2)，(2,1)，(0,3)，(3,0)，(0,3)，……，(k,1)，(1,k)，(k+1,0)，(0,k+1)（k为质数）都是必赢态，因为它们都可以一步取到必输态<br>因为n和m为500，直接记忆化搜索预处理<br>dp[x][y]==0表示(x,y)状态必输，dp[x][y]==1表示(x,y)状态必赢<br>那么如果(x,y)的前驱只要有一个是必输态，那么(x,y)就是必赢态，否则必输</p>
<h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><h3 id="题目要求-9"><a href="#题目要求-9" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>描述</strong><br>欧拉函数ϕ(n)被定义1~n中与n互质的数的个数。例如ϕ(5)=4，因为1,2,3,4这四个数字与5互质。<br>定义f函数:<br>f(n)=∑i=233n−233ϕ(i)∗[n/i]<br>其中[n/i]表示n除以i所得到的商</p>
<p><strong>输入</strong><br>第一行一个整数T，表示测试组数。对于每组数据，输入一行，包含一个数字n，466&lt;=n&lt;=108</p>
<p><strong>输出</strong><br>每组数据输出一行，表示函数值f(n)对1000000007取模</p>
<p><strong>样例输入</strong><br>2<br>1068<br>972</p>
<p><strong>样例输出</strong><br>293824<br>222698</p>
<h3 id="参考AC代码-9"><a href="#参考AC代码-9" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">LL n;</div><div class="line">LL euler_phi(LL n)&#123;</div><div class="line">    LL m=(int)sqrt(n+0.5);</div><div class="line">    LL ans=n;</div><div class="line">    <span class="keyword">for</span>(LL i=2;i&lt;=m;i++) <span class="keyword">if</span>(n%i==0)&#123;</div><div class="line">    	ans=ans/i*(i-1);</div><div class="line">    	<span class="keyword">while</span>(n%i==0) n/=i;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(n&gt;1) ans=ans/n*(n-1);</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">    </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		LL ans=(n+1)*n/2;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=232;i++) ans=(ans-euler_phi(i)*(n/i));</div><div class="line">		<span class="keyword">for</span>(int i=n;i&gt;n-233;i--) ans=(ans-euler_phi(i)*(n/i));</div><div class="line">		cout&lt;&lt;ans%mod&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h3><p>打表求出公式f(n)=n*(n+1)/2<br>暴力删除1-233和n-233到n的值</p>
<h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><h3 id="题目要求-10"><a href="#题目要求-10" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>描述</strong><br>最近盛大的一款游戏传奇世界极其火爆。游戏玩家John，想购买游戏中的装备。已知游戏的商店里有n件装备，第i件装备具有属性值ai，购买需要花费bi个金币。John想去购买这些装备，但是账号中只有m个金币，John是个很贪婪的家伙，他想购买尽可能多的装备。并且在保证购买到最多件装备的情况下，他还想让他所购买的装备当中拥有最小属性值的装备的属性值尽可能大。</p>
<p><strong>输入</strong><br>输入测试组数T，每组数据第一行输入整数n(1&lt;=n&lt;=100000)和m(1&lt;=m&lt;=109), 接下来有n行，第i行有两个数ai, bi(1&lt;=ai,bi&lt;=10000).</p>
<p><strong>输出</strong><br>对于每组数据，输出两个数字，第一个数字代表John最多可以购买的装备数，第二个数代表在John购买最多件装备的前提下，所购买的装备当中拥有最小属性值的装备的最大属性值(输入数据保证至少可以购买一件装备)</p>
<p><strong>样例输入</strong><br>1<br>2 4<br>3 2<br>2 3</p>
<p><strong>样例输出</strong><br>1 3</p>
<h3 id="参考AC代码-10"><a href="#参考AC代码-10" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">vector&lt;pii&gt;s;</div><div class="line">int n,m;</div><div class="line">int sum,len;</div><div class="line">int cmp(pii x,pii y)&#123;</div><div class="line">	<span class="keyword">if</span>(x.se==y.se) <span class="built_in">return</span> x.fi&gt;y.fi;</div><div class="line">	<span class="built_in">return</span> x.se&lt;y.se;</div><div class="line">&#125;</div><div class="line">bool check(int x)&#123;</div><div class="line">	int num=0;</div><div class="line">	int all=m;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;s.size();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(s[i].fi&lt;x) <span class="built_in">continue</span>;</div><div class="line">		<span class="keyword">if</span>(all<span class="_">-s</span>[i].se&lt;0) <span class="built_in">break</span>;</div><div class="line">		all-=s[i].se;</div><div class="line">		num++;  </div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> num&gt;=len;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		s.clear();</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">		int max_p; </div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			int x,y;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">			max_p=max(max_p,x);</div><div class="line">			s.pb(mp(x,y));</div><div class="line">		&#125;</div><div class="line">		sort(s.begin(),s.end(),cmp);</div><div class="line">		sum=0,len=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;s.size();i++)&#123;</div><div class="line">			<span class="keyword">if</span>(sum+s[i].se&gt;m) <span class="built_in">break</span>;</div><div class="line">			sum+=s[i].se;</div><div class="line">			len++;</div><div class="line">		&#125;</div><div class="line">		int l=0,r=max_p,mid,ans;</div><div class="line">		<span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">			mid=(l+r)&gt;&gt;1;</div><div class="line">			<span class="keyword">if</span>(check(mid))&#123;</div><div class="line">				l=mid+1;</div><div class="line">				ans=mid;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> r=mid-1;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,len,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h3><p>先把装备按照cost从小到大排序 求出最多能购买多少装备<br>再二分最小属性</p>
<h2 id="M"><a href="#M" class="headerlink" title="M"></a>M</h2><h3 id="题目要求-11"><a href="#题目要求-11" class="headerlink" title="题目要求"></a>题目要求</h3><p><strong>描述</strong><br>小Y正在观测y地区的风力情况，他在一条直线上依此设定了n个观测点，并观测与直线垂直方向的风力值，风力有时是正向的也有时是反向的，规定正向时的风力值为正数，他发现每次风力值的变化都可以表示为观测点上一条线段[L,R]上的同时增强或者减弱。小Y希望能够实时统计这些观测点的数据，并且实时分析这些观测点在历史中到达的风力最大绝对值，但是他无法同时对大量的观测点进行分析, 更重要的是他记不住这些观测点过去的风力大小，于是他希望你来用计算机帮助他完成这个任务。<br>你简化了这个问题，将问题分为两种查询：<br>1.对观测点[L,R]上的风力正向增强X。（X为负数表示正向减弱，即反向加强）<br>2.查询观测点A上的历史风力最大绝对值。</p>
<p><strong>输入</strong><br>第一行有一个整数T表示数据组数。（T&lt;=10）<br>接着有T组数据，每组数据第一行是整数n和q，表示观测点个数和查询次数。<br>第二行有n个数a1,…,an，表示每个观测点的风力初始值。<br>接着有q行，表示q次操作，格式为：<br>1 L R X：表示对[L，R]线段上的正向风力同时增强x。<br>2 A：表示查询A点的历史风力最大绝对值。<br>1&lt;=n,q&lt;=100000。<br>1&lt;=L,R,A&lt;=n<br>−10000&lt;=ai, X&lt;=10000</p>
<p><strong>输出</strong><br>对每次询问2，输出一个数字表示风力值并换行。</p>
<p><strong>样例输入</strong><br>1<br>5 6<br>1 -1 2 3 -3<br>1 1 5 1<br>2 1<br>2 2<br>1 2 4 -5<br>2 2<br>2 3</p>
<p><strong>样例输出</strong><br>2<br>1<br>5<br>3</p>
<h3 id="参考AC代码-11"><a href="#参考AC代码-11" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int n,q;</div><div class="line">int maxx[maxn&lt;&lt;2],minn[maxn&lt;&lt;2];</div><div class="line">int cur[maxn&lt;&lt;2];</div><div class="line">void build(int l,int r,int rt)&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		cin&gt;&gt;maxx[rt];</div><div class="line">		cur[rt]=minn[rt]=maxx[rt];</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	cur[rt]=minn[rt]=maxx[rt]=0;</div><div class="line">	int m=(l+r)&gt;&gt;1;</div><div class="line">	build(lson);</div><div class="line">	build(rson);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void push_down(int rt)&#123;</div><div class="line">	<span class="keyword">if</span>(cur[rt] || maxx[rt] || minn[rt])&#123;</div><div class="line">		maxx[rt&lt;&lt;1]=max(maxx[rt&lt;&lt;1],cur[rt&lt;&lt;1]+maxx[rt]);</div><div class="line">		minn[rt&lt;&lt;1]=min(minn[rt&lt;&lt;1],cur[rt&lt;&lt;1]+minn[rt]);</div><div class="line">		maxx[rt&lt;&lt;1|1]=max(maxx[rt&lt;&lt;1|1],cur[rt&lt;&lt;1|1]+maxx[rt]);</div><div class="line">		minn[rt&lt;&lt;1|1]=min(minn[rt&lt;&lt;1|1],cur[rt&lt;&lt;1|1]+minn[rt]);</div><div class="line">		cur[rt&lt;&lt;1]+=cur[rt];</div><div class="line">		cur[rt&lt;&lt;1|1]+=cur[rt];</div><div class="line">		minn[rt]=maxx[rt]=cur[rt]=0;</div><div class="line">	&#125; </div><div class="line">&#125;</div><div class="line">void update(int L,int R,int x,int l,int r,int rt)&#123;</div><div class="line">	<span class="keyword">if</span>(L&lt;=l &amp;&amp; r&lt;=R)&#123;</div><div class="line">		cur[rt]+=x;</div><div class="line">		maxx[rt]=max(maxx[rt],cur[rt]);</div><div class="line">		minn[rt]=min(minn[rt],cur[rt]);</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int m=(l+r)&gt;&gt;1;</div><div class="line">	push_down(rt);</div><div class="line">	<span class="keyword">if</span>(m&gt;=L) update(L,R,x,lson);</div><div class="line">	<span class="keyword">if</span>(m&lt;R) update(L,R,x,rson);</div><div class="line">&#125;</div><div class="line">int query(int k,int l,int r,int rt)&#123;</div><div class="line">	<span class="keyword">if</span>(l==r) <span class="built_in">return</span> max(abs(maxx[rt]),abs(minn[rt]));</div><div class="line">	push_down(rt);</div><div class="line">	int m=(l+r)&gt;&gt;1;</div><div class="line">	<span class="keyword">if</span>(m&gt;=k) <span class="built_in">return</span> query(k,lson);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">return</span> query(k,rson);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		 cin&gt;&gt;n&gt;&gt;q;</div><div class="line">		 build(1,n,1);</div><div class="line">		 <span class="keyword">while</span>(q--)&#123;</div><div class="line">			int op;</div><div class="line">			cin&gt;&gt;op;</div><div class="line">		 	<span class="keyword">if</span>(op==1)&#123;</div><div class="line">		 		int l,r,x;</div><div class="line">		 		cin&gt;&gt;l&gt;&gt;r&gt;&gt;x;</div><div class="line">		 		update(l,r,x,1,n,1);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				int y;</div><div class="line">				cin&gt;&gt;y;</div><div class="line">				cout&lt;&lt;query(y,1,n,1)&lt;&lt;endl;</div><div class="line">			&#125; </div><div class="line">		 &#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-10"><a href="#思路-10" class="headerlink" title="思路"></a>思路</h3><p>线段树<br>区间修改 单点询问历史最大值/最小值绝对值的最大值<br>lazy数组换成cur maxn minn即可</p>
<h2 id="M-扩展"><a href="#M-扩展" class="headerlink" title="M(扩展)"></a>M(扩展)</h2><h3 id="题目要求-12"><a href="#题目要求-12" class="headerlink" title="题目要求"></a>题目要求</h3><p>区间修改 区间询问历史最小值<br>对于每次q一次update后query当前区间输出结果<br><a href="http://acm.whu.edu.cn:8080/problem/641" target="_blank" rel="external">题目链接</a></p>
<h3 id="参考AC代码-12"><a href="#参考AC代码-12" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int n;</div><div class="line">LL minn;</div><div class="line">struct node&#123;</div><div class="line">	LL m,sm,lm,cur,mcur;</div><div class="line">&#125;tree[maxn&lt;&lt;2];</div><div class="line">void pushup(int rt)&#123;</div><div class="line">	tree[rt].sm=tree[rt].m=min(tree[rt&lt;&lt;1].m,tree[rt&lt;&lt;1|1].m);</div><div class="line">	tree[rt].lm=min(tree[rt].lm,tree[rt].m);</div><div class="line">&#125;</div><div class="line">void pushdown(int rt)&#123;</div><div class="line">	<span class="keyword">if</span>(tree[rt].cur||tree[rt].mcur)&#123;  </div><div class="line">        LL k=tree[rt].mcur;        </div><div class="line">        tree[rt&lt;&lt;1].mcur=min(tree[rt&lt;&lt;1].mcur,tree[rt&lt;&lt;1].cur+k);</div><div class="line">        tree[rt&lt;&lt;1].cur+=tree[rt].cur;  </div><div class="line">        tree[rt&lt;&lt;1].lm=min(tree[rt&lt;&lt;1].mcur+tree[rt&lt;&lt;1].sm,tree[rt&lt;&lt;1].lm);  </div><div class="line">        tree[rt&lt;&lt;1].m+=tree[rt].cur;  </div><div class="line">        tree[rt&lt;&lt;1|1].mcur=min(tree[rt&lt;&lt;1|1].mcur,tree[rt&lt;&lt;1|1].cur+k);  </div><div class="line">        tree[rt&lt;&lt;1|1].cur+=tree[rt].cur;  </div><div class="line">        tree[rt&lt;&lt;1|1].lm=min(tree[rt&lt;&lt;1|1].mcur+tree[rt&lt;&lt;1|1].sm,tree[rt&lt;&lt;1|1].lm);  </div><div class="line">        tree[rt&lt;&lt;1|1].m+=tree[rt].cur;  </div><div class="line">        tree[rt].cur=0;  </div><div class="line">        tree[rt].mcur=0;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div><div class="line">void build(int l,int r,int rt)&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;  </div><div class="line">        cin&gt;&gt;tree[rt].m;  </div><div class="line">        tree[rt].sm=tree[rt].lm=tree[rt].m;  </div><div class="line">        tree[rt].cur=0;  </div><div class="line">        tree[rt].mcur=0;  </div><div class="line">        <span class="built_in">return</span>;  </div><div class="line">    &#125;  </div><div class="line">    tree[rt].cur=0;  </div><div class="line">    tree[rt].mcur=0;  </div><div class="line">    tree[rt].lm=INF;  </div><div class="line">    int m=(l+r)&gt;&gt;1;  </div><div class="line">    build(lson);  </div><div class="line">    build(rson);  </div><div class="line">    pushup(rt); 	</div><div class="line">&#125;</div><div class="line">void update(int L,int R,LL c,int l,int r,int rt)&#123;</div><div class="line">	<span class="keyword">if</span>(L&lt;=l&amp;&amp;r&lt;=R)&#123;  </div><div class="line">        tree[rt].cur+=c;  </div><div class="line">        tree[rt].mcur=min(tree[rt].mcur,tree[rt].cur);  </div><div class="line">        tree[rt].m+=c;  </div><div class="line">        tree[rt].lm=min(tree[rt].mcur+tree[rt].sm,tree[rt].lm);        </div><div class="line">        <span class="built_in">return</span> ;  </div><div class="line">    &#125;  </div><div class="line">    pushdown(rt);  </div><div class="line">    int m=(l+r)&gt;&gt;1;  </div><div class="line">    <span class="keyword">if</span>(L&lt;=m)update(L,R,c,lson);  </div><div class="line">    <span class="keyword">if</span>(m&lt;R)update(L,R,c,rson);  </div><div class="line">    pushup(rt);  </div><div class="line">&#125;</div><div class="line">void query(int L,int R,int l,int r,int rt)&#123;</div><div class="line">	<span class="keyword">if</span>(L&lt;=l&amp;&amp;r&lt;=R)&#123;   </div><div class="line">        minn=min(minn,tree[rt].lm);  </div><div class="line">        <span class="built_in">return</span> ;  </div><div class="line">    &#125;  </div><div class="line">    int m=(l+r)&gt;&gt;1;  </div><div class="line">    pushdown(rt);  </div><div class="line">    <span class="keyword">if</span>(L&lt;=m)  query(L,R,lson);  </div><div class="line">    <span class="keyword">if</span>(m&lt;R) query(L,R,rson);  </div><div class="line">    pushup(rt);  </div><div class="line">    <span class="built_in">return</span> ;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)&#123;</div><div class="line">		build(1,n,1);</div><div class="line">		int q;</div><div class="line">		cin&gt;&gt;q;</div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			int x,y;</div><div class="line">			LL l;</div><div class="line">			cin&gt;&gt;x&gt;&gt;y&gt;&gt;l;</div><div class="line">			minn=INF;</div><div class="line">			update(x,y,l,1,n,1);</div><div class="line">			query(x,y,1,n,1);</div><div class="line">			cout&lt;&lt;minn&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">	&#125;	</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-11"><a href="#思路-11" class="headerlink" title="思路"></a>思路</h3><p>每个节点需要有一个当前最小值m、一个历史最小值 lm，一个延迟标记累加和和指的是延迟标记累加的得到的结果cur<br>一个用来保存当cur多次累加时出现的最小和 mcur，一个延迟标记累加前的m值用 变量sm储存</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cf round 422]]></title>
      <url>http://xuboming8.github.io/2017/07/11/cf-round-422/</url>
      <content type="html"><![CDATA[<h1 id="cf-round-422"><a href="#cf-round-422" class="headerlink" title="cf round 422"></a>cf round 422</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>求两个数阶乘的gcd<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	LL a,b;</div><div class="line">	cin&gt;&gt;a&gt;&gt;b;</div><div class="line">	LL c=min(a,b);</div><div class="line">	LL ans=1;</div><div class="line">	<span class="keyword">while</span>(c)&#123;</div><div class="line">		ans*=c;</div><div class="line">		c--;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>(max-min)!</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出字符串s1和s2<br>要求最少改动s1中的多少个字母可以满足s1是s2的一个子串</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n,m;</div><div class="line">	cin&gt;&gt;n&gt;&gt;m;</div><div class="line">	string s1,s2;</div><div class="line">	cin&gt;&gt;s1&gt;&gt;s2;</div><div class="line">	int ans=inf;</div><div class="line">	int po=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;m-n+1;i++)&#123;</div><div class="line">		int st=i,ed=st+n-1;</div><div class="line">		int cur_po=0,cur_ans=0;</div><div class="line">		<span class="keyword">for</span>(int j=st;j&lt;=ed;j++)&#123;</div><div class="line">			<span class="keyword">if</span>(s2[j]!=s1[cur_po++]) cur_ans++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(cur_ans&lt;ans)&#123;</div><div class="line">			ans=cur_ans;</div><div class="line">			po=st;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	int len=0;</div><div class="line">	<span class="keyword">for</span>(int i=po;i&lt;=po+n-1;i++) <span class="keyword">if</span>(s2[i]!=s1[len++]) cout&lt;&lt;len&lt;&lt;<span class="string">" "</span>;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>用一个length1的窗口去滑动s2 记录下需要改变的字母的最小值和最小值的起始位置<br>最后判断下起始位置的子串 输出具体位置即可</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>有n个区间 每个区间有左端点 右端点和cost值 输入需要满足的区间长度k<br>要从n个区间里选择若干个区间 满足他们互不相交 总的区间长度为k 并且cost和最小</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 500050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL inf=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">	LL st,interval,cost;</div><div class="line">	int flag;</div><div class="line">	node(LL st,LL interval,LL cost,int flag):st(st),interval(interval),cost(cost),flag(flag)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">int cmp(node a,node b)&#123;</div><div class="line">	<span class="keyword">if</span>(a.st==b.st) <span class="built_in">return</span> a.flag&gt;b.flag;</div><div class="line">	<span class="built_in">return</span> a.st&lt;b.st;</div><div class="line">&#125;</div><div class="line">vector&lt;node&gt;s;</div><div class="line">LL dp[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	LL n,x;</div><div class="line">	cin&gt;&gt;n&gt;&gt;x;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		LL l,r,c;</div><div class="line">		cin&gt;&gt;l&gt;&gt;r&gt;&gt;c;</div><div class="line">		s.pb(node(l,r<span class="_">-l</span>+1,c,1));</div><div class="line">		s.pb(node(r,r<span class="_">-l</span>+1,c,-1));</div><div class="line">	&#125;	</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;maxn;i++) dp[i]=inf;</div><div class="line">	LL ans=inf;</div><div class="line">	sort(s.begin(),s.end(),cmp);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;s.size();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(s[i].flag==1)&#123;</div><div class="line">			LL temp=x<span class="_">-s</span>[i].interval;</div><div class="line">			<span class="keyword">if</span>(temp&lt;0) <span class="built_in">continue</span>;</div><div class="line">			ans=min(ans,dp[temp]+s[i].cost);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> dp[s[i].interval]=min(dp[s[i].interval],s[i].cost);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(ans&lt;inf) cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="keyword">else</span> cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>dp<br>dp[interval]表示之前所有点中满足区间长度是interval的最小cost值<br>每个区间拆分成两个端点 1代表左端点 -1代表右端点<br>所有的点升序排序 大小相同的点左端点优先<br>对于每个点 如果是左端点 更新ans值 如果是右端点 更新dp值<br>更新ans：temp表示除去该点剩下的区间长度 若temp&gt;=0 dp[temp]即表示之前的状态中inetrval是temp的最小价值 加上该点的cost值更新答案<br>更新dp：如果到了右端点 说明某个区间已经更新好ans值 此时应该更新dp 用dp(之前的min)和该点的cost值取最小值即可<br>注意开LL<br>inf由于开了LL为1e18 不能取0x3f3f3f3f 所以不能用memset 要遍历初始化</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>一场选美比赛有N个人，可以分成N/x,每组x人。每组的比较次数为x（x-1）/2，f[N]为最后决出冠军所需的比较次数，可以通过改变x的值使f[N]改变。<br>题目给出t,l,r(1 ≤ t &lt; 109 + 7, 2 ≤ l ≤ r ≤ 5·106)。求 t^0⋅f(l)+t^1⋅f(l+1)+⋯+t^r−l⋅f(r) 的最小值对1e9+7的模。</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 5000050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int vis[maxn+50];</div><div class="line">LL prime[maxn+50],len=0;</div><div class="line">LL f[maxn+50];</div><div class="line">void <span class="function"><span class="title">solve</span></span>()&#123;</div><div class="line">	mm(vis,0);</div><div class="line">	vis[0]=vis[1]=1;</div><div class="line">	int m=sqrt(maxn+0.5);</div><div class="line">	<span class="keyword">for</span>(LL i=2;i&lt;=m;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(!vis[i])&#123;</div><div class="line">			<span class="keyword">for</span>(int j=i*i;j&lt;=maxn;j+=i) vis[j]=1;</div><div class="line">		&#125;</div><div class="line">	&#125; </div><div class="line">	<span class="keyword">for</span>(LL i=0;i&lt;maxn;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(!vis[i]) prime[len++]=i;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	solve();</div><div class="line">	mm(f,0);</div><div class="line">	LL t,l,r;</div><div class="line">	cin&gt;&gt;t&gt;&gt;l&gt;&gt;r;</div><div class="line">	<span class="keyword">for</span>(LL i=2;i&lt;maxn;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(!vis[i]) f[i]=(i*(i-1)/2)%mod;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			LL factor;</div><div class="line">			<span class="keyword">for</span>(LL j=0;j&lt;len;j++)&#123;</div><div class="line">				<span class="keyword">if</span>(i%prime[j]==0)&#123;</div><div class="line">					factor=prime[j];</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			f[i]=(i/factor*f[factor]+f[i/factor])%mod;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	LL ans=0;</div><div class="line">	<span class="keyword">for</span>(LL i=r;i&gt;=l;i--)&#123;</div><div class="line">		ans=(ans*t)%mod;</div><div class="line">		ans=(ans+f[i])%mod;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>数论<br>如果人数为素数，那f[N]=N(N-1)/2;<br>如果不是素数，那就找出最小素因子x,分成N/x组，每组x人，f[N]=N/x*f[x]+f[N/x]。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[网络流拓展]]></title>
      <url>http://xuboming8.github.io/2017/06/23/%E7%BD%91%E7%BB%9C%E6%B5%81%E6%8B%93%E5%B1%95/</url>
      <content type="html"><![CDATA[<h1 id="二分图多重匹配"><a href="#二分图多重匹配" class="headerlink" title="二分图多重匹配"></a>二分图多重匹配</h1><p>与普通二分图匹配的区别在于一个点可匹配多个点<br>普通二分图匹配一般求最大(完美)带权匹配值<br>二分图多重匹配一般求是否有合理的分配使得形成多重匹配<br><a id="more"></a></p>
<h2 id="HDU-3605"><a href="#HDU-3605" class="headerlink" title="HDU 3605"></a>HDU 3605</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>一个人可以去多个星球 输出每个人可以去的星球的情况 数组g中存储1代表可以去 0代表不能去<br>一个星球最多可以容纳某个数量的人 问是否可以有某种分配方式使得满足多重匹配</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define maxm 15</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int n,m,w[maxm],cnt[maxm];  </div><div class="line">int g[maxn][maxm],match[maxm][maxn];  </div><div class="line">bool vis[maxm];  </div><div class="line">bool dfs(int x)&#123; </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;m;i++)  </div><div class="line">        <span class="keyword">if</span>(!vis[i]&amp;&amp;g[x][i])&#123;</div><div class="line">            vis[i]=1;  </div><div class="line">            <span class="keyword">if</span>(cnt[i]&lt;w[i])&#123;</div><div class="line">                match[i][cnt[i]++]=x;  </div><div class="line">                <span class="built_in">return</span> <span class="literal">true</span>;  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;cnt[i];j++)  </div><div class="line">                <span class="keyword">if</span>(dfs(match[i][j]))&#123;</div><div class="line">                    match[i][j]=x;  </div><div class="line">                    <span class="built_in">return</span> <span class="literal">true</span>;  </div><div class="line">                &#125;  </div><div class="line">        &#125;  </div><div class="line">    <span class="built_in">return</span> <span class="literal">false</span>;  </div><div class="line">&#125;  </div><div class="line">bool <span class="function"><span class="title">ok</span></span>()&#123;    </div><div class="line">    mm(cnt,0);</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">        mm(vis,0);</div><div class="line">        <span class="keyword">if</span>(!dfs(i)) <span class="built_in">return</span> <span class="literal">false</span>;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> <span class="literal">true</span>;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)&#123; </div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;m;j++)  </div><div class="line">                cin&gt;&gt;g[i][j];  </div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;m;i++) cin&gt;&gt;w[i];  </div><div class="line">        puts(ok()?<span class="string">"YES"</span>:<span class="string">"NO"</span>);  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>使用hungray模版<br>建好图和容量w 带入模版即可<br>注意本题中点和边的上限以及数组开的大小</p>
<h2 id="hihocoder-1393"><a href="#hihocoder-1393" class="headerlink" title="hihocoder 1393"></a>hihocoder 1393</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>班级参加运动会 每个人擅长某些项目 每个人最多参加某个数量的项目 每个项目必须有某个数量的人参加<br>问是否存在某种匹配使得满足这些条件 即满足多重匹配</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 210</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line">using namespace std;</div><div class="line">struct Edge&#123;</div><div class="line">  int from, to, <span class="built_in">cap</span>, flow;</div><div class="line">&#125;;</div><div class="line">struct Dinic&#123;</div><div class="line">  int n, m, s, t;</div><div class="line">  vector&lt;Edge&gt; edges;   </div><div class="line">  vector&lt;int&gt; G[maxn];   </div><div class="line">  bool vis[maxn];         </div><div class="line">  int d[maxn];           </div><div class="line">  int cur[maxn];       </div><div class="line">void ClearAll(int n)&#123;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">&#125;</div><div class="line">void AddEdge(int from, int to, int <span class="built_in">cap</span>)&#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, <span class="built_in">cap</span>, 0&#125;);</div><div class="line">    edges.push_back((Edge)&#123;to, from, 0, 0&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-2);</div><div class="line">    G[to].push_back(m-1);</div><div class="line">&#125;</div><div class="line">bool <span class="function"><span class="title">BFS</span></span>()&#123;</div><div class="line">    memset(vis, 0, sizeof(vis));</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    Q.push(s);</div><div class="line">    vis[s] = 1;</div><div class="line">    d[s] = 0;</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      int x = Q.front(); Q.pop();</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[x].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[x][i]];</div><div class="line">        <span class="keyword">if</span>(!vis[e.to] &amp;&amp; e.cap &gt; e.flow) &#123;</div><div class="line">          vis[e.to] = 1;</div><div class="line">          d[e.to] = d[x] + 1;</div><div class="line">          Q.push(e.to);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> vis[t];</div><div class="line">&#125;</div><div class="line">int DFS(int x, int a)&#123;</div><div class="line">    <span class="keyword">if</span>(x == t || a == 0) <span class="built_in">return</span> a;</div><div class="line">    int flow = 0, f;</div><div class="line">    <span class="keyword">for</span>(int&amp; i = cur[x]; i &lt; G[x].size(); i++) &#123;</div><div class="line">      Edge&amp; e = edges[G[x][i]];</div><div class="line">      <span class="keyword">if</span>(d[x] + 1 == d[e.to] &amp;&amp; (f = DFS(e.to, min(a, e.cap-e.flow))) &gt; 0) &#123;</div><div class="line">        e.flow += f;</div><div class="line">        edges[G[x][i]^1].flow -= f;</div><div class="line">        flow += f;</div><div class="line">        a -= f;</div><div class="line">        <span class="keyword">if</span>(a == 0) <span class="built_in">break</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">int Maxflow(int s, int t)&#123;</div><div class="line">    this-&gt;s = s; this-&gt;t = t;</div><div class="line">    int flow = 0;</div><div class="line">    <span class="keyword">while</span>(BFS()) &#123;</div><div class="line">      memset(cur, 0, sizeof(cur));</div><div class="line">      flow += DFS(s, inf);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line">Dinic g;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	int t; cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int nn,mm;</div><div class="line">		cin&gt;&gt;nn&gt;&gt;mm;</div><div class="line">		g.ClearAll(maxn);</div><div class="line">		int sum=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=mm;i++)&#123;</div><div class="line">			int x; cin&gt;&gt;x;</div><div class="line">			sum+=x;</div><div class="line">			g.AddEdge(nn+i,nn+mm+1,x);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">			int x,y;</div><div class="line">			cin&gt;&gt;x&gt;&gt;y;</div><div class="line">			g.AddEdge(0,i,x);</div><div class="line">			<span class="keyword">while</span>(y--)&#123;</div><div class="line">				int z; cin&gt;&gt;z;</div><div class="line">				g.AddEdge(i,nn+z,1);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(g.Maxflow(0,nn+mm+1)==sum) cout&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> cout&lt;&lt;<span class="string">"No"</span>&lt;&lt;endl;	</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>建图如下<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/149818173234.jpg" alt=""><br>A对应的是学生 B对应的是项目 a[i]对应的是每个学生限制参加的项目个数 m[i]对应每个项目限制参加的人数 增加一个源点S和一个汇点T<br>根据a[i]，在s和A[i]之间连接一条容量为a[i]的边<br>将原来A[i]-B[j]直接的边都改造为从A[i]到B[j]的容量为1的边<br>最后我们还要连接所有的B[j]-t。由于比赛项目B[j]最多只需要m[j]名选手参加，所以我们不妨限制B[j]-t的容量为m[j]<br>在完成最大流后，这个网络流图的流量情况直接对应了一个分配方案：<br>s-A[i]：这一类边的流量表示了A[i]参加的项目数量。<br>A[i]-B[j]：这一类边的流量表示了A[i]是否参加项目B[j]，若参加则流量为1，否则流量为0。<br>B[j]-t：这一类边的流量表示了参加比赛项目B[j]的选手数量。<br>由于流网络会自动调整去满足最大流量，所以它会自动调整每个A[i]-B[j]的流量来使得B[j]-t尽可能大。<br>若每个项目都能够满足人数的话，网络流会自己调整为所有B[j]-t都满流的情况。<br>只需要最后判断一下每一条B[j]-t的边是否满流，就可以知道能否满足需求</p>
<h1 id="最小路径覆盖"><a href="#最小路径覆盖" class="headerlink" title="最小路径覆盖"></a>最小路径覆盖</h1><h2 id="hihocoder-1394"><a href="#hihocoder-1394" class="headerlink" title="hihocoder 1394"></a>hihocoder 1394</h2><h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line">using namespace std;</div><div class="line">struct Edge&#123;</div><div class="line">  int from, to, <span class="built_in">cap</span>, flow;</div><div class="line">&#125;;</div><div class="line">struct Dinic&#123;</div><div class="line">  int n, m, s, t;</div><div class="line">  vector&lt;Edge&gt; edges;   </div><div class="line">  vector&lt;int&gt; G[maxn];   </div><div class="line">  bool vis[maxn];         </div><div class="line">  int d[maxn];           </div><div class="line">  int cur[maxn];       </div><div class="line">void ClearAll(int n)&#123;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">&#125;</div><div class="line">void AddEdge(int from, int to, int <span class="built_in">cap</span>)&#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, <span class="built_in">cap</span>, 0&#125;);</div><div class="line">    edges.push_back((Edge)&#123;to, from, 0, 0&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-2);</div><div class="line">    G[to].push_back(m-1);</div><div class="line">&#125;</div><div class="line">bool <span class="function"><span class="title">BFS</span></span>()&#123;</div><div class="line">    memset(vis, 0, sizeof(vis));</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    Q.push(s);</div><div class="line">    vis[s] = 1;</div><div class="line">    d[s] = 0;</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      int x = Q.front(); Q.pop();</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[x].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[x][i]];</div><div class="line">        <span class="keyword">if</span>(!vis[e.to] &amp;&amp; e.cap &gt; e.flow) &#123;</div><div class="line">          vis[e.to] = 1;</div><div class="line">          d[e.to] = d[x] + 1;</div><div class="line">          Q.push(e.to);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> vis[t];</div><div class="line">&#125;</div><div class="line">int DFS(int x, int a)&#123;</div><div class="line">    <span class="keyword">if</span>(x == t || a == 0) <span class="built_in">return</span> a;</div><div class="line">    int flow = 0, f;</div><div class="line">    <span class="keyword">for</span>(int&amp; i = cur[x]; i &lt; G[x].size(); i++) &#123;</div><div class="line">      Edge&amp; e = edges[G[x][i]];</div><div class="line">      <span class="keyword">if</span>(d[x] + 1 == d[e.to] &amp;&amp; (f = DFS(e.to, min(a, e.cap-e.flow))) &gt; 0) &#123;</div><div class="line">        e.flow += f;</div><div class="line">        edges[G[x][i]^1].flow -= f;</div><div class="line">        flow += f;</div><div class="line">        a -= f;</div><div class="line">        <span class="keyword">if</span>(a == 0) <span class="built_in">break</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">int Maxflow(int s, int t)&#123;</div><div class="line">    this-&gt;s = s; this-&gt;t = t;</div><div class="line">    int flow = 0;</div><div class="line">    <span class="keyword">while</span>(BFS()) &#123;</div><div class="line">      memset(cur, 0, sizeof(cur));</div><div class="line">      flow += DFS(s, inf);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line">Dinic g;</div><div class="line">int nn,mm;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;nn&gt;&gt;mm)&#123;</div><div class="line">		g.ClearAll(maxn);</div><div class="line">		int S=0,T=nn+nn+1;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++) g.AddEdge(S,i,1);</div><div class="line">		<span class="keyword">for</span>(int i=nn+1;i&lt;=2*nn;i++) g.AddEdge(i,T,1);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=mm;i++)&#123;</div><div class="line">			int u,v;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v;</div><div class="line">			g.AddEdge(u,nn+v,1);</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;nn-g.Maxflow(S,T)&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>这是求最大匹配数用dinic模版 源点到A和B到汇点的容量上限全部设为1即可</p>
<h1 id="最大权闭合子图"><a href="#最大权闭合子图" class="headerlink" title="最大权闭合子图"></a>最大权闭合子图</h1><h2 id="hihocoder-1395"><a href="#hihocoder-1395" class="headerlink" title="hihocoder 1395"></a>hihocoder 1395</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>周末，小Hi和小Ho所在的班级决定举行一些班级建设活动。<br>根据周内的调查结果，小Hi和小Ho一共列出了N项不同的活动(编号1..N)，第i项活动能够产生a[i]的活跃值。<br>班级一共有M名学生(编号1..M)，邀请编号为i的同学来参加班级建设活动需要消耗b[i]的活跃值。<br>每项活动都需要某些学生在场才能够进行，若其中有任意一个学生没有被邀请，这项活动就没有办法进行。<br>班级建设的活跃值是活动产生的总活跃值减去邀请学生所花费的活跃值。<br>小Hi和小Ho需要选择进行哪些活动，来保证班级建设的活跃值尽可能大。<br>比如有3项活动，4名学生：<br>第1项活动产生5的活跃值，需要编号为1、2的学生才能进行；<br>第2项活动产生10的活跃值，需要编号为3、4的学生才能进行；<br>第3项活动产生8的活跃值，需要编号为2、3、4的学生才能进行。<br>编号为1到4的学生需要消耗的活跃值分别为6、3、5、4。<br>假设举办活动集合为{1}，需要邀请的学生集合为{1,2}，则得到的班级活跃值为5-9 = -4。<br>假设举办活动集合为{2}，需要邀请的学生集合为{3,4}，则得到的班级活跃值为10-9 = 1。<br>假设举办活动集合为{2,3}，需要邀请的学生集合为{2,3,4}，则得到的班级活跃值为18-12 = 6。<br>假设举办活动集合为{1,2,3}，需要邀请的学生集合为{1,2,3,4}，则得到的班级活跃值为23-18 = 5。<br>小Hi和小Ho总是希望班级活跃值越大越好，因此在这个例子中，他们会选择举行活动2和活动3。</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 450</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line">using namespace std;</div><div class="line">struct Edge&#123;</div><div class="line">  int from, to, <span class="built_in">cap</span>, flow;</div><div class="line">&#125;;</div><div class="line">struct Dinic&#123;</div><div class="line">  int n, m, s, t;</div><div class="line">  vector&lt;Edge&gt; edges;   </div><div class="line">  vector&lt;int&gt; G[maxn];   </div><div class="line">  bool vis[maxn];         </div><div class="line">  int d[maxn];           </div><div class="line">  int cur[maxn];       </div><div class="line">void ClearAll(int n)&#123;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">&#125;</div><div class="line">void AddEdge(int from, int to, int <span class="built_in">cap</span>)&#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, <span class="built_in">cap</span>, 0&#125;);</div><div class="line">    edges.push_back((Edge)&#123;to, from, 0, 0&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-2);</div><div class="line">    G[to].push_back(m-1);</div><div class="line">&#125;</div><div class="line">bool <span class="function"><span class="title">BFS</span></span>()&#123;</div><div class="line">    memset(vis, 0, sizeof(vis));</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    Q.push(s);</div><div class="line">    vis[s] = 1;</div><div class="line">    d[s] = 0;</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      int x = Q.front(); Q.pop();</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[x].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[x][i]];</div><div class="line">        <span class="keyword">if</span>(!vis[e.to] &amp;&amp; e.cap &gt; e.flow) &#123;</div><div class="line">          vis[e.to] = 1;</div><div class="line">          d[e.to] = d[x] + 1;</div><div class="line">          Q.push(e.to);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> vis[t];</div><div class="line">&#125;</div><div class="line">int DFS(int x, int a)&#123;</div><div class="line">    <span class="keyword">if</span>(x == t || a == 0) <span class="built_in">return</span> a;</div><div class="line">    int flow = 0, f;</div><div class="line">    <span class="keyword">for</span>(int&amp; i = cur[x]; i &lt; G[x].size(); i++) &#123;</div><div class="line">      Edge&amp; e = edges[G[x][i]];</div><div class="line">      <span class="keyword">if</span>(d[x] + 1 == d[e.to] &amp;&amp; (f = DFS(e.to, min(a, e.cap-e.flow))) &gt; 0) &#123;</div><div class="line">        e.flow += f;</div><div class="line">        edges[G[x][i]^1].flow -= f;</div><div class="line">        flow += f;</div><div class="line">        a -= f;</div><div class="line">        <span class="keyword">if</span>(a == 0) <span class="built_in">break</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">int Maxflow(int s, int t)&#123;</div><div class="line">    this-&gt;s = s; this-&gt;t = t;</div><div class="line">    int flow = 0;</div><div class="line">    <span class="keyword">while</span>(BFS()) &#123;</div><div class="line">      memset(cur, 0, sizeof(cur));</div><div class="line">      flow += DFS(s, inf);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line">Dinic g;</div><div class="line">int nn,mm;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;nn&gt;&gt;mm)&#123;</div><div class="line">		g.ClearAll(maxn);</div><div class="line">		int s=0,t=nn+mm+1;</div><div class="line">		int sum=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=mm;i++)&#123;</div><div class="line">			int x;</div><div class="line">			cin&gt;&gt;x;</div><div class="line">			<span class="keyword">if</span>(x==0) <span class="built_in">continue</span>;</div><div class="line">			g.AddEdge(nn+i,t,x);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">			int x,y;</div><div class="line">			cin&gt;&gt;x&gt;&gt;y;</div><div class="line">			sum+=x;</div><div class="line">			g.AddEdge(s,i,x);</div><div class="line">			<span class="keyword">while</span>(y--)&#123;</div><div class="line">				int z;</div><div class="line">				cin&gt;&gt;z;</div><div class="line">				g.AddEdge(i,nn+z,inf);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;sum-g.Maxflow(s,t)&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>问题可以转换成求最大权闭合子图<br>进而转换为所有权值为正的和sum-最小割=sum-最大流<br>闭合子图：给定一个有向图，从中选择一些点组成一个点集V。对于V中任意一个点，其后续节点都仍然在V中<br>把这次的问题转化为2分图。将N个活动看作A部，将M个学生看作B部。若第i个活动需要第j个学生，就连一条从A[i]到B[j]的有向边<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/149819726056.jpg" alt=""><br>假如选择A[1]，则我们需要同时选择B[1],B[2]。选择什么活动和其需要的学生，就刚好对应了这个图中的一个闭合子图<br>首先建立源点s和汇点t，将源点s与所有权值为正的点相连，容量为权值；将所有权值为负的点与汇点t相连，容量为权值的绝对值；权值为0的点不做处理；同时将原来的边容量设置为无穷大。<br>建好图后，最大权闭合子图的权值等于所有正权点之和减去最小割。</p>
<h1 id="HDU-5988-浮点型MCMF-概率变形"><a href="#HDU-5988-浮点型MCMF-概率变形" class="headerlink" title="HDU 5988(浮点型MCMF+概率变形)"></a>HDU 5988(浮点型MCMF+概率变形)</h1><h2 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h2><p>n个点 m条边 每个点里有一些人 会分到一些面包 没有面包吃的人会移动到别的点 每次移动对该边有pi的概率破坏网络<br>第一个在该条边移动的人不会破坏网络 每条变最多能移动固定的人数 问破坏网络最小的概率是多少</p>
<h2 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 250</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-8;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">struct Edge&#123;</div><div class="line">	int from,to,<span class="built_in">cap</span>,flow;</div><div class="line">	double cost;</div><div class="line">	Edge(int from,int to,int <span class="built_in">cap</span>,int flow,double cost):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow),cost(cost)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">struct MCMF&#123;</div><div class="line">	int n,m,s,t;</div><div class="line">	vector&lt;Edge&gt;edges;</div><div class="line">	vector&lt;int&gt;G[maxn];</div><div class="line">	int inq[maxn],p[maxn],a[maxn];</div><div class="line">	double d[maxn];</div><div class="line">	void init(int n)&#123;</div><div class="line">		this-&gt;n=n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) G[i].clear();</div><div class="line">		edges.clear();</div><div class="line">	&#125;</div><div class="line">	void AddEdge(int from,int to,int <span class="built_in">cap</span>,double cost)&#123;</div><div class="line">		edges.push_back(Edge(from,to,<span class="built_in">cap</span>,0,cost));</div><div class="line">		edges.push_back(Edge(to,from,0,0,-cost));</div><div class="line">		m=edges.size();</div><div class="line">		G[from].push_back(m-2);</div><div class="line">		G[to].push_back(m-1);</div><div class="line">	&#125;</div><div class="line">	bool BellmanFord(int s,int t,int &amp;flow,double&amp; cost)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) d[i]=inf;</div><div class="line">		memset(inq,0,sizeof(inq));</div><div class="line">		d[s]=0,inq[s]=1,p[s]=0,a[s]=inf;</div><div class="line">		queue&lt;int&gt;Q;</div><div class="line">		Q.push(s);</div><div class="line">		<span class="keyword">while</span>(!Q.empty())&#123;</div><div class="line">			int u=Q.front();  Q.pop();</div><div class="line">			inq[u]=0;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;G[u].size();i++)&#123;</div><div class="line">				Edge&amp; e=edges[G[u][i]];</div><div class="line">				<span class="keyword">if</span>(e.cap&gt;e.flow &amp;&amp; d[e.to]<span class="_">-d</span>[u]-e.cost&gt;eps)&#123;</div><div class="line">					d[e.to]=d[u]+e.cost;</div><div class="line">					p[e.to]=G[u][i];</div><div class="line">					a[e.to]=min(a[u],e.cap-e.flow);</div><div class="line">					<span class="keyword">if</span>(!inq[e.to])&#123;</div><div class="line">						Q.push(e.to);</div><div class="line">						inq[e.to]=1;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(d[t]==inf) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">		flow+=a[t];</div><div class="line">		cost+=d[t]*a[t];</div><div class="line">		int u=t;</div><div class="line">		<span class="keyword">while</span>(u!=s)&#123;</div><div class="line">			edges[p[u]].flow+=a[t];</div><div class="line">			edges[p[u]^1].flow-=a[t];</div><div class="line">			u=edges[p[u]].from;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	double Mincost(int s,int t)&#123;</div><div class="line">		int flow=0;</div><div class="line">		double cost=0;</div><div class="line">		<span class="keyword">while</span>(BellmanFord(s,t,flow,cost));</div><div class="line">		<span class="built_in">return</span> cost;</div><div class="line">	&#125;</div><div class="line">&#125;mc;</div><div class="line">int a[maxn],b[maxn],c[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int nn,mm;</div><div class="line">		cin&gt;&gt;nn&gt;&gt;mm;</div><div class="line">		mc.init(maxn-1);</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;nn;i++)&#123;</div><div class="line">			cin&gt;&gt;a[i]&gt;&gt;b[i];</div><div class="line">			c[i]=a[i]-b[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;mm;i++)&#123;</div><div class="line">			int u,v,f;</div><div class="line">			double p;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v&gt;&gt;f&gt;&gt;p;</div><div class="line">			p=-log(1.0-p);</div><div class="line">			<span class="keyword">if</span>(f==0) <span class="built_in">continue</span>;</div><div class="line">			<span class="keyword">if</span>(f==1) mc.AddEdge(u,v,1,0);</div><div class="line">			<span class="keyword">if</span>(f&gt;1)&#123;</div><div class="line">				mc.AddEdge(u,v,1,0);</div><div class="line">				mc.AddEdge(u,v,f-1,p);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		int S=0,T=2*nn+1;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;nn;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(c[i]==0) <span class="built_in">continue</span>;</div><div class="line">			<span class="keyword">if</span>(c[i]&lt;0) mc.AddEdge(i+1,T,-c[i],0);</div><div class="line">			<span class="keyword">if</span>(c[i]&gt;0) mc.AddEdge(S,i+1,c[i],0);</div><div class="line">		&#125;</div><div class="line">		double Cost=mc.Mincost(S,T);</div><div class="line">		Cost=exp(-Cost);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,1.0-Cost);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h2><p>浮点最小费用最大流<br>注意MCMF的模版cost和数组d改成duoble型 如果最大流量也是浮点型也需改成double<br>破坏网络最小的概率=不破坏网络最大的概率<br>每条边要拆成两条边 第一次经过的时候破坏概率为0<br>概率乘法加ln变成加法 由于ln一个小数为负数所以添一个负号 转换后套用MCMF浮点型的板子<br>最后对数变回来即可</p>
<h1 id="HDU-4862-带权最小k路径覆盖"><a href="#HDU-4862-带权最小k路径覆盖" class="headerlink" title="HDU 4862(带权最小k路径覆盖)"></a>HDU 4862(带权最小k路径覆盖)</h1><h2 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h2><p>给定一个n*m的矩形(n,m≤10),每个矩形中有一个0~9的数字。<br>一共可以进行k次游戏，每次游戏可以任意选取一个没有经过的格子为起点，并且跳任意多步，每步可以向右方和下方跳。每次跳需要消耗两点间的曼哈顿距离减一的能量，若每次跳的起点和终点的数字相同，可以获得该数字的能量。（能量可以为负）<br>询问k次或更少次游戏后是否可以经过所有的格子，若可以求出最大的剩余能量。 </p>
<h2 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 250</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int mark[15][15],a[15][15],flag=1;</div><div class="line">int num;</div><div class="line">struct Edge&#123;</div><div class="line">	int from,to,<span class="built_in">cap</span>,flow,cost;</div><div class="line">	Edge(int from,int to,int <span class="built_in">cap</span>,int flow,int cost):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow),cost(cost)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">struct MCMF&#123;</div><div class="line">	int n,m,s,t;</div><div class="line">	vector&lt;Edge&gt;edges;</div><div class="line">	vector&lt;int&gt;G[maxn];</div><div class="line">	int inq[maxn],d[maxn],p[maxn],a[maxn];</div><div class="line">	void init(int n)&#123;</div><div class="line">		this-&gt;n=n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) G[i].clear();</div><div class="line">		edges.clear();</div><div class="line">	&#125;</div><div class="line">	void AddEdge(int from,int to,int <span class="built_in">cap</span>,int cost)&#123;</div><div class="line">		edges.push_back(Edge(from,to,<span class="built_in">cap</span>,0,cost));</div><div class="line">		edges.push_back(Edge(to,from,0,0,-cost));</div><div class="line">		m=edges.size();</div><div class="line">		G[from].push_back(m-2);</div><div class="line">		G[to].push_back(m-1);</div><div class="line">	&#125;</div><div class="line">	bool BellmanFord(int s,int t,int &amp;flow,int&amp; cost)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) d[i]=inf;</div><div class="line">		memset(inq,0,sizeof(inq));</div><div class="line">		d[s]=0,inq[s]=1,p[s]=0,a[s]=inf;</div><div class="line">		queue&lt;int&gt;Q;</div><div class="line">		Q.push(s);</div><div class="line">		<span class="keyword">while</span>(!Q.empty())&#123;</div><div class="line">			int u=Q.front();  Q.pop();</div><div class="line">			inq[u]=0;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;G[u].size();i++)&#123;</div><div class="line">				Edge&amp; e=edges[G[u][i]];</div><div class="line">				<span class="keyword">if</span>(e.cap&gt;e.flow &amp;&amp; d[e.to]&gt;d[u]+e.cost)&#123;</div><div class="line">					d[e.to]=d[u]+e.cost;</div><div class="line">					p[e.to]=G[u][i];</div><div class="line">					a[e.to]=min(a[u],e.cap-e.flow);</div><div class="line">					<span class="keyword">if</span>(!inq[e.to])&#123;</div><div class="line">						Q.push(e.to);</div><div class="line">						inq[e.to]=1;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(d[t]==inf) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">		flow+=a[t];</div><div class="line">		cost+=d[t]*a[t];</div><div class="line">		int u=t;</div><div class="line">		<span class="keyword">while</span>(u!=s)&#123;</div><div class="line">			edges[p[u]].flow+=a[t];</div><div class="line">			edges[p[u]^1].flow-=a[t];</div><div class="line">			u=edges[p[u]].from;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	void Mincost(int s,int t)&#123;</div><div class="line">		int flow=0,cost=0;</div><div class="line">		<span class="keyword">while</span>(BellmanFord(s,t,flow,cost));</div><div class="line">		<span class="keyword">if</span>(flow==num) cout&lt;&lt;-cost&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">&#125;g;</div><div class="line">void <span class="function"><span class="title">creat_map</span></span>()&#123;</div><div class="line">	int nn,mm,k;</div><div class="line">	cin&gt;&gt;nn&gt;&gt;mm&gt;&gt;k;</div><div class="line">	num=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">		string s;</div><div class="line">		cin&gt;&gt;s;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;s.length();j++)&#123;</div><div class="line">			a[i][j+1]=s[j]-<span class="string">'0'</span>;</div><div class="line">			mark[i][j+1]=++num;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	int S=0,T=2*num+2;</div><div class="line">	g.AddEdge(S,T-1,k,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=mm;j++)&#123;</div><div class="line">			g.AddEdge(S,mark[i][j],1,0);</div><div class="line">			g.AddEdge(mark[i][j]+num,T,1,0);</div><div class="line">			g.AddEdge(T-1,mark[i][j]+num,1,0);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=mm;j++)&#123;</div><div class="line">			<span class="keyword">for</span>(int k=1;k&lt;=nn;k++)&#123;</div><div class="line">				<span class="keyword">for</span>(int l=1;l&lt;=mm;l++)&#123;</div><div class="line">					<span class="keyword">if</span>((i==k &amp;&amp; l&gt;j)||(j==l &amp;&amp; i&lt;k))&#123;</div><div class="line">						int x=abs(i-k)+abs(j<span class="_">-l</span>)-1;</div><div class="line">						<span class="keyword">if</span>(a[i][j]==a[k][l]) x-=a[i][j];</div><div class="line">						g.AddEdge(mark[i][j],mark[k][l]+num,1,x);</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	g.Mincost(S,T);</div><div class="line"></div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		g.init(maxn);</div><div class="line">		cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;flag++&lt;&lt;<span class="string">" : "</span>;</div><div class="line">		creat_map();</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h2><p>带权值的最小K路径覆盖(最小路径覆盖数=总节点数-最大匹配数)<br>将n*m个点，每个点拆成两个，X，Y<br>由S向X连容量为1费用为0的边，Y向T连容量为1费用为0的边，X向可到达的Y连容量为1费用为所消耗能量<br>这样直接跑可求出最大匹配数 所有未流满的Y点数量即为最小路径覆盖数<br>考虑如何实现K路径覆盖<br>新建一个点Q,由S向Q连容量为k费用为0的边，有Q向Y连容量为1费用为0的边 即表示可以新增的起点数为k<br>这样跑一遍最小费用最大流，若不是满流则说明无解<br>注意：原题中求最大剩余量加负才能套用MCMF模版(最小费用)</p>
<h1 id="HDU-1569-二分图带权最大独立集"><a href="#HDU-1569-二分图带权最大独立集" class="headerlink" title="HDU 1569(二分图带权最大独立集)"></a>HDU 1569(二分图带权最大独立集)</h1><h2 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h2><p>给你一个m*n的格子的棋盘，每个格子里面有一个非负数。<br>从中取出若干个数，使得任意的两个数所在的格子没有公共边，就是说所取数所在的2个格子不能相邻，并且取出的数的和最大。</p>
<h2 id="参考AC代码-6"><a href="#参考AC代码-6" class="headerlink" title="参考AC代码"></a>参考AC代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 2505</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int a[51][51];</div><div class="line">int mark[51][51],num;</div><div class="line">int dirx[4]=&#123;0,0,1,-1&#125;;</div><div class="line">int diry[4]=&#123;1,-1,0,0&#125;;</div><div class="line">struct Edge&#123;</div><div class="line">  int from, to, <span class="built_in">cap</span>, flow;</div><div class="line">  Edge(int from,int to,int <span class="built_in">cap</span>,int flow):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">struct Dinic&#123;</div><div class="line">  int n, m, s, t;</div><div class="line">  vector&lt;Edge&gt; edges;   </div><div class="line">  vector&lt;int&gt; G[maxn];   </div><div class="line">  bool vis[maxn];         </div><div class="line">  int d[maxn];           </div><div class="line">  int cur[maxn];       </div><div class="line">void ClearAll(int n)&#123;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">&#125;</div><div class="line">void AddEdge(int from, int to, int <span class="built_in">cap</span>)&#123;</div><div class="line">    edges.push_back(Edge(from, to, <span class="built_in">cap</span>, 0));</div><div class="line">    edges.push_back(Edge(to, from, 0, 0));</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-2);</div><div class="line">    G[to].push_back(m-1);</div><div class="line">&#125;</div><div class="line">bool <span class="function"><span class="title">BFS</span></span>()&#123;</div><div class="line">    memset(vis, 0, sizeof(vis));</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    Q.push(s);</div><div class="line">    vis[s] = 1;</div><div class="line">    d[s] = 0;</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      int x = Q.front(); Q.pop();</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[x].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[x][i]];</div><div class="line">        <span class="keyword">if</span>(!vis[e.to] &amp;&amp; e.cap &gt; e.flow) &#123;</div><div class="line">          vis[e.to] = 1;</div><div class="line">          d[e.to] = d[x] + 1;</div><div class="line">          Q.push(e.to);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> vis[t];</div><div class="line">&#125;</div><div class="line">int DFS(int x, int a)&#123;</div><div class="line">    <span class="keyword">if</span>(x == t || a == 0) <span class="built_in">return</span> a;</div><div class="line">    int flow = 0, f;</div><div class="line">    <span class="keyword">for</span>(int&amp; i = cur[x]; i &lt; G[x].size(); i++) &#123;</div><div class="line">      Edge&amp; e = edges[G[x][i]];</div><div class="line">      <span class="keyword">if</span>(d[x] + 1 == d[e.to] &amp;&amp; (f = DFS(e.to, min(a, e.cap-e.flow))) &gt; 0) &#123;</div><div class="line">        e.flow += f;</div><div class="line">        edges[G[x][i]^1].flow -= f;</div><div class="line">        flow += f;</div><div class="line">        a -= f;</div><div class="line">        <span class="keyword">if</span>(a == 0) <span class="built_in">break</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">int Maxflow(int s, int t)&#123;</div><div class="line">    this-&gt;s = s; this-&gt;t = t;</div><div class="line">    int flow = 0;</div><div class="line">    <span class="keyword">while</span>(BFS()) &#123;</div><div class="line">      memset(cur, 0, sizeof(cur));</div><div class="line">      flow += DFS(s, inf);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">  &#125;</div><div class="line">&#125;g;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int nn,mm;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;nn&gt;&gt;mm)&#123;</div><div class="line">		int sum=0;</div><div class="line">		num=0;</div><div class="line">		g.ClearAll(maxn);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=mm;j++)&#123;</div><div class="line">				cin&gt;&gt;a[i][j];</div><div class="line">				sum+=a[i][j];</div><div class="line">				mark[i][j]=++num;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		int S=0,T=nn*mm+1;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=mm;j++)&#123;</div><div class="line">				<span class="keyword">if</span>((i+j)%2==0) g.AddEdge(S,mark[i][j],a[i][j]);</div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>((i+j)%2==1) g.AddEdge(mark[i][j],T,a[i][j]);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=mm;j++)&#123;</div><div class="line">				<span class="keyword">if</span>((i+j)%2==0)&#123;</div><div class="line">					<span class="keyword">for</span>(int k=0;k&lt;4;k++)&#123;</div><div class="line">						int xx=i+dirx[k];</div><div class="line">						int yy=j+diry[k];</div><div class="line">						<span class="keyword">if</span>(xx&gt;=1 &amp;&amp; xx&lt;=nn &amp;&amp; yy&gt;=1 &amp;&amp; yy&lt;=mm)</div><div class="line">							g.AddEdge(mark[i][j],mark[xx][yy],inf);</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		int ans=g.Maxflow(S,T);</div><div class="line">		cout&lt;&lt;sum-ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h2><p>注意建边<br>最大带权独立集合=总权值-最小顶点覆盖=总权值-最大匹配数<br>最大匹配数用dinic<br>蓝书P367</p>
<h1 id="HDU-4940-无源无汇有下界可行流"><a href="#HDU-4940-无源无汇有下界可行流" class="headerlink" title="HDU 4940(无源无汇有下界可行流)"></a>HDU 4940(无源无汇有下界可行流)</h1><h2 id="题目要求-6"><a href="#题目要求-6" class="headerlink" title="题目要求"></a>题目要求</h2><p>给你一个强连通的有向简单图，每条边有D, B两个权值，设S为点集的一个非空真子集<br>问：是否对于任意的集合S,都有sum (D(i, j)）&lt;= sum(D(j, i) + B(j, i))<br>i,j表示割边</p>
<h2 id="参考AC代码-7"><a href="#参考AC代码-7" class="headerlink" title="参考AC代码"></a>参考AC代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 250</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">struct Edge&#123;</div><div class="line">  int from, to, <span class="built_in">cap</span>, flow;</div><div class="line">&#125;;</div><div class="line">struct Dinic&#123;</div><div class="line">  int n, m, s, t;</div><div class="line">  vector&lt;Edge&gt; edges;   </div><div class="line">  vector&lt;int&gt; G[maxn];   </div><div class="line">  bool vis[maxn];         </div><div class="line">  int d[maxn];           </div><div class="line">  int cur[maxn];       </div><div class="line">void ClearAll(int n)&#123;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">&#125;</div><div class="line">void AddEdge(int from, int to, int <span class="built_in">cap</span>)&#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, <span class="built_in">cap</span>, 0&#125;);</div><div class="line">    edges.push_back((Edge)&#123;to, from, 0, 0&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-2);</div><div class="line">    G[to].push_back(m-1);</div><div class="line">&#125;</div><div class="line">bool <span class="function"><span class="title">BFS</span></span>()&#123;</div><div class="line">    memset(vis, 0, sizeof(vis));</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    Q.push(s);</div><div class="line">    vis[s] = 1;</div><div class="line">    d[s] = 0;</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      int x = Q.front(); Q.pop();</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[x].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[x][i]];</div><div class="line">        <span class="keyword">if</span>(!vis[e.to] &amp;&amp; e.cap &gt; e.flow) &#123;</div><div class="line">          vis[e.to] = 1;</div><div class="line">          d[e.to] = d[x] + 1;</div><div class="line">          Q.push(e.to);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> vis[t];</div><div class="line">&#125;</div><div class="line">int DFS(int x, int a)&#123;</div><div class="line">    <span class="keyword">if</span>(x == t || a == 0) <span class="built_in">return</span> a;</div><div class="line">    int flow = 0, f;</div><div class="line">    <span class="keyword">for</span>(int&amp; i = cur[x]; i &lt; G[x].size(); i++) &#123;</div><div class="line">      Edge&amp; e = edges[G[x][i]];</div><div class="line">      <span class="keyword">if</span>(d[x] + 1 == d[e.to] &amp;&amp; (f = DFS(e.to, min(a, e.cap-e.flow))) &gt; 0) &#123;</div><div class="line">        e.flow += f;</div><div class="line">        edges[G[x][i]^1].flow -= f;</div><div class="line">        flow += f;</div><div class="line">        a -= f;</div><div class="line">        <span class="keyword">if</span>(a == 0) <span class="built_in">break</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">int Maxflow(int s, int t)&#123;</div><div class="line">    this-&gt;s = s; this-&gt;t = t;</div><div class="line">    int flow = 0;</div><div class="line">    <span class="keyword">while</span>(BFS()) &#123;</div><div class="line">      memset(cur, 0, sizeof(cur));</div><div class="line">      flow += DFS(s, inf);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line">Dinic g;</div><div class="line">int sum[maxn];</div><div class="line">int flag=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		cout&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;flag++&lt;&lt;<span class="string">": "</span>;</div><div class="line">		int nn,mm;</div><div class="line">		cin&gt;&gt;nn&gt;&gt;mm;</div><div class="line">		g.ClearAll(maxn);</div><div class="line">		mm(sum,0);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=mm;i++)&#123;</div><div class="line">			int u,v,d,b;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v&gt;&gt;d&gt;&gt;b;</div><div class="line">			sum[u]-=d;</div><div class="line">			sum[v]+=d;</div><div class="line">			g.AddEdge(u,v,b);</div><div class="line">		&#125;</div><div class="line">		int Sum=0;</div><div class="line">		int S=0,T=nn+1;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=nn;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(sum[i]&gt;0)&#123;</div><div class="line">				g.AddEdge(S,i,sum[i]);</div><div class="line">				Sum+=sum[i];</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(sum[i]&lt;0) g.AddEdge(i,T,-sum[i]);</div><div class="line">		&#125;</div><div class="line">		int ans=g.Maxflow(S,T);</div><div class="line">		<span class="keyword">if</span>(ans==Sum) cout&lt;&lt;<span class="string">"happy"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> cout&lt;&lt;<span class="string">"unhappy"</span>&lt;&lt;endl;</div><div class="line">	&#125; </div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h2><p>新建源点，汇点，sum[i]为每个点<strong>流入的下界流之和减去流出的下界流之和</strong>，如果sum[i] &gt; 0，由源点向该点建一条边，上界为sum[i]，下界为0<br>如果sum[i] &lt; 0, 由该点向汇点建边，上界为-sum[i]，下界为0。<br>两点之间以B作为流量上限<br>跑一遍源点到汇点的最大流，当<strong>所有源点连的边都满流</strong>的时候存在可行流，当前的流量即为最大流。<br>本题：<br>将D值作为边的下界，D + B作为边的上界，如果存在可行流，那么对于任意集合S<br>都有流量小于等于边的容量上界，大于等于边的容量下界，即D(i, j) &lt;= f(i, j) &lt;= D(j, i)+B(j, i)<br><a href="http://www.cnblogs.com/flipped/p/5792694.html" target="_blank" rel="external">详解转跳链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cf杂选2]]></title>
      <url>http://xuboming8.github.io/2017/06/16/cf%E6%9D%82%E9%80%89-1/</url>
      <content type="html"><![CDATA[<h1 id="cf杂选2"><a href="#cf杂选2" class="headerlink" title="cf杂选2"></a>cf杂选2</h1><h2 id="817-A"><a href="#817-A" class="headerlink" title="817 A"></a>817 A</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出初始坐标和目标坐标<br>并给出(x,y)每次可以在初始坐标上执行(x,y),(x,-y),(-x,y),(-x,-y)</p>
<a id="more"></a>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int x1,x2,y1,y2;</div><div class="line">	int x,y;</div><div class="line">	cin&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2&gt;&gt;x&gt;&gt;y;</div><div class="line">	<span class="keyword">if</span>((abs(x1-x2)%x!=0)||(abs(y1-y2)%y!=0))&#123;</div><div class="line">		cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	&#125;</div><div class="line">	int t1=abs(x1-x2)/x;</div><div class="line">	int t2=abs(y1-y2)/y;</div><div class="line">	int ans=max(t1,t2)-min(t1,t2);</div><div class="line">	<span class="keyword">if</span>(ans&amp;1) cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">	<span class="keyword">else</span> cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>若x1-x2不能被x整除或y1-y2不能被y整除 均NO<br>整除做减法后奇数输出NO 偶数输出YES<br>偶数可以开会”跳”到结果</p>
<h2 id="817-B"><a href="#817-B" class="headerlink" title="817 B"></a>817 B</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>输出最小值三元组的个数</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL a[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	LL n;</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];</div><div class="line">	sort(a+1,a+1+n);</div><div class="line">	LL cnt=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) <span class="keyword">if</span>(a[i]==a[3]) cnt++;</div><div class="line">	<span class="keyword">if</span>(a[1]==a[2] &amp;&amp; a[2]==a[3]) cout&lt;&lt;cnt*(cnt-1)*(cnt-2)/6&lt;&lt;endl;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(a[1]==a[2] &amp;&amp; a[2]&lt;a[3]) cout&lt;&lt;cnt&lt;&lt;endl;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(a[1]&lt;a[2] &amp;&amp; a[2]==a[3]) cout&lt;&lt;cnt*(cnt-1)/2&lt;&lt;endl;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(a[1]&lt;a[2] &amp;&amp; a[2]&lt;a[3]) cout&lt;&lt;cnt&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>计算出a[3]的个数 组合数</p>
<h2 id="817-C"><a href="#817-C" class="headerlink" title="817 C"></a>817 C</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>求出满足该数x-sum(各位相加只和)&gt;=s的个数</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL n,s;</div><div class="line">bool check(LL x)&#123;</div><div class="line">	LL sum=0;</div><div class="line">	LL temp=x;</div><div class="line">	<span class="keyword">while</span>(x)&#123;</div><div class="line">		sum+=x%10;</div><div class="line">		x/=10;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> temp-sum&gt;=s;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	cin&gt;&gt;n&gt;&gt;s;</div><div class="line">	LL l=1,r=1LL*1e18,mid,ans=0;</div><div class="line">	LL res;</div><div class="line">	<span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">		mid=(l+r)&gt;&gt;1;</div><div class="line">		<span class="keyword">if</span>(check(mid))&#123;</div><div class="line">			ans=mid;</div><div class="line">			r=mid-1;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> l=mid+1;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(ans==0) res=0;</div><div class="line">	<span class="keyword">else</span> res=n-ans+1&lt;0?0:n-ans+1;</div><div class="line">	cout&lt;&lt;res&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>由于随着数字每增加10 x-sum会增加9 满足递增有序 所以二分答案即可<br>找到最小的满足条件的数字 n-ans+1就是答案<br>注意边界即可 可能ans比n大 此时res=0<br>并且可能ans=0表示没有找到 此时res=0</p>
<h2 id="817-D"><a href="#817-D" class="headerlink" title="817 D"></a>817 D</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>求出一个数组内所有子序列的最大值-最小值的和</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1000050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL ans;</div><div class="line">int n;</div><div class="line">int a[maxn],l[maxn],r[maxn];</div><div class="line">void <span class="function"><span class="title">solve</span></span>()&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++) l[i]=r[i]=i;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">		int temp=i;</div><div class="line">		<span class="keyword">while</span>(temp &amp;&amp; a[i]&gt;=a[temp-1]) temp=l[temp-1];</div><div class="line">		l[i]=temp;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=n-1;i&gt;=0;i--)&#123;</div><div class="line">		int temp=i;</div><div class="line">		<span class="keyword">while</span>(temp&lt;n-1 &amp;&amp; a[i]&gt;a[temp+1]) temp=r[temp+1];</div><div class="line">		r[i]=temp;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++) ans+=(LL)(r[i]-i+1)*(i<span class="_">-l</span>[i]+1)*a[i];</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++) cin&gt;&gt;a[i];</div><div class="line">	mm(l,0),mm(r,0); ans=0;</div><div class="line">	solve();</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++) a[i]*=-1;</div><div class="line">	solve();</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>首先更新出每个作为最大值向左和向右最多能走多远 记为l和r<br>接着把每个数字取反再带入solve函数求出的就是作为最小值左右能走多远<br>枚举每个区间长度相加就是答案 相当于最大值的和减去最小值的和</p>
<h2 id="round419-B"><a href="#round419-B" class="headerlink" title="round419_B"></a>round419_B</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>先给出区间的覆盖情况<br>每次询问区间内至少被覆盖k次的整数个数</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 200050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int a[maxn+50];</div><div class="line">int sum[maxn+50];</div><div class="line">int c[maxn];</div><div class="line">int lowbit(int x)&#123;</div><div class="line">	<span class="built_in">return</span> x&amp;(-x);</div><div class="line">&#125;</div><div class="line">void create(int n)&#123;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		int s=lowbit(i);</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;s;j++)</div><div class="line">			c[i]+=sum[i-j];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int Sum(int idx)&#123;</div><div class="line">	int sum=0;</div><div class="line">	<span class="keyword">while</span>(idx&gt;0)&#123;</div><div class="line">		int s=lowbit(idx);</div><div class="line">		sum+=c[idx];</div><div class="line">		idx-=s;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n,k,q;</div><div class="line">	cin&gt;&gt;n&gt;&gt;k&gt;&gt;q;</div><div class="line">	mm(a,0),mm(sum,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		int l,r;</div><div class="line">		cin&gt;&gt;l&gt;&gt;r;</div><div class="line">		a[l]++,a[r+1]--;</div><div class="line">	&#125;</div><div class="line">	sum[0]=a[0];</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;maxn;i++) sum[i]=sum[i-1]+a[i];</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;maxn;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(sum[i]&gt;=k) sum[i]=1;</div><div class="line">		<span class="keyword">else</span> sum[i]=0;</div><div class="line">	&#125;</div><div class="line">	create(maxn);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=q;i++)&#123;</div><div class="line">		int count=0;</div><div class="line">		int l,r;</div><div class="line">		cin&gt;&gt;l&gt;&gt;r;</div><div class="line">		cout&lt;&lt;Sum(r)-Sum(l-1)&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>预处理presum+树状数组<br>跟处理覆盖k次区间的总长度略有不同<br>并不能只预处理所有的端点 因为本题的询问会针对区间内的所有整数<br>所以正解为：对于每次区间a[l]++ a[r+1]–(加1解决端点重叠问题)<br>预处理sum前缀和后即可求出每个数字被覆盖的次数 hash思想<br>遍历一遍 对于大于等于k的数字置为1 其余置为0 接着带入树状数组求出区间和即可<br>就是本题要求的满足的覆盖点数</p>
<h2 id="round419-C"><a href="#round419-C" class="headerlink" title="round419_C"></a>round419_C</h2><h3 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h3><p>初始矩阵为0 给出目标矩阵 每次可以对每一列或每一行+1 问最少需要多少次操作可以变成目标矩阵<br>达不到输出-1 不需要操作输出0</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 150</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int g[maxn][maxn];</div><div class="line">int minr[maxn],minc[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	int n,m;</div><div class="line">	cin&gt;&gt;n&gt;&gt;m;</div><div class="line">	mm(minr,inf),mm(minc,inf);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=m;j++) cin&gt;&gt;g[i][j];</div><div class="line">	&#125;</div><div class="line">	int sum=0;</div><div class="line">	<span class="keyword">if</span>(n&lt;=m)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=m;j++) minr[i]=min(minr[i],g[i][j]);</div><div class="line">			sum+=minr[i];</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=m;j++) g[i][j]-=minr[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=m;j++)&#123;</div><div class="line">			<span class="keyword">for</span>(int i=1;i&lt;=n;i++) minc[j]=min(minc[j],g[i][j]);</div><div class="line">			sum+=minc[j];</div><div class="line">			<span class="keyword">for</span>(int i=1;i&lt;=n;i++) g[i][j]-=minc[j];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=m;j++)&#123;</div><div class="line">			<span class="keyword">for</span>(int i=1;i&lt;=n;i++) minc[j]=min(minc[j],g[i][j]);</div><div class="line">			sum+=minc[j];</div><div class="line">			<span class="keyword">for</span>(int i=1;i&lt;=n;i++) g[i][j]-=minc[j];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=m;j++) minr[i]=min(minr[i],g[i][j]);</div><div class="line">			sum+=minr[i];</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=m;j++) g[i][j]-=minr[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=m;j++) <span class="keyword">if</span>(g[i][j])&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">return</span> 0;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;sum&lt;&lt;endl;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) <span class="keyword">if</span>(minr[i])&#123;</div><div class="line">		<span class="keyword">for</span>(int k=1;k&lt;=minr[i];k++) cout&lt;&lt;<span class="string">"row "</span>&lt;&lt;i&lt;&lt;endl;</div><div class="line">	&#125; </div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++) <span class="keyword">if</span>(minc[i])&#123;</div><div class="line">		<span class="keyword">for</span>(int k=1;k&lt;=minc[i];k++) cout&lt;&lt;<span class="string">"col "</span>&lt;&lt;i&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>预处理出每行和每列的最小值 求出最小值的同时 对这一行或这一列的元素全部减去最小值<br>sum加上最小值 就是最后需要操作的次数<br>由于需要最小的操作次数 所以先处理行和列中的较小者 即可满足要求<br>如果预处理完的矩阵还有元素不为0 输出-1<br>否则for输出row和col即可</p>
<h2 id="815-C"><a href="#815-C" class="headerlink" title="815 C"></a>815 C</h2><h3 id="题目要求-6"><a href="#题目要求-6" class="headerlink" title="题目要求"></a>题目要求</h3><p>超市里有n种商品，第i件物品价格为ci，除了第一件物品以外，每个物品都有优惠劵，可以优惠di，但是第i件物品能使用优惠劵的前提是第xi (1 &lt;= xi &lt; i) 件物品已经用优惠券买过。每件物品只能买一次，问在不超过预算b的情况下，最多能买多少件不同的物品。</p>
<h3 id="参考AC代码-6"><a href="#参考AC代码-6" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 5050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL dp[maxn][maxn][2];</div><div class="line">LL n,b,c[maxn],d[maxn];</div><div class="line">LL sz[maxn];</div><div class="line">vector&lt;int&gt;e[maxn&lt;&lt;1];</div><div class="line">void dfs(int u)&#123;</div><div class="line">	sz[u]=1;</div><div class="line">	dp[u][0][0]=0;</div><div class="line">	dp[u][1][0]=c[u];</div><div class="line">	dp[u][1][1]=c[u]<span class="_">-d</span>[u];</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[u].size();i++)&#123;</div><div class="line">		int v=e[u][i];</div><div class="line">		dfs(v);</div><div class="line">		<span class="keyword">for</span>(int j=sz[u];j&gt;=0;j--)&#123;</div><div class="line">			<span class="keyword">for</span>(int k=0;k&lt;=sz[v];k++)&#123;</div><div class="line">				dp[u][j+k][0]=min(dp[u][j+k][0],dp[u][j][0]+dp[v][k][0]);</div><div class="line">				dp[u][j+k][1]=min(dp[u][j+k][1],dp[u][j][1]+dp[v][k][1]);</div><div class="line">				dp[u][j+k][1]=min(dp[u][j+k][1],dp[u][j][1]+dp[v][k][0]);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		sz[u]+=sz[v];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	cin&gt;&gt;n&gt;&gt;b;</div><div class="line">	mm(dp,inf);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">	cin&gt;&gt;c[1]&gt;&gt;d[1];</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">		int x;</div><div class="line">		cin&gt;&gt;c[i]&gt;&gt;d[i]&gt;&gt;x;</div><div class="line">		e[x].pb(i);</div><div class="line">	&#125;</div><div class="line">	dfs(1);</div><div class="line">	LL ans=0;</div><div class="line">	<span class="keyword">for</span>(int i=n;i&gt;=0;i--)&#123;</div><div class="line">		<span class="keyword">if</span>(dp[1][i][0]&lt;=b || dp[1][i][1]&lt;=b)&#123;</div><div class="line">			ans=i;</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><p>依赖型01背包问题<br>可以转换成树形dp<br>dp[now][x][1]表示，在now节点，买x个，并且now可以使用优惠券的最小花费<br>dp[now][x][0]表示，在now节点，买x个，并且now不可以使用优惠券的最小花费<br>背包逆序<br>最后逆序遍历n到1求出第一个满足小于b的的数量就是最大解</p>
<h2 id="817-E"><a href="#817-E" class="headerlink" title="817 E"></a>817 E</h2><h3 id="题目要求-7"><a href="#题目要求-7" class="headerlink" title="题目要求"></a>题目要求</h3><p>每次添加或者删除一个人 权值为p<br>每次询问一个人 权值为p和l 对于前面所有的人若p和该人的p xor后小于l count++ 输出最后的count值</p>
<h3 id="参考AC代码-7"><a href="#参考AC代码-7" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">int trie[maxn*40][2],cnt[maxn*40],sz;</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">	sz=1;</div><div class="line">	mm(trie,0),mm(cnt,0);</div><div class="line">&#125;</div><div class="line">void insert(int pos,int num,int bit)&#123;</div><div class="line">//	cout&lt;&lt;pos&lt;&lt;endl;</div><div class="line">	cnt[pos]++;</div><div class="line">	<span class="keyword">if</span>(bit&lt;0) <span class="built_in">return</span>;</div><div class="line">	<span class="keyword">if</span>((num&amp;(1&lt;&lt;bit))==0)&#123;</div><div class="line">		<span class="keyword">if</span>(trie[pos][0]==0)&#123;</div><div class="line">			trie[pos][0]=sz;</div><div class="line">			sz++;</div><div class="line">		&#125;</div><div class="line">		insert(trie[pos][0], num, bit-1);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">if</span>(trie[pos][1]==0)&#123;</div><div class="line">			trie[pos][1]=sz;</div><div class="line">			sz++;</div><div class="line">		&#125;</div><div class="line">		insert(trie[pos][1], num, bit-1);</div><div class="line">	&#125;;</div><div class="line">	</div><div class="line">&#125;</div><div class="line">void delet(int pos,int num,int bit)&#123;</div><div class="line">	cnt[pos]--;</div><div class="line">	<span class="keyword">if</span>(bit&lt;0) <span class="built_in">return</span>;</div><div class="line">	<span class="keyword">if</span>((num&amp;(1&lt;&lt;bit))==0) delet(trie[pos][0], num, bit-1);</div><div class="line">	<span class="keyword">else</span> delet(trie[pos][1], num, bit-1);</div><div class="line">&#125;</div><div class="line">int query(int pos,int p,int l,int bit)&#123;</div><div class="line">	<span class="keyword">if</span>(bit&lt;0) <span class="built_in">return</span> 0;</div><div class="line">	int lbit=(l&amp;(1&lt;&lt;bit));</div><div class="line">	int pbit=(p&amp;(1&lt;&lt;bit));</div><div class="line">	<span class="keyword">if</span>(lbit) lbit=1;</div><div class="line">	<span class="keyword">if</span>(pbit) pbit=1;</div><div class="line">	<span class="keyword">if</span>(lbit==0)&#123;</div><div class="line">		<span class="keyword">if</span>(trie[pos][pbit]==0) <span class="built_in">return</span> 0;</div><div class="line">		<span class="built_in">return</span> query(trie[pos][pbit], p, l, bit-1);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		int ans=0;</div><div class="line">		<span class="keyword">if</span>(trie[pos][pbit]!=0) ans+=cnt[trie[pos][pbit]];</div><div class="line">		<span class="keyword">if</span>(trie[pos][1-pbit]!=0) ans+=query(trie[pos][1-pbit], p, l, bit-1);</div><div class="line">		<span class="built_in">return</span> ans;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	init();</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">//		<span class="keyword">for</span>(int i=0;i&lt;=40;i++) cout&lt;&lt;cnt[i]; cout&lt;&lt;<span class="string">" "</span>; cout&lt;&lt;sz&lt;&lt;endl;</div><div class="line">		int op; cin&gt;&gt;op;</div><div class="line">		<span class="keyword">if</span>(op==1)&#123;</div><div class="line">			int x; cin&gt;&gt;x;</div><div class="line">			insert(0,x,30);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(op==2)&#123;</div><div class="line">			int x; cin&gt;&gt;x;</div><div class="line">			delet(0,x,30);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(op==3)&#123;</div><div class="line">			int x,y; cin&gt;&gt;x&gt;&gt;y;</div><div class="line">			cout&lt;&lt;query(0,x,y,30)&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h3><p>xor相关 可以想到二叉字典树 即01字典树</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[NEUQ-ACM程序设计竞赛(团队赛)]]></title>
      <url>http://xuboming8.github.io/2017/06/13/NEUQ-ACM%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AB%9E%E8%B5%9B-%E5%9B%A2%E9%98%9F%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="NEUQ-ACM程序设计竞赛-团队赛"><a href="#NEUQ-ACM程序设计竞赛-团队赛" class="headerlink" title="NEUQ-ACM程序设计竞赛(团队赛)"></a>NEUQ-ACM程序设计竞赛(团队赛)</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p><strong>题目描述</strong><br><a id="more"></a><br>NEUQ的谷神要和我赌一个游戏：谷神要求我随机在纸上写出整数集合{1,2,3，…,3n+1}（n是整数）的一个排列（即不重复的随机写出从1到3n+1的所有整数）。<br>并且要求在我写的过程中，从我写的第一个数开始一直加到我正在写的数的总和不被3整除。如果我能写出来符合要求的一个排列，那么我就赢得游戏。那么问题来了，<br>我赢得游戏的概率是多少？</p>
<p><strong>输入</strong><br>一组测试数据，第一行输入测试样例的数目k，接下来k行每行一个正整数n代表一个样例（1&lt;=n&lt;=15）。</p>
<p><strong>输出</strong><br>对于每个样例数据依次输出我赢得比赛的概率（结果保留小数点后9位有效数字）。</p>
<p><strong>样例输入</strong><br>1<br>1</p>
<p><strong>样例输出</strong><br>0.250000000</p>
<p><strong>提示</strong><br>例如n=1，则谷神要求我随机写1到4的排列，如果我按顺序写1 3 4 2则是合法的，因为1，1+3、1+3+4、1+3+4+2都不被3整除。如果我按顺序写1 2 3 4则是不<br>合法的，因为当我写到2的时候1+2=3可以被3整除，不符合游戏规定。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//  freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,stdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int t;</div><div class="line">    cin&gt;&gt;t;</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n;</div><div class="line">        cin&gt;&gt;n;</div><div class="line">        double ans;</div><div class="line">        ans=(n+1.0)/(3*n+1);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) ans*=(double)i/(n+i);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%.9lf\n"</span>,ans); </div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>n!<em>(n+1)!</em>(2n+1)<em>(2n+2)</em>……(3n)/(3n+1)!<br>公式可化简<br>注意不能求出分子分母做除法 第15个样例会溢出 卡好的<br>边求边计算</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>删除第三大的数字 输出</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int a[20];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int t;</div><div class="line">    cin&gt;&gt;t;</div><div class="line">    int flag=1;</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=11;i++) cin&gt;&gt;a[i];</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=3;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=2;j&lt;11;j++)&#123;</div><div class="line">                <span class="keyword">if</span>(a[j]&gt;=a[j+1]) swap(a[j],a[j+1]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        cout&lt;&lt;flag++&lt;&lt;<span class="string">" "</span>&lt;&lt;a[9]&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>三次冒泡即可<br>注意输入的第一个数字是组号</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>求出区间[a,b]内有多少个菲波拉契数<br>a和b均为超LL的大数</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">import java.util.Scanner;</div><div class="line">import java.math.BigInteger;</div><div class="line">public class Main&#123;</div><div class="line">public static void main(String [] arguments)&#123;</div><div class="line">    BigInteger [] f=new BigInteger[10001];</div><div class="line">    f[1]=BigInteger.ONE;</div><div class="line">    f[2]=BigInteger.valueOf(2);</div><div class="line">    <span class="keyword">for</span>(int i=3;i&lt;=10000;i++)</div><div class="line">        f[i]=f[i-1].add(f[i-2]);</div><div class="line">    Scanner cin = new Scanner(System.in);</div><div class="line">    BigInteger l,r;</div><div class="line">    l=cin.nextBigInteger();</div><div class="line">    r=cin.nextBigInteger();</div><div class="line">    <span class="keyword">while</span>(1&gt;0)&#123;</div><div class="line">        <span class="keyword">if</span>(l.equals(BigInteger.ZERO)&amp;&amp;r.equals(BigInteger.ZERO))</div><div class="line">            <span class="built_in">break</span>;</div><div class="line">        l=l.add(BigInteger.valueOf(-1));</div><div class="line">        int lid=0,rid=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=10000;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(f[i].compareTo(l)&gt;0)&#123;</div><div class="line">                lid=i;</div><div class="line">                <span class="built_in">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=10000;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(f[i].compareTo(r)&gt;0)&#123;</div><div class="line">                rid=i;</div><div class="line">                <span class="built_in">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        System.out.println(rid-lid);</div><div class="line">        l=cin.nextBigInteger();r=cin.nextBigInteger();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>使用java的大数类水过</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p><strong>题目描述</strong><br>谢尔宾斯基三角形是一种分形，它的构造过程是这样的：<br>1.取一个实心的三角形。（多数使用等边三角形）<br>2.沿三边中点的连线，将它分成四个小三角形。<br>3.去掉中间的那一个小三角形。<br>4.对其余三个小三角形重复1。<br>我们想尝试用斜线、反斜线和下划线画出谢尔宾斯基三角，假设最小的三角是长这样的：<br>  /\<br> /__\<br>具体规律详见样例。</p>
<p><strong>输入</strong><br>多组数据输入输出。每行有一个整数n（1&lt;=n&lt;=10），表示执行了一次操作1，n=0时结束输入。</p>
<p><strong>输出</strong><br>画出执行n次操作1后的图形，调整你的输出到最左端（底边的第一个斜杠在第一列）。输出不能包含任何尾随空格。在每个测试用例后打印空行。</p>
<p><strong>样例输入</strong><br>3<br>2<br>1<br>0</p>
<p><strong>样例输出</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/149733706331.jpg" alt=""></p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define N 2050</span></div><div class="line">using namespace std;</div><div class="line">int n;</div><div class="line">char s[N/2][N];</div><div class="line">void <span class="built_in">print</span>(int x,int y,int d)&#123;</div><div class="line">    int offset=1&lt;&lt;(d-1);</div><div class="line">    <span class="keyword">if</span>(d==1)&#123;</div><div class="line">        s[x][y]=s[x+1][y-1]=<span class="string">'/'</span>;</div><div class="line">        s[x][y+1]=s[x+1][y+2]=<span class="string">'\\'</span>;</div><div class="line">        s[x+1][y]=s[x+1][y+1]=<span class="string">'_'</span>;</div><div class="line">        <span class="built_in">return</span> ;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">print</span>(x,y,d-1);</div><div class="line">    <span class="built_in">print</span>(x+offset, y-offset, d-1);</div><div class="line">    <span class="built_in">print</span>(x+offset, y+offset, d-1);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//  freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n) &amp;&amp; n)&#123;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=(1&lt;&lt;n);i++)</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=(1&lt;&lt;(n+1));j++)</div><div class="line">                s[i][j]=<span class="string">' '</span>;</div><div class="line">        <span class="built_in">print</span>(1,(1&lt;&lt;n),n);</div><div class="line">        int k=(1&lt;&lt;n)+1;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=(1&lt;&lt;n);i++,k++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=k;j++) putchar(s[i][j]);</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>谢尔宾斯基三角形<br>递归输出</p>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定一个数组，其中的元素满足非递减顺序。任意给定一个区间[i,j]，求其中某个元素重复出现的最大次数。</p>
<h3 id="参考AC代码-线段树"><a href="#参考AC代码-线段树" class="headerlink" title="参考AC代码(线段树)"></a>参考AC代码(线段树)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt; </span></div><div class="line"><span class="comment">#define MAX_N 500000  </span></div><div class="line">using namespace std;</div><div class="line">struct node&#123;  </div><div class="line">    int l;  </div><div class="line">    int r;  </div><div class="line">    int max;  </div><div class="line">&#125;;  </div><div class="line">struct msg&#123;  </div><div class="line">    int value;  </div><div class="line">    int start;  </div><div class="line">    int end;  </div><div class="line">&#125;;  </div><div class="line">node tree[3*MAX_N];  </div><div class="line">int a[MAX_N+5];  </div><div class="line">int b[MAX_N+5];  </div><div class="line">int c[MAX_N+5];  </div><div class="line">msg inv[MAX_N+5];    </div><div class="line">void build_tree(int left,int right,int root)&#123;  </div><div class="line">    tree[root].l=left;  </div><div class="line">    tree[root].r=right;  </div><div class="line">    <span class="keyword">if</span>(left==right)&#123;  </div><div class="line">        tree[root].max=b[left];  </div><div class="line">        <span class="built_in">return</span>;  </div><div class="line">    &#125;  </div><div class="line">    int mid=(left+right)/2;  </div><div class="line">    build_tree(left,mid,root*2);  </div><div class="line">    build_tree(mid+1,right,root*2+1);  </div><div class="line">    tree[root].max=max(tree[root*2].max,tree[root*2+1].max);  </div><div class="line">&#125;</div><div class="line">int find_max(int left,int right,int root)&#123;  </div><div class="line">    <span class="keyword">if</span>(left==tree[root].l&amp;&amp;right==tree[root].r)  </div><div class="line">        <span class="built_in">return</span> tree[root].max;  </div><div class="line">    int mid=(tree[root].l+tree[root].r)/2;  </div><div class="line">    <span class="keyword">if</span>(right&lt;=mid)  </div><div class="line">        <span class="built_in">return</span> find_max(left,right,root*2);  </div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(left&gt;mid)  </div><div class="line">        <span class="built_in">return</span> find_max(left,right,root*2+1);  </div><div class="line">    <span class="keyword">else</span> </div><div class="line">        <span class="built_in">return</span> max(find_max(left,mid,root*2),find_max(mid+1,right,root*2+1));  </div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int n,m,i,len,inv_len,s,e;  </div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;  </div><div class="line">        <span class="keyword">if</span>(n==0)  </div><div class="line">            <span class="built_in">break</span>;  </div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;m);  </div><div class="line">        <span class="keyword">for</span>(i=1;i&lt;=n;i++)  </div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;a[i]);  </div><div class="line">        len=0,inv_len=0;  </div><div class="line">        b[++len]=1;  </div><div class="line">        c[1]=1;  </div><div class="line">        inv[++inv_len].value=a[1];  </div><div class="line">        inv[inv_len].start=1;  </div><div class="line">        <span class="keyword">for</span>(i=2;i&lt;=n;i++)&#123;  </div><div class="line">            <span class="keyword">if</span>(a[i]==a[i-1])&#123;  </div><div class="line">                b[len]++;  </div><div class="line">                c[i]=c[i-1];  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">else</span>&#123;  </div><div class="line">                b[++len]=1;  </div><div class="line">                inv[inv_len].end=i-1;  </div><div class="line">                inv[++inv_len].value=a[i];  </div><div class="line">                inv[inv_len].start=i;  </div><div class="line">                c[i]=c[i-1]+1;  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">        inv[inv_len].end=n;  </div><div class="line">        build_tree(1,len,1);  </div><div class="line">        <span class="keyword">for</span>(i=1;i&lt;=m;i++)&#123;  </div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;s,&amp;e);  </div><div class="line">            <span class="keyword">if</span>(s&gt;e)  </div><div class="line">                swap(s,e);  </div><div class="line">            int q1=c[s];  </div><div class="line">            int q2=c[e];  </div><div class="line">            int ans;  </div><div class="line">            <span class="keyword">if</span>(q2-q1==1)&#123;  </div><div class="line">                int max1=inv[q1].end<span class="_">-s</span>+1;  </div><div class="line">                int max2=e-inv[q2].start+1;  </div><div class="line">                ans=max(max1,max2);  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(q2-q1==0)&#123;  </div><div class="line">                ans=e<span class="_">-s</span>+1;  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">else</span>&#123;  </div><div class="line">                int max1=inv[q1].end<span class="_">-s</span>+1;  </div><div class="line">                int max2=e-inv[q2].start+1;  </div><div class="line">                int max3=find_max(c[inv[q1].end+1],c[inv[q2].start-1],1);  </div><div class="line">                ans=max(max(max1,max2),max3);  </div><div class="line">            &#125;  </div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码-ST"><a href="#参考AC代码-ST" class="headerlink" title="参考AC代码(ST)"></a>参考AC代码(ST)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;  </div><div class="line"><span class="comment">#define N 100005</span></div><div class="line"><span class="comment">#define lowbit(x) (x&amp;-x)    </span></div><div class="line">int n,q;  </div><div class="line">int a[N];  </div><div class="line">int val[N],cnt[N],num[N],lef[N],righ[N];  </div><div class="line">int d[N][50],len;   </div><div class="line">void <span class="function"><span class="title">RMQ_init</span></span>()&#123; </div><div class="line">    int i,j,k;  </div><div class="line">    <span class="keyword">for</span>(i = 1; i&lt;=len; i++)  </div><div class="line">        d[i][0] = cnt[i];  </div><div class="line">    <span class="keyword">for</span>(j = 1; (1&lt;&lt;j)&lt;=len+1; j++)  </div><div class="line">        <span class="keyword">for</span>(i = 1; i+(1&lt;&lt;j)-1&lt;=len; i++)  </div><div class="line">            d[i][j] = max(d[i][j-1],d[i+(1&lt;&lt;(j-1))][j-1]);  </div><div class="line">&#125;  </div><div class="line">int RMQ(int l,int r)&#123; </div><div class="line">    int k = 0;  </div><div class="line">    <span class="keyword">while</span>((1&lt;&lt;(k+1)) &lt;= r<span class="_">-l</span>+1) k++;  </div><div class="line">    <span class="built_in">return</span> max(d[l][k],d[r-(1&lt;&lt;k)+1][k]);  </div><div class="line">&#125;   </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123; </div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int i,j,k,l,r;  </div><div class="line">    <span class="keyword">while</span>(~scanf(<span class="string">"%d"</span>,&amp;n),n)&#123;</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;q);  </div><div class="line">        len = 1;  </div><div class="line">        memset(cnt,0,sizeof(cnt));  </div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;a[1]);  </div><div class="line">        val[len] = a[1];  </div><div class="line">        cnt[len] = 1;  </div><div class="line">        num[1] = len;  </div><div class="line">        lef[0] = 1;  </div><div class="line">        <span class="keyword">for</span>(i = 2; i&lt;=n; i++)&#123; </div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;a[i]);  </div><div class="line">            <span class="keyword">if</span>(a[i]==a[i-1])&#123;</div><div class="line">                cnt[len]++;  </div><div class="line">                num[i] = len;  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                righ[len] = i-1;  </div><div class="line">                len++;  </div><div class="line">                val[len] = a[i];  </div><div class="line">                cnt[len] = 1;  </div><div class="line">                num[i] = len;  </div><div class="line">                lef[len] = i;  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">        RMQ_init();  </div><div class="line">        <span class="keyword">while</span>(q--)&#123; </div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;l,&amp;r);  </div><div class="line">            <span class="keyword">if</span>(num[l]==num[r]) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,r<span class="_">-l</span>+1);  </div><div class="line">            <span class="keyword">else</span>&#123;  </div><div class="line">                int ans=0;  </div><div class="line">                <span class="keyword">if</span>(num[l]+1&lt;=num[r]-1)  </div><div class="line">                    ans=RMQ(num[l]+1,num[r]-1);  </div><div class="line">                ans = max(ans,max(righ[num[l]]<span class="_">-l</span>+1,r-lef[num[r]]+1));  </div><div class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>转换成RMQ问题 使用线段树或者st模版均可 st更快<br>因为这个数组是非降序的，所以可以把所有相等的元素组合起来用二元组表示，例如-1,1,1,2,2,2,4就可以表示为(-1,1)(1,2)(2,3)(4,1)，其中(a,b)代表有b个连续的a。<br>val[i]代表第i段的数值<br>cnt[i]代表第i段连续的长度<br>num[i]表示第i个位置的数在那一段<br>lef[i],righ[i]分别表示第i段的左右端点位置</p>
<p>所求的最大值就是<br>1.从L到L所在的段的结束处的元素个数：righ[L]-L+1<br>2.从R到R所在的段的开始处的元素个数：R-lef[R]+1<br>3.中间第num[L]+1段到第num[R]-1段的cnt的最大值(RMQ)<br>答案就是1,2,3中的最大值</p>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p><strong>题目描述</strong><br>存在如下递推式:<br>F(n+1)=A1<em>F(n)+A2</em>F(n-1)+…+An*F(1)<br>求第K项的值对1000000007取模的结果</p>
<p><strong>输入</strong><br>单组测试数据<br>第一行输入两个整数 n , k (1&lt;=n&lt;=100,n&lt;k&lt;=10000000000)<br>第二行输入 n 个整数 F(1)   F(2)   …   F(n)<br>第三行输入 n 个整数A1   A2   …   An </p>
<p><strong>输出</strong><br>输出一个整数</p>
<p><strong>样例输入</strong><br>2   3<br>1   2<br>3   4</p>
<p><strong>样例输出</strong><br>10</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">struct Matrix&#123;</div><div class="line">    LL a[100][100];  </div><div class="line">&#125;x,t;  </div><div class="line">struct Matrix multiply(int n,struct Matrix a,struct Matrix b)&#123;   </div><div class="line">    struct Matrix key;  </div><div class="line">    mm(key.a,0);</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123; </div><div class="line">        <span class="keyword">for</span>(int i1=0;i1&lt;n;i1++)&#123;</div><div class="line">            <span class="keyword">if</span>(a.a[i1][i]==0) <span class="built_in">continue</span>;    //剪枝</div><div class="line">            <span class="keyword">for</span>(int i2=0;i2&lt;n;i2++)&#123;  </div><div class="line">                key.a[i1][i2]=(key.a[i1][i2]+(a.a[i1][i]*b.a[i][i2])%mod)%mod;  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> key;  </div><div class="line">&#125;  </div><div class="line">LL f(int n,LL k)&#123;</div><div class="line">    <span class="keyword">while</span>(k)&#123; </div><div class="line">        <span class="keyword">if</span>(k&amp;1) x=multiply(n,t,x);  </div><div class="line">        t=multiply(n,t,t);  </div><div class="line">        k&gt;&gt;=1;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> x.a[0][0];  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//  freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    LL n,k;</div><div class="line">    cin&gt;&gt;n&gt;&gt;k;</div><div class="line">    mm(x.a,0),mm(t.a,0);</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;n;i++) cin&gt;&gt;x.a[n-i-1][0];</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">        cin&gt;&gt;t.a[0][i];</div><div class="line">        <span class="keyword">if</span>(i!=0) t.a[i][i-1]=1;</div><div class="line">    &#125;</div><div class="line">    cout&lt;&lt;f(n,k-n)&lt;&lt;endl;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>矩阵快速幂<br>加个剪枝防tle<br>下图是n=3时构造的矩阵<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/149733552138.jpg" alt=""><br>构造n维矩阵 快速幂k-n次即可</p>
<h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    int n,a[10]=&#123;0,8,6,4,4,5,6,5,6,3&#125;;</div><div class="line">    <span class="keyword">while</span> (cin &gt;&gt; n)&#123;</div><div class="line">        cout &lt;&lt; a[n] &lt;&lt; endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>找规律。<br>51#1最优解1+（111-11）／（1+1）<br>51#2最优解2+2/2+2<em>（2</em>2）！<br>51#3最优解3!<em>3+33<br>51#4最优解4!</em>(√4+√√√(√4^(-4!)))<br>51#5最优解5/5+55-5<br>51#6最优解(6!-6<em>6)/(6+6)-6<br>51#7最优解7</em>7+(7+7)/7<br>51#8最优解√√(8+8)+√(√(8-8/8)^8)<br>51#9最优解(√9)!*9-√9<br>51的9个最优解是864456563</p>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>签到题</p>
<h3 id="参考AC代码-6"><a href="#参考AC代码-6" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    string s;</div><div class="line">    cin&gt;&gt;s;</div><div class="line">    <span class="keyword">if</span>(s[0]==<span class="string">'I'</span>&amp;&amp;s[1]==<span class="string">'s'</span>) cout&lt;&lt;<span class="string">"Yes, welcome to NEUQ."</span>&lt;&lt;endl;</div><div class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="string">"What can I do for you?"</span>&lt;&lt;endl;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p><strong>题目描述</strong><br>变位词是指改变某个词的字母顺序后构成的新词。蔡老板最近沉迷研究变位词并给你扔了一道题：<br>给你一些单词，让你把里面的变位词分组找出来。互为变位词的归为一组，最后输出含有变位词最多的前五组。如果有组数相同的按照字典序输出。</p>
<p><strong>输入</strong><br> 输入包含由小写字母组成的单词，用换行分割，被EOF终止。 输入数据不超过30000个单词。</p>
<p><strong>输出</strong><br> 输出五组包含单词数量最多的变位词，如果少于五组，输出全部。对每组输出，写出它的大小和成员词，成员词按字典序排序用空格分隔，每组输出之间用换行分隔，<br> 相同词只输出一次，但算个数。</p>
<p><strong>样例输入</strong><br>neuq<br>tea<br>bate<br>beat<br>caret<br>trace<br>nueq<br>carte<br>cater<br>crate<br>abet<br>ate<br>eat<br>beta<br>eta<br>signal</p>
<p><strong>样例输出</strong><br>Group of size 5: caret carte cater crate trace .<br>Group of size 4: abet bate beat beta .<br>Group of size 4: ate eat eta tea .<br>Group of size 2: neuq nueq .<br>Group of size 1: signal .</p>
<h3 id="参考AC代码-7"><a href="#参考AC代码-7" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define LL unsigned long long</span></div><div class="line"><span class="comment">#define pii pair&lt;LL,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define maxn 30050</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;pii&gt;vec,grop;</div><div class="line">vector&lt;int&gt;g[maxn];</div><div class="line">int num[30];</div><div class="line">string s[maxn];</div><div class="line">string st[maxn];</div><div class="line">LL Hash(string s)&#123;</div><div class="line">    LL ans=0;</div><div class="line">    mm(num,0);</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;(int)s.length();i++) num[s[i]-<span class="string">'a'</span>]++;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;26;i++) ans=ans*30+num[i];</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">bool cmp1(pii a,pii b)&#123;</div><div class="line">    <span class="keyword">if</span>(a.se==b.se) <span class="built_in">return</span> st[a.fi]&lt;st[b.fi];</div><div class="line">    <span class="built_in">return</span> a.se&gt;b.se;</div><div class="line">&#125;</div><div class="line">bool cmp2(const int&amp; a,const int&amp; b)&#123;</div><div class="line">    <span class="built_in">return</span> s[a]&lt;s[b];</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//  freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,stdout);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int n=1;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;s[n])&#123;</div><div class="line">        LL temp=Hash(s[n]);</div><div class="line">        vec.pb(make_pair(temp,n++));</div><div class="line">    &#125;</div><div class="line">    sort(vec.begin(),vec.end());</div><div class="line">//  <span class="keyword">for</span>(int i=0;i&lt;vec.size();i++) cout&lt;&lt;vec[i].fi&lt;&lt;<span class="string">" "</span>&lt;&lt;vec[i].se&lt;&lt;endl;</div><div class="line">    int m=0,cnt=0;</div><div class="line">    LL pre;</div><div class="line">    g[m].pb(vec[0].se),pre=vec[0].fi,st[m]=s[vec[0].se];</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;(int)vec.size();i++)&#123;</div><div class="line">        <span class="keyword">if</span>(vec[i].fi==pre)&#123;</div><div class="line">            g[m].pb(vec[i].se);</div><div class="line">            cnt++;</div><div class="line">            <span class="keyword">if</span>(s[vec[i].se]&lt;st[m]) st[m]=s[vec[i].se];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            grop.pb(make_pair(m,++cnt));</div><div class="line">            cnt=0;</div><div class="line">            g[++m].pb(vec[i].se);</div><div class="line">            pre=vec[i].fi;</div><div class="line">            st[m]=s[vec[i].se];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(cnt) grop.pb(make_pair(m,++cnt));</div><div class="line">    sort(grop.begin(),grop.end(),cmp1);</div><div class="line">//  <span class="keyword">for</span>(int i=0;i&lt;grop.size();i++) cout&lt;&lt;grop[i].fi&lt;&lt;<span class="string">" "</span>&lt;&lt;grop[i].se&lt;&lt;endl;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;min(5,(int)grop.size());i++)&#123;</div><div class="line">        int index=grop[i].fi;</div><div class="line">        sort(g[index].begin(),g[index].end(),cmp2);</div><div class="line">//      <span class="keyword">for</span>(int j=0;j&lt;g[index].size();j++) cout&lt;&lt;g[index][j]&lt;&lt;<span class="string">" "</span>; cout&lt;&lt;endl;</div><div class="line">        cout&lt;&lt;<span class="string">"Group of size "</span>&lt;&lt;g[index].size()&lt;&lt;<span class="string">": "</span>;</div><div class="line">        <span class="keyword">for</span>(int j=0;j&lt;(int)g[index].size();j++)&#123;</div><div class="line">            <span class="keyword">if</span>(j==0 || s[g[index][j]]!=s[g[index][j-1]]) cout&lt;&lt;s[g[index][j]]&lt;&lt;<span class="string">" "</span>;</div><div class="line">        &#125; </div><div class="line">        cout&lt;&lt;<span class="string">".\n"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><p>stl硬怼 pair+vector+string<br>复位词用hash筛选 vec记录下每个单词的hash值以及序号<br>vec排序后即可把复位词集中在一起 接着考虑按照组内个数分类<br>既然已经是有序 for遍历一遍即可<br>grop记录下每组序号和对应的起始位置 降序排序后模拟hash<br>排序后从头置尾就是最后要输出的组的序列 每组要输出的位置就是grop里的second存储值<br>g[maxn]则记录每组里的string编号 按照字典序排列后输出即可<br>注意:<br>1.for循环后要额外判断是否还有cnt剩余 有的话放去grop里 因为最后一组无法通过比较存入<br>2.输出的时候注意去重<br>3.组内元素相同的时候按照每组内字典序最小的单词再按照字典序判断前后顺序<br>  st数组存储的就是每组内字典序最小的位置 for循环里更新维护 在cmp函数里需要比较st数组<br>4.复位词的hash函数爆LL 用unsigned LL可以确保hash值正确</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最小瓶颈路&变形]]></title>
      <url>http://xuboming8.github.io/2017/06/11/%E6%9C%80%E5%B0%8F%E7%93%B6%E9%A2%88%E8%B7%AF-%E5%8F%98%E5%BD%A2/</url>
      <content type="html"><![CDATA[<h1 id="最小瓶颈路-amp-变形"><a href="#最小瓶颈路-amp-变形" class="headerlink" title="最小瓶颈路&amp;变形"></a>最小瓶颈路&amp;变形</h1><h2 id="基本概念-amp-解法"><a href="#基本概念-amp-解法" class="headerlink" title="基本概念&amp;解法"></a>基本概念&amp;解法</h2><p><strong>瓶颈路</strong>：最小生成树的最大边<br><strong>最小瓶颈路</strong>：A到B的所有路径中最大边的最小值<br><strong>最小瓶颈路变形</strong>：A到B的所有路径中最小边的最大值<br><a id="more"></a><br><strong>最小瓶颈路解法</strong>：<br>构造最小生成树确保最小值<br><strong>对于单次询问</strong> 第一次用krusk把A点和B点的两个集合合并的路径就是所求<br>(因为kruskal的贪心策略确保第一个就是所求)<br><strong>对于多次询问</strong> 用二维数组+LCA维护<br><strong>最小瓶颈路变形</strong>：<br>构造最大生成树确保最大值<br>对于单次询问和多次询问如上</p>
<h2 id="qwb与学姐"><a href="#qwb与学姐" class="headerlink" title="qwb与学姐"></a>qwb与学姐</h2><p><strong>Description</strong><br>qwb打算向学姐表白，可是学姐已经受够了他的骚扰，于是出了一个题想难住他:<br>已知一幅n个点m条边的无向图,定义路径的值为这条路径上最短的边的长度，<br>现在有 k个询问，<br>询问从A点到B点的所有路径的值的最大值。<br>qwb听完这个问题很绝望啊,聪明的你能帮帮他吗?</p>
<p><strong>Input</strong><br>一组数据。<br>第一行三个整数n，m，k (1&lt;=N&lt;=50000,m&lt;=200000,k&lt;=100000)。<br>第2..m+1行：三个正整数：X, Y, and D (1 &lt;= X &lt;=N; 1 &lt;= Y &lt;= N,1&lt;=D&lt;=215) 表示X与Y之间有一条长度为D的边。<br>第m+2..m+k+1行： 每行两个整数A B(1&lt;=A,B&lt;=n且A≠B)，意义如题目描述。<br>保证图连通。</p>
<p><strong>Output</strong><br>对于每个询问输出一行，一共k行，每行输出A点到B点的所有路径的值的最大值。</p>
<p><strong>Sample Input</strong><br>4 5 3<br>1 2 6<br>1 3 8<br>2 3 4<br>2 4 5<br>3 4 7<br>2 3<br>1 4<br>3 4</p>
<p><strong>Sample Output</strong><br>6<br>7<br>7</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define maxn 50050</span></div><div class="line">using namespace std;</div><div class="line">int n,m,k;</div><div class="line">int dep[maxn],fa[20][maxn],mi[20][maxn];</div><div class="line">int p[maxn];</div><div class="line">struct node1&#123;</div><div class="line">    int u,v,w;</div><div class="line">    bool operator &lt; (const node1&amp; p) const&#123;</div><div class="line">        <span class="built_in">return</span> w&gt;p.w;</div><div class="line">    &#125;</div><div class="line">&#125;e1[maxn&lt;&lt;2];</div><div class="line">struct node2&#123;</div><div class="line">    int to,w;</div><div class="line">    node2(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node2&gt;e2[maxn];</div><div class="line">int find(int x)&#123;</div><div class="line">    <span class="built_in">return</span> x==p[x]?x:p[x]=find(p[x]);</div><div class="line">&#125;</div><div class="line">void dfs(int x,int y)&#123;</div><div class="line">    dep[x]=dep[y]+1;</div><div class="line">    fa[0][x]=y;</div><div class="line">    <span class="keyword">for</span>(int i=1;fa[i-1][fa[i-1][x]];i++)&#123;</div><div class="line">        fa[i][x]=fa[i-1][fa[i-1][x]];</div><div class="line">        mi[i][x]=min(mi[i-1][x],mi[i-1][fa[i-1][x]]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e2[x].size();i++)&#123;</div><div class="line">        int z=e2[x][i].to,w=e2[x][i].w;</div><div class="line">        <span class="keyword">if</span>(z==y)<span class="built_in">continue</span>;</div><div class="line">        mi[0][z]=w;</div><div class="line">        dfs(z,x);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int lca_mindist(int x,int y)&#123;</div><div class="line">    int ret=1e9;</div><div class="line">    <span class="keyword">if</span>(dep[x]&lt;dep[y])swap(x,y);</div><div class="line">    <span class="keyword">for</span>(int i=19;i&gt;=0;i--)<span class="keyword">if</span>(dep[fa[i][x]]&gt;=dep[y])ret=min(ret,mi[i][x]),x=fa[i][x];</div><div class="line">    <span class="keyword">if</span>(x==y)<span class="built_in">return</span> ret;</div><div class="line">    <span class="keyword">for</span>(int i=19;i&gt;=0;i--)&#123;</div><div class="line">        <span class="keyword">if</span>(fa[i][x]!=fa[i][y])&#123;</div><div class="line">            ret=min(ret,mi[i][x]);</div><div class="line">            ret=min(ret,mi[i][y]);</div><div class="line">            x=fa[i][x];</div><div class="line">            y=fa[i][y];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    ret=min(ret,mi[0][x]);</div><div class="line">    ret=min(ret,mi[0][y]);</div><div class="line">    <span class="built_in">return</span> ret;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">kruskal</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) p[i]=i;</div><div class="line">    sort(e1+1,e1+1+m);</div><div class="line">    int cnt=0;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">        int x=find(e1[i].u),y=find(e1[i].v);</div><div class="line">        <span class="keyword">if</span>(x!=y)&#123;</div><div class="line">            p[x]=y;</div><div class="line">            e2[e1[i].u].pb(node2(e1[i].v,e1[i].w));</div><div class="line">            e2[e1[i].v].pb(node2(e1[i].u,e1[i].w));</div><div class="line">            <span class="keyword">if</span>(++cnt==n-1) <span class="built_in">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    scanf(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;k);</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=m;i++) scanf(<span class="string">"%d%d%d"</span>,&amp;e1[i].u,&amp;e1[i].v,&amp;e1[i].w);</div><div class="line">    kruskal();</div><div class="line">    dfs(1,0);</div><div class="line">    <span class="keyword">while</span>(k--)&#123;</div><div class="line">        int x,y;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,lca_mindist(x,y));</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>最小瓶颈路变形+多次询问</p>
<h2 id="UVA-534"><a href="#UVA-534" class="headerlink" title="UVA 534"></a>UVA 534</h2><h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1000</span></div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">	int x,y;</div><div class="line">&#125;e[maxn];</div><div class="line">struct node1&#123;</div><div class="line">	int u,v;</div><div class="line">	double d;</div><div class="line">	node1(int u,int v,double d):u(u),v(v),d(d)&#123;&#125;</div><div class="line">	bool operator &lt; (const node1&amp; p) const&#123;</div><div class="line">		<span class="built_in">return</span> d&lt;p.d;</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line">double dis(node a,node b)&#123;</div><div class="line">	<span class="built_in">return</span> sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));</div><div class="line">&#125;</div><div class="line">int p[maxn];</div><div class="line">int n;</div><div class="line">vector&lt;node1&gt;e1;</div><div class="line">int find(int x)&#123;</div><div class="line">	<span class="built_in">return</span> p[x]==x?x:p[x]=find(p[x]);</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">kruskal</span></span>()&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++) p[i]=i;</div><div class="line">	sort(e1.begin(),e1.end());</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e1.size();i++)&#123;</div><div class="line">		int x=find(e1[i].u),y=find(e1[i].v);</div><div class="line">		<span class="keyword">if</span>(x!=y)&#123;</div><div class="line">			p[x]=y;</div><div class="line">			<span class="keyword">if</span>(find(0)==find(1))&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"Frog Distance = %.3lf\n\n"</span>, e1[i].d);</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int flag=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)&#123;</div><div class="line">		<span class="keyword">if</span>(n==0) <span class="built_in">break</span>;</div><div class="line">		e1.clear();</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"Scenario #%d\n"</span>, flag++);</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) cin&gt;&gt;e[i].x&gt;&gt;e[i].y;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;i;j++) e1.push_back(node1(i,j,dis(e[i],e[j])));</div><div class="line">		&#125;</div><div class="line">		kruskal();</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>最小瓶颈路+单次询问</p>
<h2 id="UVA-11354"><a href="#UVA-11354" class="headerlink" title="UVA 11354"></a>UVA 11354</h2><h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define maxn 50050</span></div><div class="line">using namespace std;</div><div class="line">int n,m,k;</div><div class="line">int dep[maxn],fa[20][maxn],mi[20][maxn];</div><div class="line">int p[maxn];</div><div class="line">struct node1&#123;</div><div class="line">	int u,v,w;</div><div class="line">	bool operator &lt; (const node1&amp; p) const&#123;</div><div class="line">		<span class="built_in">return</span> w&lt;p.w;</div><div class="line">	&#125;</div><div class="line">&#125;e1[maxn&lt;&lt;2];</div><div class="line">struct node2&#123;</div><div class="line">	int to,w;</div><div class="line">	node2(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node2&gt;e2[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++) e2[i].clear();</div><div class="line">	memset(e1,0,sizeof(e1));</div><div class="line">	memset(dep,0,sizeof(dep));</div><div class="line">	memset(fa,0,sizeof(fa));</div><div class="line">	memset(mi,0,sizeof(mi));</div><div class="line">&#125;</div><div class="line">int find(int x)&#123;</div><div class="line">	<span class="built_in">return</span> x==p[x]?x:p[x]=find(p[x]);</div><div class="line">&#125;</div><div class="line">void dfs(int x,int y)&#123;</div><div class="line">    dep[x]=dep[y]+1;</div><div class="line">    fa[0][x]=y;</div><div class="line">    <span class="keyword">for</span>(int i=1;fa[i-1][fa[i-1][x]];i++)&#123;</div><div class="line">        fa[i][x]=fa[i-1][fa[i-1][x]];</div><div class="line">        mi[i][x]=max(mi[i-1][x],mi[i-1][fa[i-1][x]]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e2[x].size();i++)&#123;</div><div class="line">        int z=e2[x][i].to,w=e2[x][i].w;</div><div class="line">        <span class="keyword">if</span>(z==y)<span class="built_in">continue</span>;</div><div class="line">        mi[0][z]=w;</div><div class="line">        dfs(z,x);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int lca_maxdist(int x,int y)&#123;</div><div class="line">    int ret=-inf;</div><div class="line">    <span class="keyword">if</span>(dep[x]&lt;dep[y])swap(x,y);</div><div class="line">    <span class="keyword">for</span>(int i=19;i&gt;=0;i--)<span class="keyword">if</span>(dep[fa[i][x]]&gt;=dep[y])ret=max(ret,mi[i][x]),x=fa[i][x];</div><div class="line">    <span class="keyword">if</span>(x==y)<span class="built_in">return</span> ret;</div><div class="line">    <span class="keyword">for</span>(int i=19;i&gt;=0;i--)&#123;</div><div class="line">        <span class="keyword">if</span>(fa[i][x]!=fa[i][y])&#123;</div><div class="line">            ret=max(ret,mi[i][x]);</div><div class="line">            ret=max(ret,mi[i][y]);</div><div class="line">            x=fa[i][x];</div><div class="line">            y=fa[i][y];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    ret=max(ret,mi[0][x]);</div><div class="line">    ret=max(ret,mi[0][y]);</div><div class="line">    <span class="built_in">return</span> ret;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">kruskal</span></span>()&#123;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) p[i]=i;</div><div class="line">	sort(e1+1,e1+1+m);</div><div class="line">	int cnt=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">		int x=find(e1[i].u),y=find(e1[i].v);</div><div class="line">		<span class="keyword">if</span>(x!=y)&#123;</div><div class="line">			p[x]=y;</div><div class="line">			e2[e1[i].u].pb(node2(e1[i].v,e1[i].w));</div><div class="line">			e2[e1[i].v].pb(node2(e1[i].u,e1[i].w));</div><div class="line">			<span class="keyword">if</span>(++cnt==n-1) <span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125; </div><div class="line">int flag=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)&#123;</div><div class="line">		flag==1?flag++:<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++) scanf(<span class="string">"%d%d%d"</span>,&amp;e1[i].u,&amp;e1[i].v,&amp;e1[i].w);</div><div class="line">		kruskal();</div><div class="line">		dfs(1,0);</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;k);</div><div class="line">		<span class="keyword">while</span>(k--)&#123;</div><div class="line">			int x,y;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,lca_maxdist(x,y));</div><div class="line">		&#125;	</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>最小瓶颈路+多次询问</p>
<h2 id="uva-12655"><a href="#uva-12655" class="headerlink" title="uva 12655"></a>uva 12655</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>最小瓶颈路变形+多次询问</p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define maxn 20050</span></div><div class="line"><span class="comment">#define maxm 100050</span></div><div class="line">using namespace std;</div><div class="line">int n,m,k;</div><div class="line">int dep[maxn],fa[20][maxn],mi[20][maxn];</div><div class="line">int p[maxm];</div><div class="line">struct node1&#123;</div><div class="line">    int u,v,w;</div><div class="line">    bool operator &lt; (const node1&amp; p) const&#123;</div><div class="line">        <span class="built_in">return</span> w&gt;p.w;</div><div class="line">    &#125;</div><div class="line">&#125;e1[maxm];</div><div class="line">struct node2&#123;</div><div class="line">    int to,w;</div><div class="line">    node2(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node2&gt;e2[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++) e2[i].clear();</div><div class="line">	mm(e1,0),mm(dep,0),mm(fa,0),mm(mi,inf);</div><div class="line">&#125;</div><div class="line">int find(int x)&#123;</div><div class="line">    <span class="built_in">return</span> x==p[x]?x:p[x]=find(p[x]);</div><div class="line">&#125;</div><div class="line">void dfs(int x,int y)&#123;</div><div class="line">    dep[x]=dep[y]+1;</div><div class="line">    fa[0][x]=y;</div><div class="line">    <span class="keyword">for</span>(int i=1;fa[i-1][fa[i-1][x]];i++)&#123;</div><div class="line">        fa[i][x]=fa[i-1][fa[i-1][x]];</div><div class="line">        mi[i][x]=min(mi[i-1][x],mi[i-1][fa[i-1][x]]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e2[x].size();i++)&#123;</div><div class="line">        int z=e2[x][i].to,w=e2[x][i].w;</div><div class="line">        <span class="keyword">if</span>(z==y)<span class="built_in">continue</span>;</div><div class="line">        mi[0][z]=w;</div><div class="line">        dfs(z,x);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int lca_mindist(int x,int y)&#123;</div><div class="line">    int ret=1e9;</div><div class="line">    <span class="keyword">if</span>(dep[x]&lt;dep[y])swap(x,y);</div><div class="line">    <span class="keyword">for</span>(int i=19;i&gt;=0;i--)<span class="keyword">if</span>(dep[fa[i][x]]&gt;=dep[y])ret=min(ret,mi[i][x]),x=fa[i][x];</div><div class="line">    <span class="keyword">if</span>(x==y)<span class="built_in">return</span> ret;</div><div class="line">    <span class="keyword">for</span>(int i=19;i&gt;=0;i--)&#123;</div><div class="line">        <span class="keyword">if</span>(fa[i][x]!=fa[i][y])&#123;</div><div class="line">            ret=min(ret,mi[i][x]);</div><div class="line">            ret=min(ret,mi[i][y]);</div><div class="line">            x=fa[i][x];</div><div class="line">            y=fa[i][y];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    ret=min(ret,mi[0][x]);</div><div class="line">    ret=min(ret,mi[0][y]);</div><div class="line">    <span class="built_in">return</span> ret;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">kruskal</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) p[i]=i;</div><div class="line">    sort(e1+1,e1+1+m);</div><div class="line">    int cnt=0;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">        int x=find(e1[i].u),y=find(e1[i].v);</div><div class="line">        <span class="keyword">if</span>(x!=y)&#123;</div><div class="line">            p[x]=y;</div><div class="line">            e2[e1[i].u].pb(node2(e1[i].v,e1[i].w));</div><div class="line">            e2[e1[i].v].pb(node2(e1[i].u,e1[i].w));</div><div class="line">            <span class="keyword">if</span>(++cnt==n-1) <span class="built_in">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;k)!=EOF)&#123;</div><div class="line">    	init();</div><div class="line">    	<span class="keyword">for</span>(int i=1;i&lt;=m;i++) scanf(<span class="string">"%d%d%d"</span>,&amp;e1[i].u,&amp;e1[i].v,&amp;e1[i].w);</div><div class="line">	    kruskal();</div><div class="line">	    dfs(1,0);</div><div class="line">	    <span class="keyword">while</span>(k--)&#123;</div><div class="line">	        int x,y;</div><div class="line">	        scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">	        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,lca_mindist(x,y));</div><div class="line">	    &#125;	</div><div class="line">	&#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>跟本博客第一题相比 注意开边的大小 此题m为1e5</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[浙工业之江学院比赛]]></title>
      <url>http://xuboming8.github.io/2017/06/11/%E6%B5%99%E5%B7%A5%E4%B8%9A%E4%B9%8B%E6%B1%9F%E5%AD%A6%E9%99%A2%E6%AF%94%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="浙工业之江学院比赛"><a href="#浙工业之江学院比赛" class="headerlink" title="浙工业之江学院比赛"></a>浙工业之江学院比赛</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p><strong>Description</strong><br><a id="more"></a><br>qwb同时也是是之江学院的志愿者，暑期要前往周边地区支教，为了提高小学生的数学水平。她把小学生排成一排，从左至右从1开始依次往上报数。<br>玩完一轮后，他发现这个游戏太简单了。于是他选了3个不同的数x,y,z；从1依次往上开始报数，遇到x的倍数、y的倍数或z的倍数就跳过。如果x=2,y=3,z=5；<br>第一名小学生报1，第2名得跳过2、3、4、5、6，报7；第3名得跳过8、9、10，报11。<br>那么问题来了，请你来计算，第N名学生报的数字是多少？</p>
<p><strong>Input</strong><br>多组测试数据，处理到文件结束。（测试数据数量&lt;=8000）<br>每个测试例一行，每行有四个整数x,y,z,N。（ 2≤x,y,z≤107,1≤N≤1017）。</p>
<p><strong>Output</strong><br>对于每个测试例，输出第N名学生所报的数字，每个报数占一行。</p>
<p><strong>Sample Input</strong><br>2 3 5 2<br>6 2 4 10000</p>
<p><strong>Sample Output</strong><br>7<br>19999</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">LL x,y,z,n;</div><div class="line">LL gcd(LL a,LL b)&#123;</div><div class="line">    <span class="keyword">if</span>(b==0) <span class="built_in">return</span> a;</div><div class="line">    <span class="built_in">return</span> gcd(b,a%b);</div><div class="line">&#125;</div><div class="line">LL lcm(LL a,LL b)&#123;</div><div class="line">    <span class="built_in">return</span> a/gcd(a,b)*b;</div><div class="line">&#125;</div><div class="line">bool check(LL w)&#123;</div><div class="line">    LL cnt=w/x+w/y+w/z-w/lcm(x,y)-w/lcm(x,z)-w/lcm(y,z)+w/lcm(lcm(x,y),z);</div><div class="line">    <span class="keyword">if</span>((w-cnt)&gt;=n) <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">    <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//  ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">//  cin.tie(0),cout.tie(0);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%lld%lld%lld%lld"</span>,&amp;x,&amp;y,&amp;z,&amp;n)!=EOF)&#123;</div><div class="line">        LL l=1,r=1e18,mid,ans;</div><div class="line">        <span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">            mid=(l+r)&gt;&gt;1;</div><div class="line">            <span class="keyword">if</span>(check(mid))&#123;</div><div class="line">                r=mid-1;</div><div class="line">                ans=mid;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> l=mid+1;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>二分+容斥<br>容斥的结果为xyz任意的倍数 w-cnt结果为不是xyz的倍数<br>同样求第i个丑数也可以用此方法</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p><strong>Description</strong><br>做完了辣么多的数学题，qwb好好睡了一觉。但是他做了一个梦：<br>有一个n<em>m的矩阵，qwb在这个矩阵的左上角(1,1)，终点在右下角(n,m)。<br>每个格子中有小钱钱，也可能没有，还有可能是要交过路费的，并且行走方向必须是靠近终点的方向。<br>往下走一次只能走一格，往右走一次可以走一格也可以走到当前列数的倍数格。<br>比如当前格子是（x,y），那么可以移动到(x+1,y),(x,y+1)或者(x,y</em>k),其中k&gt;1。<br>qwb希望找到一种走法，使得到达右下角时他能够有最多的小钱钱。<br>你能帮助他吗？</p>
<p><strong>Input</strong><br>第一行是测试例数量 T （T&lt;=100），接下来是T组测试数据。<br>每组测试数据的第一行是两个整数n,m，分别表示行数和列数(1&lt;=n&lt;=20,1&lt;=m&lt;=10000)；<br>接下去给你一个n*m的矩阵，每个格子里有一个数字 k （-100&lt;=k&lt;=100）代表小钱钱的数量。 ∑nm&lt;=3,000,000 </p>
<p><strong>Output</strong><br>每组数据一行，输出L先生能够获得小钱钱的最大值(可能为负数)。</p>
<p><strong>Sample Input</strong><br>1<br>3 8<br>9 10 10 10 10 -10 10 10<br>10 -11 -1 0 2 11 10 -20<br>-11 -11 10 11 2 10 -10 -10</p>
<p><strong>Sample Output</strong><br>52</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050 </span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line">using namespace std;</div><div class="line">int dp[25][maxn];</div><div class="line">int a[25][maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    int t;</div><div class="line">    cin&gt;&gt;t;</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n,m;</div><div class="line">        cin&gt;&gt;n&gt;&gt;m;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=m;j++) cin&gt;&gt;a[i][j];</div><div class="line">        &#125;</div><div class="line">        memset(dp,-inf,sizeof(dp));</div><div class="line">        dp[1][1]=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=m;j++)&#123;</div><div class="line">                dp[i][j]+=a[i][j];</div><div class="line">                <span class="keyword">if</span>(i&lt;n) dp[i+1][j]=max(dp[i+1][j],dp[i][j]);</div><div class="line">                <span class="keyword">if</span>(j&lt;m) dp[i][j+1]=max(dp[i][j+1],dp[i][j]);</div><div class="line">                <span class="keyword">for</span>(int k=j*2;k&lt;=m;k+=j) dp[i][k]=max(dp[i][k],dp[i][j]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        cout&lt;&lt;dp[n][m]&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>dp<br>只能往下或往右 典型的dp<br>注意筛选质数的复杂度即可</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p><strong>Description</strong><br>zjc的ACgirls队的队员最近比较忙，为了能够取得更好的比赛成绩，他们制定了一个m天a掉n题的计划，a掉一题可以是这m天的任何时候。<br>为了表示对acmer事业的热爱，队长wc要求每天必须至少要ac掉k题，这m天每天ac掉的题数可以用一个m元组表示。<br>设不同的m元组一共有c个，请问c的末尾有多少个0？（如果c是0，输出0）</p>
<p><strong>Input</strong><br>多组测试数据，处理到文件结束。（测试例数量&lt;=160000）<br>输入的每一行是一个测试例，分别是m、n和k（0&lt;=m,n,k&lt;=1e9），含义如前所述。</p>
<p><strong>Output</strong><br>每组测试例中m元组的数量的末尾0的个数，占一行。</p>
<p><strong>Sample Input</strong><br>3 11 0<br>3 11 1<br>999 99999 4</p>
<p><strong>Sample Output</strong><br>0<br>0<br>5</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long </span></div><div class="line">using namespace std;</div><div class="line">LL m,n,k;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%lld%lld%lld"</span>,&amp;m,&amp;n,&amp;k)!=EOF)&#123;</div><div class="line">        LL x=m-1,y=n-k*m+m-1;</div><div class="line">        <span class="keyword">if</span>(x&gt;y || y&lt;=0) <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            LL cnt_2=0,cnt_5=0;</div><div class="line">            <span class="keyword">for</span>(LL i=2;i&lt;=y;i*=2) cnt_2+=y/i-x/i-(y-x)/i;</div><div class="line">            <span class="keyword">for</span>(LL i=5;i&lt;=y;i*=5) cnt_5+=y/i-x/i-(y-x)/i;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,min(cnt_2,cnt_5));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>组合数学<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14971667524.jpg" alt=""><br>求末尾的0实际上就是求2和5的个数的最小值<br>这里用到了求n！末尾0的个数的方法<br>组合数结果的0等于分子/分母</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p><strong>Description</strong><br>qwb又遇到了一道题目：<br>有一个序列，初始时只有两个数x和y，之后每次操作时，在原序列的任意两个相邻数之间插入这两个数的和，得到新序列。举例说明：<br>初始：1 2<br>操作1次：1 3 2<br>操作2次：1 4 3 5 2<br>……<br>请问在操作n次之后，得到的序列的所有数之和是多少</p>
<p><strong>Input</strong><br>多组测试数据，处理到文件结束（测试例数量&lt;=50000）。<br>输入为一行三个整数x，y，n，相邻两个数之间用单个空格隔开。（0 &lt;= x &lt;= 1e10, 0 &lt;= y &lt;= 1e10, 1 &lt; n &lt;= 1e10）。</p>
<p><strong>Output</strong><br>对于每个测试例，输出一个整数，占一行，即最终序列中所有数之和。<br>如果和超过1e8，则输出低8位。（前导0不输出，直接理解成%1e8）</p>
<p><strong>Sample Input</strong><br>1 2 2</p>
<p><strong>Sample Output</strong><br>15</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">const LL mod=1e8;</div><div class="line">using namespace std;</div><div class="line">LL x,y,n;</div><div class="line">LL quick_pow(LL a,LL b)&#123;</div><div class="line">    LL re=1,base=a%(2*mod);</div><div class="line">    <span class="keyword">while</span>(b)&#123;</div><div class="line">        <span class="keyword">if</span>(b&amp;1) re=(re*base)%(2*mod);</div><div class="line">        base=(base*base)%(2*mod);</div><div class="line">        b&gt;&gt;=1;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> re;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0),cout.tie(0);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%lld%lld%lld"</span>,&amp;x,&amp;y,&amp;n)!=EOF)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(x+y)*((quick_pow(3,n)+1)/2)%mod);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>推出公式<br>注意里公式/2 所以快速幂里的mod应扩大2倍(合理的任意倍数均可)</p>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p><strong>Description</strong><br>qwb和李主席打算平分一堆宝藏，他们想确保分配公平，可惜他们都太懒了，你能帮助他们嘛？</p>
<p><strong>Input</strong><br>输入包含多组测试数据，处理到文件结束。<br>每组测试数据的第一行是一个正整数N(0 &lt;= N &lt;=36 )表示物品的总个数.。<br>接下来输入N个浮点数(最多精确到分)，表示每个物品的价值V（0&lt;V&lt;=1e9）。</p>
<p><strong>Output</strong><br>对于每组测试数据，输出能够使qwb和李主席各自所得到的物品的总价值之差的最小值（精确到分），每组测试数据输出占一行。</p>
<p><strong>Sample Input</strong><br>3 0.01 0.1 1<br>2 1 1</p>
<p><strong>Sample Output</strong><br>0.89<br>0.00</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">const LL inf = 1e18;</div><div class="line">double a[40];</div><div class="line">double <span class="keyword">fi</span>[1&lt;&lt;19],se[1&lt;&lt;19];</div><div class="line">int cnt1,cnt2;</div><div class="line">double sum=0,ans;</div><div class="line">int n;</div><div class="line">void dfs(int st,int ed,double sum,int flag)&#123;</div><div class="line">    <span class="keyword">if</span>(flag==1)&#123;</div><div class="line">        <span class="keyword">if</span>(st==ed+1)&#123;</div><div class="line">            <span class="keyword">fi</span>[cnt1++]=sum;</div><div class="line">            <span class="built_in">return</span> ;</div><div class="line">        &#125;</div><div class="line">        dfs(st+1,ed,sum,flag);</div><div class="line">        dfs(st+1,ed,sum+a[st],flag);</div><div class="line">    &#125;   </div><div class="line">    <span class="keyword">if</span>(flag==2)&#123;</div><div class="line">        <span class="keyword">if</span>(st==ed+1)&#123;</div><div class="line">            se[cnt2++]=sum;</div><div class="line">            <span class="built_in">return</span> ;</div><div class="line">        &#125;</div><div class="line">        dfs(st+1,ed,sum,flag);</div><div class="line">        dfs(st+1,ed,sum+a[st],flag);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</div><div class="line">        sum=0;</div><div class="line">        cnt1=0,cnt2=0;</div><div class="line">        ans=(double)inf;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            scanf(<span class="string">"%lf"</span>,&amp;a[i]);</div><div class="line">            sum+=a[i];</div><div class="line">        &#125;</div><div class="line">        dfs(1,n/2,0,1);</div><div class="line">        dfs(n/2+1,n,0,2);</div><div class="line">        sort(<span class="keyword">fi</span>,<span class="keyword">fi</span>+cnt1);</div><div class="line">        sort(se,se+cnt2);</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;cnt1;i++) ans=min(ans,fabs(sum-2*<span class="keyword">fi</span>[i]));</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;cnt2;i++) ans=min(ans,fabs(sum-2*se[i]));</div><div class="line">        <span class="keyword">for</span>(int l=0,r=cnt2; l&lt;cnt1 &amp;&amp; r&gt;0;l++)&#123;</div><div class="line">            <span class="keyword">while</span>(r&gt;1 &amp;&amp; <span class="keyword">fi</span>[l]+se[r-1]&gt;sum/2.0) r--;</div><div class="line">            ans=min(ans,fabs(sum-2*(<span class="keyword">fi</span>[l]+se[r])));</div><div class="line">            ans=min(ans,fabs(sum-2*(<span class="keyword">fi</span>[l]+se[r-1])));</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>把物品分为前半部分和后半部分 对两部分进行dfs 求出所有组合的大小<br>取物品只有三种情况：全在前半部分 全在后半部分 两部分均有<br>前2种方法暴力 最后一种情况贪心<br>l枚举前半部分的起点 计算出后半部分的r的右边界<br>贪心确保枚举下一个l时候 前半部分减少 后半部分只需从上次的r开始计算即可 无需从头遍历 因为只有从该位置向左才能确保后半部分<br>减少以满足差值最小<br>计算r时 r停留在最后一个满足l+r大于sum/2.0的位置 所以第一个满足和第一个不满足的位置都需要计算更新min</p>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p><strong>Description</strong><br>qwb has a lot of coins. One day, he decides to play a game with his friend using these coins. He first puts some of his coins into M piles, each of which is composed of Ni (1&lt;=i&lt;=M) coins. Then, the two players play the coin game in turns. Every step, one can remove one or more coins from only one pile. The winner is the one who removes the last coin.<br>Then comes the question: How many different ways the first player can do that will ensure him win the game? </p>
<p><strong>Input</strong><br>Input contains multiple test cases till the end of file. Each test case starts with a number M (1 &lt;= M&lt;= 1000) meaning the number of piles. The next line contains M integers Ni (1 &lt;= Ni &lt;= 1e9, 1 &lt;= i&lt;= M) indicating the number of coins in pile i.</p>
<p><strong>Output</strong><br>For each case, put the method count in one line.<br>If the first player can win the game, the method count is the number of different ways that he can do to ensure him win the game, otherwise zero.</p>
<p><strong>Sample Input</strong><br>3<br>1 2 3<br>1<br>1</p>
<p><strong>Sample Output</strong><br>0<br>1</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int a[1050]; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int m;</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;m)!=EOF)&#123;</div><div class="line">        int cnt=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">            cnt^=a[i];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(cnt==0) <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            int flag,ans=0;</div><div class="line">            <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">                flag=cnt^a[i];</div><div class="line">                <span class="keyword">if</span>(flag&lt;a[i]) ans++;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>尼姆博弈的变形<br>只需要确保异或值为0即可</p>
<h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p><strong>Description</strong><br>某一天，qwb去WCfun面试，面试官问了他一个问题：把一个正整数n拆分成若干个正整数的和，请求出这些数乘积的最大值。<br>qwb比较猥琐，借故上厕所偷偷上网求助，聪明的你能帮助他吗?</p>
<p><strong>Input</strong><br>第一行为一个正整数T.(T&lt;=100000)<br>接下来T行，每行一个正整数n(n&lt;=1e9)，意义如题目所述。</p>
<p><strong>Output</strong><br>每一行输出一个整数，表示乘积的最大值，由于答案可能很大，请将答案对109+7取模后输出。</p>
<p><strong>Sample Input</strong><br>2<br>2<br>5</p>
<p><strong>Sample Output</strong><br>2<br>6</p>
<h3 id="参考AC代码-6"><a href="#参考AC代码-6" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">const LL mod =1e9+7;</div><div class="line">using namespace std;</div><div class="line">LL solve(LL a,LL b)&#123;</div><div class="line">    LL re=1,base=a%mod;</div><div class="line">    <span class="keyword">while</span>(b!=0)&#123;</div><div class="line">        <span class="keyword">if</span>(b&amp;1) re=(re*base)%mod;</div><div class="line">        base=(base*base)%mod;</div><div class="line">        b&gt;&gt;=1;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> re;</div><div class="line">&#125; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        LL n;</div><div class="line">        scanf(<span class="string">"%lld"</span>,&amp;n);</div><div class="line">        <span class="keyword">if</span>(n==1)&#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</div><div class="line">            <span class="built_in">continue</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(n==2)&#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"2\n"</span>);</div><div class="line">            <span class="built_in">continue</span>;</div><div class="line">        &#125;</div><div class="line">        LL k=n/3;</div><div class="line">        <span class="keyword">if</span>(n%3==0) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,solve(3,k));</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n%3==1) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(solve(3,k-1)*4)%mod);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n%3==2) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(solve(3,k)*2)%mod);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><p>确保分出来的数字3最多 2其次即可<br>快速幂</p>
<h2 id="H-最小瓶颈路变形"><a href="#H-最小瓶颈路变形" class="headerlink" title="H(最小瓶颈路变形)"></a>H(最小瓶颈路变形)</h2><p>参考上一篇博客</p>
<h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p><strong>Description</strong><br>qwb最近在做一个群众收入统计。ta非常懒，以至于忘记了今天领导要来视察。所以急忙催下属去做统计。<br>在接下来长度为n的时间里,每个单位时间都有事情发生,可能会发下以下两种事件：<br>1 下属递交了一份调查报告，由于太匆忙，上面只有一个整数x，代表一个居民的收入。<br>2 领导来视察了，领导会来询问，收入在区间[l,r]内的居民的平均收入，qwb需要给出回答。<br>qwb非常讨厌小数，所以qwb上报时都会省略小数部分。如果上报时统计的人数为0，qwb就暴露了他偷懒的事情，他就会zhizhiwuwu。</p>
<p><strong>Input</strong><br>多组测试数据，处理到文件末尾。<br>每组测试数据的第一行为一个正整数n(0&lt;=100000),确保所有的n的和不超过300000<br>接下来n行，<br>当第一个数为0时，代表操作1，后面跟着一个整数x(0&lt;=x&lt;=1000000)，意义如题目所述。<br>当第一个数为1时，代表操作2，后面跟着两个整数l，r(0&lt;=l&lt;=r&lt;=1000000)，意义如题目描述。</p>
<p><strong>Output</strong><br>对于每一个领导的询问，给出一个回答，如果统计区间的人数为零，则输出”zhizhiwuwu”。（不带引号）<br>每个测试例之后输出一个空行。</p>
<p><strong>Sample Input</strong><br>3<br>0 1<br>0 3<br>1 1 3<br>2<br>0 1<br>1 2 2</p>
<p><strong>Sample Output</strong><br>2</p>
<p>zhizhiwuwu</p>
<h3 id="参考AC代码-7"><a href="#参考AC代码-7" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define maxn 1000050</span></div><div class="line">using namespace std;</div><div class="line">LL m[maxn],p[maxn];</div><div class="line">int lowbit(LL x)&#123;</div><div class="line">    <span class="built_in">return</span> x&amp;(-x);</div><div class="line">&#125;</div><div class="line">void update(LL x,LL add,LL *a)&#123;</div><div class="line">    <span class="keyword">while</span>(x&lt;=maxn)&#123;</div><div class="line">        a[x]+=add;</div><div class="line">        x+=lowbit(x);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">LL sum(LL x,LL *a)&#123;</div><div class="line">    LL ans=0;</div><div class="line">    <span class="keyword">while</span>(x&gt;0)&#123;</div><div class="line">        ans+=a[x];</div><div class="line">        x-=lowbit(x);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int n;</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</div><div class="line">        memset(m,0,sizeof(m));</div><div class="line">        memset(p,0,sizeof(p));</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            int id; scanf(<span class="string">"%d"</span>,&amp;id);</div><div class="line">            <span class="keyword">if</span>(id==0)&#123;</div><div class="line">                LL x; scanf(<span class="string">"%lld"</span>,&amp;x);</div><div class="line">                x++;</div><div class="line">                update(x,x-1,p);</div><div class="line">                update(x,1,m);  </div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                LL x,y;</div><div class="line">                scanf(<span class="string">"%lld%lld"</span>,&amp;x,&amp;y);</div><div class="line">                x++,y++;</div><div class="line">                LL num1=sum(y,p)-sum(x-1,p);</div><div class="line">                LL num2=sum(y,m)-sum(x-1,m);</div><div class="line">                <span class="keyword">if</span>(num2==0) <span class="built_in">printf</span>(<span class="string">"zhizhiwuwu\n"</span>);</div><div class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,num1/num2);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h3><p>树状数组<br>2个树状数组分别维护收入和人数<br>注意：本题收入为0额外判断 所以整个树状数组右移1 把0空出来<br>所以显示出来所有的数值均加1 但是更新的数值仍然为x-1</p>
<h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><p><strong>Description</strong><br>qwb遇到了一个问题：将分数a/b化为小数后，小数点后第n位的数字是多少？<br>做了那么多题，我已经不指望你能够帮上他了。。。</p>
<p><strong>Input</strong><br>多组测试数据，处理到文件结束。（测试数据&lt;=100000组）<br>每组测试例包含三个整数a，b，n，相邻两个数之间用单个空格隔开，其中0 &lt;= a &lt;1e9，0 &lt; b &lt; 1e9，1 &lt;= n &lt; 1e9。</p>
<p><strong>Output</strong><br>对于每组数据，输出a/b的第n位数，占一行。</p>
<p><strong>Sample Input</strong><br>1 2 1<br>1 2 2</p>
<p><strong>Sample Output</strong><br>5<br>0</p>
<h3 id="参考AC代码-8"><a href="#参考AC代码-8" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">LL x,mod,n;</div><div class="line">LL quick_pow(LL a,LL b)&#123;</div><div class="line">    LL re=1,base=a%mod;</div><div class="line">    <span class="keyword">while</span>(b)&#123;</div><div class="line">        <span class="keyword">if</span>(b&amp;1) re=(re*base)%mod;</div><div class="line">        base=(base*base)%mod;</div><div class="line">        b&gt;&gt;=1;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> re;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%lld%lld%lld"</span>,&amp;x,&amp;mod,&amp;n)!=EOF)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,x*quick_pow(10,n-1)%mod*10/mod);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h3><p>求第k位小数：<br>把该数扩大(k-1)倍除以除数的余数*10再除以除数就是答案</p>
<h2 id="M"><a href="#M" class="headerlink" title="M"></a>M</h2><p><strong>Description</strong><br>某一天，qwb正在上数据结构课。老师在讲台上面讲着二叉树，qwb在下面发着呆。<br>突然qwb想到一个问题：对于一棵n个无编号节点，m个叶子的有根二叉树，有多少种形态呐？你能告诉他吗？</p>
<p><strong>Input</strong><br>多组输入，处理到文件结束,大约有104组数据。<br>每一组输入一行，两个正整数n,m(0≤m≤n≤50),意义如题目所述。</p>
<p><strong>Output</strong><br>每一行输出一个数，表示相应询问的答案,由于答案可能很大，请将答案对109+7取模后输出。</p>
<p><strong>Sample Input</strong><br>4 2<br>10 5</p>
<p><strong>Sample Output</strong><br>6<br>252</p>
<h3 id="参考AC代码-9"><a href="#参考AC代码-9" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define maxn 55</span></div><div class="line">using namespace std;</div><div class="line">const LL mod = 1e9+7;</div><div class="line">int n,m;</div><div class="line">LL dp[maxn][maxn];</div><div class="line">void <span class="function"><span class="title">solve</span></span>()&#123;</div><div class="line">    dp[0][0]=1,dp[1][1]=1,dp[2][1]=2;</div><div class="line">    <span class="keyword">for</span>(int i=3;i&lt;maxn;i++)&#123;</div><div class="line">        <span class="keyword">for</span>(int j=1;j&lt;i;j++)&#123;</div><div class="line">            int x=0,y=i-1;</div><div class="line">            <span class="keyword">for</span>(;x&lt;y;x++,y--)&#123;</div><div class="line">                <span class="keyword">for</span>(int k=0;k&lt;=j;k++) dp[i][j]=(dp[i][j]+2*(dp[x][k]*dp[y][j-k]%mod)%mod)%mod;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(x==y)&#123;</div><div class="line">                <span class="keyword">for</span>(int k=0;k&lt;=j;k++) dp[i][j]=(dp[i][j]+dp[x][k]*dp[y][j-k]%mod)%mod;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    solve();</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dp[n][m]);</div><div class="line">    &#125;   </div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h3><p>二叉树的类型是典型的卡特兰数问题<br>加了叶子节点的限制 dp即可</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[网络流专题]]></title>
      <url>http://xuboming8.github.io/2017/05/29/%E7%BD%91%E7%BB%9C%E6%B5%81%E4%B8%93%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="网络流专题"><a href="#网络流专题" class="headerlink" title="网络流专题"></a>网络流专题</h1><h2 id="EK算法-最大流"><a href="#EK算法-最大流" class="headerlink" title="EK算法(最大流)"></a>EK算法(最大流)</h2><h3 id="增广路定理"><a href="#增广路定理" class="headerlink" title="增广路定理"></a>增广路定理</h3><p>紫书P367-368</p>
<h3 id="模版一-存在重边"><a href="#模版一-存在重边" class="headerlink" title="模版一(存在重边)"></a>模版一(存在重边)</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define maxn 250</span></div><div class="line">using namespace std;</div><div class="line">int n,m,k;</div><div class="line">int s,t;</div><div class="line">struct node&#123;</div><div class="line">	int from,to,<span class="built_in">cap</span>,flow;</div><div class="line">	node(int from,int to,int <span class="built_in">cap</span>,int flow):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;edge;</div><div class="line">int g[maxn][maxn];</div><div class="line">int a[maxn],p[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()&#123;</div><div class="line">	memset(g,0,sizeof(g));</div><div class="line">	memset(a,0,sizeof(a));</div><div class="line">	memset(p,0,sizeof(p));</div><div class="line">	edge.clear();</div><div class="line">&#125;</div><div class="line">void addedge(int from,int to,int <span class="built_in">cap</span>)&#123;</div><div class="line">	<span class="keyword">if</span>(g[from][to]!=0) edge[g[from][to]].cap+=<span class="built_in">cap</span>;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		edge.push_back(node(from,to,<span class="built_in">cap</span>,0));</div><div class="line">		edge.push_back(node(to,from,0,0));</div><div class="line">		k=edge.size();</div><div class="line">		g[from][to]=k-2;</div><div class="line">		g[to][from]=k-1;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">EdmondsKarp</span></span>()&#123;</div><div class="line">	int flow=0;</div><div class="line">	<span class="keyword">for</span>(;;)&#123;</div><div class="line">		memset(a,0,sizeof(a));</div><div class="line">		queue&lt;int&gt;q;</div><div class="line">		q.push(s);</div><div class="line">		a[s]=inf;</div><div class="line">		<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">			int x=q.front();</div><div class="line">			q.pop();</div><div class="line">			<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">				node e=edge[g[x][i]];</div><div class="line">				<span class="keyword">if</span>(!a[e.to] &amp;&amp; e.cap&gt;e.flow)&#123;</div><div class="line">					p[e.to]=g[x][i];</div><div class="line">					a[e.to]=min(a[x],e.cap-e.flow);</div><div class="line">					q.push(e.to);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(a[t]) <span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(!a[t]) <span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=t;i!=s;i=edge[p[i]].from)&#123;</div><div class="line">			edge[p[i]].flow+=a[t];</div><div class="line">			edge[p[i]^1].flow-=a[t];</div><div class="line">		&#125;</div><div class="line">		flow+=a[t];</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;m&gt;&gt;n)&#123;</div><div class="line">		init();</div><div class="line">		s=1,t=n;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			int u,v,w;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">			addedge(u,v,w);</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;EdmondsKarp()&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="模版二-不存在重边"><a href="#模版二-不存在重边" class="headerlink" title="模版二(不存在重边)"></a>模版二(不存在重边)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define maxn 250</span></div><div class="line">using namespace std;</div><div class="line">int n,m,k;</div><div class="line">int s,t;</div><div class="line">struct node&#123;</div><div class="line">	int from,to,<span class="built_in">cap</span>,flow;</div><div class="line">	node(int from,int to,int <span class="built_in">cap</span>,int flow):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;edge;</div><div class="line">vector&lt;int&gt;g[maxn];</div><div class="line">int a[maxn],p[maxn];</div><div class="line">void init(int n)&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++) g[i].clear();</div><div class="line">	edge.clear();</div><div class="line">	memset(a,0,sizeof(a));</div><div class="line">	memset(p,0,sizeof(p));</div><div class="line">&#125;</div><div class="line">void addedge(int from,int to,int <span class="built_in">cap</span>)&#123;</div><div class="line">	edge.push_back(node(from,to,<span class="built_in">cap</span>,0));</div><div class="line">	edge.push_back(node(to,from,0,0));</div><div class="line">	k=edge.size();</div><div class="line">	g[from].push_back(k-2);</div><div class="line">	g[to].push_back(k-1);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">EdmondsKarp</span></span>()&#123;</div><div class="line">	int flow=0;</div><div class="line">	<span class="keyword">for</span>(;;)&#123;</div><div class="line">		memset(a,0,sizeof(a));</div><div class="line">		queue&lt;int&gt;q;</div><div class="line">		q.push(s);</div><div class="line">		a[s]=inf;</div><div class="line">		<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">			int x=q.front();</div><div class="line">			q.pop();</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;g[x].size();i++)&#123;</div><div class="line">				node e=edge[g[x][i]];</div><div class="line">				<span class="keyword">if</span>(!a[e.to] &amp;&amp; e.cap&gt;e.flow)&#123;</div><div class="line">					p[e.to]=g[x][i];</div><div class="line">					a[e.to]=min(a[x],e.cap-e.flow);</div><div class="line">					q.push(e.to);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(a[t]) <span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(!a[t]) <span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=t;i!=s;i=edge[p[i]].from)&#123;</div><div class="line">			edge[p[i]].flow+=a[t];</div><div class="line">			edge[p[i]^1].flow-=a[t];</div><div class="line">		&#125;</div><div class="line">		flow+=a[t];</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;m&gt;&gt;n)&#123;</div><div class="line">		init(n);</div><div class="line">		s=1,t=n;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">			int u,v,w;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">			addedge(u,v,w);</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;EdmondsKarp()&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="dinic算法-最大流"><a href="#dinic算法-最大流" class="headerlink" title="dinic算法(最大流)"></a>dinic算法(最大流)</h2><h3 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line">struct Edge&#123;</div><div class="line">  int from, to, <span class="built_in">cap</span>, flow;</div><div class="line">&#125;;</div><div class="line">struct Dinic&#123;</div><div class="line">  int n, m, s, t;</div><div class="line">  vector&lt;Edge&gt; edges;   </div><div class="line">  vector&lt;int&gt; G[maxn];   </div><div class="line">  bool vis[maxn];         </div><div class="line">  int d[maxn];           </div><div class="line">  int cur[maxn];       </div><div class="line">void ClearAll(int n)&#123;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">ClearFlow</span></span>()&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;edges.size();i++) edges[i].flow=0;    </div><div class="line">&#125;</div><div class="line">void AddEdge(int from, int to, int <span class="built_in">cap</span>)&#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, <span class="built_in">cap</span>, 0&#125;);</div><div class="line">    edges.push_back((Edge)&#123;to, from, 0, 0&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-2);</div><div class="line">    G[to].push_back(m-1);</div><div class="line">&#125;</div><div class="line">bool <span class="function"><span class="title">BFS</span></span>()&#123;</div><div class="line">    memset(vis, 0, sizeof(vis));</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    Q.push(s);</div><div class="line">    vis[s] = 1;</div><div class="line">    d[s] = 0;</div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      int x = Q.front(); Q.pop();</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[x].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[x][i]];</div><div class="line">        <span class="keyword">if</span>(!vis[e.to] &amp;&amp; e.cap &gt; e.flow) &#123;</div><div class="line">          vis[e.to] = 1;</div><div class="line">          d[e.to] = d[x] + 1;</div><div class="line">          Q.push(e.to);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> vis[t];</div><div class="line">&#125;</div><div class="line">int DFS(int x, int a)&#123;</div><div class="line">    <span class="keyword">if</span>(x == t || a == 0) <span class="built_in">return</span> a;</div><div class="line">    int flow = 0, f;</div><div class="line">    <span class="keyword">for</span>(int&amp; i = cur[x]; i &lt; G[x].size(); i++) &#123;</div><div class="line">      Edge&amp; e = edges[G[x][i]];</div><div class="line">      <span class="keyword">if</span>(d[x] + 1 == d[e.to] &amp;&amp; (f = DFS(e.to, min(a, e.cap-e.flow))) &gt; 0) &#123;</div><div class="line">        e.flow += f;</div><div class="line">        edges[G[x][i]^1].flow -= f;</div><div class="line">        flow += f;</div><div class="line">        a -= f;</div><div class="line">        <span class="keyword">if</span>(a == 0) <span class="built_in">break</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">int Maxflow(int s, int t)&#123;</div><div class="line">    this-&gt;s = s; this-&gt;t = t;</div><div class="line">    int flow = 0;</div><div class="line">    <span class="keyword">while</span>(BFS()) &#123;</div><div class="line">      memset(cur, 0, sizeof(cur));</div><div class="line">      flow += DFS(s, inf);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">vector&lt;int&gt;<span class="function"><span class="title">Mincut</span></span>()&#123;    </div><div class="line">	vector&lt;int&gt; ans;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;edges.size();i++)&#123;</div><div class="line">  		Edge&amp; e=edges[i];</div><div class="line">  		<span class="keyword">if</span>(vis[e.from] &amp;&amp; !vis[e.to] &amp;&amp; e.cap&gt;0) ans.push_back(i);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">Reduce</span></span>()&#123;   </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;edges.size();i++) edges[i].cap-=edges[i].flow;</div><div class="line">  &#125;</div><div class="line">&#125;g;</div></pre></td></tr></table></figure>
<h3 id="最短增广路模版"><a href="#最短增广路模版" class="headerlink" title="最短增广路模版"></a>最短增广路模版</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">const int MAX = 0x5fffffff;//</div><div class="line">int tab[250][250];//邻接矩阵 </div><div class="line">int dis[250];//距源点距离,分层图 </div><div class="line">int q[2000], h, r;//BFS队列 ,首,尾 </div><div class="line">int N, M, ANS;N:///点数;M,边数 </div><div class="line">int <span class="function"><span class="title">BFS</span></span>()</div><div class="line">&#123;</div><div class="line">    int i, j;</div><div class="line">    memset(dis, 0xff, sizeof(dis));//以-1填充 </div><div class="line">    dis[1] = 0;</div><div class="line">    h = 0; r = 1;</div><div class="line">    q[1] = 1;</div><div class="line">    <span class="keyword">while</span> (h&lt;r)</div><div class="line">    &#123;</div><div class="line">        j = q[++h];</div><div class="line">        <span class="keyword">for</span> (i = 1; i &lt;= N; i++)</div><div class="line">            <span class="keyword">if</span> (dis[i]&lt;0 &amp;&amp; tab[j][i]&gt;0)</div><div class="line">            &#123;</div><div class="line">                dis[i] = dis[j] + 1;</div><div class="line">                q[++r] = i;</div><div class="line">            &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (dis[N]&gt;0)</div><div class="line">        <span class="built_in">return</span> 1;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="built_in">return</span> 0;//汇点的DIS小于零,表明BFS不到汇点 </div><div class="line">&#125;</div><div class="line">//Find代表一次增广,函数返回本次增广的流量,返回0表示无法增广 </div><div class="line">int find(int x, int low)//Low是源点到现在最窄的(剩余流量最小)的边的剩余流量</div><div class="line">&#123;</div><div class="line">    int i, a = 0;</div><div class="line">    <span class="keyword">if</span> (x == N)<span class="built_in">return</span> low;//是汇点 </div><div class="line">    <span class="keyword">for</span> (i = 1; i &lt;= N; i++)</div><div class="line">        <span class="keyword">if</span> (tab[x][i] &gt;0 //联通 </div><div class="line">            &amp;&amp; dis[i] == dis[x] + 1 //是分层图的下一层 </div><div class="line">            &amp;&amp; (a = find(i, min(low, tab[x][i]))))//能到汇点(a &lt;&gt; 0) </div><div class="line">        &#123;</div><div class="line">            tab[x][i] -= a;</div><div class="line">            tab[i][x] += a;</div><div class="line">            <span class="built_in">return</span> a;</div><div class="line">        &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">Dinic</span></span>()</div><div class="line">&#123;</div><div class="line">    int ANS = 0, tans;</div><div class="line">    <span class="keyword">while</span> (BFS())//要不停地建立分层图,如果BFS不到汇点才结束 </div><div class="line">    &#123;</div><div class="line">        <span class="keyword">while</span> (tans = find(1, 0x7fffffff))ANS += tans;//一次BFS要不停地找增广路,直到找不到为止 </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="ISAP-最大流"><a href="#ISAP-最大流" class="headerlink" title="ISAP(最大流)"></a>ISAP(最大流)</h2><h3 id="模版-1"><a href="#模版-1" class="headerlink" title="模版"></a>模版</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 550</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line">using namespace std;</div><div class="line">struct Edge&#123;</div><div class="line">  int from, to, <span class="built_in">cap</span>, flow;</div><div class="line">&#125;;</div><div class="line">struct ISAP&#123;</div><div class="line">  int n, m, s, t;</div><div class="line">  vector&lt;Edge&gt; edges;</div><div class="line">  vector&lt;int&gt; G[maxn];   </div><div class="line">  bool vis[maxn];        </div><div class="line">  int d[maxn];           </div><div class="line">  int cur[maxn];       </div><div class="line">  int p[maxn];         </div><div class="line">  int num[maxn];       </div><div class="line">void AddEdge(int from, int to, int <span class="built_in">cap</span>)&#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, <span class="built_in">cap</span>, 0&#125;);</div><div class="line">    edges.push_back((Edge)&#123;to, from, 0, 0&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-2);</div><div class="line">    G[to].push_back(m-1);</div><div class="line">&#125;</div><div class="line">bool <span class="function"><span class="title">BFS</span></span>()&#123;</div><div class="line">    memset(vis, 0, sizeof(vis));</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    Q.push(t);</div><div class="line">    vis[t] = 1;</div><div class="line">    d[t] = 0;</div><div class="line">    <span class="keyword">while</span>(!Q.empty())&#123;</div><div class="line">      int x = Q.front(); Q.pop();</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[x].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[x][i]^1];</div><div class="line">        <span class="keyword">if</span>(!vis[e.from] &amp;&amp; e.cap &gt; e.flow) &#123;</div><div class="line">          vis[e.from] = 1;</div><div class="line">          d[e.from] = d[x] + 1;</div><div class="line">          Q.push(e.from);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> vis[s];</div><div class="line">&#125;</div><div class="line">void ClearAll(int n)&#123;</div><div class="line">    this-&gt;n = n;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">Augment</span></span>()&#123;</div><div class="line">    int x = t, a = inf;</div><div class="line">    <span class="keyword">while</span>(x != s) &#123;</div><div class="line">      Edge&amp; e = edges[p[x]];</div><div class="line">      a = min(a, e.cap-e.flow);</div><div class="line">      x = edges[p[x]].from;</div><div class="line">    &#125;</div><div class="line">    x = t;</div><div class="line">    <span class="keyword">while</span>(x != s) &#123;</div><div class="line">      edges[p[x]].flow += a;</div><div class="line">      edges[p[x]^1].flow -= a;</div><div class="line">      x = edges[p[x]].from;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> a;</div><div class="line">&#125;</div><div class="line">int Maxflow(int s, int t)&#123;</div><div class="line">    this-&gt;s = s; this-&gt;t = t;</div><div class="line">    int flow = 0;</div><div class="line">    BFS();</div><div class="line">    memset(num, 0, sizeof(num));</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) num[d[i]]++;</div><div class="line">    int x = s;</div><div class="line">    memset(cur, 0, sizeof(cur));</div><div class="line">    <span class="keyword">while</span>(d[s] &lt; n) &#123;</div><div class="line">      <span class="keyword">if</span>(x == t) &#123;</div><div class="line">        flow += Augment();</div><div class="line">        x = s;</div><div class="line">      &#125;</div><div class="line">      int ok = 0;</div><div class="line">      <span class="keyword">for</span>(int i = cur[x]; i &lt; G[x].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[x][i]];</div><div class="line">        <span class="keyword">if</span>(e.cap &gt; e.flow &amp;&amp; d[x] == d[e.to] + 1) &#123; </div><div class="line">          ok = 1;</div><div class="line">          p[e.to] = G[x][i];</div><div class="line">          cur[x] = i; </div><div class="line">          x = e.to;</div><div class="line">          <span class="built_in">break</span>;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">if</span>(!ok) &#123; </div><div class="line">        int m = n-1; </div><div class="line">        <span class="keyword">for</span>(int i = 0; i &lt; G[x].size(); i++) &#123;</div><div class="line">          Edge&amp; e = edges[G[x][i]];</div><div class="line">          <span class="keyword">if</span>(e.cap &gt; e.flow) m = min(m, d[e.to]);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(--num[d[x]] == 0) <span class="built_in">break</span>;</div><div class="line">        num[d[x] = m+1]++;</div><div class="line">        cur[x] = 0; </div><div class="line">        <span class="keyword">if</span>(x != s) x = edges[p[x]].from;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">&#125;;</div><div class="line">ISAP g;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	int t,flag=1; cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		int x,y;</div><div class="line">		cin&gt;&gt;x&gt;&gt;y;</div><div class="line">		g.ClearAll(x);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=y;i++)&#123;</div><div class="line">			int u,v,w;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">			g.AddEdge(u,v,w);</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;flag++&lt;&lt;<span class="string">": "</span>&lt;&lt;g.Maxflow(1,x)&lt;&lt;endl;	</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="MCMF-最小费用最大流"><a href="#MCMF-最小费用最大流" class="headerlink" title="MCMF(最小费用最大流)"></a>MCMF(最小费用最大流)</h2><h3 id="模版-2"><a href="#模版-2" class="headerlink" title="模版"></a>模版</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">struct Edge&#123;</div><div class="line">	int from,to,<span class="built_in">cap</span>,flow,cost;</div><div class="line">	Edge(int from,int to,int <span class="built_in">cap</span>,int flow,int cost):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow),cost(cost)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">struct MCMF&#123;</div><div class="line">	int n,m,s,t;</div><div class="line">	vector&lt;Edge&gt;edges;</div><div class="line">	vector&lt;int&gt;G[maxn];</div><div class="line">	int inq[maxn],d[maxn],p[maxn],a[maxn];</div><div class="line">	void init(int n)&#123;</div><div class="line">		this-&gt;n=n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) G[i].clear();</div><div class="line">		edges.clear();</div><div class="line">	&#125;</div><div class="line">	void AddEdge(int from,int to,int <span class="built_in">cap</span>,int cost)&#123;</div><div class="line">		edges.push_back(Edge(from,to,<span class="built_in">cap</span>,0,cost));</div><div class="line">		edges.push_back(Edge(to,from,0,0,-cost));</div><div class="line">		m=edges.size();</div><div class="line">		G[from].push_back(m-2);</div><div class="line">		G[to].push_back(m-1);</div><div class="line">	&#125;</div><div class="line">	bool BellmanFord(int s,int t,int &amp;flow,int&amp; cost)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) d[i]=inf;</div><div class="line">		memset(inq,0,sizeof(inq));</div><div class="line">		d[s]=0,inq[s]=1,p[s]=0,a[s]=inf;</div><div class="line">		queue&lt;int&gt;Q;</div><div class="line">		Q.push(s);</div><div class="line">		<span class="keyword">while</span>(!Q.empty())&#123;</div><div class="line">			int u=Q.front();  Q.pop();</div><div class="line">			inq[u]=0;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;G[u].size();i++)&#123;</div><div class="line">				Edge&amp; e=edges[G[u][i]];</div><div class="line">				<span class="keyword">if</span>(e.cap&gt;e.flow &amp;&amp; d[e.to]&gt;d[u]+e.cost)&#123;</div><div class="line">					d[e.to]=d[u]+e.cost;</div><div class="line">					p[e.to]=G[u][i];</div><div class="line">					a[e.to]=min(a[u],e.cap-e.flow);</div><div class="line">					<span class="keyword">if</span>(!inq[e.to])&#123;</div><div class="line">						Q.push(e.to);</div><div class="line">						inq[e.to]=1;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(d[t]==inf) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">		flow+=a[t];</div><div class="line">		cost+=d[t]*a[t];</div><div class="line">		int u=t;</div><div class="line">		<span class="keyword">while</span>(u!=s)&#123;</div><div class="line">			edges[p[u]].flow+=a[t];</div><div class="line">			edges[p[u]^1].flow-=a[t];</div><div class="line">			u=edges[p[u]].from;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	int Mincost(int s,int t)&#123;</div><div class="line">		int flow=0,cost=0;</div><div class="line">		<span class="keyword">while</span>(BellmanFord(s,t,flow,cost));</div><div class="line">		<span class="built_in">return</span> cost;</div><div class="line">	&#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="HUD-1533-MCMF解法"><a href="#HUD-1533-MCMF解法" class="headerlink" title="HUD 1533(MCMF解法)"></a>HUD 1533(MCMF解法)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define maxn 250</span></div><div class="line">using namespace std;</div><div class="line">struct Edge&#123;</div><div class="line">	int from,to,<span class="built_in">cap</span>,flow,cost;</div><div class="line">	Edge(int from,int to,int <span class="built_in">cap</span>,int flow,int cost):from(from),to(to),<span class="built_in">cap</span>(<span class="built_in">cap</span>),flow(flow),cost(cost)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">struct node&#123;</div><div class="line">	int x,y;</div><div class="line">&#125;man[maxn],house[maxn];</div><div class="line">int m_cnt,h_cnt;</div><div class="line">int S,T;</div><div class="line">int x,y;</div><div class="line">int dis(int x1,int y1,int x2,int y2)&#123;</div><div class="line">	<span class="built_in">return</span> abs(x1-x2)+abs(y1-y2);</div><div class="line">&#125;</div><div class="line">struct MCMF&#123;</div><div class="line">	int n,m,s,t;</div><div class="line">	vector&lt;Edge&gt;edges;</div><div class="line">	vector&lt;int&gt;G[maxn];</div><div class="line">	int inq[maxn],d[maxn],p[maxn],a[maxn];</div><div class="line">	void init(int n)&#123;</div><div class="line">		this-&gt;n=n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) G[i].clear();</div><div class="line">		edges.clear();</div><div class="line">	&#125;</div><div class="line">	void AddEdge(int from,int to,int <span class="built_in">cap</span>,int cost)&#123;</div><div class="line">		edges.push_back(Edge(from,to,<span class="built_in">cap</span>,0,cost));</div><div class="line">		edges.push_back(Edge(to,from,0,0,-cost));</div><div class="line">		m=edges.size();</div><div class="line">		G[from].push_back(m-2);</div><div class="line">		G[to].push_back(m-1);</div><div class="line">	&#125;</div><div class="line">	bool BellmanFord(int s,int t,int &amp;flow,int&amp; cost)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++) d[i]=inf;</div><div class="line">		memset(inq,0,sizeof(inq));</div><div class="line">		d[s]=0,inq[s]=1,p[s]=0,a[s]=inf;</div><div class="line">		queue&lt;int&gt;Q;</div><div class="line">		Q.push(s);</div><div class="line">		<span class="keyword">while</span>(!Q.empty())&#123;</div><div class="line">			int u=Q.front();  Q.pop();</div><div class="line">			inq[u]=0;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;G[u].size();i++)&#123;</div><div class="line">				Edge&amp; e=edges[G[u][i]];</div><div class="line">				<span class="keyword">if</span>(e.cap&gt;e.flow &amp;&amp; d[e.to]&gt;d[u]+e.cost)&#123;</div><div class="line">					d[e.to]=d[u]+e.cost;</div><div class="line">					p[e.to]=G[u][i];</div><div class="line">					a[e.to]=min(a[u],e.cap-e.flow);</div><div class="line">					<span class="keyword">if</span>(!inq[e.to])&#123;</div><div class="line">						Q.push(e.to);</div><div class="line">						inq[e.to]=1;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(d[t]==inf) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">		flow+=a[t];</div><div class="line">		cost+=d[t]*a[t];</div><div class="line">		int u=t;</div><div class="line">		<span class="keyword">while</span>(u!=s)&#123;</div><div class="line">			edges[p[u]].flow+=a[t];</div><div class="line">			edges[p[u]^1].flow-=a[t];</div><div class="line">			u=edges[p[u]].from;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	int Mincost(int s,int t)&#123;</div><div class="line">		int flow=0,cost=0;</div><div class="line">		<span class="keyword">while</span>(BellmanFord(s,t,flow,cost));</div><div class="line">		<span class="built_in">return</span> cost;</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line">MCMF g;</div><div class="line">void <span class="function"><span class="title">creatmap</span></span>()&#123;</div><div class="line">	m_cnt=0,h_cnt=0;</div><div class="line">	memset(man,0,sizeof(man));</div><div class="line">	memset(house,0,sizeof(house));</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;x;i++)&#123;</div><div class="line">		string st;</div><div class="line">		cin&gt;&gt;st;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;st.length();j++)&#123;</div><div class="line">			<span class="keyword">if</span>(st[j]==<span class="string">'H'</span>)&#123;</div><div class="line">				h_cnt++;</div><div class="line">				house[h_cnt].x=i+1;</div><div class="line">				house[h_cnt].y=j+1;	</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(st[j]==<span class="string">'m'</span>)&#123;</div><div class="line">				m_cnt++;</div><div class="line">				man[m_cnt].x=i+1;</div><div class="line">				man[m_cnt].y=j+1;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	S=0,T=h_cnt+m_cnt+1;</div><div class="line">	g.init(h_cnt+m_cnt+2);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=h_cnt;i++) g.AddEdge(S,i,1,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m_cnt;i++) g.AddEdge(i+h_cnt,T,1,0);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=h_cnt;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=m_cnt;j++)&#123;</div><div class="line">			int d=dis(house[i].x,house[i].y,man[j].x,man[j].y);</div><div class="line">			g.AddEdge(i,j+h_cnt,1,d);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;x&gt;&gt;y)&#123;</div><div class="line">		<span class="keyword">if</span>(x==0 &amp;&amp; y==0) <span class="built_in">break</span>;  </div><div class="line">		creatmap();</div><div class="line">		cout&lt;&lt;g.Mincost(S,T)&lt;&lt;endl;	</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="最大流最小割"><a href="#最大流最小割" class="headerlink" title="最大流最小割"></a>最大流最小割</h2><h3 id="hihocoder-1378"><a href="#hihocoder-1378" class="headerlink" title="hihocoder 1378"></a>hihocoder 1378</h3><p><strong>题目要求</strong><br>求出最小割的容量(等价最大流)<br>同时求出图G最小割S集合的点数以及集合内点的编号<br>若有多解输出一组即可<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 550</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line">using namespace std;</div><div class="line">int flag,num;</div><div class="line">struct Edge&#123;</div><div class="line">  int from, to, <span class="built_in">cap</span>, flow;</div><div class="line">&#125;;</div><div class="line">struct Dinic&#123;</div><div class="line">  int n, m, s, t;</div><div class="line">  vector&lt;Edge&gt; edges;   </div><div class="line">  vector&lt;int&gt; G[maxn];   </div><div class="line">  bool vis[maxn];         </div><div class="line">  int d[maxn];           </div><div class="line">  int cur[maxn];       </div><div class="line">void ClearAll(int n)&#123;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; n; i++) G[i].clear();</div><div class="line">    edges.clear();</div><div class="line">&#125;</div><div class="line">void AddEdge(int from, int to, int <span class="built_in">cap</span>)&#123;</div><div class="line">    edges.push_back((Edge)&#123;from, to, <span class="built_in">cap</span>, 0&#125;);</div><div class="line">    edges.push_back((Edge)&#123;to, from, 0, 0&#125;);</div><div class="line">    m = edges.size();</div><div class="line">    G[from].push_back(m-2);</div><div class="line">    G[to].push_back(m-1);</div><div class="line">&#125;</div><div class="line">bool <span class="function"><span class="title">BFS</span></span>()&#123;</div><div class="line">    memset(vis, 0, sizeof(vis));</div><div class="line">    queue&lt;int&gt; Q;</div><div class="line">    Q.push(s);</div><div class="line">    vis[s] = 1;</div><div class="line">    d[s] = 0;</div><div class="line">    <span class="keyword">if</span>(flag) num++; </div><div class="line">    <span class="keyword">while</span>(!Q.empty()) &#123;</div><div class="line">      int x = Q.front(); Q.pop();</div><div class="line">      <span class="keyword">for</span>(int i = 0; i &lt; G[x].size(); i++) &#123;</div><div class="line">        Edge&amp; e = edges[G[x][i]];</div><div class="line">        <span class="keyword">if</span>(!vis[e.to] &amp;&amp; e.cap &gt; e.flow) &#123;</div><div class="line">          vis[e.to] = 1;</div><div class="line">          d[e.to] = d[x] + 1;</div><div class="line">          <span class="keyword">if</span>(flag==0 &amp;&amp; e.to==n) <span class="built_in">return</span> 1; </div><div class="line">          <span class="keyword">if</span>(flag) num++;</div><div class="line">          Q.push(e.to);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> vis[t];</div><div class="line">&#125;</div><div class="line">int DFS(int x, int a)&#123;</div><div class="line">    <span class="keyword">if</span>(x == t || a == 0) <span class="built_in">return</span> a;</div><div class="line">    int flow = 0, f;</div><div class="line">    <span class="keyword">for</span>(int&amp; i = cur[x]; i &lt; G[x].size(); i++) &#123;</div><div class="line">      Edge&amp; e = edges[G[x][i]];</div><div class="line">      <span class="keyword">if</span>(d[x] + 1 == d[e.to] &amp;&amp; (f = DFS(e.to, min(a, e.cap-e.flow))) &gt; 0) &#123;</div><div class="line">        e.flow += f;</div><div class="line">        edges[G[x][i]^1].flow -= f;</div><div class="line">        flow += f;</div><div class="line">        a -= f;</div><div class="line">        <span class="keyword">if</span>(a == 0) <span class="built_in">break</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">&#125;</div><div class="line">int Maxflow(int s, int t)&#123;</div><div class="line">    this-&gt;s = s; this-&gt;t = t;</div><div class="line">    int flow = 0;</div><div class="line">    <span class="keyword">while</span>(BFS())&#123;</div><div class="line">      memset(cur, 0, sizeof(cur));</div><div class="line">      flow += DFS(s, inf);</div><div class="line">    &#125;</div><div class="line">	flag=1;</div><div class="line">	flag=BFS();</div><div class="line">    <span class="built_in">return</span> flow;</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line">Dinic g;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	flag=0,num=0;</div><div class="line">	int x,y;</div><div class="line">	cin&gt;&gt;x&gt;&gt;y;</div><div class="line">	g.ClearAll(x);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=y;i++)&#123;</div><div class="line">		int u,v,w;</div><div class="line">		cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">		g.AddEdge(u,v,w);</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;g.Maxflow(1,x)&lt;&lt;<span class="string">" "</span>;</div><div class="line">	cout&lt;&lt;num&lt;&lt;endl;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=x;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(g.vis[i])&#123;</div><div class="line">			<span class="keyword">if</span>(!flag) flag=1;</div><div class="line">			<span class="keyword">else</span> cout&lt;&lt;<span class="string">" "</span>;</div><div class="line">			cout&lt;&lt;i;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[百度之星专题]]></title>
      <url>http://xuboming8.github.io/2017/05/29/%E7%99%BE%E5%BA%A6%E4%B9%8B%E6%98%9F%E4%B8%93%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="百度之星专题"><a href="#百度之星专题" class="headerlink" title="百度之星专题"></a>百度之星专题</h1><h2 id="HDU-4824"><a href="#HDU-4824" class="headerlink" title="HDU 4824"></a>HDU 4824</h2><h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define inf 0x7f7f7f7f</span></div><div class="line"><span class="comment">#define maxn 3005</span></div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">    int x,y;</div><div class="line">&#125;point[maxn];</div><div class="line">int n;</div><div class="line">int dp[maxn][maxn];</div><div class="line">int dist(int i,int j)&#123;</div><div class="line">    int ans=point[i].x-point[j].x;</div><div class="line">    <span class="keyword">if</span>(ans&lt;0) ans=-ans;</div><div class="line">    int t=point[i].y-point[j].y;</div><div class="line">    <span class="keyword">if</span>(t&lt;0) t=-t;</div><div class="line">    <span class="keyword">if</span>(360-t&lt;t) t=360-t;</div><div class="line">    <span class="built_in">return</span> ans*400+t;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">solve</span></span>()&#123;</div><div class="line">    dp[1][2]=dist(1,2);</div><div class="line">    <span class="keyword">for</span>(int j=3;j&lt;=n;j++)&#123;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=j-2;i++)&#123;</div><div class="line">            dp[i][j]=dp[i][j-1]+dist(j-1,j);</div><div class="line">        &#125;</div><div class="line">        dp[j-1][j]=inf;</div><div class="line">        <span class="keyword">for</span>(int k=1;k&lt;=j-2;k++)&#123;</div><div class="line">            int temp=dp[k][j-1]+dist(k,j);</div><div class="line">            <span class="keyword">if</span>(temp&lt;dp[j-1][j]) dp[j-1][j]=temp;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    dp[n][n]=dp[n-1][n]+dist(n-1,n);</div><div class="line">    <span class="built_in">return</span> dp[n][n]+(n*10)-10;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">        point[1].x=0,point[1].y=0;</div><div class="line">        n++;</div><div class="line">        <span class="keyword">for</span>(int i=2;i&lt;=n;i++) scanf(<span class="string">"%d%d"</span>,&amp;point[i].x,&amp;point[i].y);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,solve());</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>双调欧几里德<br><a href="http://blog.csdn.net/xiajun07061225/article/details/8092247" target="_blank" rel="external">转跳博客</a></p>
<h2 id="HDU-4825"><a href="#HDU-4825" class="headerlink" title="HDU 4825"></a>HDU 4825</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>给次给出一个询问 要求在数组中找出某个数与该数的xor值最大</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include &lt;cstring&gt;</span></div><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">typedef long long ll;</div><div class="line">const int M = 55;</div><div class="line">const int N = M*1e5;</div><div class="line">struct Node &#123;</div><div class="line">    ll val;</div><div class="line">    int l;</div><div class="line">    int r;</div><div class="line">    void <span class="function"><span class="title">clear</span></span>() &#123;</div><div class="line">        l = r = -1;</div><div class="line">    &#125;</div><div class="line">&#125;node[N];</div><div class="line">int p;</div><div class="line">ll a, t[M];</div><div class="line">void insert (int &amp;root, int d, ll u) &#123;</div><div class="line">    <span class="keyword">if</span> (root == -1) &#123;</div><div class="line">        root = p++;</div><div class="line">        node[root].clear();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (d == -1) &#123;</div><div class="line">        node[root].val = u;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (u &amp; t[d]) insert(node[root].r, d - 1, u);</div><div class="line">    <span class="keyword">else</span>  insert(node[root].l, d - 1, u);</div><div class="line">&#125;</div><div class="line">void query(int root, int d, ll u) &#123;</div><div class="line">    <span class="keyword">if</span> (d == -1) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, node[root].val);</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (((u &amp; t[d]) &amp;&amp; node[root].l != -1) || node[root].r == -1) query(node[root].l, d - 1, u);</div><div class="line">    <span class="keyword">else</span> query(node[root].r, d - 1, u);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span> () &#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int cas, n, m;</div><div class="line">    scanf(<span class="string">"%d"</span>, &amp;cas);</div><div class="line">    t[0] = 1;</div><div class="line">    <span class="keyword">for</span> (int i = 1; i &lt; 55; i++)</div><div class="line">        t[i] = t[i-1] * 2;</div><div class="line">    <span class="keyword">for</span> (int i = 1; i &lt;= cas; i++) &#123;</div><div class="line">        p = 0;</div><div class="line">        int root = -1;</div><div class="line">        scanf(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</div><div class="line">        <span class="keyword">for</span> (int j = 0; j &lt; n; j++) &#123;</div><div class="line">            scanf(<span class="string">"%lld"</span>, &amp;a);</div><div class="line">            insert(root, 50, a);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d:\n"</span>, i);</div><div class="line">        <span class="keyword">for</span> (int j = 0; j &lt; m; j++) &#123;</div><div class="line">            scanf(<span class="string">"%lld"</span>, &amp;a);</div><div class="line">            query(0, 50, a);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>字典树</p>
<h2 id="HDU-4826"><a href="#HDU-4826" class="headerlink" title="HDU 4826"></a>HDU 4826</h2><h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line">using namespace std;</div><div class="line">int g[maxn][maxn];</div><div class="line">int dp[maxn][maxn][3];</div><div class="line">int flag=1;</div><div class="line">int n,m;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=m;j++)&#123;</div><div class="line">                scanf(<span class="string">"%d"</span>,&amp;g[i][j]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        memset(dp,-0x3f3f3f3f,sizeof(dp));</div><div class="line">        dp[1][1][0]=dp[1][1][1]=dp[1][1][2]=g[1][1];</div><div class="line">        <span class="keyword">for</span>(int i=2;i&lt;=n;i++) dp[i][1][0]=dp[i-1][1][0]+g[i][1];</div><div class="line">        <span class="keyword">for</span>(int j=2;j&lt;=m;j++)&#123;</div><div class="line">            <span class="keyword">for</span>(int i=1;i&lt;=n;i++) dp[i][j][2]=max(max(dp[i][j-1][0],dp[i][j-1][1]),dp[i][j-1][2])+g[i][j];</div><div class="line">            <span class="keyword">for</span>(int i=n-1;i&gt;=1;i--) dp[i][j][1]=max(dp[i+1][j][1],dp[i+1][j][2])+g[i][j];</div><div class="line">            <span class="keyword">for</span>(int i=2;i&lt;=n;i++) dp[i][j][0]=max(dp[i-1][j][0],dp[i-1][j][2])+g[i][j];</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d:\n%d\n"</span>,flag++,max(max(dp[1][m][0],dp[1][m][1]),dp[1][m][2]));</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>dfs超时<br>dp即可 第三维记录方向 初始化第一列 第二列开始更新每个方向的状态即可</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2017acm final]]></title>
      <url>http://xuboming8.github.io/2017/05/29/2017acm-final/</url>
      <content type="html"><![CDATA[<h1 id="2017acm-final"><a href="#2017acm-final" class="headerlink" title="2017acm final"></a>2017acm final</h1><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line">using namespace std;</div><div class="line">int n,t;</div><div class="line">double d[maxn],s[maxn];</div><div class="line">double ans=-1;</div><div class="line">bool check(double x)&#123;</div><div class="line">	double ret=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) ret+=d[i]/(s[i]+x);</div><div class="line">	<span class="built_in">return</span> ret&gt;=t;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	cin&gt;&gt;n&gt;&gt;t;</div><div class="line">	int M<span class="keyword">in</span>=inf;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		cin&gt;&gt;d[i]&gt;&gt;s[i];</div><div class="line">		M<span class="keyword">in</span>=min(M<span class="keyword">in</span>,(int)s[i]);</div><div class="line">	&#125;</div><div class="line">	M<span class="keyword">in</span>=-M<span class="keyword">in</span>;</div><div class="line">	double l=(double)M<span class="keyword">in</span>,r=1000000000.0,mid=0.0;</div><div class="line">	<span class="keyword">while</span>(l-r&lt;=1e-7)&#123;</div><div class="line">		mid=(l+r)/2.0;</div><div class="line">		<span class="keyword">if</span>(check(mid))&#123;</div><div class="line">			ans=mid;</div><div class="line">			l=mid+1e-7;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> r=mid-(1e-7);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.6lf\n"</span>,ans);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>二分答案<br>注意精度 下限用速度必须非负算出 上限1e9<br>check里返回ret&gt;=t</p>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">int g[30][30];</div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	int n,m;</div><div class="line">	cin&gt;&gt;m&gt;&gt;n;</div><div class="line">	memset(g,0,sizeof(g));</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">		char a,b;</div><div class="line">		cin&gt;&gt;a&gt;&gt;b;</div><div class="line">		g[a-<span class="string">'a'</span>][b-<span class="string">'a'</span>]=1;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;26;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;26;j++)&#123;</div><div class="line">			<span class="keyword">if</span>(g[i][j]==1)&#123;</div><div class="line">				<span class="keyword">for</span>(int k=0;k&lt;26;k++)&#123;</div><div class="line">					<span class="keyword">if</span>(g[k][i]==1) g[k][j]=1;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		string s1,s2;</div><div class="line">		cin&gt;&gt;s1&gt;&gt;s2;</div><div class="line">		<span class="keyword">if</span>(s1.length()!=s2.length())&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"no"</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		int flag=0;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;s1.length();j++)&#123;</div><div class="line">			<span class="keyword">if</span>((s1[j]==s2[j])||(s1[j]!=s2[j]&amp;&amp;g[s1[j]-<span class="string">'a'</span>][s2[j]-<span class="string">'a'</span>]==1)) flag++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(flag==s1.length()) cout&lt;&lt;<span class="string">"yes"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> cout&lt;&lt;<span class="string">"no"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>n大小为26暴力即可<br>类似存图的关系存储转换关系</p>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define N 333</span></div><div class="line"><span class="comment">#define n 257</span></div><div class="line">const LL inf =1e18; </div><div class="line">using namespace std;</div><div class="line">LL f[N][N],cost[N][N];</div><div class="line">int a[N];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	int d,p;</div><div class="line">	cin&gt;&gt;d&gt;&gt;p;</div><div class="line">	p++;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;d;i++)&#123;</div><div class="line">		int x,y;</div><div class="line">		cin&gt;&gt;x&gt;&gt;y;</div><div class="line">		a[x+1]=y;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=i+1;j&lt;=n;j++)&#123;</div><div class="line">			cost[i][j]=0;</div><div class="line">			<span class="keyword">for</span>(int k=i+1;k&lt;=j-1;k++)&#123;</div><div class="line">				int dist=min(i==0?n:k-i,j==n?n:j-k);</div><div class="line">				cost[i][j]+=a[k]*1LL*dist*dist;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;=p;j++)&#123;</div><div class="line">			f[i][j]=inf;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	f[0][0]=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;p;j++)&#123;</div><div class="line">			<span class="keyword">if</span>(f[i][j]==inf) <span class="built_in">continue</span>;</div><div class="line">			<span class="keyword">for</span>(int k=i+1;k&lt;=n;k++)&#123;</div><div class="line">				f[k][j+1]=min(f[k][j+1],f[i][j]+cost[i][k]);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;f[n][p]&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>dp</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cf&at&hiho杂选二]]></title>
      <url>http://xuboming8.github.io/2017/05/29/cf-at-hiho%E6%9D%82%E9%80%89%E4%BA%8C/</url>
      <content type="html"><![CDATA[<h1 id="cf-amp-at-amp-hiho杂选二"><a href="#cf-amp-at-amp-hiho杂选二" class="headerlink" title="cf&amp;at&amp;hiho杂选二"></a>cf&amp;at&amp;hiho杂选二</h1><h2 id="hihocoder152周-hiho"><a href="#hihocoder152周-hiho" class="headerlink" title="hihocoder152周_hiho"></a>hihocoder152周_hiho</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><a id="more"></a>
<p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/149603443382.jpg" alt=""></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 400050 </span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">	LL x;</div><div class="line">	int flag;</div><div class="line">	node(LL x,int flag):x(x),flag(flag)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">bool cmp(node a,node b)&#123;</div><div class="line">	<span class="built_in">return</span> a.x&lt;b.x;</div><div class="line">&#125;</div><div class="line">vector&lt;node&gt;e;</div><div class="line">LL cnta[maxn],cntb[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	int n,m;</div><div class="line">	cin&gt;&gt;n&gt;&gt;m;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=2*n;i++)&#123;</div><div class="line">		LL data;</div><div class="line">		cin&gt;&gt;data;</div><div class="line">		<span class="keyword">if</span>(i&amp;1) e.push_back(node(data,1));</div><div class="line">		<span class="keyword">else</span> e.push_back(node(data,2));</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=2*m;i++)&#123;</div><div class="line">		LL data;</div><div class="line">		cin&gt;&gt;data;</div><div class="line">		<span class="keyword">if</span>(i&amp;1) e.push_back(node(data,3));</div><div class="line">		<span class="keyword">else</span> e.push_back(node(data,4));</div><div class="line">	&#125;</div><div class="line">	sort(e.begin(),e.end(),cmp);</div><div class="line">	LL sum=0,st=0;</div><div class="line">	memset(cnta,0,sizeof(cnta));</div><div class="line">	memset(cntb,0,sizeof(cntb));</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e.size();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(e[i].flag==1)&#123;</div><div class="line">			cnta[i]=(i==0?0:cnta[i-1]);</div><div class="line">			cntb[i]=(i==0?0:cntb[i-1]);</div><div class="line">			cnta[i]++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(e[i].flag==2)&#123;</div><div class="line">			cnta[i]=(i==0?0:cnta[i-1]);</div><div class="line">			cntb[i]=(i==0?0:cntb[i-1]);</div><div class="line">			cnta[i]--;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(e[i].flag==3)&#123;</div><div class="line">			cnta[i]=(i==0?0:cnta[i-1]);</div><div class="line">			cntb[i]=(i==0?0:cntb[i-1]);</div><div class="line">			cntb[i]++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			cnta[i]=(i==0?0:cnta[i-1]);</div><div class="line">			cntb[i]=(i==0?0:cntb[i-1]);</div><div class="line">			cntb[i]--;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e.size();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(!(cnta[i]&gt;0 &amp;&amp; cntb[i]==0))&#123;</div><div class="line">			<span class="keyword">if</span>(st!=i) sum+=(e[i].x<span class="_">-e</span>[st].x),st=i+1;</div><div class="line">			<span class="keyword">else</span> st++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;sum&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这道题是一类区间问题的变体，我们先来看一道最基础的区间问题：<br>给定N个区间[S1, E1], [S2, E2], … [SN, EN]，求这些区间并集的长度。<br>这道题通常的解法是，我们把这N个区间的2N个端点从左到右排列在数轴上P1, P2, … P2N。<br>并且如果一个点Pi是原区间的左端点，我们就把它标记成绿色；如果是右端点，就标记成蓝色。<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/149603479718.jpg" alt=""><br>值得注意的是这2N个点中可能存在重合的点。比如假设有两个区间[1, 3]和[3, 5]，那么在3这个位置上<br>就同时存在一个绿点(左端点)和蓝点(右端点)。某些情况下我们在排序时需要特别处理重合的点，例如要<br>保证蓝点都排在绿点之前。不过本题我们无需特殊处理，重合的点无论谁在前谁在后都不影响结果。<br>这2N个点把数轴分成了2N+1段，(-INF, P1), (P1, P2), (P2, P3) … (P2N-1, P2N), (P2N, +INF)。<br>每一段内部被原来区间集合覆盖的情况都是相同的。换句话说，不会出现(Pi, Pi+1)的左半部分被第1、3、5号<br>区间覆盖，而右半部分只被第1、3号区间覆盖这种情况。<br>所以我们可以从左到右扫描每一段，令cnt计数器初始值=0。当扫过一个绿点时，cnt++；扫过一个蓝点时cnt–。<br>我们可以发点对于(Pi, Pi+1)这一段，处理完Pi时的cnt值恰好代表了这一段被几个原来的区间同时覆盖。<br>有了每一段的cnt值，我们可以做很多事情。例如要求区间并集的长度，我们可以找出所有cnt值大于0的段<br>(Pi, Pi+1)，并把这些段的长度(Pi+1 - Pi)求和。我们还可以知道哪段被覆盖了最多次：自然是cnt值最大的段。<br>对于给定的坐标X，我们可以在O(logN)的时间内求出X这个点被覆盖多少次：我们只需要在P1, P2, … P2N中二分<br>查找出X的位置，即Pi &lt; X &lt; Pi+1，那么(Pi, Pi+1)这一段的cnt值就是答案。(当X恰好是端点时需要特判，取决于<br>给出的区间是开区间还是闭区间)<br>好了，我们回到《区间求差》这道题目。我们可以把A和B集合中2N+2M个端点都从左到右排列在数轴上。并且用4种颜色<br>标记出每个点是A的左端点、A的右端点、B的左端点、B的右端点。然后我们用两个计数器cntA和cntB来分别维护每一段<br>被A集合中的区间覆盖多少次、以及被B集合的区间覆盖多少次。那么如果某一段(Pi, Pi+1)满足cntA&gt;0且cntB=0，<br>那么它一定是A-B的一部分。我们对于这些段的长度求和即可。<br>整个算法对于端点排序的部分复杂度是O(NlogN)的，对于从左到右扫描复杂度是O(N)的。总体复杂度是O(NlogN)。</p>
<h2 id="atcoder-contest015-A"><a href="#atcoder-contest015-A" class="headerlink" title="atcoder_contest015_A"></a>atcoder_contest015_A</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>在A到B的区间内取N个数字(A和B必取) 问求和后有多少种情况</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	LL n,a,b;</div><div class="line">	cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;</div><div class="line">	<span class="keyword">if</span>(n==1)&#123;</div><div class="line">		<span class="keyword">if</span>(a==b) cout&lt;&lt;<span class="string">"1"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> cout&lt;&lt;<span class="string">"0"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">if</span>(a&gt;b) cout&lt;&lt;<span class="string">"0"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> cout&lt;&lt;(n-2)*(b<span class="_">-a</span>)+1&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>除去最大值和最小值还需取n-2个 最大值为(n-2)A 最小值为(n-2)B 这之间的每个数字都能取到<br>所以最大值-最小值+1就是答案<br>注意特殊情况特判</p>
<h2 id="cf-round416-c"><a href="#cf-round416-c" class="headerlink" title="cf_round416_c"></a>cf_round416_c</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>一个线段内选择若干个连续区间 满足每个区间内出现的所有数字只出现在该区间内 并且要求所有区间内出现的数字(重复数字只算一次)xor和最大<br>求sum</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int maxn=5050;</div><div class="line">int dp[maxn],L[maxn],R[maxn],arr[maxn];</div><div class="line">int vis[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>() &#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int n,x;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;arr[i]);</div><div class="line">        x=arr[i];</div><div class="line">        <span class="keyword">if</span>(L[x]==0) L[x]=i;</div><div class="line">        R[x]=i;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">        int first=L[arr[i]],ret=0;</div><div class="line">        dp[i]=dp[i-1];</div><div class="line">        memset(vis,0,sizeof(vis));</div><div class="line">        <span class="keyword">for</span>(int j=i;j&gt;=1;j--)&#123;</div><div class="line">            x=arr[j];</div><div class="line">            <span class="keyword">if</span>(R[x]&gt;i) <span class="built_in">break</span>;</div><div class="line">            first=min(first,L[x]);</div><div class="line">            <span class="keyword">if</span>(!vis[x])&#123;</div><div class="line">                vis[x]=1;</div><div class="line">                ret^=x;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(first==j)&#123;</div><div class="line">            	dp[i]=max(dp[i],dp[j-1]+ret);</div><div class="line">			&#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[n]);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>dp<br>预处理每个数字出现最左边和最右边的位置<br>外层循环遍历n次 内层循环从i逆序倒推 如果有某个数字超过该区间 即右边界越界 break<br>同时更新区间的最左端点 同时用vis数组记录区间内的xor值(hash思想避免了重复数字)<br>如果左端点等于j 那么改区间合法 更新dp[i]的值<br>主要每次外层循环vis数组要初始化 同时dp也初始化为前一位的值</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MST模板]]></title>
      <url>http://xuboming8.github.io/2017/05/28/MST%E6%A8%A1%E6%9D%BF/</url>
      <content type="html"><![CDATA[<h1 id="MST模板"><a href="#MST模板" class="headerlink" title="MST模板"></a>MST模板</h1><h2 id="prime"><a href="#prime" class="headerlink" title="prime"></a>prime</h2><p><a href="http://blog.csdn.net/yeruby/article/details/38615045" target="_blank" rel="external">prime详解</a></p>
<h3 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line">using namespace std;</div><div class="line">int g[maxn][maxn];</div><div class="line">int lowcost[maxn];</div><div class="line">int visit[maxn];</div><div class="line">int n;     </div><div class="line">int <span class="function"><span class="title">prime</span></span>()&#123;</div><div class="line">    int M<span class="keyword">in</span>,mincost=0,next;</div><div class="line">    memset(visit,0,sizeof(visit));</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">        lowcost[i]=g[1][i];</div><div class="line">    &#125;</div><div class="line">    visit[1]=1;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">        M<span class="keyword">in</span>=inf;</div><div class="line">        <span class="keyword">for</span>(int j=1;j&lt;=n;j++)&#123;</div><div class="line">            <span class="keyword">if</span>(!visit[j] &amp;&amp; M<span class="keyword">in</span>&gt;lowcost[j])&#123;</div><div class="line">                M<span class="keyword">in</span>=lowcost[j];</div><div class="line">                next=j;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        mincost+=M<span class="keyword">in</span>;</div><div class="line">        visit[next]=1;</div><div class="line">        <span class="keyword">for</span>(int j=1;j&lt;=n;j++)&#123;</div><div class="line">            <span class="keyword">if</span>(!visit[j] &amp;&amp; lowcost[j]&gt;g[next][j])&#123;</div><div class="line">                lowcost[j]=g[next][j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> mincost;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0);</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n)&#123;</div><div class="line">        memset(g,inf,sizeof(g));</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=n;j++)&#123;</div><div class="line">                cin&gt;&gt;g[i][j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        int cost=prime();</div><div class="line">        cout&lt;&lt;cost&lt;&lt;endl;    </div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">//</div><div class="line">6 10  </div><div class="line">1 2 6  </div><div class="line">1 3 1  </div><div class="line">1 4 5  </div><div class="line">2 3 5  </div><div class="line">2 5 3  </div><div class="line">3 4 5  </div><div class="line">3 5 6  </div><div class="line">3 6 4  </div><div class="line">4 6 2  </div><div class="line">5 6 6 </div><div class="line">answer:15</div></pre></td></tr></table></figure>
<h2 id="kruskal"><a href="#kruskal" class="headerlink" title="kruskal"></a>kruskal</h2><p><a href="http://blog.csdn.net/luomingjun12315/article/details/47700237" target="_blank" rel="external">kruskal详解</a></p>
<h3 id="模版-1"><a href="#模版-1" class="headerlink" title="模版"></a>模版</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100000</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">struct edge&#123;</div><div class="line">	int u,v,w;</div><div class="line">	edge(int u,int v,int w):u(u),v(v),w(w)&#123;&#125;</div><div class="line">	bool operator &lt; (const edge&amp; x) const&#123;</div><div class="line">		<span class="built_in">return</span> w&lt;x.w;</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line">int n,m;</div><div class="line">int p[maxn];</div><div class="line">vector&lt;edge&gt;e;</div><div class="line">int find(int x)&#123;</div><div class="line">	<span class="built_in">return</span> x==p[x]?x:p[x]=find(p[x]);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">kruskal</span></span>()&#123;</div><div class="line">	int ans=0;</div><div class="line">	int cnt=0;</div><div class="line">	sort(e.begin(),e.end());</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++) p[i]=i;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;m;i++)&#123;</div><div class="line">		int x=find(e[i].u),y=find(e[i].v);</div><div class="line">		<span class="keyword">if</span>(x!=y)&#123;</div><div class="line">			ans+=e[i].w;</div><div class="line">			p[x]=y;</div><div class="line">			cnt++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(cnt==n-1) <span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	cin&gt;&gt;n&gt;&gt;m;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">		int u,v,w;</div><div class="line">		cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">		e.pb(edge(u,v,w));</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;kruskal()&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">//</div><div class="line">6 10  </div><div class="line">1 2 6  </div><div class="line">1 3 1  </div><div class="line">1 4 5  </div><div class="line">2 3 5  </div><div class="line">2 5 3  </div><div class="line">3 4 5  </div><div class="line">3 5 6  </div><div class="line">3 6 4  </div><div class="line">4 6 2  </div><div class="line">5 6 6 </div><div class="line">answer:15</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Polya计数]]></title>
      <url>http://xuboming8.github.io/2017/05/25/Polay%E8%AE%A1%E6%95%B0/</url>
      <content type="html"><![CDATA[<h1 id="Polay计数"><a href="#Polay计数" class="headerlink" title="Polay计数"></a>Polay计数</h1><h2 id="POJ-2409"><a href="#POJ-2409" class="headerlink" title="POJ 2409"></a>POJ 2409</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>用ｃ种颜色给长度为ｓ的项链染色，一共有多少种方案</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">LL c,s;</div><div class="line">LL gcd(LL a,LL b)&#123;</div><div class="line">	<span class="keyword">if</span>(b==0) <span class="built_in">return</span> a;</div><div class="line">	<span class="built_in">return</span> gcd(b,a%b);</div><div class="line">&#125; </div><div class="line">LL quickpow(LL x,LL n)&#123;</div><div class="line">	LL ans=1;</div><div class="line">	<span class="keyword">while</span>(n)&#123;</div><div class="line">		<span class="keyword">if</span>(n&amp;1) ans*=x;</div><div class="line">		x*=x;</div><div class="line">		n&gt;&gt;=1;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">LL <span class="function"><span class="title">polya</span></span>()&#123;</div><div class="line">	LL ans=0;</div><div class="line">	<span class="keyword">for</span>(LL i=1;i&lt;=s;i++) ans+=quickpow(c,gcd(i,s));</div><div class="line">	<span class="keyword">if</span>(s&amp;1) ans+=s*quickpow(c,(s+1)/2);</div><div class="line">	<span class="keyword">else</span> ans+=(s/2)*(quickpow(c,s/2+1)+quickpow(c,s/2));</div><div class="line">	<span class="built_in">return</span> ans/2/s;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;c&gt;&gt;s)&#123;</div><div class="line">		<span class="keyword">if</span>(c==0&amp;&amp;s==0) <span class="built_in">break</span>;</div><div class="line">		LL ans=polya();</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="POJ-2154"><a href="#POJ-2154" class="headerlink" title="POJ 2154"></a>POJ 2154</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>有一个长度为n的项链，项链上每颗钻石有n种染色方案，问有多少种方案</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int n,mod;</div><div class="line">vector&lt;int&gt;divisor;</div><div class="line">vector&lt;int&gt;prime_factor;</div><div class="line">void Divisor(int n)&#123;      //n的所有因数 </div><div class="line">	int m=sqrt(n+0.5);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(n%i==0)&#123;</div><div class="line">			divisor.push_back(i);</div><div class="line">			<span class="keyword">if</span>(i!=n/i) divisor.push_back(n/i);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void solve_prime_factor(int n)&#123;   //唯一分解定理分解质因数乘积 </div><div class="line">	int m=sqrt(n+0.5);</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=m;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(n%i==0)&#123;</div><div class="line">			prime_factor.push_back(i);</div><div class="line">			<span class="keyword">while</span>(n%i==0) n/=i;</div><div class="line">		&#125;</div><div class="line">	&#125;	</div><div class="line">	<span class="keyword">if</span>(n&gt;1) prime_factor.push_back(n);</div><div class="line">&#125;</div><div class="line">int quick_pow(int x,int n,int mod)&#123;</div><div class="line">	int ans=1;</div><div class="line">	x%=mod;</div><div class="line">	<span class="keyword">while</span>(n)&#123;</div><div class="line">		<span class="keyword">if</span>(n&amp;1) ans=ans*x%mod;</div><div class="line">		x=x*x%mod;</div><div class="line">		n&gt;&gt;=1;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int euler_phi(int n)&#123;</div><div class="line">	int m=prime_factor.size();</div><div class="line">	int ans=n;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;m;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(n%prime_factor[i]==0)&#123;</div><div class="line">			ans=ans/prime_factor[i]*(prime_factor[i]-1);</div><div class="line">			<span class="keyword">while</span>(n%prime_factor[i]==0) n/=prime_factor[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(n&gt;1) ans=ans/n*(n-1);</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int polya(int n,int mod)&#123;</div><div class="line">	Divisor(n);</div><div class="line">	solve_prime_factor(n);</div><div class="line">	int ans=0;</div><div class="line">	int m=divisor.size();</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;m;i++)&#123;</div><div class="line">		int euler=euler_phi(divisor[i])%mod;</div><div class="line">		ans+=euler*quick_pow(n,n/divisor[i]-1,mod)%mod;</div><div class="line">		ans%=mod;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans%mod;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		cin&gt;&gt;n&gt;&gt;mod;</div><div class="line">		divisor.clear(),prime_factor.clear();</div><div class="line">		int ans=polya(n,mod);</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-5858"><a href="#HDU-5858" class="headerlink" title="HDU 5858"></a>HDU 5858</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>n个点围成一个圈，每个人都可染成黑或者白，任意相邻的两个人不可以染成黑色，并且循环同构，问染色的方案数</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p><a href="http://blog.csdn.net/viphong/article/details/52540902" target="_blank" rel="external">转跳博客</a></p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;  </div><div class="line">typedef long long ll;  </div><div class="line">const ll mod = 1e9+7;   </div><div class="line">struct Matrix  &#123;  </div><div class="line">    ll mat[5][5];  </div><div class="line">    int r, c;  </div><div class="line">    void init(int r, int c)  &#123;  </div><div class="line">        this-&gt;r = r, this-&gt;c = c;  </div><div class="line">        memset(mat, 0, sizeof(mat));  </div><div class="line">    &#125;  </div><div class="line">    void <span class="function"><span class="title">identity</span></span>()&#123;  </div><div class="line">        <span class="keyword">for</span>(int i = 0; i &lt; r; i++)  </div><div class="line">            mat[i][i] = 1;  </div><div class="line">    &#125;  </div><div class="line">&#125;;  </div><div class="line">Matrix operator * (const Matrix &amp;a, const Matrix &amp;b)  &#123;  </div><div class="line">    Matrix c;  </div><div class="line">    c.init(a.r, b.c);  </div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; a.r; i++)  </div><div class="line">        <span class="keyword">for</span>(int k = 0; k &lt; a.c; k++)  </div><div class="line">            <span class="keyword">if</span>(a.mat[i][k])</div><div class="line">                <span class="keyword">for</span>(int j = 0; j &lt; b.c; j++)  </div><div class="line">                    c.mat[i][j] = (c.mat[i][j] + a.mat[i][k] * b.mat[k][j] % mod) % mod;  </div><div class="line">    <span class="built_in">return</span> c;  </div><div class="line">&#125;  </div><div class="line">Matrix operator ^ (Matrix x, int n)  &#123;  </div><div class="line">    Matrix res;  </div><div class="line">    res.init(x.r, x.c), res.identity();  </div><div class="line">    <span class="keyword">while</span>(n)  &#123;  </div><div class="line">        <span class="keyword">if</span>(n &amp; 1) res = res * x;  </div><div class="line">        x = x * x;  </div><div class="line">        n &gt;&gt;= 1;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> res;  </div><div class="line">&#125;   </div><div class="line">ll f(ll n)&#123;  </div><div class="line">    <span class="keyword">if</span>(n == 1) <span class="built_in">return</span> 1;  </div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n == 2) <span class="built_in">return</span> 3;  </div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n == 3) <span class="built_in">return</span> 4;  </div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n == 4) <span class="built_in">return</span> 7;  </div><div class="line">    <span class="keyword">else</span>&#123;  </div><div class="line">        Matrix a;  </div><div class="line">        a.init(2, 2);  </div><div class="line">        a.mat[0][0] = a.mat[0][1] = a.mat[1][0] = 1;  </div><div class="line">        a = a ^ (n-2);  </div><div class="line">        <span class="built_in">return</span> (a.mat[0][0]*3+a.mat[0][1]*1)%mod; </div><div class="line">    &#125;  </div><div class="line">&#125;</div><div class="line">ll quick_pow(ll x, ll n)  &#123;  </div><div class="line">    ll res = 1;  </div><div class="line">    x %= mod;  </div><div class="line">    <span class="keyword">while</span>(n)  &#123;  </div><div class="line">        <span class="keyword">if</span>(n &amp; 1) res = res * x % mod;  </div><div class="line">        x = x * x % mod;  </div><div class="line">        n &gt;&gt;= 1;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> res;  </div><div class="line">&#125; </div><div class="line">vector&lt;ll&gt; divisors(ll n)  &#123;  </div><div class="line">    vector&lt;ll&gt; res;  </div><div class="line">    ll m = (ll)floor(sqrt(n * 1.0) + 0.5);  </div><div class="line">    <span class="keyword">for</span>(ll i = 1; i &lt;= m; i++)  &#123;  </div><div class="line">        <span class="keyword">if</span>(n % i == 0)  &#123;  </div><div class="line">            res.push_back(i);  </div><div class="line">            <span class="keyword">if</span>(i != n / i) res.push_back(n / i);  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> res;  </div><div class="line">&#125;  </div><div class="line">vector&lt;ll&gt; prime_factor(ll n)  &#123;  </div><div class="line">    vector&lt;ll&gt; res;  </div><div class="line">    ll m = (ll)floor(sqrt(n * 1.0) + 0.5);  </div><div class="line">    <span class="keyword">for</span>(ll i = 2; i &lt;= m; i++)  &#123;  </div><div class="line">        <span class="keyword">if</span>(n % i == 0)  &#123;  </div><div class="line">            res.push_back(i);  </div><div class="line">            <span class="keyword">while</span>(n % i == 0) n /= i;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">if</span>(n &gt; 1) res.push_back(n);  </div><div class="line">    <span class="built_in">return</span> res;  </div><div class="line">&#125;   </div><div class="line">ll euler_phi(ll n, const vector&lt;ll&gt; &amp;prime)  </div><div class="line">&#123;  </div><div class="line">    ll res = n;  </div><div class="line">    int m = prime.size();  </div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; m; i++)  &#123;  </div><div class="line">        <span class="keyword">if</span>(n % prime[i] == 0)  &#123;  </div><div class="line">            res = res / prime[i] * (prime[i] - 1);  </div><div class="line">            <span class="keyword">while</span>(n % prime[i] == 0) n /= prime[i];  </div><div class="line">        &#125;  </div><div class="line">    &#125;</div><div class="line">	<span class="keyword">if</span>(n&gt;1) res=res/n*(n-1);  </div><div class="line">    <span class="built_in">return</span> res % mod;  </div><div class="line">&#125;     </div><div class="line">ll polya(ll n)  &#123;  </div><div class="line">    vector&lt;ll&gt; divs = divisors(n);  </div><div class="line">    vector&lt;ll&gt; prime = prime_factor(n);  </div><div class="line">    int m = divs.size();  </div><div class="line">    ll ans = 0;  </div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; m; i++)  &#123;  </div><div class="line">        ll euler = euler_phi(divs[i], prime);  </div><div class="line">        ans += euler * f(n / divs[i]) % mod;  </div><div class="line">        ans %= mod;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> ans * quick_pow(n, mod - 2) % mod;</div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);  </div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">    ll n;  </div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n)  &#123;  </div><div class="line">        <span class="keyword">if</span>(n == 1)  &#123;  </div><div class="line">            <span class="built_in">printf</span>(<span class="string">"2\n"</span>);  </div><div class="line">            <span class="built_in">continue</span>;  </div><div class="line">        &#125;  </div><div class="line">        ll ans = polya(n);  </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="POJ-2888"><a href="#POJ-2888" class="headerlink" title="POJ 2888"></a>POJ 2888</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>用m种颜色的石头围成一个n个石头的项链。有k对颜色不能串在相邻位置。两种情况通过旋转能重合则属于同一种情况。问有多少种串法</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int MOD = 9973;</div><div class="line">//矩阵</div><div class="line">struct Matrix</div><div class="line">&#123;</div><div class="line">    int mat[20][20];</div><div class="line">    int n,m;</div><div class="line">    <span class="function"><span class="title">Matrix</span></span>()&#123;&#125;</div><div class="line">    Matrix(int _n,int _m)</div><div class="line">    &#123;</div><div class="line">        n = _n; m  = _m;</div><div class="line">        <span class="keyword">for</span>(int i = 0;i &lt; n;i++)</div><div class="line">            <span class="keyword">for</span>(int j = 0;j &lt; m;j++)</div><div class="line">                mat[i][j] = 0;</div><div class="line">    &#125;</div><div class="line">    Matrix operator *(const Matrix &amp;b)const</div><div class="line">    &#123;</div><div class="line">        Matrix ret = Matrix(n,b.m);</div><div class="line">        <span class="keyword">for</span>(int i = 0;i &lt; ret.n;i++)</div><div class="line">            <span class="keyword">for</span>(int j = 0;j &lt; ret.m;j++)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">for</span>(int k = 0;k &lt; m;k++)</div><div class="line">                &#123;</div><div class="line">                    ret.mat[i][j] += mat[i][k]*b.mat[k][j];</div><div class="line">                    ret.mat[i][j] %= MOD;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        <span class="built_in">return</span> ret;</div><div class="line">    &#125;</div><div class="line">    Matrix operator ^(int b)const</div><div class="line">    &#123;</div><div class="line">        Matrix ret = Matrix(n,m),tmp = Matrix(n,m);</div><div class="line">        <span class="keyword">for</span>(int i = 0;i &lt; n;i++)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">for</span>(int j = 0;j &lt; m;j++)</div><div class="line">                tmp.mat[i][j] = mat[i][j];</div><div class="line">            ret.mat[i][i] = 1;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">while</span>(b)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span>(b&amp;1)ret = ret*tmp;</div><div class="line">            tmp = tmp*tmp;</div><div class="line">            b &gt;&gt;= 1;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">return</span> ret;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">//求欧拉函数</div><div class="line">long long eular(long long n)</div><div class="line">&#123;</div><div class="line">    long long ans = n;</div><div class="line">    <span class="keyword">for</span>(int i = 2;i*i &lt;= n;i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(n % i == 0)</div><div class="line">        &#123;</div><div class="line">            ans -= ans/i;</div><div class="line">            <span class="keyword">while</span>(n % i == 0)</div><div class="line">                n /= i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(n &gt; 1)ans -= ans/n;</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">//快速幂，用来求逆元</div><div class="line">long long pow_m(long long a,long long n,long long mod)</div><div class="line">&#123;</div><div class="line">    long long ret = 1;</div><div class="line">    long long tmp = a%mod;</div><div class="line">    <span class="keyword">while</span>(n)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(n&amp;1)</div><div class="line">        &#123;</div><div class="line">            ret *= tmp;</div><div class="line">            ret %= mod;</div><div class="line">        &#125;</div><div class="line">        tmp *= tmp;</div><div class="line">        tmp %= mod;</div><div class="line">        n&gt;&gt;=1;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> ret;</div><div class="line">&#125;</div><div class="line">//利用欧拉定理求逆元</div><div class="line">long long inv(long long x,long long mod)//mod为素数</div><div class="line">&#123;</div><div class="line">    <span class="built_in">return</span> pow_m(x,mod-2,mod);</div><div class="line">&#125;</div><div class="line"></div><div class="line">Matrix A,B;</div><div class="line">int n,m;</div><div class="line">//求x个元素对应的f</div><div class="line">int NoChange(int x)</div><div class="line">&#123;</div><div class="line">    B = A^x;</div><div class="line">    int ans = 0;</div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; m;i++)</div><div class="line">    &#123;</div><div class="line">        ans += B.mat[i][i];</div><div class="line">        ans %= MOD;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">solve</span></span>()</div><div class="line">&#123;</div><div class="line">    int ans = 0;</div><div class="line">    <span class="keyword">for</span>(int i = 1;i*i &lt;= n;i++)</div><div class="line">        <span class="keyword">if</span>(n % i == 0)</div><div class="line">        &#123;</div><div class="line">            ans = ans + eular(i)*NoChange(n/i)%MOD;</div><div class="line">            ans %= MOD;</div><div class="line">            <span class="keyword">if</span>(n/i != i)</div><div class="line">            &#123;</div><div class="line">                ans = ans + eular(n/i)*NoChange(i)%MOD;</div><div class="line">                ans %= MOD;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    ans *= inv(n,MOD);</div><div class="line">    <span class="built_in">return</span> ans%MOD;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    int T;</div><div class="line">    int k;</div><div class="line">    int u,v;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;T);</div><div class="line">    <span class="keyword">while</span>(T--)</div><div class="line">    &#123;</div><div class="line">        scanf(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;k);</div><div class="line">        A = Matrix(m,m);</div><div class="line">        <span class="keyword">for</span>(int i = 0;i &lt; m;i++)</div><div class="line">            <span class="keyword">for</span>(int j = 0;j &lt; m;j++)</div><div class="line">                A.mat[i][j] = 1;</div><div class="line">        <span class="keyword">while</span>(k--)</div><div class="line">        &#123;</div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">            u--;</div><div class="line">            v--;</div><div class="line">            A.mat[u][v] = A.mat[v][u] = 0;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,solve());</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cf&at 杂选]]></title>
      <url>http://xuboming8.github.io/2017/05/23/cf-at-%E6%9D%82%E9%80%89/</url>
      <content type="html"><![CDATA[<h1 id="cf-amp-at-杂选"><a href="#cf-amp-at-杂选" class="headerlink" title="cf&amp;at 杂选"></a>cf&amp;at 杂选</h1><h2 id="atcoder-contest74-D"><a href="#atcoder-contest74-D" class="headerlink" title="atcoder_contest74_D"></a>atcoder_contest74_D</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>有3N个数字 删除N个数字后 要求前一半数字的和减去后一半数字的和最大 求出最大值</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define inf 1e18 </span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line">using namespace std;</div><div class="line">priority_queue&lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt;q1;</div><div class="line">priority_queue&lt;int,vector&lt;int&gt;,less&lt;int&gt; &gt;q2;</div><div class="line">int a[maxn*3];</div><div class="line">LL suml[maxn*3],sumr[maxn*3];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	int n;</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=3*n;i++) cin&gt;&gt;a[i];</div><div class="line">	LL sum=0;</div><div class="line">	fill(suml+1,suml+1+3*n,-inf);</div><div class="line">	fill(sumr+1,sumr+1+3*n,inf);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=3*n;i++)&#123;</div><div class="line">		sum+=(LL)a[i];</div><div class="line">		q1.push(a[i]);</div><div class="line">		<span class="keyword">if</span>(i&gt;n)&#123;</div><div class="line">			int t=q1.top();</div><div class="line">			q1.pop();</div><div class="line">			sum-=(LL)t;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(i&gt;=n) suml[i]=sum;</div><div class="line">	&#125;</div><div class="line">	sum=0;</div><div class="line">	<span class="keyword">for</span>(int i=3*n;i&gt;=1;i--)&#123;</div><div class="line">		sum+=(LL)a[i];</div><div class="line">		q2.push(a[i]);</div><div class="line">		<span class="keyword">if</span>(i&lt;=2*n)&#123;</div><div class="line">			int t=q2.top();</div><div class="line">			q2.pop();</div><div class="line">			sum-=(LL)t;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(i&lt;=2*n+1) sumr[i]=sum;</div><div class="line">	&#125;</div><div class="line">	LL ans=-inf;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=3*n-1;i++) ans=max(ans,suml[i]-sumr[i+1]);</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>用优先队列模拟<br>预处理出suml和sumr 表示从左边(右边)开始前1-3N个数字前N个最大(最小)数字的和<br>遍历一遍suml[i]-sumr[i+1]即可得到最大值<br>优先队列每次队头出头满足里面的元素是数量为N的较大值</p>
<h2 id="atcoder-contest74-E"><a href="#atcoder-contest74-E" class="headerlink" title="atcoder_contest74_E"></a>atcoder_contest74_E</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>一条直线有N个矩形 每个矩形可以涂成三种颜色中的一种<br>给出M个要求 每个要求为l到r的矩形内满足至少有x种颜色的矩形</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">const LL mod=1e9+7;</div><div class="line"><span class="comment">#define maxn 305</span></div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">	int l,num;</div><div class="line">	node(int l,int num):l(l),num(num)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">LL dp[maxn][maxn][maxn];</div><div class="line">int n,m;</div><div class="line">bool check(int r,int g,int b)&#123;</div><div class="line">	int k=max(r,max(g,b));</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[k].size();i++)&#123;</div><div class="line">		int cnt=0;</div><div class="line">		int left=e[k][i].l;</div><div class="line">		<span class="keyword">if</span>(r&gt;=left) cnt++;</div><div class="line">		<span class="keyword">if</span>(g&gt;=left) cnt++;</div><div class="line">		<span class="keyword">if</span>(b&gt;=left) cnt++;</div><div class="line">		<span class="keyword">if</span>(cnt!=e[k][i].num) <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	cin&gt;&gt;n&gt;&gt;m;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">		int l,r,x;</div><div class="line">		cin&gt;&gt;l&gt;&gt;r&gt;&gt;x;</div><div class="line">		e[r].push_back(node(l,x));</div><div class="line">	&#125;</div><div class="line">	LL ans=0;</div><div class="line">	dp[0][0][0]=1;</div><div class="line">	<span class="keyword">for</span>(int r=0;r&lt;=n;r++)&#123;</div><div class="line">		<span class="keyword">for</span>(int g=0;g&lt;=n;g++)&#123;</div><div class="line">			<span class="keyword">for</span>(int b=0;b&lt;=n;b++)&#123;</div><div class="line">				LL c=dp[r][g][b];</div><div class="line">				<span class="keyword">if</span>(!c) <span class="built_in">continue</span>;</div><div class="line">				<span class="keyword">if</span>(!check(r,g,b))&#123;</div><div class="line">					dp[r][g][b]=0;</div><div class="line">					<span class="built_in">continue</span>;</div><div class="line">				&#125;</div><div class="line">				int k=max(r,max(g,b))+1;</div><div class="line">				<span class="keyword">if</span>(k==n+1)&#123;</div><div class="line">					ans+=dp[r][g][b];</div><div class="line">					ans%=mod;</div><div class="line">				&#125;</div><div class="line">				dp[k][g][b]=(dp[k][g][b]+dp[r][g][b])%mod;</div><div class="line">				dp[r][k][b]=(dp[r][k][b]+dp[r][g][b])%mod;</div><div class="line">				dp[r][g][k]=(dp[r][g][k]+dp[r][g][b])%mod;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>dp[r][g][b]表示存储红色最后一个 绿色最后一个位置 蓝色最后一个位置的涂色方法<br>vector记录的是r边界里的最左边界和需要满足的颜色个数<br>求出最后一个位置的最大值+1 该位置枚举三种颜色<br>check判断最后一个某颜色的位置是否比左边界大 若大 则cnt++ 判断最后和需要满足的num是否相等</p>
<h2 id="cf-Educational-round-21-D"><a href="#cf-Educational-round-21-D" class="headerlink" title="cf_Educational_round 21 D"></a>cf_Educational_round 21 D</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>一个数组 可以把1个数字插入到数组中的任意位置 使得数组可以分成相等的两部分<br>问可不可以满足</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long </span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line">using namespace std;</div><div class="line">LL a[maxn];</div><div class="line">LL suml[maxn],sumr[maxn];</div><div class="line">map&lt;LL,LL&gt;l,r;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0);</div><div class="line">	int n;</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	memset(suml,0,sizeof(suml));</div><div class="line">	memset(sumr,0,sizeof(sumr));</div><div class="line">	<span class="keyword">for</span>(LL i=1;i&lt;=n;i++)&#123;</div><div class="line">		cin&gt;&gt;a[i];</div><div class="line">		suml[i]=suml[i-1]+a[i];</div><div class="line">		l[a[i]]=i;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(LL i=n;i&gt;=1;i--)&#123;</div><div class="line">		sumr[i]=sumr[i+1]+a[i];</div><div class="line">		r[a[i]]=i;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(suml[n]&amp;1)&#123;</div><div class="line">		cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	&#125;</div><div class="line">	LL half=suml[n]/2;</div><div class="line">	<span class="keyword">for</span>(LL i=0;i&lt;n;i++)&#123;</div><div class="line">		<span class="keyword">if</span>((half==suml[i])||(suml[i]&lt;half&amp;&amp;l[half-suml[i]]&gt;i&amp;&amp;l[half-suml[i]]&lt;=n))&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">return</span> 0;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(LL i=n+1;i&gt;=1;i--)&#123;</div><div class="line">		<span class="keyword">if</span>((half==sumr[i])||(sumr[i]&lt;half&amp;&amp;r[half-sumr[i]]&lt;i&amp;&amp;r[half-sumr[i]]&gt;0))&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">return</span> 0;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>suml和sumr分别从左边和右边开始的前缀和<br>map记录从左边和后边开始 每个数最后出现的位置<br>如果总和为奇数 输出NO<br>如果half等于suml或者sumr 直接输出YES<br>如果左边开始的前缀和小于half 说明需要从后面调一个元素过来 若这个元素的位置大于i小于等n 那么满足<br>从右边开始同理<br>需要注意两个地方：<br>（1）：for循环为0到n-1和n+1到1 边界取到0和n+1是因为可能满足half就等于某个数 直接把他移到头部或尾部<br>即可。若上限改成1和n可能存在永远无法取到单个half值的情况<br>（2）：位置的边界问题 特别注意第二个for循环从右边开始找前缀和时 需要加大于0的条件 因为可能存在某个数字<br>不存在在map中初始化为了0小于i 导致结果出错 第一个for的小于等于n可加可不加</p>
<h2 id="cf-Educational-round-21-E"><a href="#cf-Educational-round-21-E" class="headerlink" title="cf_Educational_round 21 E"></a>cf_Educational_round 21 E</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>扩大版01背包 w可取123三种情况</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;  </div><div class="line">const int MAXN=300000+10;  </div><div class="line">typedef long long  ll;  </div><div class="line">struct&#123;  </div><div class="line">    ll v;  </div><div class="line">    ll s1,s2;  </div><div class="line">&#125;dp[MAXN];  </div><div class="line">ll a[4][MAXN];  //类似vector存值</div><div class="line">ll s[4][MAXN];  //前缀和</div><div class="line">int num[4];     //表示123三种容量的个数</div><div class="line">int cmp(int x,int y)&#123;<span class="built_in">return</span> x&gt;y;&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>() &#123;  </div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int n,m;  </div><div class="line">    scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);  </div><div class="line">    num[1]=num[2]=num[3]=0;  </div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;  </div><div class="line">        ll w,c;  </div><div class="line">        scanf(<span class="string">"%lld%lld"</span>,&amp;w,&amp;c);  </div><div class="line">        a[w][++num[w]]=c;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=3;i++)&#123;  </div><div class="line">        sort(a[i]+1,a[i]+num[i]+1,cmp);  </div><div class="line">        <span class="keyword">for</span>(int j=1;j&lt;=num[i];j++)&#123;  </div><div class="line">            s[i][j]=s[i][j-1]+a[i][j];  </div><div class="line">        &#125;  </div><div class="line">    &#125;</div><div class="line">    dp[0].v=dp[0].s1=dp[0].s2=0;  </div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;  </div><div class="line">        dp[i]=dp[i-1];  </div><div class="line">        <span class="keyword">if</span>(dp[i-1].v+a[1][dp[i-1].s1+1]&gt;dp[i].v)&#123;  </div><div class="line">            dp[i].v=dp[i-1].v+a[1][dp[i-1].s1+1];  </div><div class="line">            dp[i].s1=dp[i-1].s1+1;  </div><div class="line">            dp[i].s2=dp[i-1].s2;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">if</span>(i&gt;=2&amp;&amp;dp[i-2].v+a[2][dp[i-2].s2+1]&gt;dp[i].v)&#123;  </div><div class="line">            dp[i].v=dp[i-2].v+a[2][dp[i-2].s2+1];  </div><div class="line">            dp[i].s1=dp[i-2].s1;  </div><div class="line">            dp[i].s2=dp[i-2].s2+1;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    ll res=0;  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=num[3];i++)&#123;  </div><div class="line">        <span class="keyword">if</span>(m&gt;=i*3)  </div><div class="line">            res=max(res,s[3][i]+dp[m-3*i].v);  </div><div class="line">    &#125;  </div><div class="line">    cout&lt;&lt;res&lt;&lt;endl;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>不能像atcoder一样用vector存+贪心暴力 超时<br>使用dp+贪心<br>dp[w]里存放一个三元组 表示w容量下 取s1个第一件物品和s2件第一件物品获得的最大价值<br>先预处理好这部分 遍历容量为3的前缀和 剩下的1和2一共还要取m-3*i件 直接dp取值即可</p>
<h2 id="atcoder-round415-C"><a href="#atcoder-round415-C" class="headerlink" title="atcoder_round415_C"></a>atcoder_round415_C</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>求一个数组中所有子串中最大值-最小值的和</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define ll long long</span></div><div class="line">using namespace std;</div><div class="line">const ll mod=1e9+7;</div><div class="line">ll a[300010],b[300010];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios::sync_with_stdio(0);</div><div class="line">	cin.tie(0);</div><div class="line">	int n;</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	ll sum=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)  cin&gt;&gt;a[i];</div><div class="line">	sort(a+1,a+n+1);</div><div class="line">	b[0]=1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)  b[i]=b[i-1]*2%mod;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		sum=(sum+a[i]*(b[i-1]-1)%mod)%mod;</div><div class="line">		sum=(sum<span class="_">-a</span>[i]*(b[n-i]-1)%mod)%mod;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;(sum+mod)%mod&lt;&lt;<span class="string">'\n'</span>;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>归纳出公式　其实就是算每个相邻的线段一共出现了多少次　再乘以线段长度<br>出现次数公式为(2^(i-1)-1)-(2^(n-i)-1)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cf杂选]]></title>
      <url>http://xuboming8.github.io/2017/05/19/cf%E6%9D%82%E9%80%89/</url>
      <content type="html"><![CDATA[<h1 id="cf杂选"><a href="#cf杂选" class="headerlink" title="cf杂选"></a>cf杂选</h1><h2 id="411-E"><a href="#411-E" class="headerlink" title="411 E"></a>411 E</h2><h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 300050</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;e1[maxn],e2[maxn];</div><div class="line">int color[maxn],used[maxn];</div><div class="line">int n,m;</div><div class="line">int ans;</div><div class="line">void dfs(int cur,int fa)&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e1[cur].size();i++) used[color[e1[cur][i]]]=1;</div><div class="line">	int col=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e1[cur].size();i++)&#123;</div><div class="line">		<span class="keyword">if</span>(color[e1[cur][i]]==0)&#123;</div><div class="line">			<span class="keyword">while</span>(used[col]==1) col++;</div><div class="line">			color[e1[cur][i]]=col;</div><div class="line">			ans=max(ans,col);</div><div class="line">			used[col]=1;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e1[cur].size();i++) used[color[e1[cur][i]]]=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e2[cur].size();i++) <span class="keyword">if</span>(e2[cur][i]!=fa) dfs(e2[cur][i],cur); </div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		int x;	</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=x;j++)&#123;</div><div class="line">			int y;	</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;y);</div><div class="line">			e1[i].push_back(y);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">		int x,y;	</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</div><div class="line">		e2[x].push_back(y);</div><div class="line">		e2[y].push_back(x);</div><div class="line">	&#125;</div><div class="line">	dfs(1,-1);</div><div class="line">	<span class="keyword">if</span>(!ans) ans=1;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++) <span class="built_in">printf</span>(<span class="string">"%d%c"</span>,color[i]?color[i]:1,i==m?<span class="string">'\n'</span>:<span class="string">' '</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>连通块染色 dfs</p>
<h2 id="412-c"><a href="#412-c" class="headerlink" title="412 c"></a>412 c</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>二分答案 二分倍数而非答案</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">LL x,y,p,q;</div><div class="line">bool check(LL t)&#123;</div><div class="line">   <span class="built_in">return</span> ((p*t&gt;=x)&amp;&amp;((q*t-p*t)&gt;=(y-x)));</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">  //  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        scanf(<span class="string">"%I64d%I64d%I64d%I64d"</span>,&amp;x,&amp;y,&amp;p,&amp;q);</div><div class="line">        LL l=0,r=1e9,mid;</div><div class="line">        LL ans=-1;</div><div class="line">        <span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">            mid=(l+r)/2;</div><div class="line">            <span class="keyword">if</span>(check(mid))&#123;</div><div class="line">                ans=mid;</div><div class="line">                r=mid-1;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> l=mid+1;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(ans==-1) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,ans*q-y);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="413-E"><a href="#413-E" class="headerlink" title="413 E"></a>413 E</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>有n件物品和它的价格 需要敲好取m件 要求a和b两个人在这m件物品里分别至少喜欢k件<br>给出a和b喜欢物品的编号<br>求出最小的cost</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define maxn 200050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;a[4];</div><div class="line">vector&lt;LL&gt;sum[4];</div><div class="line">int hasha[maxn],hashb[maxn];</div><div class="line">int c[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">  //  freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0);</div><div class="line">    int n,m,k,t;</div><div class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</div><div class="line">    memset(hasha,0,sizeof(hasha));</div><div class="line">    memset(hashb,0,sizeof(hashb));</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) cin&gt;&gt;c[i];</div><div class="line">    cin&gt;&gt;t;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;t;i++)&#123;</div><div class="line">        int x;</div><div class="line">        cin&gt;&gt;x;</div><div class="line">        hasha[x]=1;</div><div class="line">    &#125;</div><div class="line">    cin&gt;&gt;t;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;t;i++)&#123;</div><div class="line">        int x;</div><div class="line">        cin&gt;&gt;x;</div><div class="line">        hashb[x]=1;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">        <span class="keyword">if</span>(hasha[i] &amp;&amp; hashb[i]) a[3].push_back(c[i]);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!hasha[i] &amp;&amp; hashb[i]) a[2].push_back(c[i]);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(hasha[i] &amp;&amp; !hashb[i]) a[1].push_back(c[i]);</div><div class="line">        <span class="keyword">else</span> a[0].push_back(c[i]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;4;i++) sort(a[i].begin(),a[i].end());</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;4;i++) sum[i].push_back(0);</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;4;i++)&#123;</div><div class="line">        <span class="keyword">for</span>(int j=0;j&lt;a[i].size();j++) sum[i].push_back(sum[i].back()+a[i][j]);</div><div class="line">    &#125;</div><div class="line">    LL ans=1e18+1;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=a[3].size();i++)&#123;</div><div class="line">        LL cost=sum[3][i];</div><div class="line">        int need=max(0,k-i);</div><div class="line">        <span class="keyword">if</span>(need&gt;a[1].size()||need&gt;a[2].size()||i+need*2&gt;m) <span class="built_in">continue</span>;</div><div class="line">        cost+=sum[1][need],cost+=sum[2][need];</div><div class="line">        int left=m-i-2*need;</div><div class="line">        <span class="keyword">if</span>(a[1].size()-need+a[2].size()-need+a[0].size()&lt;left) <span class="built_in">continue</span>;</div><div class="line">        <span class="keyword">if</span>(left&gt;0)&#123;</div><div class="line">            int l=0,r=1e9;</div><div class="line">            <span class="keyword">while</span>(l&lt;r)&#123;</div><div class="line">                int mid=(l+r)/2;</div><div class="line">                int cnt=0;</div><div class="line">                int h=upper_bound(a[0].begin(),a[0].end(),mid)<span class="_">-a</span>[0].begin();</div><div class="line">                cnt+=max(0,h);</div><div class="line">                h=upper_bound(a[1].begin(),a[1].end(),mid)<span class="_">-a</span>[1].begin();</div><div class="line">                cnt+=max(0,h-need);</div><div class="line">                h=upper_bound(a[2].begin(),a[2].end(),mid)<span class="_">-a</span>[2].begin();</div><div class="line">                cnt+=max(0,h-need);</div><div class="line">                <span class="keyword">if</span>(cnt&gt;=left) r=mid;</div><div class="line">                <span class="keyword">else</span> l=mid+1;</div><div class="line">            &#125;</div><div class="line">            int mid=l,cnt=0;</div><div class="line">            int h=upper_bound(a[0].begin(),a[0].end(),mid)<span class="_">-a</span>[0].begin();</div><div class="line">            cnt+=max(0,h);</div><div class="line">            cost+=sum[0][h];</div><div class="line">            h=upper_bound(a[1].begin(),a[1].end(),mid)<span class="_">-a</span>[1].begin();</div><div class="line">            cnt+=max(0,h-need);</div><div class="line">            <span class="keyword">if</span>(h&gt;need) cost+=sum[1][h]-sum[1][need];</div><div class="line">            h=upper_bound(a[2].begin(),a[2].end(),mid)<span class="_">-a</span>[2].begin();</div><div class="line">            cnt+=max(0,h-need);</div><div class="line">            <span class="keyword">if</span>(h&gt;need) cost+=sum[2][h]-sum[2][need];</div><div class="line">            <span class="keyword">if</span>(cnt&gt;left) cost-=mid*(cnt-left);</div><div class="line">        &#125;</div><div class="line">        ans=min(ans,cost);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(ans&gt;1e17) ans=-1;</div><div class="line">    cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>物品只有四种状态：a和b都不喜欢 a喜欢b不喜欢 b喜欢a不喜欢 a和b都喜欢<br>分别用0 1 2 3四种状态表示他们 vector a和sum的编号与他们对应 sum求的是前i项和<br>用hash的思想把四种状态存好<br>首先从a和b都喜欢的状态可以遍历sum 接下来a和b分别还要取出喜欢的k-i件 若还有left剩余 在a或者b或者ab都不喜欢里面挑选<br>最后一个状态使用二分答案 二分的是找出012三种状态大于他们的最小的数 二分出的数字为l<br>接下来看012三种状态的剩余 若有剩余把前i项和都加上<br>这里存在一个问题 就是三个状态相加后可能大于left 这时要把多余的部分去掉<br>还需注意这里的最大值为1e18 因为1e9相乘的前n项和已经超过了int的范围 </p>
<h2 id="cf-414-C"><a href="#cf-414-C" class="headerlink" title="cf 414 C"></a>cf 414 C</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>a和b分别有一个长度为n的字母集合 要填充到一个长度也为n的字符串中 a希望字典序最大而b希望字典序最小<br>假设他们都足够聪明 他们最后的字符串填充成什么样</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"> using namespace std;</div><div class="line"> int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">  //   freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">     ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">     cin.tie(0);</div><div class="line">     string s1,s2;</div><div class="line">     cin&gt;&gt;s1&gt;&gt;s2;</div><div class="line">     int n=s1.length();</div><div class="line">     sort(s1.begin(),s1.end());</div><div class="line">     sort(s2.begin(),s2.end());</div><div class="line">     reverse(s2.begin(),s2.end());</div><div class="line">     string s;</div><div class="line">     <span class="keyword">for</span>(int i=0;i&lt;n;i++) s+=<span class="string">"?"</span>;</div><div class="line">     int l=0,r=n-1;</div><div class="line">     int a_l=0,b_l=0;</div><div class="line">     int a_r=n-(n/2)-1,b_r=(n/2)-1;</div><div class="line">     <span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">        <span class="keyword">if</span>(i%2==0)&#123;</div><div class="line">            <span class="keyword">if</span>(s1[a_l]&lt;s2[b_l])&#123;</div><div class="line">                s[l]=s1[a_l];</div><div class="line">                l++,a_l++;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                s[r]=s1[a_r];</div><div class="line">                r--,a_r--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">if</span>(s1[a_l]&lt;s2[b_l])&#123;</div><div class="line">                s[l]=s2[b_l];</div><div class="line">                l++,b_l++;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                s[r]=s2[b_r];</div><div class="line">                r--,b_r--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">     &#125;</div><div class="line">     cout&lt;&lt;s&lt;&lt;endl;</div><div class="line">     <span class="built_in">return</span> 0;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>贪心<br>把a按照升序排列 b按照降序排列 那么最后实际用到的分别就是n/2上取整的数字<br>贪心策略为：<br>首先按照奇偶性判断谁动<br>若a比b小 那么自然a把最小的放在最左边<br>若a比b大 那么两人都希望对方把该数放在第一个 所以此时不能考虑首位而要考虑末尾<br>         此时a需要把最大的数字放到末尾确保字典序最小<br>b移动与a的策略同理<br>这里需要注意的是a的数量是n-(n/2)-1 因为如果n为奇数 那么最后a需要多取一个 这样确保a的数量是正确的</p>
<h2 id="cf-414-F"><a href="#cf-414-F" class="headerlink" title="cf 414 F"></a>cf 414 F</h2><h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>线段树<br>每次可以有2种询问方式<br>1是把l和r中所有数字某位的u变成v<br>2是求出l和r中的和</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">typedef long long ll;</div><div class="line">const int N = 100000;</div><div class="line">int a[N+1][10];</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int nxt[10];</div><div class="line">	ll sum[10];</div><div class="line">&#125;;</div><div class="line">node st[N*4+1];</div><div class="line">void push_down(int rt)&#123;</div><div class="line">	<span class="keyword">for</span>(int i = 0; i &lt; 10; i++) st[rt].sum[i]=st[rt*2].sum[i]+st[rt*2+1].sum[i];</div><div class="line">&#125;</div><div class="line">void build(int rt, int l, int r)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(r<span class="_">-l</span>&lt;2)&#123;</div><div class="line">		<span class="keyword">for</span>(int i = 0; i &lt; 10; i++) st[rt].sum[i]=a[l][i];</div><div class="line">		<span class="keyword">for</span>(int i = 0; i &lt; 10; i++) st[rt].nxt[i] = i;</div><div class="line">		<span class="built_in">return</span> ;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i = 0; i &lt; 10; i++) st[rt].nxt[i] = i;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	build(rt*2,l,mid);</div><div class="line">	build(rt*2+1,mid,r);</div><div class="line">	push_down(rt);</div><div class="line">&#125;</div><div class="line">ll sum[10];</div><div class="line">void push_up(int rt, int l, int r)&#123;</div><div class="line">	memset(sum,0,sizeof(sum));</div><div class="line">	<span class="keyword">if</span>(r<span class="_">-l</span>&gt;=2)&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;10;i++)&#123;</div><div class="line">			st[rt*2].nxt[i]=st[rt].nxt[st[rt*2].nxt[i]];</div><div class="line">			st[rt*2+1].nxt[i]=st[rt].nxt[st[rt*2+1].nxt[i]];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;10;i++) sum[st[rt].nxt[i]]+=st[rt].sum[i];</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;10;i++)&#123;</div><div class="line">		st[rt].sum[i]=sum[i];</div><div class="line">		st[rt].nxt[i]=i;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void update(int rt, int l, int r, int ql, int qr, int u, int v)&#123;</div><div class="line">	push_up(rt,l,r);</div><div class="line">	<span class="keyword">if</span>(ql&gt;=r||l&gt;=qr) <span class="built_in">return</span> ;</div><div class="line">	<span class="keyword">if</span>(ql&lt;=l&amp;&amp;r&lt;=qr)&#123;</div><div class="line">		st[rt].nxt[u]=v;</div><div class="line">		push_up(rt,l,r);</div><div class="line">		<span class="built_in">return</span> ;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	update(rt*2,l,mid,ql,qr,u,v);</div><div class="line">	update(rt*2+1,mid,r,ql,qr,u,v);</div><div class="line">	push_down(rt);</div><div class="line">&#125;</div><div class="line">ll query(int rt, int l, int r, int ql, int qr)&#123;</div><div class="line">	push_up(rt,l,r);</div><div class="line">	<span class="keyword">if</span>(ql&gt;=r||l&gt;=qr) <span class="built_in">return</span> 0;</div><div class="line">	<span class="keyword">if</span>(ql&lt;=l&amp;&amp;r&lt;=qr)&#123;</div><div class="line">		ll sum=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;10;i++) sum+=ll(i)*st[rt].sum[i];</div><div class="line">		<span class="built_in">return</span> sum;</div><div class="line">	&#125;</div><div class="line">	int mid=(l+r)&gt;&gt;1;</div><div class="line">	<span class="built_in">return</span> (query(rt*2,l,mid,ql,qr)+query(rt*2+1,mid,r,ql,qr));</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">   // freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	ios_base::sync_with_stdio(0);</div><div class="line">    cin.tie(0);</div><div class="line">	int n, q;</div><div class="line">    cin&gt;&gt;n&gt;&gt;q;</div><div class="line">	<span class="keyword">for</span>(int i = 0; i &lt; n; i++)&#123;</div><div class="line">		int x;</div><div class="line">		cin&gt;&gt;x;</div><div class="line">		int cur=1;</div><div class="line">		<span class="keyword">for</span>(int j = 0; j &lt; 9; j++)&#123;</div><div class="line">			a[i][x%10] += cur;</div><div class="line">			x/=10;</div><div class="line">			cur*=10;</div><div class="line">			<span class="keyword">if</span>(x==0) <span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	build(1,0,n);</div><div class="line">	<span class="keyword">for</span>(int i = 0; i &lt; q; i++)&#123;</div><div class="line">		int <span class="built_in">type</span>;</div><div class="line">		cin&gt;&gt;<span class="built_in">type</span>;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">type</span>==1)&#123;</div><div class="line">			int l,r,u,v;</div><div class="line">			cin&gt;&gt;l&gt;&gt;r&gt;&gt;u&gt;&gt;v;</div><div class="line">			l--; r--;</div><div class="line">			update(1,0,n,l,r+1,u,v);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			int l,r; cin&gt;&gt;l&gt;&gt;r;</div><div class="line">			l--; r--;</div><div class="line">			ll sum = query(1,0,n,l,r+1);</div><div class="line">			cout&lt;&lt;sum&lt;&lt;<span class="string">'\n'</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>用hash的思想来存储线段树<br>0-9每个数位上存放的数字表示该数字乘存放的大小(10^x)表示该位的大小<br>例如 0 0 0 10 100 0 0 0 0 表示430<br>线段树上存放每个数字0-9的状态 sum表示该位存放的所有10的阶乘 next为指向下一个0-9数字的指针</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2017ccpc江苏省赛]]></title>
      <url>http://xuboming8.github.io/2017/05/19/ccpc%E6%B1%9F%E8%8B%8F%E7%9C%81%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="2017ccpc江苏省赛"><a href="#2017ccpc江苏省赛" class="headerlink" title="2017ccpc江苏省赛"></a>2017ccpc江苏省赛</h1><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>有一些点 每个点只能被选作起点或终点一次<br>每次询问一个范围 若在l-r之间 结果加上l-r区间的和 l和r都不能再作为端点<br>求给定次数的询问后 最大的和是多少</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">    LL st,ed,sum;</div><div class="line">&#125;e[maxn];</div><div class="line">LL sum[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">   // freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">      cin.tie(0);</div><div class="line">    LL n,m,c;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m&gt;&gt;c)&#123;</div><div class="line">        sum[0]=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            LL x;</div><div class="line">            cin&gt;&gt;x;</div><div class="line">            sum[i]=sum[i-1]+x;</div><div class="line">        &#125;</div><div class="line">         sort(sum,sum+n+1);</div><div class="line">         LL ans=0,cnt=0;</div><div class="line">         <span class="keyword">for</span>(int i=0;i&lt;n/2;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(cnt==m) <span class="built_in">break</span>;</div><div class="line">            LL temp=abs(sum[n-i]-sum[i])-c;</div><div class="line">            <span class="keyword">if</span>(temp&lt;0) <span class="built_in">break</span>;</div><div class="line">            ans+=temp;</div><div class="line">            cnt++;</div><div class="line">         &#125;</div><div class="line">       cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-amp-注意事项"><a href="#思路-amp-注意事项" class="headerlink" title="思路&amp;注意事项"></a>思路&amp;注意事项</h3><p>对前n项和排序 每次用最大减去最小 得到的最大值加入到答案中<br>如果从某项开始已经小于0或者已经用完了询问次数 结束循环</p>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>猜公式</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;</div><div class="line">    <span class="keyword">if</span>(b==0) <span class="built_in">return</span> a;</div><div class="line">    <span class="built_in">return</span> gcd(b,a%b);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">   // freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    LL n,m;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)&#123;</div><div class="line">        LL x=n/gcd(n,m)*m;</div><div class="line">        cout&lt;&lt;<span class="string">"1/"</span>&lt;&lt;2*x&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>类似于最大生成树<br>每两个城市之间有一个权值<br>最后要求用n-1条道路联通 并要求权值最大</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">    int to,w;</div><div class="line">    node(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">int n; </div><div class="line">int vis[maxn],deep[maxn],f[maxn],anc[maxn][25];</div><div class="line">LL dis[maxn],temp[maxn];</div><div class="line">void dfs(int x,int fa)&#123;</div><div class="line">    anc[x][0]=f[x];</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=20;i++) anc[x][i]=anc[anc[x][i-1]][i-1];</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e[x].size();i++)&#123;</div><div class="line">        int next=e[x][i].to;</div><div class="line">        <span class="keyword">if</span>(next!=fa)&#123;</div><div class="line">            f[next]=x;</div><div class="line">            deep[next]=deep[x]+1;</div><div class="line">            dfs(next,x);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int lca(int x,int y)&#123;</div><div class="line">    <span class="keyword">if</span>(deep[x]&lt;deep[y]) swap(x,y);</div><div class="line">    <span class="keyword">for</span>(int i=20;i&gt;=0;i--) <span class="keyword">if</span>(deep[anc[x][i]]&gt;=deep[y]) x=anc[x][i];</div><div class="line">    <span class="keyword">if</span>(x==y) <span class="built_in">return</span> x;</div><div class="line">    <span class="keyword">for</span>(int i=20;i&gt;=0;i--) <span class="keyword">if</span>(anc[x][i]!=anc[y][i]) x=anc[x][i],y=anc[y][i];</div><div class="line">    <span class="built_in">return</span> f[x];</div><div class="line">&#125;</div><div class="line">void dfs2(int id)&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e[id].size();i++)&#123;</div><div class="line">        int next=e[id][i].to,ww=e[id][i].w;</div><div class="line">        <span class="keyword">if</span>(vis[next]) <span class="built_in">continue</span>;</div><div class="line">        dis[next]=(LL)dis[id]+ww;</div><div class="line">        vis[next]=1;</div><div class="line">        dfs2(next);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">    cin.tie(0);</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n)&#123;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;n;i++)&#123;</div><div class="line">            int u,v,w;</div><div class="line">            cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">            e[u].push_back(node(v,w));</div><div class="line">            e[v].push_back(node(u,w));</div><div class="line">        &#125;</div><div class="line">        memset(f,0,sizeof(f));</div><div class="line">        memset(anc,0,sizeof(anc));</div><div class="line">        memset(deep,0,sizeof(deep));</div><div class="line">        deep[1]=1;</div><div class="line">        dfs(1,0);</div><div class="line">        memset(dis,0,sizeof(dis));</div><div class="line">        memset(vis,0,sizeof(vis));</div><div class="line">        vis[1]=1;</div><div class="line">        dfs2(1);</div><div class="line">        int id1=0,id2=0;</div><div class="line">        LL mx=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(mx&lt;dis[i])&#123;</div><div class="line">                mx=dis[i];</div><div class="line">                id1=i;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        memcpy(temp,dis,sizeof(dis));</div><div class="line">        memset(dis,0,sizeof(dis));</div><div class="line">        memset(vis,0,sizeof(vis));</div><div class="line">        vis[id1]=1;</div><div class="line">        dfs2(id1);</div><div class="line">        mx=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(mx&lt;dis[i])&#123;</div><div class="line">                mx=dis[i];</div><div class="line">                id2=i;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        LL ans=-mx;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            int f1=lca(i,id1);</div><div class="line">            int f2=lca(i,id2);</div><div class="line">            LL d1=temp[i]+temp[id1]-2*temp[f1];</div><div class="line">            LL d2=temp[i]+temp[id2]-2*temp[f2];</div><div class="line">            ans+=max(d1,d2);</div><div class="line">        &#125;</div><div class="line">        cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-amp-注意事项-1"><a href="#思路-amp-注意事项-1" class="headerlink" title="思路&amp;注意事项"></a>思路&amp;注意事项</h3><p>无根树转为有根树 默认1为根节点<br>用prim算法预处理出根结点1到所有点的最短距离<br>从结点1dfs一次找到直径的第一个端点 记录下他的id1<br>从id开始再进行一次dfs即可找到树的直径 记录下端点id2<br>把剩下的所有点加入该直径中 距离哪个端点的距离大则把该点加入<br>计算树中两个点的距离使用LCA</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2017 ccpc wfin-女生赛]]></title>
      <url>http://xuboming8.github.io/2017/05/08/2017-ccpc-wfin-%E5%A5%B3%E7%94%9F%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="2017-ccpc-wfin-女生赛"><a href="#2017-ccpc-wfin-女生赛" class="headerlink" title="2017 ccpc wfin-女生赛"></a>2017 ccpc wfin-女生赛</h1><h2 id="HDU-6023"><a href="#HDU-6023" class="headerlink" title="HDU 6023"></a>HDU 6023</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>模拟acm ranklist</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int Hash[1020];</div><div class="line">int lazy[1020];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n,m;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">        getchar();</div><div class="line">        memset(Hash,0,sizeof(Hash));</div><div class="line">        memset(lazy,0,sizeof(lazy));</div><div class="line">        int cnt=0,pen=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">            string s;</div><div class="line">            getline(cin,s);</div><div class="line">            int x=(s[0]-<span class="string">'0'</span>)*1000+(s[1]-<span class="string">'0'</span>)*100+(s[2]-<span class="string">'0'</span>)*10+(s[3]-<span class="string">'0'</span>);</div><div class="line">            <span class="keyword">if</span>(Hash[x]==0)&#123;</div><div class="line">                <span class="keyword">if</span>(s[11]==<span class="string">'A'</span>&amp;&amp;s[12]==<span class="string">'C'</span>)&#123;</div><div class="line">                    Hash[x]=1;</div><div class="line">                    cnt++;</div><div class="line">                    pen+=lazy[x]+(s[6]-<span class="string">'0'</span>)*60+(s[8]-<span class="string">'0'</span>)*10+s[9]-<span class="string">'0'</span>;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span> lazy[x]+=20;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,cnt,pen);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-amp-注意事项"><a href="#思路-amp-注意事项" class="headerlink" title="思路&amp;注意事项"></a>思路&amp;注意事项</h3><p>某一题A过之后再提交错误不会计入罚时</p>
<h2 id="HDU-6024"><a href="#HDU-6024" class="headerlink" title="HDU 6024"></a>HDU 6024</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>一条直线上有n个点 给出n个点的坐标和权值<br>每个点的价值分成两部分 如果选择该点 那么该点的cost为它的权值<br>否则cost为在它左边离他最近的点和它的距离差</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define maxn 3050</span></div><div class="line">using namespace std;</div><div class="line">struct node&#123;</div><div class="line">    LL cost,dir;</div><div class="line">&#125;no[maxn];</div><div class="line">LL dist[maxn],dp[maxn];</div><div class="line">int cmp(node a,node b)&#123;</div><div class="line">    <span class="built_in">return</span> a.dir&lt;b.dir;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">      int n;</div><div class="line">      <span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</div><div class="line">          <span class="keyword">for</span>(int i=0;i&lt;n;i++) scanf(<span class="string">"%lld%lld"</span>,&amp;no[i].dir,&amp;no[i].cost);</div><div class="line">          sort(no,no+n,cmp);</div><div class="line">          memset(dp,0,sizeof(dp));</div><div class="line">          dist[0]=0;</div><div class="line">          no[n].dir=no[0].dir;</div><div class="line">          no[n].cost=0;</div><div class="line">          <span class="keyword">for</span>(int i=1;i&lt;=n;i++) dist[i]=dist[i-1]+no[i].dir-no[0].dir;</div><div class="line">          dp[0]=no[0].cost;</div><div class="line">          <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">              dp[i]=dp[i-1]+no[i].cost;</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;=i-1;j++)&#123;</div><div class="line">                LL ans=dist[i-1]-dist[j]-(i-1-j)*(no[j].dir-no[0].dir);</div><div class="line">                dp[i]=min(dp[i],dp[j]+ans+no[i].cost);</div><div class="line">            &#125;    </div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dp[n]);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-amp-注意事项-1"><a href="#思路-amp-注意事项-1" class="headerlink" title="思路&amp;注意事项"></a>思路&amp;注意事项</h3><p>dp<br>先将每个点升序排列<br>预处理前n项和可以快速求出x-y的距离差<br>dp方程如代码所示</p>
<h2 id="HDU-6025"><a href="#HDU-6025" class="headerlink" title="HDU 6025"></a>HDU 6025</h2><h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>一个数组删除某个数后求出最大gcd</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line">using namespace std;</div><div class="line">int a[maxn];</div><div class="line">int l[maxn],r[maxn];</div><div class="line">int ans;</div><div class="line">int gcd(int a,int b)&#123;</div><div class="line">    <span class="keyword">if</span>(b==0) <span class="built_in">return</span> a;</div><div class="line">    <span class="built_in">return</span> gcd(b,a%b);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int n;</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">        ans=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">        l[1]=a[1];</div><div class="line">        <span class="keyword">for</span>(int i=2;i&lt;=n;i++) l[i]=gcd(l[i-1],a[i]);</div><div class="line">        r[n]=a[n];</div><div class="line">        <span class="keyword">for</span>(int i=n-1;i&gt;=1;i--) r[i]=gcd(r[i+1],a[i]);</div><div class="line">        ans=max(r[2],l[n-1]);</div><div class="line">        <span class="keyword">for</span>(int i=2;i&lt;n;i++) ans=max(ans,gcd(l[i-1],r[i+1]));</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-amp-注意事项-2"><a href="#思路-amp-注意事项-2" class="headerlink" title="思路&amp;注意事项"></a>思路&amp;注意事项</h3><p>先预处理出每个点左边的最大gcd和最小gcd<br>遍历删除的数字 每次求出该数字左边的最大gcd和右边的最大gcd求max即可</p>
<h2 id="HDU-6026"><a href="#HDU-6026" class="headerlink" title="HDU 6026"></a>HDU 6026</h2><h3 id="题意-3"><a href="#题意-3" class="headerlink" title="题意"></a>题意</h3><p>一张图删除一些边后变成一棵树 要求：<br>有n-1条边<br>根到每个点的距离都等于原图中根到每个点的最短距离<br>求出删除后有多少种不同的形态</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define maxn 55</span></div><div class="line">const LL mod= 1e9+7;</div><div class="line">using namespace std;</div><div class="line">int vis[maxn],dist[maxn];</div><div class="line">int <span class="keyword">in</span>[maxn];</div><div class="line">char s[maxn][maxn];</div><div class="line">int n;</div><div class="line">void <span class="function"><span class="title">spfa</span></span>()&#123;</div><div class="line">    queue&lt;int&gt;q;</div><div class="line">    q.push(0);</div><div class="line">    <span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">        int now=q.front();</div><div class="line">        q.pop();</div><div class="line">        vis[now]=0;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">            int w=s[now][i]-<span class="string">'0'</span>;</div><div class="line">            int to=i;</div><div class="line">            <span class="keyword">if</span>(w==0) <span class="built_in">continue</span>;</div><div class="line">            <span class="keyword">if</span>(dist[now]+w&lt;dist[to])&#123;</div><div class="line">                dist[to]=dist[now]+w;</div><div class="line">                <span class="keyword">if</span>(!vis[to])&#123;</div><div class="line">                    vis[to]==1;</div><div class="line">                    q.push(to);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;n;i++) scanf(<span class="string">"%s"</span>,s[i]);</div><div class="line">        memset(vis,0,sizeof(vis));</div><div class="line">        memset(dist,inf,sizeof(dist));</div><div class="line">        memset(<span class="keyword">in</span>,0,sizeof(<span class="keyword">in</span>));</div><div class="line">        vis[0]=1,dist[0]=0;</div><div class="line">        spfa();    </div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;n;j++)&#123;</div><div class="line">                <span class="keyword">if</span>(i==j) <span class="built_in">continue</span>;</div><div class="line">                int val = s[i][j]-<span class="string">'0'</span>;</div><div class="line">                <span class="keyword">if</span>(val==0) <span class="built_in">continue</span>;</div><div class="line">                <span class="keyword">if</span>(dist[i]+val == dist[j]) <span class="keyword">in</span>[j]++;</div><div class="line">            &#125;</div><div class="line">        &#125;       </div><div class="line">        LL ans=1;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;</div><div class="line">            <span class="keyword">if</span>(<span class="keyword">in</span>[i]==0) <span class="built_in">continue</span>;</div><div class="line">            ans=(ans*(LL)<span class="keyword">in</span>[i])%mod;</div><div class="line">//            ans = ans* (LL)<span class="keyword">in</span>[i]%mod;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-amp-注意事项-3"><a href="#思路-amp-注意事项-3" class="headerlink" title="思路&amp;注意事项"></a>思路&amp;注意事项</h3><p>类似于树上求最短路<br>先预处理出根到所有结点的最短路放到dist里<br>接着计算每个点的度<br>度的计算方法为：若该点有n条可以到达它的路线 那么它的入度就加n<br>最后把所有点的入度相乘即可得到最后树有多少种状态 入度为0跳过</p>
<h2 id="HDU-6027"><a href="#HDU-6027" class="headerlink" title="HDU 6027"></a>HDU 6027</h2><h3 id="题意-4"><a href="#题意-4" class="headerlink" title="题意"></a>题意</h3><p>计算表达式</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">const LL mod=1e9+7;</div><div class="line">using namespace std;</div><div class="line">int n,k;</div><div class="line">LL f(int m)&#123;</div><div class="line">    LL x=1;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=k;i++)&#123;</div><div class="line">        x*=m;</div><div class="line">        x%=mod;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> x%mod;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</div><div class="line">        LL sum=0;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">            sum+=f(i)%mod;</div><div class="line">        &#125; </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum%mod);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-amp-注意事项-4"><a href="#思路-amp-注意事项-4" class="headerlink" title="思路&amp;注意事项"></a>思路&amp;注意事项</h3><p>水题<br>注意取模 开LL即可</p>
<h2 id="HDU-6029"><a href="#HDU-6029" class="headerlink" title="HDU 6029"></a>HDU 6029</h2><h3 id="题意-5"><a href="#题意-5" class="headerlink" title="题意"></a>题意</h3><p>每次可以进行两种操作：<br>把该点和前面所有的点相连<br>该点与前面所有的点不连接</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        int num=1;</div><div class="line">        int n;</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n-1;i++)&#123;</div><div class="line">            int x;</div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">            <span class="keyword">if</span>(x==2||num==0) num++;</div><div class="line">            <span class="keyword">else</span> num--;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(num==0) <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-amp-注意事项-5"><a href="#思路-amp-注意事项-5" class="headerlink" title="思路&amp;注意事项"></a>思路&amp;注意事项</h3><p>模拟题<br>num表示不匹配点的个数<br>若执行第二步操作或者前面n-1个点已经构成完全联通图 则num++<br>否则不匹配的点个数减1</p>
<h2 id="HDU-6030"><a href="#HDU-6030" class="headerlink" title="HDU 6030"></a>HDU 6030</h2><h3 id="题意-6"><a href="#题意-6" class="headerlink" title="题意"></a>题意</h3><p>一串项链有红色珠子和蓝色珠子<br>要求有多少种类型的搭配满足：<br>任意连续质数串中的红色数量不小于蓝色</p>
<h3 id="参考AC代码-6"><a href="#参考AC代码-6" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define maxn 3050</span></div><div class="line">using namespace std;</div><div class="line">struct Matrix</div><div class="line">&#123;</div><div class="line">    LL matrix[3][3];</div><div class="line">&#125;;</div><div class="line">int n=3;    </div><div class="line">LL MOD=1e9+7;</div><div class="line">Matrix E;</div><div class="line">void <span class="function"><span class="title">initE</span></span>()    </div><div class="line">&#123;</div><div class="line">    memset(E.matrix,0,sizeof(E.matrix)); </div><div class="line">    E.matrix[0][0]=E.matrix[0][2]=E.matrix[1][0]=E.matrix[2][1]=1;</div><div class="line">&#125;</div><div class="line">Matrix operator*(Matrix a,Matrix b)</div><div class="line">&#123;</div><div class="line">    int i,j,k;</div><div class="line">    Matrix c;</div><div class="line">    <span class="keyword">for</span> (i=0;i&lt;n;i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">for</span> (j=0;j&lt;n;j++)</div><div class="line">        &#123;</div><div class="line">            c.matrix[i][j] = 0;</div><div class="line">            <span class="keyword">for</span> (k=0;k&lt;n;k++)</div><div class="line">                    c.matrix[i][j]+=(a.matrix[i][k]*b.matrix[k][j]);</div><div class="line">            c.matrix[i][j]%=MOD;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> c;</div><div class="line">&#125;</div><div class="line">Matrix operator^(Matrix a,LL x) </div><div class="line">&#123; </div><div class="line">     Matrix p = E,q = a; </div><div class="line">     <span class="keyword">while</span> (x&gt;=1) </div><div class="line">     &#123; </div><div class="line">         <span class="keyword">if</span>(x%2==1) </div><div class="line">             p = p*q; </div><div class="line">         x/=2; </div><div class="line">         q = q*q; </div><div class="line">     &#125; </div><div class="line">     <span class="built_in">return</span> p; </div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        initE();</div><div class="line">        LL k;</div><div class="line">        scanf(<span class="string">"%lld"</span>,&amp;k);</div><div class="line">        <span class="keyword">if</span>(k==2)&#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"3\n"</span>);</div><div class="line">            <span class="built_in">continue</span>;</div><div class="line">        &#125;</div><div class="line">        E=E^(k-3);</div><div class="line">        LL ans=(E.matrix[0][0]*3+E.matrix[0][1]*2+E.matrix[0][2])%MOD;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-amp-注意事项-6"><a href="#思路-amp-注意事项-6" class="headerlink" title="思路&amp;注意事项"></a>思路&amp;注意事项</h3><p>打表发现规律f(n)=f(n-1)+f(n-3)<br>使用矩阵快速幂求得即可<br>注意初始化的矩阵为三维</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[博弈论]]></title>
      <url>http://xuboming8.github.io/2017/05/08/%E5%8D%9A%E5%BC%88%E8%AE%BA/</url>
      <content type="html"><![CDATA[<h1 id="博弈论"><a href="#博弈论" class="headerlink" title="博弈论"></a>博弈论</h1><h2 id="四大基础博弈"><a href="#四大基础博弈" class="headerlink" title="四大基础博弈"></a>四大基础博弈</h2><h3 id="转跳链接"><a href="#转跳链接" class="headerlink" title="转跳链接"></a>转跳链接</h3><p><a href="http://blog.csdn.net/chao1983210400/article/details/10284693" target="_blank" rel="external">转跳1</a><br><a href="http://blog.csdn.net/ac_gibson/article/details/41624623" target="_blank" rel="external">转跳2</a><br><a id="more"></a></p>
<h2 id="HDU-1546-SG函数"><a href="#HDU-1546-SG函数" class="headerlink" title="HDU 1546(SG函数)"></a>HDU 1546(SG函数)</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>首先输入K 表示一个集合的大小 之后输入集合 表示对于这对石子只能去这个集合中的元素的个数<br>之后输入 一个m 表示接下来对于这个集合要进行m次询问<br>之后m行 每行输入一个n 表示有n个堆 每堆有n1个石子 问这一行所表示的状态是赢还是输 如果赢输入W否则L</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 10050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">bool hashh[maxn];</div><div class="line">int sg[maxn],s[150];</div><div class="line">int t;</div><div class="line">void <span class="function"><span class="title">sg_solve</span></span>()&#123;</div><div class="line">	mm(sg,0);</div><div class="line">	int j;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=maxn;i++)&#123;</div><div class="line">		mm(hashh,0);</div><div class="line">		<span class="keyword">for</span>(j=0;j&lt;t;j++)&#123;</div><div class="line">			<span class="keyword">if</span>(i<span class="_">-s</span>[j]&gt;=0) hashh[sg[i<span class="_">-s</span>[j]]]=1;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(j=0;j&lt;=maxn;j++)&#123;</div><div class="line">			<span class="keyword">if</span>(!hashh[j]) <span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">		sg[i]=j;</div><div class="line">	&#125;</div><div class="line">&#125; </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;t)&#123;</div><div class="line">		<span class="keyword">if</span>(t==0) <span class="built_in">break</span>;</div><div class="line">		string ans;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;t;i++) cin&gt;&gt;s[i];</div><div class="line">		sg_solve();</div><div class="line">		int n; cin&gt;&gt;n;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			int m;</div><div class="line">			cin&gt;&gt;m;</div><div class="line">			int res=0;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=m;j++)&#123;</div><div class="line">				int h;</div><div class="line">				cin&gt;&gt;h;</div><div class="line">				res^=sg[h];</div><div class="line">			&#125;</div><div class="line">			ans+=res?<span class="string">'W'</span>:<span class="string">'L'</span>;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>SG模版<br>威佐夫博弈的变形</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[莫比乌斯反演]]></title>
      <url>http://xuboming8.github.io/2017/04/30/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/</url>
      <content type="html"><![CDATA[<h1 id="莫比乌斯反演简单应用"><a href="#莫比乌斯反演简单应用" class="headerlink" title="莫比乌斯反演简单应用"></a>莫比乌斯反演简单应用</h1><h2 id="线性筛选求莫比乌斯反演函数代码"><a href="#线性筛选求莫比乌斯反演函数代码" class="headerlink" title="线性筛选求莫比乌斯反演函数代码"></a>线性筛选求莫比乌斯反演函数代码</h2><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">void <span class="function"><span class="title">Init</span></span>()  </div><div class="line">&#123;  </div><div class="line">    memset(vis,0,sizeof(vis));  </div><div class="line">    mu[1] = 1;  </div><div class="line">    cnt = 0;  </div><div class="line">    <span class="keyword">for</span>(int i=2; i&lt;N; i++)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">if</span>(!vis[i])  </div><div class="line">        &#123;  </div><div class="line">            prime[cnt++] = i;  </div><div class="line">            mu[i] = -1;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">for</span>(int j=0; j&lt;cnt&amp;&amp;i*prime[j]&lt;N; j++)  </div><div class="line">        &#123;  </div><div class="line">            vis[i*prime[j]] = 1;  </div><div class="line">            <span class="keyword">if</span>(i%prime[j]) mu[i*prime[j]] = -mu[i];  </div><div class="line">            <span class="keyword">else</span>  </div><div class="line">            &#123;  </div><div class="line">                mu[i*prime[j]] = 0;  </div><div class="line">                <span class="built_in">break</span>;  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="题目一"><a href="#题目一" class="headerlink" title="题目一"></a>题目一</h2><p>求给定相同范围内有多少个数对(x,y)满足gcd(x,y)为质数：欧拉函数</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/149353558268.png" alt=""></p>
<h3 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;  </span></div><div class="line"><span class="comment">#include &lt;string.h&gt;  </span></div><div class="line"><span class="comment">#include &lt;stdio.h&gt;  </span></div><div class="line"><span class="comment">#include &lt;bitset&gt;  </span></div><div class="line">using namespace std;  </div><div class="line">typedef long long LL;  </div><div class="line">const int N = 10000010;  </div><div class="line">bitset&lt;N&gt; prime;  </div><div class="line">LL phi[N];  </div><div class="line">LL f[N];  </div><div class="line">int p[N];  </div><div class="line">int k;  </div><div class="line">void <span class="function"><span class="title">isprime</span></span>()  </div><div class="line">&#123;  </div><div class="line">    k = 0;  </div><div class="line">    prime.set();  </div><div class="line">    <span class="keyword">for</span>(int i=2; i&lt;N; i++)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">if</span>(prime[i])  </div><div class="line">        &#123;  </div><div class="line">            p[k++] = i;  </div><div class="line">            <span class="keyword">for</span>(int j=i+i; j&lt;N; j+=i)  </div><div class="line">                prime[j] = <span class="literal">false</span>;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">&#125;  </div><div class="line">void <span class="function"><span class="title">Init</span></span>()  </div><div class="line">&#123;  </div><div class="line">    <span class="keyword">for</span>(int i=1; i&lt;N; i++)  phi[i] = i;  </div><div class="line">    <span class="keyword">for</span>(int i=2; i&lt;N; i+=2) phi[i] &gt;&gt;= 1;  </div><div class="line">    <span class="keyword">for</span>(int i=3; i&lt;N; i+=2)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">if</span>(phi[i] == i)  </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">for</span>(int j=i; j&lt;N; j+=i)  </div><div class="line">                phi[j] = phi[j] - phi[j] / i;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    f[1] = 0;  </div><div class="line">    <span class="keyword">for</span>(int i=2;i&lt;N;i++)  </div><div class="line">        f[i] = f[i-1] + (phi[i]&lt;&lt;1);  </div><div class="line">&#125;   </div><div class="line">LL Solve(int n)  </div><div class="line">&#123;  </div><div class="line">    LL ans = 0;  </div><div class="line">    <span class="keyword">for</span>(int i=0; i&lt;k&amp;&amp;p[i]&lt;=n; i++)  </div><div class="line">        ans += 1 + f[n/p[i]];  </div><div class="line">    <span class="built_in">return</span> ans;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    Init();  </div><div class="line">    isprime();  </div><div class="line">    int n;  </div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;n);  </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,Solve(n));  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>因为xy可以互换 所以欧拉函数求和乘2即为所求 在加上x和y相等且为素数的情况<br>即f(n)=phi(1)+phi(2)+···+phi(n) F(n)=2f(n)+1<br>对于每个素数p[i] 变为n/p[i]带入函数作为右边界</p>
<h2 id="题目二"><a href="#题目二" class="headerlink" title="题目二"></a>题目二</h2><p>求不同范围内有多少个数对(x,y)满足gcd(x,y)为质数：莫比乌斯反演</p>
<h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/149353558322.png" alt=""></p>
<h3 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;  </span></div><div class="line"><span class="comment">#include &lt;string.h&gt;  </span></div><div class="line"><span class="comment">#include &lt;stdio.h&gt;   </span></div><div class="line">using namespace std;  </div><div class="line">typedef long long LL;  </div><div class="line">const int N = 10000005;  </div><div class="line">bool vis[N];  </div><div class="line">int p[N];  </div><div class="line">int cnt;  </div><div class="line">int g[N],u[N],sum[N];  </div><div class="line">void <span class="function"><span class="title">Init</span></span>()  </div><div class="line">&#123;  </div><div class="line">    memset(vis,0,sizeof(vis));  </div><div class="line">    u[1] = 1;  </div><div class="line">    cnt = 0;  </div><div class="line">    <span class="keyword">for</span>(int i=2;i&lt;N;i++)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">if</span>(!vis[i])  </div><div class="line">        &#123;  </div><div class="line">            p[cnt++] = i;  </div><div class="line">            u[i] = -1;  </div><div class="line">            g[i] = 1;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">for</span>(int j=0;j&lt;cnt&amp;&amp;i*p[j]&lt;N;j++)  </div><div class="line">        &#123;  </div><div class="line">            vis[i*p[j]] = 1;  </div><div class="line">            <span class="keyword">if</span>(i%p[j])  </div><div class="line">            &#123;  </div><div class="line">                u[i*p[j]] = -u[i];  </div><div class="line">                g[i*p[j]] = u[i] - g[i];  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">else</span>  </div><div class="line">            &#123;  </div><div class="line">                u[i*p[j]] = 0;  </div><div class="line">                g[i*p[j]] = u[i];  </div><div class="line">                <span class="built_in">break</span>;  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    sum[0] = 0;  </div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;N;i++)  </div><div class="line">        sum[i] = sum[i-1] + g[i];  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    Init();  </div><div class="line">    int T;  </div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;T);  </div><div class="line">    <span class="keyword">while</span>(T--)  </div><div class="line">    &#123;  </div><div class="line">        LL n,m;  </div><div class="line">        cin&gt;&gt;n&gt;&gt;m;  </div><div class="line">        <span class="keyword">if</span>(n &gt; m) swap(n,m);  </div><div class="line">        LL ans = 0;  </div><div class="line">        <span class="keyword">for</span>(int i=1,last;i&lt;=n;i=last+1)  </div><div class="line">        &#123;  </div><div class="line">            last = min(n/(n/i),m/(m/i));  </div><div class="line">            ans += (n/i)*(m/i)*(sum[last]-sum[i-1]);  </div><div class="line">        &#125;  </div><div class="line">        cout&lt;&lt;ans&lt;&lt;endl;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="cf-803F"><a href="#cf-803F" class="headerlink" title="cf 803F"></a>cf 803F</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>求给定数组中有多少个任意大小的连续子序列满足互质</p>
<h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p>统计出1-n中每个数因数的个数 作为函数cnt(x)<br>f(x)=(2^cnt(x))-1<br>答案为i=1-10^5求和f(x)*u(x)<br>u(x)为莫比乌斯函数</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 100005</span></div><div class="line"><span class="comment">#define ll long long</span></div><div class="line"><span class="comment">#define mod 1000000007ll</span></div><div class="line">using namespace std;</div><div class="line">int mu[maxn], N, prime[maxn], mark[maxn], cnt[maxn], mi[maxn];</div><div class="line">void <span class="function"><span class="title">shai</span></span>()</div><div class="line">&#123;</div><div class="line">	int i, j;</div><div class="line">	mu[1]=1;</div><div class="line">	<span class="keyword">for</span>(i=2;i&lt;maxn;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(!mark[i])&#123;prime[++*prime]=i;mu[i]=-1;&#125;</div><div class="line">		<span class="keyword">for</span>(j=1;i*prime[j]&lt;maxn;j++)</div><div class="line">		&#123;</div><div class="line">			mark[i*prime[j]]=1;</div><div class="line">			<span class="keyword">if</span>(i%prime[j]==0)<span class="built_in">break</span>;</div><div class="line">			mu[i*prime[j]]=-mu[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	int i, j, x;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;N);</div><div class="line">	<span class="keyword">for</span>(i=1;i&lt;=N;i++)</div><div class="line">	&#123;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">		<span class="keyword">for</span>(j=1;j*j&lt;=x;j++)<span class="keyword">if</span>(x%j==0)cnt[j]++, cnt[x/j]+=j!=x/j;</div><div class="line">	&#125;</div><div class="line">	mi[0]=1;</div><div class="line">	<span class="keyword">for</span>(i=1;i&lt;maxn;i++)mi[i]=(mi[i-1]&lt;&lt;1)%mod;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	ll ans=0;</div><div class="line">	init();</div><div class="line">	shai();</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;maxn;i++)ans=(ans+(mi[cnt[i]]-1)*mu[i])%mod;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%I64d"</span>,(ans+mod)%mod);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line"> `</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[杂题专选-二]]></title>
      <url>http://xuboming8.github.io/2017/04/26/%E6%9D%82%E9%A2%98%E4%B8%93%E9%80%89-%E4%BA%8C/</url>
      <content type="html"><![CDATA[<h1 id="杂题专选-二"><a href="#杂题专选-二" class="headerlink" title="杂题专选-二"></a>杂题专选-二</h1><h2 id="集合操作"><a href="#集合操作" class="headerlink" title="集合操作"></a>集合操作</h2><h3 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">	vector&lt;int&gt;e1,e2;</div><div class="line">	e1.push_back(2),e1.push_back(3);</div><div class="line">	e2.push_back(3),e2.push_back(4);e2.push_back(1);</div><div class="line">	set_union(e1.begin(),e1.end(),e2.begin(),e2.end(),ostream_iterator&lt;int&gt;(cout,<span class="string">" "</span>));  cout&lt;&lt;endl;</div><div class="line">	set_intersection(e1.begin(),e1.end(),e2.begin(),e2.end(),ostream_iterator&lt;int&gt;(cout,<span class="string">" "</span>));  cout&lt;&lt;endl;</div><div class="line">	set_difference(e1.begin(),e1.end(),e2.begin(),e2.end(),ostream_iterator&lt;int&gt;(cout,<span class="string">" "</span>));  cout&lt;&lt;endl;</div><div class="line">	set_symmetric_difference(e1.begin(),e1.end(),e2.begin(),e2.end(),ostream_iterator&lt;int&gt;(cout,<span class="string">" "</span>));  cout&lt;&lt;endl;</div><div class="line">	sort(e1.begin(),e1.end()); sort(e2.begin(),e2.end());</div><div class="line">	merge(e1.begin(),e1.end(),e2.begin(),e2.end(),ostream_iterator&lt;int&gt;(cout,<span class="string">" "</span>));  cout&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h3><p>集合的并：set_union<br>集合的交：set_intersection<br>集合的差:set_difference<br>集合的标准差：set_symmetric_difference<br>集合的有序合并:merge<br>注意stl使用的5个参数</p>
<h2 id="cf-803c"><a href="#cf-803c" class="headerlink" title="cf 803c"></a>cf 803c</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>寻找一个递增序列满足k个数和为n 使他们的gcd最大</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long </span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	LL n,k,kk;</div><div class="line">	scanf(<span class="string">"%lld%lld"</span>,&amp;n,&amp;k);</div><div class="line">	kk=k;</div><div class="line">	<span class="keyword">if</span>(k&gt;=200000)&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(k==1)&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,n);</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	&#125;</div><div class="line">	k=(k+1)*k/2;</div><div class="line">	LL ans=-1;</div><div class="line">	<span class="keyword">for</span>(LL d=1;d*d&lt;=n;d++)&#123;</div><div class="line">		<span class="keyword">if</span>(k*d&gt;n) <span class="built_in">break</span>;</div><div class="line">		<span class="keyword">if</span>(n%d!=0) <span class="built_in">continue</span>;</div><div class="line">		ans=d;</div><div class="line">		<span class="keyword">if</span>(k&lt;=d)&#123;</div><div class="line">			ans=n/d;</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(ans==-1) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">for</span>(LL i=1;i&lt;kk;i++)&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%lld "</span>,ans*i);</div><div class="line">			n-=ans*i;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,n);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>假设当前的因数为d 那么可以构造出一个序列d 2d 3d···(k-1)d 他们的和用等差数列求和公式求出为s=d*k(k-1)/2<br>剩下的一个数为n-s 需要满足n-s&gt;(k-1)d<br>因为我们求因数的时候上限开到根号n 所以需要考虑d和n/d两种情况的公差<br>k大于20万为计算出的数字 需要满足前k-1项小于n</p>
<h2 id="cf-Igor-and-his-way-to-work"><a href="#cf-Igor-and-his-way-to-work" class="headerlink" title="cf_Igor and his way to work"></a>cf_Igor and his way to work</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>带转弯的dfs 注意开三维或思维数组 空间换时间即可</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line">using namespace std;</div><div class="line">int n,m;</div><div class="line">int g[maxn][maxn];</div><div class="line">int vis[maxn][maxn][5][3];</div><div class="line">int dirx[4]=&#123;1,-1,0,0&#125;;</div><div class="line">int diry[4]=&#123;0,0,1,-1&#125;;</div><div class="line">int si,sj,ei,ej;</div><div class="line">int flag=0;</div><div class="line">void dfs(int x,int y,int pre,int cnt)&#123;</div><div class="line">	<span class="keyword">if</span>(flag) <span class="built_in">return</span>;</div><div class="line">	<span class="keyword">if</span>(cnt&gt;2) <span class="built_in">return</span> ;</div><div class="line">	<span class="keyword">if</span>(x&lt;1||x&gt;n||y&lt;1||y&gt;m||g[x][y]==-1) <span class="built_in">return</span>;</div><div class="line">	<span class="keyword">if</span>(x==ei&amp;&amp;y==ej)&#123;</div><div class="line">		flag=1;</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(vis[x][y][pre][cnt]) <span class="built_in">return</span>;</div><div class="line">	vis[x][y][pre][cnt]=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;4;i++) dfs(x+dirx[i],y+diry[i],i,cnt+(pre!=4&amp;&amp;pre!=i));</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">	memset(g,0,sizeof(g));</div><div class="line">	memset(vis,0,sizeof(vis));</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		string s; cin&gt;&gt;s;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;s.length();j++)&#123;</div><div class="line">			<span class="keyword">if</span>(s[j]==<span class="string">'.'</span>) g[i][j+1]=1;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(s[j]==<span class="string">'*'</span>) g[i][j+1]=-1;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(s[j]==<span class="string">'S'</span>)&#123;</div><div class="line">				g[i][j+1]=1;</div><div class="line">				si=i,sj=j+1;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(s[j]==<span class="string">'T'</span>)&#123;</div><div class="line">				g[i][j+1]=1;</div><div class="line">				ei=i,ej=j+1;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	dfs(si,sj,4,0);</div><div class="line">	<span class="keyword">if</span>(flag) <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="cf-Mice-problem"><a href="#cf-Mice-problem" class="headerlink" title="cf_Mice problem"></a>cf_Mice problem</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>有一个矩形范围的捕鼠夹 有若干个老鼠以x轴和y轴恒定的速度运动 问某一时间捕鼠夹里是否可以抓到所有的老鼠</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">typedef long long LL;</div><div class="line"><span class="comment">#define INF 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define MAXN 1e5</span></div><div class="line">const double EPS=3e-15;</div><div class="line">double x1,x2;</div><div class="line">double y11,y2;</div><div class="line">bool flag;</div><div class="line">double s1,s2;</div><div class="line">void f(double x,double vx,bool <span class="built_in">fg</span>)&#123;</div><div class="line">    double l,r;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">fg</span>) &#123;l=x1;r=x2;&#125;</div><div class="line">	<span class="keyword">else</span> &#123;l=y11;r=y2;&#125;</div><div class="line">    <span class="keyword">if</span>(vx==0)&#123;</div><div class="line">        <span class="keyword">if</span>(!(l&lt;x&amp;&amp;x&lt;r)) flag=<span class="literal">false</span>;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(vx&lt;0)&#123;</div><div class="line">        x=-x,vx=-vx,l=<span class="_">-l</span>,r=-r;</div><div class="line">        swap(l,r);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(x&gt;r)&#123;</div><div class="line">        flag=<span class="literal">false</span>;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(x&lt;=l) s1=max(s1,(l-x)/vx);</div><div class="line">    s2=min(s2,(r-x)/vx);</div><div class="line">    <span class="built_in">return</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">    int n;</div><div class="line">    flag=<span class="literal">true</span>;</div><div class="line">    s1=0;</div><div class="line">    s2=INF*1.0;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    scanf(<span class="string">"%lf%lf%lf%lf"</span>,&amp;x1,&amp;y11,&amp;x2,&amp;y2);</div><div class="line">    double x,y,vx,vy;</div><div class="line">    <span class="keyword">while</span>(n--)&#123;</div><div class="line">        scanf(<span class="string">"%lf%lf%lf%lf"</span>,&amp;x,&amp;y,&amp;vx,&amp;vy);</div><div class="line">        <span class="keyword">if</span>(flag)&#123;</div><div class="line">            f(x,vx,<span class="literal">true</span>);</div><div class="line">            f(y,vy,<span class="literal">false</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(flag&amp;&amp;s2&gt;=s1+EPS)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%.10f\n"</span>,s1);</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>高精度计算 求出严格和非严格的答案 判断误差精度是否在要求之内</p>
<h2 id="cf-Presents-in-Bankopolis"><a href="#cf-Presents-in-Bankopolis" class="headerlink" title="cf_Presents in Bankopolis"></a>cf_Presents in Bankopolis</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>一条路每次来回不能越过已走过的最远的边界<br>类似于不断缩小范围的搜索</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define inf 0x7f7f7f7f</span></div><div class="line"><span class="comment">#define maxn 82</span></div><div class="line">using namespace std;</div><div class="line">int g[maxn][maxn];</div><div class="line">int dp[maxn][maxn][maxn][maxn];</div><div class="line">int n,m,k;</div><div class="line">int M_search(int l,int r,int cur,int k)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(dp[l][r][cur][k]!=-1) <span class="built_in">return</span> dp[l][r][cur][k];</div><div class="line">	<span class="keyword">if</span>(k==1)&#123;</div><div class="line">		dp[l][r][cur][k]=0;</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	&#125;</div><div class="line">	int ans=inf;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(g[cur][i]!=inf)&#123;</div><div class="line">			<span class="keyword">if</span>(i&gt;l&amp;&amp;i&lt;r)&#123;</div><div class="line">				<span class="keyword">if</span>(i&gt;cur) ans=min(ans,g[cur][i]+M_search(cur,r,i,k-1));</div><div class="line">				<span class="keyword">else</span> ans=min(ans,g[cur][i]+M_search(l,cur,i,k-1));</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	dp[l][r][cur][k]=ans;</div><div class="line">	<span class="built_in">return</span> dp[l][r][cur][k];</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	scanf(<span class="string">"%d%d%d"</span>,&amp;n,&amp;k,&amp;m);</div><div class="line">	memset(dp,-1,sizeof(dp));</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) </div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=n;j++) g[i][j]=inf;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++)&#123;</div><div class="line">		int u,v,w;</div><div class="line">		scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">		g[u][v]=min(g[u][v],w);</div><div class="line">	&#125;</div><div class="line">	int ans=inf;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) ans=min(ans,M_search(0,n+1,i,k));</div><div class="line">	<span class="keyword">if</span>(ans&gt;=inf) ans=-1;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>记忆化搜索+dp的状态转移方程<br>k=1时dp置为0<br>注意记忆化搜索的格式</p>
<h2 id="ATcoder——01背包变形"><a href="#ATcoder——01背包变形" class="headerlink" title="ATcoder——01背包变形"></a>ATcoder——01背包变形</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>背包容量10^9 无法用数组保存<br>单件物品的消耗满足w1&lt;=wi&lt;=w1+3四种情况</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;LL&gt;w0,w1,w2,w3;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	LL n,W;</div><div class="line">	scanf(<span class="string">"%lld%lld"</span>,&amp;n,&amp;W);</div><div class="line">	LL w,v,pw;</div><div class="line">	scanf(<span class="string">"%lld%lld"</span>,&amp;w,&amp;v);</div><div class="line">	w0.push_back(v);</div><div class="line">	pw=w;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">		scanf(<span class="string">"%lld%lld"</span>,&amp;w,&amp;v);</div><div class="line">		<span class="keyword">if</span>(w==pw) w0.push_back(v);</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(w==pw+1) w1.push_back(v);</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(w==pw+2) w2.push_back(v);</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(w==pw+3) w3.push_back(v);</div><div class="line">	&#125;</div><div class="line">	sort(w0.begin(),w0.end(),greater&lt;LL&gt;());</div><div class="line">	sort(w1.begin(),w1.end(),greater&lt;LL&gt;());</div><div class="line">	sort(w2.begin(),w2.end(),greater&lt;LL&gt;());</div><div class="line">	sort(w3.begin(),w3.end(),greater&lt;LL&gt;());</div><div class="line">//	<span class="keyword">for</span>(int i=0;i&lt;w3.size();i++) cout&lt;&lt;w3[i]&lt;&lt;endl;</div><div class="line">	LL ans=-1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=w0.size();i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;=w1.size();j++)&#123;</div><div class="line">			<span class="keyword">for</span>(int k=0;k&lt;=w2.size();k++)&#123;</div><div class="line">				<span class="keyword">for</span>(int p=0;p&lt;=w3.size();p++)&#123;</div><div class="line">					<span class="keyword">if</span>(pw*i+(pw+1)*j+(pw+2)*k+(pw+3)*p&gt;W) <span class="built_in">continue</span>;</div><div class="line">					LL x=accumulate(w0.begin(),w0.begin()+i,0LL)+accumulate(w1.begin(),w1.begin()+j,0LL)+accumulate(w2.begin(),w2.begin()+k,0LL)+accumulate(w3.begin(),w3.begin()+p,0LL);</div><div class="line">					ans=max(ans,x);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>贪心<br>vector保存四种w的物品 每种w的物品按照价值的降序排列<br>暴力即可 使用accumulate函数可以增加代码可读性 注意条件判断</p>
<h2 id="ATcoder——Ball-Coloring"><a href="#ATcoder——Ball-Coloring" class="headerlink" title="ATcoder——Ball Coloring"></a>ATcoder——Ball Coloring</h2><h3 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h3><p>每个箱子有两个给定编号的白色气球 每次可以把箱子里的一个气球涂成红色另一个涂成蓝色<br>求红色气球编号的最大值-最小值×蓝色气球编号的最大值减最小值的最小值</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 200050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	LL <span class="keyword">fi</span>,se;</div><div class="line">&#125;a[maxn];</div><div class="line">multiset&lt;LL&gt;m1,m2;</div><div class="line">int cmp(node a,node b)&#123;</div><div class="line">	<span class="keyword">if</span>(a.fi==b.fi) <span class="built_in">return</span> a.se&lt;b.se;</div><div class="line">	<span class="built_in">return</span> a.fi&lt;b.fi;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int n;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		scanf(<span class="string">"%lld%lld"</span>,&amp;a[i].fi,&amp;a[i].se);</div><div class="line">		<span class="keyword">if</span>(a[i].fi&gt;a[i].se) swap(a[i].fi,a[i].se);</div><div class="line">		m1.insert(a[i].fi),m2.insert(a[i].se);</div><div class="line">	&#125;</div><div class="line">	sort(a+1,a+1+n,cmp);</div><div class="line">	LL ans=(*m1.rbegin()-*m1.begin())*(*m2.rbegin()-*m2.begin());</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		m1.erase(m1.find(a[i].fi)),m2.erase(m2.find(a[i].se));</div><div class="line">		m1.insert(a[i].se),m2.insert(a[i].fi);</div><div class="line">		ans=min(ans,(*m1.rbegin()-*m1.begin())*(*m2.rbegin()-*m2.begin()));</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>stl 贪心<br>把每组气球中编号的小的放入multiset容器中 编号大的放进另一个<br>保证小-小×大-大是最优解(最小)<br>a数组也需要排序<br>确保找到并交换的第一个最小值是逐渐变大的 贪心保证全局最优解<br>从a数组的第一个开始(最小) 每次在容器中找到对应的值交换 更新答案</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Bitset优化]]></title>
      <url>http://xuboming8.github.io/2017/04/25/Bitset%E4%BC%98%E5%8C%96/</url>
      <content type="html"><![CDATA[<h1 id="Bitset优化"><a href="#Bitset优化" class="headerlink" title="Bitset优化"></a>Bitset优化</h1><h2 id="hihocoder-147周"><a href="#hihocoder-147周" class="headerlink" title="hihocoder_147周"></a>hihocoder_147周</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>问题可以一般化为：有一些五维坐标系里的点 对于每一个点 求出五个纬度均比该点小的点个数</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 30050</span></div><div class="line">using namespace std;</div><div class="line">int a[maxn][5],b[5][maxn];</div><div class="line">bitset&lt;maxn&gt;s[5][maxn],t;    //s[i][j]:第i门课排在j-1之前的编号情况 </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int n;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;=4;j++)&#123;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;a[i][j]);</div><div class="line">			b[j][a[i][j]]=i;	 //第j门课排第a[i][j]名的是编号为i的人 </div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int j=0;j&lt;=4;j++)&#123;</div><div class="line">		s[j][1]=0;</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)&#123;</div><div class="line">			s[j][i]=s[j][i-1];</div><div class="line">			s[j][i].set(b[j][i-1]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		t=s[0][a[i][0]];</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=4;j++)&#123;</div><div class="line">			t&amp;=s[j][a[i][j]];</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t.count());</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>用hash的思想求出每门课排名1-n的学生编号。<br>s[i][j]表示第i门课排名1-j-1的学生编号情况(该位置为1表示存在该学生编号 0表示没有)<br>s的预处理可以用递推的方式 由于每个集合都是建立在上一个集合的基础上 所以每次s先初始化为上一个集合<br>内的情况 再把该排名的学生编号的位置置为1即可<br>对于每个学生 可以把每门课的情况看作一个集合 分别求与操作后 剩下位置剩余的1的个数就是每门课都比<br>该学生好的个数</p>
<h2 id="HDU-5890"><a href="#HDU-5890" class="headerlink" title="HDU 5890"></a>HDU 5890</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>有一些数字和一些询问<br>每次询问包括三个数字ijk 表示ijk三个位置的数字不能用<br>能否从剩余的数字中取10个使他们的和为87</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">bitset&lt;99&gt;s[15];</div><div class="line">int dp[55][55][55]; </div><div class="line">int num[55];</div><div class="line">int n;</div><div class="line">void pre_solve(int x,int y,int z)&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=11;i++) s[i].reset();</div><div class="line">	s[0][0]=1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(i==x||i==y||i==z||num[i]&gt;87) <span class="built_in">continue</span>;</div><div class="line">		<span class="keyword">for</span>(int j=10;j&gt;=1;j--)&#123;</div><div class="line">			s[j]|=s[j-1]&lt;&lt;num[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(s[10][87]==1) dp[x][y][z]=1;</div><div class="line">	<span class="keyword">else</span> dp[x][y][z]=0;</div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)&#123;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;num[i]);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) </div><div class="line">			<span class="keyword">for</span>(int j=i;j&lt;=n;j++) </div><div class="line">				<span class="keyword">for</span>(int k=j;k&lt;=n;k++)&#123;</div><div class="line">					pre_solve(i,j,k);</div><div class="line">				&#125;</div><div class="line">		int q;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;q);</div><div class="line">		<span class="keyword">while</span>(q--)&#123;</div><div class="line">			int x[3];</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;x[0],&amp;x[1],&amp;x[2]);</div><div class="line">			sort(x,x+3);</div><div class="line">			<span class="keyword">if</span>(dp[x[0]][x[1]][x[2]]==1) <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</div><div class="line">			<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125; </div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>s[i][j]表示取到i个数字和为j的情况<br>首先预处理所有数字的情况 由于数字是升序 所以询问的三个数字需要升序排列<br>判断dp值是否为1即可</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>bitset多用于表示多维状态的“有”或者“没有” 对01串进行操作<br>简单背包：多个数字或者用给定个数的数字相加后的情况 能否等于一个数还是所有的情况</p>
<p>b.any()<br>b中是否存在置为1的二进制位？</p>
<p>b.none()<br>b中不存在置为1的二进制位吗？</p>
<p>b.count()<br>b中置为1的二进制位的个数</p>
<p>b.size()<br>b中二进制位的个数</p>
<p>b[pos]<br>访问b中在pos处的二进制位</p>
<p>b.test(pos)<br>b中在pos处的二进制位是否为1？</p>
<p>b.set()<br>把b中所有二进制位都置为1</p>
<p>b.set(pos)<br>把b中在pos处的二进制位置为1</p>
<p>b.reset()<br>把b中所有二进制位都置为0</p>
<p>b.reset(pos)<br>把b中在pos处的二进制位置为0</p>
<p>b.flip()<br>把b中所有二进制位逐位取反</p>
<p>b.flip(pos)<br>把b中在pos处的二进制位取反</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[专题杂选]]></title>
      <url>http://xuboming8.github.io/2017/03/06/%E7%BA%BF%E6%AE%B5%E6%A0%91%E4%B8%93%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="专题杂选"><a href="#专题杂选" class="headerlink" title="专题杂选"></a>专题杂选</h1><h2 id="线段树专题"><a href="#线段树专题" class="headerlink" title="线段树专题"></a>线段树专题</h2><p>参考ACM大牛总结的线段树专辑</p>
<h2 id="匈牙利算法-km算法"><a href="#匈牙利算法-km算法" class="headerlink" title="匈牙利算法+km算法"></a>匈牙利算法+km算法</h2><p><a href="http://www.renfei.org/blog/bipartite-matching.html" target="_blank" rel="external">二分图最大匹配</a><br><a href="http://www.cnblogs.com/wenruo/p/5264235.html" target="_blank" rel="external">二分图最大权完美匹配</a><br><a id="more"></a></p>
<h3 id="HDU-1150-匈牙利算法"><a href="#HDU-1150-匈牙利算法" class="headerlink" title="HDU 1150(匈牙利算法)"></a>HDU 1150(匈牙利算法)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#define maxn 110</span></div><div class="line">using namespace std;</div><div class="line">int n,m,k;</div><div class="line">int g[maxn][maxn],linker[maxn];</div><div class="line">bool used[maxn];</div><div class="line">bool dfs(int u)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;m;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(g[u][i]&amp;&amp;!used[i])</div><div class="line">		&#123;</div><div class="line">			used[i]=<span class="literal">true</span>;</div><div class="line">			<span class="keyword">if</span>(linker[i]==-1||dfs(linker[i]))</div><div class="line">			&#123;</div><div class="line">				linker[i]=u;</div><div class="line">				<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">hungary</span></span>()</div><div class="line">&#123;</div><div class="line">	int ans=0;</div><div class="line">	memset(linker,-1,sizeof(linker));</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">	&#123;</div><div class="line">		memset(used,0,sizeof(used));</div><div class="line">		<span class="keyword">if</span>(dfs(i)) ans++;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n),n)</div><div class="line">	&#123;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;m,&amp;k);</div><div class="line">		memset(g,0,sizeof(g));</div><div class="line">		<span class="keyword">while</span>(k--)</div><div class="line">		&#123;</div><div class="line">			int i,u,v;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;i,&amp;u,&amp;v);</div><div class="line">			<span class="keyword">if</span>(u&gt;0&amp;&amp;v&gt;0) g[u][v]=1;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,hungary());</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="HDU-2255-km模版"><a href="#HDU-2255-km模版" class="headerlink" title="HDU 2255(km模版)"></a>HDU 2255(km模版)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#define INT 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define maxn 310</span></div><div class="line">using namespace std;</div><div class="line">int nx,ny;</div><div class="line">int g[maxn][maxn];</div><div class="line">int linker[maxn],lx[maxn],ly[maxn];</div><div class="line">int slack[maxn];</div><div class="line">bool visx[maxn],visy[maxn];</div><div class="line">bool dfs(int x)</div><div class="line">&#123;</div><div class="line">	visx[x]=<span class="literal">true</span>;</div><div class="line">	<span class="keyword">for</span>(int y=0;y&lt;ny;y++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(visy[y]) <span class="built_in">continue</span>;</div><div class="line">		int tmp=lx[x]+ly[y]-g[x][y];</div><div class="line">		<span class="keyword">if</span>(tmp==0)</div><div class="line">		&#123;</div><div class="line">			visy[y]=<span class="literal">true</span>;</div><div class="line">			<span class="keyword">if</span>(linker[y]==-1||dfs(linker[y]))</div><div class="line">			&#123;</div><div class="line">				linker[y]=x;</div><div class="line">				<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> </div><div class="line">			slack[y]=min(slack[y],tmp);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">km</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(linker,-1,sizeof(linker));</div><div class="line">	memset(ly,0,sizeof(ly));</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;nx;i++)</div><div class="line">	&#123;</div><div class="line">		lx[i]=g[i][0];</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;ny;j++)</div><div class="line">			lx[i]=max(lx[i],g[i][j]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;nx;i++)</div><div class="line">	&#123;</div><div class="line">		fill(slack,slack+ny,INT);</div><div class="line">		<span class="keyword">while</span>(1)</div><div class="line">		&#123;</div><div class="line">			memset(visx,<span class="literal">false</span>,sizeof(visx));</div><div class="line">			memset(visy,<span class="literal">false</span>,sizeof(visy));</div><div class="line">			<span class="keyword">if</span>(dfs(i)) <span class="built_in">break</span>;</div><div class="line">			int d=INT;</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;ny;j++)</div><div class="line">				<span class="keyword">if</span>(!visy[j])</div><div class="line">					d=min(d,slack[j]);</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;nx;j++)</div><div class="line">				<span class="keyword">if</span>(visx[j])</div><div class="line">					lx[j]-=d;</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;ny;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(visy[j]) ly[j]+=d;</div><div class="line">				<span class="keyword">else</span> slack[j]-=d;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	int ans=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;ny;i++)</div><div class="line">		<span class="keyword">if</span>(linker[i]!=-1)</div><div class="line">			ans+=g[linker[i]][i];</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(~scanf(<span class="string">"%d"</span>,&amp;n))</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;n;j++)</div><div class="line">				scanf(<span class="string">"%d"</span>,&amp;g[i][j]);</div><div class="line">		nx=ny=n;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,km());</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="HDU-1533（km）"><a href="#HDU-1533（km）" class="headerlink" title="HDU 1533（km）"></a>HDU 1533（km）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;cmath&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define INT 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line">using namespace std;</div><div class="line">int nx,ny;</div><div class="line">int g[maxn][maxn];</div><div class="line">int linker[maxn],lx[maxn],ly[maxn];</div><div class="line">int slack[maxn];</div><div class="line">bool visx[maxn],visy[maxn];</div><div class="line">char map[maxn][maxn];</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int x,y;</div><div class="line">&#125;house[maxn],man[maxn];</div><div class="line">bool dfs(int x)</div><div class="line">&#123;</div><div class="line">	visx[x]=<span class="literal">true</span>;</div><div class="line">	<span class="keyword">for</span>(int y=0;y&lt;ny;y++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(visy[y]) <span class="built_in">continue</span>;</div><div class="line">		int tmp=lx[x]+ly[y]-g[x][y];</div><div class="line">		<span class="keyword">if</span>(tmp==0)</div><div class="line">		&#123;</div><div class="line">			visy[y]=<span class="literal">true</span>;</div><div class="line">			<span class="keyword">if</span>(linker[y]==-1||dfs(linker[y]))</div><div class="line">			&#123;</div><div class="line">				linker[y]=x;</div><div class="line">				<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> </div><div class="line">			slack[y]=min(slack[y],tmp);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">km</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(linker,-1,sizeof(linker));</div><div class="line">	memset(ly,0,sizeof(ly));</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;nx;i++)</div><div class="line">	&#123;</div><div class="line">		lx[i]=g[i][0];</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;ny;j++)</div><div class="line">			lx[i]=max(lx[i],g[i][j]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;nx;i++)</div><div class="line">	&#123;</div><div class="line">		fill(slack,slack+ny,INT);</div><div class="line">		<span class="keyword">while</span>(1)</div><div class="line">		&#123;</div><div class="line">			memset(visx,<span class="literal">false</span>,sizeof(visx));</div><div class="line">			memset(visy,<span class="literal">false</span>,sizeof(visy));</div><div class="line">			<span class="keyword">if</span>(dfs(i)) <span class="built_in">break</span>;</div><div class="line">			int d=INT;</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;ny;j++)</div><div class="line">				<span class="keyword">if</span>(!visy[j])</div><div class="line">					d=min(d,slack[j]);</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;nx;j++)</div><div class="line">				<span class="keyword">if</span>(visx[j])</div><div class="line">					lx[j]-=d;</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;ny;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(visy[j]) ly[j]+=d;</div><div class="line">				<span class="keyword">else</span> slack[j]-=d;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	int ans=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;ny;i++)</div><div class="line">		<span class="keyword">if</span>(linker[i]!=-1)</div><div class="line">			ans+=g[linker[i]][i];</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n,m;</div><div class="line">	<span class="keyword">while</span>(~scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m))</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0 &amp;&amp; m==0 ) <span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;m;j++)</div><div class="line">				cin&gt;&gt;map[i][j];</div><div class="line">		int cnt1=0,cnt2=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;m;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(map[i][j]==<span class="string">'m'</span>)</div><div class="line">					man[cnt1].x=i,man[cnt1++].y=j;</div><div class="line">				<span class="keyword">if</span>(map[i][j]==<span class="string">'H'</span>)</div><div class="line">					house[cnt2].x=i,house[cnt2++].y=j;</div><div class="line">			&#125;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;cnt1;i++)</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;cnt2;j++)</div><div class="line">			&#123;</div><div class="line">				g[i][j]=abs(house[i].x-man[j].x)+abs(house[i].y-man[j].y);</div><div class="line">				g[i][j]=-g[i][j];</div><div class="line">			&#125;</div><div class="line">		nx=ny=cnt1;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,-km());</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="哈密顿回路"><a href="#哈密顿回路" class="headerlink" title="哈密顿回路"></a>哈密顿回路</h2><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><p>哈密顿路径：由起点前往指定的终点 途中经过所有节点且只经过一次<br>哈密度回路:恰好经过所有点且最后回到起点的图<br>欧拉通路：通过图中每条边且只通过一次，并且经过每一顶点的通路<br>欧拉回路：通过图中每条边且只通过一次，并且经过每一顶点的回路<br>哈密顿：点 欧拉：边</p>
<h3 id="cf-10D-求哈密顿回路的个数"><a href="#cf-10D-求哈密顿回路的个数" class="headerlink" title="cf 10D(求哈密顿回路的个数)"></a>cf 10D(求哈密顿回路的个数)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">typedef long long ll;</div><div class="line">bool g[20][20];</div><div class="line">ll dp[1&lt;&lt;20][20];</div><div class="line">int n, m;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	cin&gt;&gt;n&gt;&gt;m;</div><div class="line">	memset(g, <span class="literal">false</span>, sizeof(g));</div><div class="line">	<span class="keyword">while</span>(m--)</div><div class="line">	&#123;</div><div class="line">		int a, b;</div><div class="line">		cin&gt;&gt;a&gt;&gt;b;</div><div class="line">		g[a-1][b-1]=g[b-1][a-1]=<span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	ll ans=0;</div><div class="line">	memset(dp, 0, sizeof(dp));</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)dp[1&lt;&lt;i][i]=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;(1&lt;&lt;n);i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;n;j++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(!dp[i][j]) <span class="built_in">continue</span>;</div><div class="line">			int st=0;</div><div class="line">			<span class="keyword">for</span>(int k=0;k&lt;n;k++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(i&amp;(1&lt;&lt;k))</div><div class="line">				&#123;</div><div class="line">					st=k;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(g[st][j]&amp;&amp;__builtin_popcount(i)&gt;2)</div><div class="line">				ans+=dp[i][j];</div><div class="line">			<span class="keyword">for</span>(int k=st+1;k&lt;n;k++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(!(i&amp;(1&lt;&lt;k))&amp;&amp;g[j][k])</div><div class="line">					dp[i|(1&lt;&lt;k)][k]+=dp[i][j];</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans/2&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">/*首先考虑到一个环其实是一条链两头连接起来的，</div><div class="line"> *所以我们只要找到所有的链判一下两头是否联通即可。</div><div class="line"> *但是一个链的状态是首尾和经过的点，是n^2*2^n的，</div><div class="line"> *考虑到题目限制n&lt;=19，这个状态数显然是爆炸的。</div><div class="line"> *现在我们考虑人为地把一个环从经过的点中id最小的点的两侧处切开，</div><div class="line"> *则得到了两个以id最小值为起点的链。</div><div class="line"> *对于任意的环我们都可以这样做，</div><div class="line"> *于是我们只要统计以id最小值为起点的成环链的数量，将结果除以2即可。</div><div class="line"> *这样由于起点已经固定，状态数就只有n*2^n, 然后dp一下即可。</div><div class="line"> *dp的过程详见代码。</div><div class="line"> *[](http://blog.csdn.net/fangzhenpeng/article/details/49078233)</div><div class="line"> */</div></pre></td></tr></table></figure>
<h3 id="输出任意一条哈密顿路径"><a href="#输出任意一条哈密顿路径" class="headerlink" title="输出任意一条哈密顿路径"></a>输出任意一条哈密顿路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt; adj[100005];</div><div class="line">bitset&lt;100005&gt; vis;</div><div class="line">vector&lt;int&gt; ans;</div><div class="line">void dfs(int v1) </div><div class="line">&#123;</div><div class="line">	vis[v1]=<span class="literal">true</span>;</div><div class="line">	ans.push_back(v1);</div><div class="line">	<span class="keyword">for</span> (int i=0; i&lt;adj[v1].size(); i++)</div><div class="line">	 &#123;</div><div class="line">		<span class="keyword">if</span> (!vis[adj[v1][i]]) </div><div class="line">		&#123;</div><div class="line">			dfs(adj[v1][i]);</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>() &#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int n,m;</div><div class="line">	scanf(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</div><div class="line">	<span class="keyword">for</span> (int i=0; i&lt;m; i++) </div><div class="line">	&#123;</div><div class="line">		int a,b;</div><div class="line">		scanf(<span class="string">"%d%d"</span>, &amp;a, &amp;b);</div><div class="line">		a--; b--;</div><div class="line">		adj[a].push_back(b);</div><div class="line">		adj[b].push_back(a);</div><div class="line">	&#125;</div><div class="line">	dfs(0);</div><div class="line">	reverse(ans.begin(),ans.end());</div><div class="line">	<span class="keyword">for</span> (int i=0; i&lt;adj[0].size(); i++) </div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (!vis[adj[0][i]])</div><div class="line">		 &#123;</div><div class="line">			dfs(adj[0][i]);</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans.size());</div><div class="line">	<span class="keyword">for</span> (int i=0; i&lt;ans.size(); i++) </div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d%c"</span>, ans[i]+1, i==ans.size()-1 ? <span class="string">'\n'</span> : <span class="string">' '</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="cf-408"><a href="#cf-408" class="headerlink" title="cf 408"></a>cf 408</h2><h3 id="Bank-Hacking"><a href="#Bank-Hacking" class="headerlink" title="Bank Hacking"></a>Bank Hacking</h3><p><strong>题意</strong><br>题意:n个结点,n-1条边,每个点价值为a[i],两点有边直接相连,算相邻,i,j半相邻:存在没被攻击的中间点k,(i,k),(j,k)是相邻的<br>攻击i后,和i相邻和半相邻的点a[k]++,n&lt;=3e5,求攻击n个点需要的最小x?<br>除了第一次外,每次攻击的点必须满足:1:online,2:和某个offline相邻,3:a[i]&lt;=x</p>
<p><strong>思路</strong><br>n点,n-1条边且连通,则为无根的树,任取一点为根<br>关键在于条件2:每次能被攻击的点都要和offline相连-&gt;任意一点u的值最多+2<br>通过第一次操作后.对任意点u<br>若当u的祖先被攻击时,u最多+2,此时它的任意子结点v,只有当u被攻击时才能被攻击,子节点对u贡献为0<br>若为u的某个子树被攻击,u的其余子树和u的祖先 都只有在u被攻击时才被攻击,所以任意点u的值最多+2,ans&lt;=mx+2 </p>
<p>综上:第一次攻击的点+0,其相邻点+1 间接相邻点都+2,<br>C1为mx个数  C2为mx-1个数<br>ans=mx 只有当C1=1&amp;&amp;正好有C2个mx-1与mx相连<br>ans=mx+1 只有当存在一个点满足 其距离&lt;=1内 mx的个数为C1<br>其余情况ans=mx+2</p>
<p><strong>代码</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include &lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#define inf 0x7f7f7f7f</span></div><div class="line"><span class="comment">#define maxn 300050</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">int a[maxn];</div><div class="line">int n;</div><div class="line">void <span class="function"><span class="title">solve</span></span>()</div><div class="line">&#123;</div><div class="line">	int c1=0,c2=0,mx=-inf,u,ans=inf;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) mx=max(a[i],mx);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(a[i]==mx)</div><div class="line">		&#123;</div><div class="line">			c1++;</div><div class="line">			u=i;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(a[i]==mx-1)</div><div class="line">			c2++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(c1==1)</div><div class="line">	&#123;</div><div class="line">		int cnt=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;e[u].size();i++)</div><div class="line">		&#123;</div><div class="line">			int v=e[u][i];</div><div class="line">			<span class="keyword">if</span>(a[v]==mx-1)</div><div class="line">				cnt++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(cnt==c2) ans=mx;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(ans==inf)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n&amp;&amp;ans==inf;i++)</div><div class="line">		&#123;</div><div class="line">			int cnt=0;</div><div class="line">			<span class="keyword">if</span>(a[i]==mx) cnt++;</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;e[i].size();j++)</div><div class="line">			&#123;</div><div class="line">				int v=e[i][j];</div><div class="line">				<span class="keyword">if</span>(a[v]==mx)</div><div class="line">					cnt++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(cnt==c1) ans=mx+1;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(ans==inf) ans=mx+2;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n-1;i++)</div><div class="line">	&#123;</div><div class="line">		int u,v;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">		e[u].push_back(v);</div><div class="line">		e[v].push_back(u);</div><div class="line">	&#125;</div><div class="line">	solve();</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="Police-Stations"><a href="#Police-Stations" class="headerlink" title="Police Stations"></a>Police Stations</h3><p><strong>题意</strong><br>有n个城市以及n-1条道路连接两个城市 路径长度为1<br>有k个警察局分布在城市中<br>问最多可以删除多少条路径 使所有城市最多走长度d后可以达到警察局</p>
<p><strong>思路</strong><br>因为保证有解 所以d是没有用的<br>确保最优解 使用bfs<br>每个警察局的vis初始化为1 队列初始压入所有的警察局<br>以每个警察局为根节点遍历 并把走过的点和边标记<br>最后没有标记的边就是可以删除的边</p>
<p><strong>代码</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 300050</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int to,po;</div><div class="line">	node(int to,int po):to(to),po(po)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">int edge[maxn],vis[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int n,k,d;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d%d"</span>,&amp;n,&amp;k,&amp;d)!=EOF)</div><div class="line">	&#123;</div><div class="line">		queue&lt;int&gt;q;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=n;i++) e[i].clear();</div><div class="line">		memset(edge,0,sizeof(edge));</div><div class="line">		memset(vis,0,sizeof(vis));</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;k;i++)</div><div class="line">		&#123;</div><div class="line">			int x;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">			vis[x]=1;</div><div class="line">			q.push(x);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n-1;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">			e[u].push_back(node(v,i));</div><div class="line">			e[v].push_back(node(u,i));</div><div class="line">		&#125;</div><div class="line">//		cout&lt;&lt;e[1][0].to&lt;&lt;<span class="string">" "</span>&lt;&lt;e[1][0].po&lt;&lt;endl;</div><div class="line">		<span class="keyword">while</span>(!q.empty())</div><div class="line">		&#123;</div><div class="line">			int u=q.front();</div><div class="line">			q.pop();</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;e[u].size();i++)</div><div class="line">			&#123;</div><div class="line">				int v=e[u][i].to;</div><div class="line">				<span class="keyword">if</span>(vis[v]==0)</div><div class="line">				&#123;</div><div class="line">					vis[v]=1;</div><div class="line">					edge[e[u][i].po]=1;</div><div class="line">					q.push(v);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		int cnt=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n-1;i++)</div><div class="line">			<span class="keyword">if</span>(edge[i]==0)</div><div class="line">				cnt++;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cnt);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n-1;i++)</div><div class="line">			<span class="keyword">if</span>(edge[i]==0)</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"%d "</span>,i);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="次小生成树"><a href="#次小生成树" class="headerlink" title="次小生成树"></a>次小生成树</h2><h3 id="POJ-1679"><a href="#POJ-1679" class="headerlink" title="POJ 1679"></a>POJ 1679</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;climits&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#define maxn 105</span></div><div class="line">using namespace std;</div><div class="line">int vis[maxn];</div><div class="line">int lowc[maxn];</div><div class="line">int pre[maxn];</div><div class="line">int Max[maxn][maxn];</div><div class="line">int used[maxn][maxn];</div><div class="line">int map[maxn][maxn];</div><div class="line">const int INF=0x3f3f3f3f;</div><div class="line">int prim(int n)</div><div class="line">&#123;</div><div class="line">	int ans=0;</div><div class="line">	memset(vis,0,sizeof(vis));</div><div class="line">	memset(Max,0,sizeof(Max));</div><div class="line">	memset(used,0,sizeof(used));</div><div class="line">	vis[0]=1;</div><div class="line">	pre[0]=-1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">	&#123;</div><div class="line">		lowc[i]=map[0][i];</div><div class="line">		pre[i]=0;</div><div class="line">	&#125;</div><div class="line">	lowc[0]=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">	&#123;</div><div class="line">		int minc=INT_MAX;</div><div class="line">		int p=-1;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;n;j++)</div><div class="line">			<span class="keyword">if</span>(!vis[j]&amp;&amp;minc&gt;lowc[j])</div><div class="line">			&#123;</div><div class="line">				minc=lowc[j];</div><div class="line">				p=j;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(minc==INT_MAX) <span class="built_in">return</span> -1;</div><div class="line">			ans+=minc;</div><div class="line">			vis[p]=1;</div><div class="line">			used[p][pre[p]]=used[pre[p]][p]=1;</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;n;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(vis[j]) Max[j][p]=Max[p][j]=max(Max[j][pre[p]],lowc[p]);</div><div class="line">				<span class="keyword">if</span>(!vis[j]&amp;&amp;lowc[j]&gt;map[p][j])</div><div class="line">				&#123;</div><div class="line">					lowc[j]=map[p][j];</div><div class="line">					pre[j]=p;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int ans;</div><div class="line">int smst(int n)</div><div class="line">&#123;</div><div class="line">	int M<span class="keyword">in</span>=INT_MAX;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		<span class="keyword">for</span>(int j=i+1;j&lt;n;j++)</div><div class="line">			<span class="keyword">if</span>(map[i][j]!=INT_MAX &amp;&amp; !used[i][j])</div><div class="line">				M<span class="keyword">in</span>=min(M<span class="keyword">in</span>,ans+map[i][j]-Max[i][j]);</div><div class="line">	<span class="keyword">if</span>(M<span class="keyword">in</span>==INT_MAX) <span class="built_in">return</span> -1;</div><div class="line">	<span class="built_in">return</span> M<span class="keyword">in</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n,m;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;n;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(i==j)map[i][j]=0;</div><div class="line">				<span class="keyword">else</span> map[i][j]=INT_MAX;</div><div class="line">			&#125;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;m;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v,w;</div><div class="line">			scanf(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</div><div class="line">			map[u-1][v-1]=w;</div><div class="line">			map[v-1][u-1]=w;</div><div class="line">		&#125;</div><div class="line">		ans=prim(n);</div><div class="line">		<span class="keyword">if</span>(ans==-1)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"Not Unique!\n"</span>);</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(ans==smst(n))</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"Not Unique!\n"</span>);</div><div class="line">		<span class="keyword">else</span></div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="AT-coder-求矩形里子矩形的个数"><a href="#AT-coder-求矩形里子矩形的个数" class="headerlink" title="AT-coder(求矩形里子矩形的个数)"></a>AT-coder(求矩形里子矩形的个数)</h2><h3 id="代码-公式"><a href="#代码-公式" class="headerlink" title="代码(公式)"></a>代码(公式)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#define Maxn 100005</span></div><div class="line">const int N=1e9+7;</div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">bool Cmp(int a,int b)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> a&gt;b;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	LL x[maxn],y[maxn],sumx=0,sumy=0;</div><div class="line">	int n,m;</div><div class="line">	cin&gt;&gt;n&gt;&gt;m;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		cin&gt;&gt;x[i];</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;m;i++)</div><div class="line">		cin&gt;&gt;y[i];</div><div class="line">	sort(x,x+n,Cmp);</div><div class="line">	sort(y,y+m,Cmp);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n-1;i++)&#123;</div><div class="line">		sumx=(sumx+(x[i]-x[i+1])*(n-1-i)*(i+1))%N;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=m-1;i++)&#123;</div><div class="line">		sumy=(sumy+(y[i]-y[i+1])*(m-1-i)*(i+1))%N;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;sumx*sumy%N&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-4305-生成树计数"><a href="#HDU-4305-生成树计数" class="headerlink" title="HDU 4305(生成树计数)"></a>HDU 4305(生成树计数)</h2><h2 id="hihocoder-智力竞赛-dp"><a href="#hihocoder-智力竞赛-dp" class="headerlink" title="hihocoder-智力竞赛(dp)"></a>hihocoder-智力竞赛(dp)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;climits&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int inf=0x7f7f7f7f;</div><div class="line">int a[1050];</div><div class="line">int dp[1050][1050];  //dp[i][j]表示通过第i关 用了j次答题机会的最小答对题目个数</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;	</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int T;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;T);</div><div class="line">	<span class="keyword">while</span>(T--)</div><div class="line">	&#123;</div><div class="line">		int n,m,s,t;</div><div class="line">		scanf(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;m,&amp;s,&amp;t);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">		memset(dp,inf,sizeof(dp));</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;=m;j++)</div><div class="line">			dp[0][j]=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			int num=ceil(a[i]/(<span class="built_in">float</span>)s);</div><div class="line">			<span class="keyword">for</span>(int k=0;k&lt;=num;k++)</div><div class="line">			&#123;</div><div class="line">				int x=a[i]-k*s;</div><div class="line">				<span class="keyword">if</span>(x&gt;0) x=ceil(x/(<span class="built_in">float</span>)t);</div><div class="line">				<span class="keyword">else</span> x=0;</div><div class="line">				<span class="keyword">for</span>(int j=0;j&lt;=m;j++)</div><div class="line">					<span class="keyword">if</span>(x+k+j&lt;=m)</div><div class="line">						dp[i][x+k+j]=min(dp[i][x+k+j],dp[i-1][j]+k);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		int ans=inf;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;=m;j++)</div><div class="line">			ans=min(ans,dp[n][j]);</div><div class="line">		<span class="keyword">if</span>(ans&gt;m) <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</div><div class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="UVA-10881（蚂蚁直线-蓝书P9）"><a href="#UVA-10881（蚂蚁直线-蓝书P9）" class="headerlink" title="UVA 10881（蚂蚁直线 蓝书P9）"></a>UVA 10881（蚂蚁直线 蓝书P9）</h2><h2 id="atcoder-contest013C环状蚂蚁"><a href="#atcoder-contest013C环状蚂蚁" class="headerlink" title="atcoder_contest013C环状蚂蚁"></a>atcoder_contest013<em>C</em>环状蚂蚁</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int n, l, t;</div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">const int N = 200000;</div><div class="line">int xi[N], dir[N], xx[N];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">//    freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	cin &gt;&gt; n &gt;&gt; l &gt;&gt; t;</div><div class="line">    LL c = 0;</div><div class="line">    <span class="keyword">for</span> (int i = 0; i &lt; n; ++ i)</div><div class="line">    &#123;</div><div class="line">        cin &gt;&gt; xi[i] &gt;&gt; dir[i];</div><div class="line">        <span class="keyword">if</span> (dir[i] == 2) dir[i] = -1;</div><div class="line">        int nx = xi[i] + t * dir[i];</div><div class="line">        c += (nx &gt; 0? nx / l: (nx - l + 1) / l);</div><div class="line">        xx[i] = (nx % l + l) % l;</div><div class="line">    &#125;</div><div class="line">    sort(xx, xx + n);</div><div class="line">    <span class="keyword">for</span> (int i = 0; i &lt; n; ++ i)</div><div class="line">        cout &lt;&lt; xx[((i + c) % n + n) % n] &lt;&lt; <span class="string">"\n"</span>;</div><div class="line">&#125;</div><div class="line">//最后的求的数组xx其实也是一个环 c判断从何位置环形输出</div><div class="line">//c：每次逆时针过原点-1 每次顺时针过原点+1</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[简单数论]]></title>
      <url>http://xuboming8.github.io/2017/03/03/%E7%AE%80%E5%8D%95%E6%95%B0%E8%AE%BA/</url>
      <content type="html"><![CDATA[<h1 id="简单数论"><a href="#简单数论" class="headerlink" title="简单数论"></a>简单数论</h1><h2 id="UVA-12716"><a href="#UVA-12716" class="headerlink" title="UVA 12716"></a>UVA 12716</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>输入整数n（1≤n≤30000000）有多少对整数（a，b）满足：1≤b≤a≤n 且gcd(a，b)=a XOR b<br>例如n=7时 有4对：（3，2）（5，4）（6，4）（7，6）<br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#define maxn 30000000+50</span></div><div class="line">using namespace std;</div><div class="line">int ans[maxn];</div><div class="line">int flag=1;</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	int b;</div><div class="line">	<span class="keyword">for</span>(int c=1;c&lt;=(maxn&gt;&gt;1);c++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int a=c+c;a&lt;=maxn;a+=c)</div><div class="line">		&#123;</div><div class="line">			b=a-c;</div><div class="line">			<span class="keyword">if</span>((a^b)==c)</div><div class="line">				ans[a]++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=maxn;i++)</div><div class="line">		ans[i]+=ans[i-1];</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	init();</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>,flag++,ans[n]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>我们在打印出一些三元组（a，b，c）后可以发现c=a-b<br>有了这个结论 我们枚举c和a 计算出b 验证是否满足题意<br>枚举c后 由于c是a的约数 所以a只需依次加上c即可</p>
<h2 id="UVA-1635"><a href="#UVA-1635" class="headerlink" title="UVA 1635"></a>UVA 1635</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定n个数a1,a2····an,依次求出相邻两个数值和，将得到一个新数列，重复上述操作，最后结果将变为一个数，问这个数除以m的余数与那些数无关？例如n=3,m=2时<br>第一次得到a1+a2,a2+a3，在求和得到a1+2*a2+a3，它除以2的余数和a2无关。1=&lt;n&lt;=10^5, 2=&lt;m&lt;=10^9</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;math.h&gt;</span></div><div class="line"><span class="comment">#define maxn 32000</span></div><div class="line">using namespace std;</div><div class="line">int vis[maxn+50];</div><div class="line">int num;</div><div class="line">int n,m;</div><div class="line">int pm[20],em[20],im;</div><div class="line">int flag[100010];</div><div class="line">void <span class="function"><span class="title">getprime</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(vis,0,sizeof(vis));</div><div class="line">	num=0;</div><div class="line">	int m=sqrt(maxn+0.5);</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=m;i++)</div><div class="line">		<span class="keyword">for</span>(int j=i*i;j&lt;=maxn;j+=i)</div><div class="line">			vis[j]=1;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=maxn;i++)</div><div class="line">		<span class="keyword">if</span>(!vis[i])</div><div class="line">			vis[num++]=i;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(pm,0,sizeof(pm));</div><div class="line">	memset(em,0,sizeof(em));</div><div class="line">	im=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;num&amp;&amp;m&gt;=vis[i];i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(m%vis[i]==0)</div><div class="line">		&#123;</div><div class="line">			pm[im]=vis[i];</div><div class="line">			<span class="keyword">while</span>(m%vis[i]==0)</div><div class="line">			&#123;</div><div class="line">				m/=vis[i];</div><div class="line">				em[im]++;</div><div class="line">			&#125;</div><div class="line">			im++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(m&gt;1)</div><div class="line">	&#123;</div><div class="line">		pm[im]=m;</div><div class="line">		em[im]=1;</div><div class="line">		im++;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int get_factor(int x,int y)</div><div class="line">&#123;</div><div class="line">	int f=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;im;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">while</span>((x%pm[i]==0)&amp;&amp;(x/=pm[i]))  </div><div class="line">			em[i]--;  </div><div class="line">		<span class="keyword">while</span>(y%pm[i]==0&amp;&amp;(y/=pm[i]))  </div><div class="line">			em[i]++;  </div><div class="line">		<span class="keyword">if</span>(em[i]&gt;0)</div><div class="line">			f=0;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> f;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	getprime();</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">	&#123;</div><div class="line">		init();</div><div class="line">		memset(flag,0,sizeof(flag));</div><div class="line">		int ans=0,end=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(get_factor(n-i,i))</div><div class="line">			&#123;</div><div class="line">				ans++;</div><div class="line">				end=i+1;</div><div class="line">				flag[i+1]=1;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">		<span class="keyword">if</span>(ans&gt;0)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span>(int i=1;i&lt;end;i++)</div><div class="line">				<span class="keyword">if</span>(flag[i])</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"%d "</span>,i);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d"</span>,end);</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>1、首先我们可以发现对于给定的n其实每项的系数就是C(n-1,i-1)，所以我们只需要找到每项的系数对m取余是否为0即可<br>2、由于m的取值范围为10^9,所以我们只需要筛选 √(10^9)的素数，然后对m进行分解；如果分解后m&gt;1，说明当前m的是原m的一个素数，而且m&gt; √(10^9)，因此我们只<br>   需记录它即可<br>3、根据C(n,k)=C(n,k)<em>(n-i+1)/i;(根据这个公式我们可以发现C(n,k)</em>(n-i+1)一定能整除i)，对m分解式中的素数进行操作即可，具体见代码<br>getprime函数打印出素数表<br>init函数求出m的唯一分解定理中的所有质数和指数<br>get_factor函数对每个组合数进行如下操作：是否可以被每个质因数整除 若指数除为0表示整除完<br>因为存在分子分母的约分关系 所以x应减 y应加<br>另外也需要注意输出格式</p>
<h2 id="UVA-10820"><a href="#UVA-10820" class="headerlink" title="UVA 10820"></a>UVA 10820</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>求1-n之间有多少对互质的数</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#define maxn 50000+50</span></div><div class="line">using namespace std;</div><div class="line">int phi[maxn];</div><div class="line">int n;</div><div class="line">void phi_table(int n)</div><div class="line">&#123;</div><div class="line">	memset(phi,0,sizeof(phi));</div><div class="line">	phi[1]=1;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=maxn;i++)</div><div class="line">		<span class="keyword">if</span>(!phi[i])</div><div class="line">			<span class="keyword">for</span>(int j=i;j&lt;=maxn;j+=i)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(!phi[j])</div><div class="line">					phi[j]=j;</div><div class="line">				phi[j]=phi[j]/i*(i-1);</div><div class="line">			&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	phi_table(maxn);</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		int ans=0;</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)</div><div class="line">			ans+=phi[i];</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans*2+1);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>裸欧拉函数变形求解<br>使用O（nloglogn）算法求解<br>除了（1，1） 其余求出的均为x＜y的情况 最后应×2 所以结果为2×ans+1<br>ans=phi(2)+phi(3)+···+phi(n)<br>注：欧拉函数的公式比变形复杂 但是求解要快 要注意根据时间选择合适的算法</p>
<h2 id="UVA-1262"><a href="#UVA-1262" class="headerlink" title="UVA 1262"></a>UVA 1262</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出两个6行5列的字母矩阵，一个密码满足：密码的第i个字母在两个字母矩阵的第i列均出现。<br>然后找出字典序为k的密码，如果不存在输出NO</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">char map[2][6][5];</div><div class="line">int k,cnt;</div><div class="line">char ans[6];</div><div class="line">bool dfs(int col)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(col==5)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(++cnt==k)</div><div class="line">		&#123;</div><div class="line">			ans[col]=<span class="string">'\0'</span>;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%s\n"</span>,ans);</div><div class="line">			<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line">	int vis[2][26];</div><div class="line">	memset(vis,0,sizeof(vis));</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;2;i++)</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;6;j++)</div><div class="line">			vis[i][map[i][j][col]-<span class="string">'A'</span>]=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;26;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(vis[0][i]&amp;&amp;vis[1][i])</div><div class="line">		&#123;</div><div class="line">			ans[col]=i+<span class="string">'A'</span>;</div><div class="line">			<span class="keyword">if</span>(dfs(col+1))</div><div class="line">				<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;k);</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;2;i++)</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;6;j++)</div><div class="line">				scanf(<span class="string">"%s"</span>,map[i][j]);</div><div class="line">		cnt=0;</div><div class="line">		memset(ans,0,sizeof(ans));</div><div class="line">		<span class="keyword">if</span>(!dfs(0))</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>回溯法更容易写出<br>map三维数组可以存入两个矩阵<br>cnt记录是不是字典序第k个<br>对每一列 对出现的字母置为1 对两个矩阵中该列均为1的元素进行记录并回溯</p>
<h2 id="hackerrank"><a href="#hackerrank" class="headerlink" title="hackerrank"></a>hackerrank</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出数组A和数组B 长度均为n<br>要从从数组A中选出x 从数组B中选出y 满足gcd(x,y)最大 输出x+y</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line"><span class="comment">#define maxn 500050</span></div><div class="line"><span class="comment">#define inf 0x3f3f3f3f</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define pb push_back</span></div><div class="line"><span class="comment">#define pii pair&lt;int,int&gt;</span></div><div class="line"><span class="comment">#define fi first</span></div><div class="line"><span class="comment">#define se second</span></div><div class="line"><span class="comment">#define mm(a,b) memset(a,b,sizeof(a))</span></div><div class="line"><span class="comment">#define mp(a,b) make_pair(a,b)</span></div><div class="line"><span class="comment">#define lson l,m,rt&lt;&lt;1</span></div><div class="line"><span class="comment">#define rson m+1,r,rt&lt;&lt;1|1</span></div><div class="line">const double eps = 1e-6;</div><div class="line">const LL mod=1e9+7;</div><div class="line">const LL INF=(LL)1e18;</div><div class="line">using namespace std;</div><div class="line">LL gcd(LL a,LL b)&#123;<span class="built_in">return</span> b==0?a:gcd(b,a%b);&#125;</div><div class="line">LL qpow(LL x,LL y)&#123;LL re=1,base=x%mod;<span class="keyword">while</span>(y)&#123;<span class="keyword">if</span>(y&amp;1)re=(re*base)%mod;base=(base*base)%mod;y&gt;&gt;=1;&#125;<span class="built_in">return</span> re;&#125;</div><div class="line">int a[maxn],b[maxn],aa[maxn],bb[maxn];</div><div class="line">int n;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">//	freopen(<span class="string">"ouput.txt"</span>,<span class="string">"w"</span>,sdout);</div><div class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</div><div class="line">	cin.tie(0),cout.tie(0);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)&#123;</div><div class="line">		mm(a,0),mm(b,0),mm(aa,0),mm(bb,0);</div><div class="line">		int maxa=-1,maxb=-1;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			int x;</div><div class="line">			cin&gt;&gt;x;</div><div class="line">			maxa=max(maxa,x);</div><div class="line">			a[x]++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">			int x;</div><div class="line">			cin&gt;&gt;x;</div><div class="line">			maxb=max(maxb,x);</div><div class="line">			b[x]++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=maxa;i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=i;j&lt;=maxa;j+=i)&#123;</div><div class="line">				<span class="keyword">if</span>(a[j] &amp;&amp; j&gt;=aa[i]) aa[i]=j;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=maxb;i++)&#123;</div><div class="line">			<span class="keyword">for</span>(int j=i;j&lt;=maxb;j+=i)&#123;</div><div class="line">				<span class="keyword">if</span>(b[j] &amp;&amp; j&gt;=bb[i]) bb[i]=j;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		int ans=0;</div><div class="line">		<span class="keyword">for</span>(int i=min(maxa,maxb);i&gt;=1;i--)&#123;</div><div class="line">			<span class="keyword">if</span>(aa[i]==0 || bb[i]==0) <span class="built_in">continue</span>;</div><div class="line">			ans=aa[i]+bb[i];</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>对2个数组预处理出某个因数倍数的最大值<br>再从最大值开始逆推 第一个满足条件即为所求</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[容斥原理]]></title>
      <url>http://xuboming8.github.io/2017/02/28/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/</url>
      <content type="html"><![CDATA[<h1 id="容斥原理"><a href="#容斥原理" class="headerlink" title="容斥原理"></a>容斥原理</h1><h2 id="HDU-4135"><a href="#HDU-4135" class="headerlink" title="HDU 4135"></a>HDU 4135</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14882421406.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148824214145.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148824214198.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148824214242.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148824214294.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>找出区间[a,b]内与n互质的个数</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;cstring&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">LL ans;</div><div class="line">int a[1000];</div><div class="line">int num;</div><div class="line">void get_prime(LL n)    //快速求出所有n的质因子</div><div class="line">&#123;             //使用唯一分解定理 任何一个数都可以拆分成若干个质数的乘积</div><div class="line">	<span class="keyword">for</span>(int i=2;i*i&lt;=n;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n%i==0)</div><div class="line">		&#123;</div><div class="line">			a[num++]=i;</div><div class="line">			<span class="keyword">while</span>(n%i==0)</div><div class="line">				n/=i;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(n&gt;1)         //注意最后一项的处理</div><div class="line">		a[num++]=n;</div><div class="line">&#125;</div><div class="line">LL rongchi(LL m)   //容斥原理公式</div><div class="line">&#123;</div><div class="line">	LL que[10000];</div><div class="line">	LL sum=0;</div><div class="line">	int t=0;</div><div class="line">	que[t++]=-1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;num;i++)</div><div class="line">	&#123;</div><div class="line">		int k=t;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;k;j++)</div><div class="line">			que[t++]=(-1)*a[i]*que[j];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;t;i++)</div><div class="line">		sum+=m/que[i];</div><div class="line">	<span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	int flag=1;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		LL x,y;</div><div class="line">		int n;</div><div class="line">		scanf(<span class="string">"%lld%lld%d"</span>,&amp;x,&amp;y,&amp;n);</div><div class="line">		memset(a,0,sizeof(a));</div><div class="line">		ans=0,num=0;</div><div class="line">		get_prime(n);</div><div class="line">		ans=(y-rongchi(y))-(x-1-rongchi(x-1));</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"Case #%d: %lld\n"</span>,flag++,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>我们可以先转化下：用(1,b)区间与n互质的数的个数减去(1,a-1)区间与n互质的数的个数,那么现在就转化成求(1,m)区间于n互质的数的个数,如果要求的是(1,n)区间<br>与n互质的数的个数的话，我们直接求出n的欧拉函数值即可，可是这里是行不通的!我们不妨换一种思路：就是求出(1,m)区间与n不互质的数的个数，假设为num，<br>那么我们的答案就是：m-num!现在的关键就是：怎样用一种最快的方法求出(1,m)区间与n不互质的数的个数？方法实现：我们先求出n的质因子(因为任何一个数都可以<br>分解成若干个质数相乘的),如何尽快地求出n的质因子呢？使用代码给出的方法<br>举一组实例吧:假设m=12,n=30.<br>第一步：求出n的质因子：2,3,5；<br>第二步：(1,m)中是n的因子的倍数当然就不互质了(2,4,6,8,10)-&gt;n/2  6个,(3,6,9,12)-&gt;n/3  4个,(5,10)-&gt;n/5  2个。<br>如果是粗心的同学就把它们全部加起来就是：6+4+2=12个了，那你就大错特错了,里面明显出现了重复的,我们现在要处理的就是如何去掉那些重复的了<br>第三步：这里就需要用到容斥原理了，公式就是：n/2+n/3+n/5-n/(2×3)-n/(2×5)-n/(3×5)+n/(2×3×5).<br>第四步:我们该如何实现呢？我在网上看到有几种实现方法：dfs(深搜)，队列数组，位运算三种方法都可以 上述公式有一个特点：n除以奇数个数相乘的时候是加，<br>n除以偶数个数相乘的时候是减(奇加偶减)。这里用队列数组实现：我们可以把第一个元素设为-1 具体看代码实现</p>
<h2 id="HDU-1796"><a href="#HDU-1796" class="headerlink" title="HDU 1796"></a>HDU 1796</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148824275953.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148824276082.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148824276229.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/1488242763.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148824276364.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出N和一个数集 求1—N中可以被数集中的任何元素整除的所有数的个数</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;cstring&gt;</span></div><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">LL n,ans;</div><div class="line">int m,cnt;</div><div class="line">int a[15];</div><div class="line">LL gcd(LL a,LL b)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> b==0?a:gcd(b,a%b);</div><div class="line">&#125;</div><div class="line">void dfs(int cur,LL lcm,int id)</div><div class="line">&#123;</div><div class="line">	lcm=a[cur]/gcd(a[cur],lcm)*lcm;</div><div class="line">	<span class="keyword">if</span>(id&amp;1)</div><div class="line">		ans+=(n-1)/lcm;</div><div class="line">	<span class="keyword">else</span></div><div class="line">		ans-=(n-1)/lcm;</div><div class="line">	<span class="keyword">for</span>(int i=cur+1;i&lt;cnt;i++)</div><div class="line">		dfs(i,lcm,id+1);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%lld%d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">	&#123;</div><div class="line">		cnt=0,ans=0;</div><div class="line">		memset(a,0,sizeof(a));</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;m;i++)</div><div class="line">		&#123;</div><div class="line">			int x;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;x);</div><div class="line">			<span class="keyword">if</span>(x!=0)           //x为非负数 需要把0排除</div><div class="line">				a[cnt++]=x;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;cnt;i++)</div><div class="line">			dfs(i,a[i],1);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>容斥原理地简单应用。先找出1…n内能被集合中任意一个元素整除的个数，再减去能被集合中任意两个整除的个数，即能被它们两只的最小公倍数整除的个数，<br>因为这部分被计算了两次，然后又加上三个时候的个数，然后又减去四个时候的倍数…所以深搜，最后判断下集合元素的个数为奇还是偶，奇加偶减。</p>
<h2 id="HDU-2841"><a href="#HDU-2841" class="headerlink" title="HDU 2841"></a>HDU 2841</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148824340387.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148824340473.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148824340526.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148824340637.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148824340706.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>从(1,1)开始的N×M的格子上有树，从(0,0)点可以看到多少棵树</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">int que[maxn];</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;maxn;i++)</div><div class="line">		e[i].clear();</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;maxn;i++)</div><div class="line">	&#123;</div><div class="line">		int t=i;</div><div class="line">		<span class="keyword">for</span>(int j=2;j*j&lt;maxn;j++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(t%j==0)</div><div class="line">			&#123;</div><div class="line">				e[i].push_back(j);</div><div class="line">				<span class="keyword">while</span>(t%j==0)</div><div class="line">					t/=j;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(t&gt;1)</div><div class="line">			e[i].push_back(t);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">LL rongchi(int n,int s)</div><div class="line">&#123;</div><div class="line">	int num=0;</div><div class="line">	que[num++]=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[s].size();i++)</div><div class="line">	&#123;</div><div class="line">		int ep=e[s][i];</div><div class="line">		<span class="keyword">if</span>(ep&gt;n)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		int k=num;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;k;j++)</div><div class="line">			que[num++]=que[j]*(-1)*ep;</div><div class="line">	&#125;</div><div class="line">	LL sum=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;num;i++)</div><div class="line">		sum+=n/que[i];</div><div class="line">	<span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	init();</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int m,n;</div><div class="line">		scanf(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</div><div class="line">		LL ans=n;</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=m;i++)</div><div class="line">			ans+=rongchi(n,i);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>因为ans初始化为n 所以从第二行开始为奇减偶加<br>经画图推敲可以发现如果A1/B1=A2/B2那么就有一棵树看不到，所以就是找出Ai/Bi有多少种。<br>再可以发现A/B中，如果A,B有大于1的公约数，则A=A’×D B=B’×D，那么A/B=A’/B’,也就是存在另外一组数和这种相等，则问题转换成有多少对互质的数。<br>本题和HDU 4135唯一的区别就是枚举i，从1-M中找与i互质的数，其中1&lt;=i&lt;=N。<br>容注意先预处理i的所有素因子，然后容斥就可以了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[DP专题八--石子合并]]></title>
      <url>http://xuboming8.github.io/2017/02/23/DP%E4%B8%93%E9%A2%98%E5%85%AB-%E7%9F%B3%E5%AD%90%E5%90%88%E5%B9%B6/</url>
      <content type="html"><![CDATA[<h1 id="DP专题八–石子合并"><a href="#DP专题八–石子合并" class="headerlink" title="DP专题八–石子合并"></a>DP专题八–石子合并</h1><h2 id="任取石子"><a href="#任取石子" class="headerlink" title="任取石子"></a>任取石子</h2><p>有N堆石子，现要将石子有序的合并成一堆，规定如下：每次只能移动任意的2堆石子合并，合并花费为新合成的一堆石子的数量。求将这N堆石子合并成一堆的总花费<br>最小（或最大）。</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>当然这种情况是最简单的情况，合并的是任意两堆，直接贪心即可，每次选择最小的两堆合并。本问题实际上就是哈夫曼的变形。<br><a id="more"></a></p>
<h2 id="蓝桥杯–合并石子"><a href="#蓝桥杯–合并石子" class="headerlink" title="蓝桥杯–合并石子"></a>蓝桥杯–合并石子</h2><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148783986978.png" alt=""></p>
<h3 id="参考90分代码-未优化"><a href="#参考90分代码-未优化" class="headerlink" title="参考90分代码(未优化)"></a>参考90分代码(未优化)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;climits&gt;</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line">using namespace std;</div><div class="line">int dp[maxn][maxn];</div><div class="line">int n;</div><div class="line">int a[maxn],sum[maxn];</div><div class="line">void <span class="function"><span class="title">get_min_value</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int r=2;r&lt;=n;r++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n-r+1;i++)</div><div class="line">		&#123;</div><div class="line">			int j=i+r-1;</div><div class="line">			int temp=sum[j]-sum[i-1];</div><div class="line">			dp[i][j]=dp[i+1][j]+temp;</div><div class="line">			cout&lt;&lt;<span class="string">"dp["</span>&lt;&lt;i&lt;&lt;<span class="string">"]["</span>&lt;&lt;j&lt;&lt;<span class="string">"] = "</span>&lt;&lt;dp[i][j]&lt;&lt;endl;</div><div class="line">			<span class="keyword">for</span>(int k=i+1;k&lt;j;k++)</div><div class="line">			&#123;</div><div class="line">				int ans=dp[i][k]+dp[k+1][j]+temp;</div><div class="line">				<span class="keyword">if</span>(ans&lt;dp[i][j])</div><div class="line">					dp[i][j]=ans;</div><div class="line">				cout&lt;&lt;<span class="string">"dp["</span>&lt;&lt;i&lt;&lt;<span class="string">"]["</span>&lt;&lt;j&lt;&lt;<span class="string">"] = "</span>&lt;&lt;dp[i][j]&lt;&lt;endl;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;a[i];</div><div class="line">		sum[0]=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			sum[i]=sum[i-1]+a[i];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			dp[i][i]=0;</div><div class="line">		get_min_value();</div><div class="line">		cout&lt;&lt;dp[1][n]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码-四边形不等式优化"><a href="#参考AC代码-四边形不等式优化" class="headerlink" title="参考AC代码(四边形不等式优化)"></a>参考AC代码(四边形不等式优化)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;climits&gt;</span></div><div class="line"><span class="comment">#define maxn 1050</span></div><div class="line">using namespace std;</div><div class="line">int dp[maxn][maxn];</div><div class="line">int s[maxn][maxn];</div><div class="line">int n;</div><div class="line">int a[maxn],sum[maxn];</div><div class="line">void <span class="function"><span class="title">get_min_value</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int r=2;r&lt;=n;r++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n-r+1;i++)</div><div class="line">		&#123;</div><div class="line">			int j=i+r-1;</div><div class="line">			int temp=sum[j]-sum[i-1];</div><div class="line">			dp[i][j]=dp[i+1][j]+temp;</div><div class="line">			s[i][j]=i;</div><div class="line">			/*cout&lt;&lt;<span class="string">"dp["</span>&lt;&lt;i&lt;&lt;<span class="string">"]["</span>&lt;&lt;j&lt;&lt;<span class="string">"] = "</span>&lt;&lt;dp[i][j]&lt;&lt;endl;*/</div><div class="line">			<span class="keyword">for</span>(int k=s[i][j-1];k&lt;=s[i+1][j];k++)</div><div class="line">			&#123;</div><div class="line">				int ans=dp[i][k]+dp[k+1][j]+temp;</div><div class="line">				<span class="keyword">if</span>(ans&lt;dp[i][j])</div><div class="line">				&#123;</div><div class="line">					dp[i][j]=ans;</div><div class="line">					s[i][j]=k;</div><div class="line">				&#125;</div><div class="line">				/*cout&lt;&lt;<span class="string">"dp["</span>&lt;&lt;i&lt;&lt;<span class="string">"]["</span>&lt;&lt;j&lt;&lt;<span class="string">"] = "</span>&lt;&lt;dp[i][j]&lt;&lt;endl;*/</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;a[i];</div><div class="line">		sum[0]=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			sum[i]=sum[i-1]+a[i];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			dp[i][i]=0;</div><div class="line">			s[i][i]=i;</div><div class="line">		&#125;</div><div class="line">		get_min_value();</div><div class="line">		cout&lt;&lt;dp[1][n]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>我们熟悉矩阵连乘，知道矩阵连乘也是每次合并相邻的两个矩阵，那么石子合并可以用矩阵连乘的方式来解决。<br>设dp[i][j]表示第i到第j堆石子合并的最优值，sum[i][j]表示第i到第j堆石子的总数量。那么就有状态转移公式：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148784011467.png" alt=""><br>四边形不等式优化从k的取值从i-j-1优化到s[i][j-1]-s[i+1][j].</p>
<h2 id="POJ-1738–GarsiaWachs算法"><a href="#POJ-1738–GarsiaWachs算法" class="headerlink" title="POJ 1738–GarsiaWachs算法"></a>POJ 1738–GarsiaWachs算法</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148784043364.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148784043417.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148784043792.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148784043755.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148784043832.png" alt=""></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;  </span></div><div class="line"><span class="comment">#include &lt;string.h&gt;  </span></div><div class="line"><span class="comment">#include &lt;stdio.h&gt;  </span></div><div class="line">using namespace std;  </div><div class="line">const int N = 50005;  </div><div class="line">int stone[N];  </div><div class="line">int n,t,ans;  </div><div class="line">void combine(int k)  </div><div class="line">&#123;  </div><div class="line">	int tmp = stone[k] + stone[k-1];  </div><div class="line">	ans += tmp;  </div><div class="line">	<span class="keyword">for</span>(int i=k;i&lt;t-1;i++)  </div><div class="line">		stone[i] = stone[i+1];  </div><div class="line">	t--;  </div><div class="line">	int j = 0;  </div><div class="line">	<span class="keyword">for</span>(j=k-1;j&gt;0 &amp;&amp; stone[j-1] &lt; tmp;j--)  </div><div class="line">		stone[j] = stone[j-1];  </div><div class="line">	stone[j] = tmp;  </div><div class="line">	<span class="keyword">while</span>(j &gt;= 2 &amp;&amp; stone[j] &gt;= stone[j-2])  </div><div class="line">	&#123;  </div><div class="line">		int d = t - j;  </div><div class="line">		combine(j-1);  </div><div class="line">		j = t - d;  </div><div class="line">	&#125;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)  </div><div class="line">	&#123;  </div><div class="line">		<span class="keyword">if</span>(n == 0) <span class="built_in">break</span>;  </div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">			scanf(<span class="string">"%d"</span>,stone+i);  </div><div class="line">		t = 1;  </div><div class="line">		ans = 0;  </div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)  </div><div class="line">		&#123;  </div><div class="line">			stone[t++] = stone[i];  </div><div class="line">			<span class="keyword">while</span>(t &gt;= 3 &amp;&amp; stone[t-3] &lt;= stone[t-1])  </div><div class="line">				combine(t-2);  </div><div class="line">		&#125;  </div><div class="line">		<span class="keyword">while</span>(t &gt; 1) </div><div class="line">			combine(t-1);  </div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);  </div><div class="line">	&#125;  </div><div class="line">	<span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>对于石子合并问题，有一个最好的算法，那就是GarsiaWachs算法。时间复杂度为O(n^2)。</p>
<p>它的步骤如下：<br>设序列是stone[]，从左往右，找一个满足stone[k-1] &lt;= stone[k+1]的k，找到后合并stone[k]和stone[k-1]，再从当前位置开始向左找最大的j，使其满足<br>stone[j] &gt; stone[k]+stone[k-1]，插到j的后面就行。一直重复，直到只剩下一堆石子就可以了。在这个过程中，可以假设stone[-1]和stone[n]是正无穷的。</p>
<p>举个例子：<br>186 64 35 32 103<br>因为35&lt;103，所以最小的k是3，我们先把35和32删除，得到他们的和67，并向前寻找一个第一个超过67的数，把67插入到他后面，得到：186 67 64 103,现在由5个<br>数变为4个数了，继续：186 131 103，现在k=2（别忘了，设A[-1]和A[n]等于正无穷大）234 186，最后得到420。最后的答案呢？就是各次合并的重量之和，即<br>420+234+131+67=852。</p>
<p>基本思想是通过树的最优性得到一个节点间深度的约束，之后证明操作一次之后的解可以和原来的解一一对应，并保证节点移动之后他所在的深度不会改变。具体<br>实现这个算法需要一点技巧，精髓在于不停快速寻找最小的k，即维护一个“2-递减序列”朴素的实现的时间复杂度是O(n*n)，但可以用一个平衡树来优化，使得<br>最终复杂度为O(nlogn)。</p>
<h2 id="HDU-3506–环形石子合并"><a href="#HDU-3506–环形石子合并" class="headerlink" title="HDU 3506–环形石子合并"></a>HDU 3506–环形石子合并</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148784067903.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148784067955.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148784067991.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148784068031.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148784068072.png" alt=""></p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;climits&gt;</span></div><div class="line"><span class="comment">#define maxn 2050</span></div><div class="line">using namespace std;</div><div class="line">int dp[maxn][maxn],a[maxn],sum[maxn],s[maxn][maxn];</div><div class="line">int n;</div><div class="line">void <span class="function"><span class="title">get_min_value</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int r=2;r&lt;=n;r++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=2*n-r+1;i++)</div><div class="line">		&#123;</div><div class="line">			int j=i+r-1;</div><div class="line">			int temp=sum[j]-sum[i-1];</div><div class="line">			dp[i][j]=dp[i+1][j]+temp;</div><div class="line">			s[i][j]=i;</div><div class="line">			/*cout&lt;&lt;<span class="string">"dp["</span>&lt;&lt;i&lt;&lt;<span class="string">"]["</span>&lt;&lt;j&lt;&lt;<span class="string">"] = "</span>&lt;&lt;dp[i][j]&lt;&lt;endl;*/</div><div class="line">			<span class="keyword">for</span>(int k=s[i][j-1];k&lt;=s[i+1][j];k++)</div><div class="line">			&#123;</div><div class="line">				int ans=dp[i][k]+dp[k+1][j]+temp;</div><div class="line">				<span class="keyword">if</span>(ans&lt;dp[i][j])</div><div class="line">				&#123;</div><div class="line">					dp[i][j]=ans;</div><div class="line">					s[i][j]=k;</div><div class="line">				&#125;</div><div class="line">				/*cout&lt;&lt;<span class="string">"dp["</span>&lt;&lt;i&lt;&lt;<span class="string">"]["</span>&lt;&lt;j&lt;&lt;<span class="string">"] = "</span>&lt;&lt;dp[i][j]&lt;&lt;endl;*/</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	int ans=INT_MAX;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		ans=min(ans,dp[i][i+n-1]);</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		sum[0]=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;a[i];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			sum[i]=sum[i-1]+a[i];</div><div class="line">		<span class="keyword">for</span>(int i=n+1;i&lt;=(2*n);i++)</div><div class="line">			a[i]=a[i-n];</div><div class="line">		<span class="keyword">for</span>(int i=n+1;i&lt;=(2*n);i++)</div><div class="line">			sum[i]=sum[i-1]+a[i];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=(2*n);i++)</div><div class="line">		&#123;</div><div class="line">			dp[i][i]=0;</div><div class="line">			s[i][i]=i;</div><div class="line">		&#125;</div><div class="line">		get_min_value();</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>与直线型类似 只需把直线扩大两倍即可变为环形<br>注意更新a和sum数组即可<br>同意需要注意函数里的j取值为2×n-r+1 非n</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[DAG上的DP问题]]></title>
      <url>http://xuboming8.github.io/2017/02/17/DAG%E4%B8%8A%E7%9A%84DP%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="DAG上的DP问题"><a href="#DAG上的DP问题" class="headerlink" title="DAG上的DP问题"></a>DAG上的DP问题</h1><h2 id="嵌套矩形问题–NYOJ16"><a href="#嵌套矩形问题–NYOJ16" class="headerlink" title="嵌套矩形问题–NYOJ16"></a>嵌套矩形问题–NYOJ16</h2><p><strong>Problem Description</strong><br>有n个矩形，每个矩形可以用a,b来描述，表示长和宽。矩形X(a,b)可以嵌套在矩形Y(c,d)中当且仅当a&lt;c,b&lt;d或者b&lt;c,a&lt;d（相当于旋转X90度）。例如（1,5）<br>可以嵌套在（6,2）内，但不能嵌套在（3,4）中。你的任务是选出尽可能多的矩形排成一行，使得除最后一个外，每一个矩形都可以嵌套在下一个矩形内。</p>
<p><strong>Input</strong><br><a id="more"></a><br>第一行是一个正正数N(0&lt;N&lt;10)，表示测试数据组数，<br>每组测试数据的第一行是一个正正数n，表示该组测试数据中含有矩形的个数(n&lt;=1000)<br>随后的n行，每行有两个数a,b(0&lt;a,b&lt;100)，表示矩形的长和宽</p>
<p><strong>Output</strong><br>每组测试数据都输出一个数，表示最多符合条件的矩形数目，每组输出占一行</p>
<p><strong>Sample Input</strong><br>1<br>10<br>1 2<br>2 4<br>5 8<br>6 10<br>7 9<br>3 1<br>5 8<br>12 10<br>9 7<br>2 2</p>
<p><strong>Sample Output</strong><br>5</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int x,y;</div><div class="line">&#125;m[1050];</div><div class="line">int d[1050];</div><div class="line">int cmp(node a,node b)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(a.x==b.x)</div><div class="line">		<span class="built_in">return</span> a.y&lt;b.y;</div><div class="line">	<span class="built_in">return</span> a.x&lt;=b.x;</div><div class="line">&#125;</div><div class="line">int Max(node a,node b)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(a.x&lt;b.x&amp;&amp;a.y&lt;b.y)</div><div class="line">		<span class="built_in">return</span> 1;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;m[i].x&gt;&gt;m[i].y;</div><div class="line">			<span class="keyword">if</span>(m[i].x&gt;m[i].y)</div><div class="line">			&#123;</div><div class="line">				m[i].x=m[i].x^m[i].y;</div><div class="line">				m[i].y=m[i].x^m[i].y;</div><div class="line">				m[i].x=m[i].x^m[i].y;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		memset(d,0,sizeof(d));</div><div class="line">		sort(m,m+n,cmp);</div><div class="line">		<span class="keyword">for</span>(int i = 1; i &lt; n; i++)   </div><div class="line">			<span class="keyword">for</span>(int j = 0; j &lt;= i; j++)   </div><div class="line">				<span class="keyword">if</span>(Max(m[j],m[i])&amp;&amp;d[i] &lt; d[j] + 1)   </div><div class="line">					d[i] = d[j] + 1;  </div><div class="line">		int maxn = d[0];  </div><div class="line">		<span class="keyword">for</span>(int i = 0; i &lt; n; i++)   </div><div class="line">			<span class="keyword">if</span>(maxn &lt; d[i])  </div><div class="line">				maxn = d[i];  </div><div class="line">		cout&lt;&lt;maxn+1&lt;&lt;endl;  </div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>按照先x后y的升序排列 后只需求LIS长度即可<br>需要注意本题的大于或者小于需要满足句型的长和宽均大于或小于另一个矩形才可<br>这里LIS里的&gt;/&lt;等价与一个矩形的长和宽都比另一个大 所以就能包含 LIS长度就是最大包含数</p>
<h2 id="嵌套盒子问题–UVA-103"><a href="#嵌套盒子问题–UVA-103" class="headerlink" title="嵌套盒子问题–UVA 103"></a>嵌套盒子问题–UVA 103</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>和嵌套矩阵类似<br>盒子给定纬度为k(k&lt;15) 矩阵的纬度恒为2<br>需要找出盒子嵌套的最多数目 另外需要输出字典序<br>需要注意这里不能取等号：矩阵里边可以重叠 盒子的边无法重叠</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int num[15];    //num里存储的是纬度</div><div class="line">&#125;a[35];</div><div class="line">int k,n;</div><div class="line">int d[35];          //代表以结点i为起点的最长路径</div><div class="line">int map[35][35];    //邻接矩阵</div><div class="line">int dp(int i)       //记忆化搜索</div><div class="line">&#123;</div><div class="line">	int &amp;ans=d[i];   //用引用可以避免数组d的纬度过大的情况 此题可不用引用</div><div class="line">	<span class="keyword">if</span>(ans&gt;0)</div><div class="line">		<span class="built_in">return</span> ans;</div><div class="line">	ans=1;</div><div class="line">	<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">		<span class="keyword">if</span>(map[i][j])</div><div class="line">			ans=max(ans,dp(j)+1);   //状态转移方程 j必须和i为邻边</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">void print_ans(int i)     //这里的i是最后的id(起点) 以满足字典序</div><div class="line">&#123;</div><div class="line">	cout&lt;&lt;i&lt;&lt;<span class="string">" "</span>;</div><div class="line">	<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">		<span class="keyword">if</span>(map[i][j]&amp;&amp;d[i]==d[j]+1)   //只要d[i]=d[j]+1 立刻递归输出 第一个满足即为字典序</div><div class="line">		&#123;</div><div class="line">			print_ans(j);</div><div class="line">			<span class="built_in">break</span>;          //递归打印结束需要<span class="built_in">break</span></div><div class="line">		&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;k)</div><div class="line">	&#123;</div><div class="line">		memset(map,0,sizeof(map));</div><div class="line">		memset(d,0,sizeof(d));</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=k;j++)</div><div class="line">				cin&gt;&gt;a[i].num[j];</div><div class="line">			sort(a[i].num+1,a[i].num+1+k);   //纬度里的数字升序排列</div><div class="line">		&#125;</div><div class="line">		int flag1=0,flag2=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span>(int j=i+1;j&lt;=n;j++)</div><div class="line">			&#123;</div><div class="line">				flag1=0;</div><div class="line">				flag2=0;</div><div class="line">				<span class="keyword">for</span>(int h=1;h&lt;=k;h++)</div><div class="line">				&#123;</div><div class="line">					<span class="keyword">if</span>(a[i].num[h]==a[j].num[h])  //和嵌套矩阵不同 不能等于</div><div class="line">						<span class="built_in">break</span>;</div><div class="line">					<span class="keyword">else</span> <span class="keyword">if</span>(a[i].num[h]&lt;a[j].num[h])</div><div class="line">						flag1++;</div><div class="line">					<span class="keyword">else</span> <span class="keyword">if</span>(a[i].num[h]&gt;a[j].num[h])</div><div class="line">						flag2++;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">if</span>(flag1==k)     //若有一个纬度的点满足全部大于另一个点 那么建边</div><div class="line">					map[i][j]=1;</div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(flag2==k)  ////若有一个纬度的点满足全部小于另一个点 那么建边</div><div class="line">					map[j][i]=1;</div><div class="line"></div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		int Max=-1,id=-1;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			dp(i);</div><div class="line">			<span class="keyword">if</span>(d[i]&gt;Max)    //找出最大值和位置</div><div class="line">			&#123;</div><div class="line">				Max=d[i];</div><div class="line">				id=i;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;Max&lt;&lt;endl;</div><div class="line">		print_ans(id);</div><div class="line">		cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="硬币问题"><a href="#硬币问题" class="headerlink" title="硬币问题"></a>硬币问题</h2><p>题目：有n种硬币，面值分别为V1,V2,…Vn,每种都有无限多。给定非负整数S，可以选用多少个硬币，使得面值之和恰好为S？输出硬币数目的最小值和最大值<br>分析：我们把每种面值看作一个点！表示“还需要凑足的面值”，初始状态为S，目标状态为0。那么若当前状态在i，每使用一个硬币j，状态便转移到i-Vj。</p>
<h3 id="参考代码-记忆化搜索"><a href="#参考代码-记忆化搜索" class="headerlink" title="参考代码(记忆化搜索)"></a>参考代码(记忆化搜索)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;string&gt;</span></div><div class="line">using namespace std;</div><div class="line"></div><div class="line">int n, S, V[MAXN], d[MAXN], vis[MAXN];</div><div class="line">const int MAXN = 10000;</div><div class="line">const int INF = 100000000;</div><div class="line">int dpmax(int S) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(vis[S]) <span class="built_in">return</span> d[S];</div><div class="line">	vis[S] = 1;</div><div class="line">	int &amp;ans = d[S];</div><div class="line">	ans = -1 &lt;&lt; 30;</div><div class="line">	<span class="keyword">for</span>(int i = 1; i &lt;= n; ++i)</div><div class="line">		<span class="keyword">if</span>(S &gt;= V[i]) </div><div class="line">			ans = max(ans, dpmax(S - V[i]) + 1);</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int dpmin(int S) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(vis[S]) <span class="built_in">return</span> d[S];</div><div class="line">	vis[S] = 1;</div><div class="line">	int &amp;ans = d[S];</div><div class="line">	ans = -1 &gt;&gt; 30;</div><div class="line">	<span class="keyword">for</span>(int i = 1; i &lt;= n; ++i) </div><div class="line">		<span class="keyword">if</span>(S &gt;= V[i]) </div><div class="line">			ans = min(ans, dpmin(S - V[i]) + 1);</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>() </div><div class="line">&#123;</div><div class="line">	memset(vis, 0, sizeof(vis));</div><div class="line">	cin &gt;&gt; n &gt;&gt; S;</div><div class="line">	<span class="keyword">for</span>(int i = 1; i &lt;= n; ++i) </div><div class="line">		cin &gt;&gt; V[i];</div><div class="line">	cout &lt;&lt; dpmax(S) &lt;&lt; endl;</div><div class="line">	cout &lt;&lt; dpmin(S) &lt;&lt; endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考代码-打印字典序最小路径"><a href="#参考代码-打印字典序最小路径" class="headerlink" title="参考代码(打印字典序最小路径)"></a>参考代码(打印字典序最小路径)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;string&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int MAXN = 10000;</div><div class="line">const int INF = 1000000000;</div><div class="line">int n, S, V[MAXN], minn[MAXN], maxn[MAXN];//minn[i]表示还需凑足价值为i的话，所需的最少的硬币数 maxn[i]表示还需凑足价值为i的话，所需的最多的硬币数</div><div class="line">int min_coin[MAXN], max_coin[MAXN];           //min_coin[S]记录的是满足minn[S] = minn[S-V[i]]+1的最小的i。</div><div class="line">void print_ans(int* d, int S) </div><div class="line">&#123;</div><div class="line">	<span class="keyword">while</span>(S) </div><div class="line">	&#123;</div><div class="line">		cout &lt;&lt; d[S] &lt;&lt; <span class="string">" "</span>;</div><div class="line">		S -= V[d[S]];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line"> &#123;</div><div class="line">	cin &gt;&gt; n &gt;&gt; S;</div><div class="line">	<span class="keyword">for</span>(int i = 1; i &lt;= n; ++i) </div><div class="line">		cin &gt;&gt; V[i];</div><div class="line">	memset(minn, INF, sizeof(minn));</div><div class="line">	memset(maxn, -INF, sizeof(maxn));</div><div class="line">	<span class="keyword">for</span>(int i = 1; i &lt;= S; ++i)</div><div class="line">	&#123;                          //递推！求出所有minn[1...S]与maxn[1...S]</div><div class="line">		<span class="keyword">for</span>(int j = 1; j &lt;= n; ++j) &#123;</div><div class="line">			<span class="keyword">if</span>(i &gt;= V[j])</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(minn[i] &gt; minn[i - V[j]] + 1) </div><div class="line">				&#123;</div><div class="line">					minn[i] = minn[i - V[j]] + 1;</div><div class="line">					min_coin[i] = j;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">if</span>(maxn[i] &lt; maxn[i - V[j]] + 1) </div><div class="line">				&#123;</div><div class="line">					maxn[i] = maxn[i - V[j]] + 1;</div><div class="line">					max_coin[i] = j;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout &lt;&lt; minn[S] &lt;&lt; endl;</div><div class="line">	cout &lt;&lt; maxn[S] &lt;&lt; endl;</div><div class="line">	print_ans(min_coin, S);</div><div class="line">	cout &lt;&lt; endl;</div><div class="line">	print_ans(max_coin, S);</div><div class="line">	cout &lt;&lt; endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[DP专题七--有关复杂集合]]></title>
      <url>http://xuboming8.github.io/2017/02/15/DP%E4%B8%93%E9%A2%98%E4%B8%83-%E6%9C%89%E5%85%B3%E5%A4%8D%E6%9D%82%E9%9B%86%E5%90%88/</url>
      <content type="html"><![CDATA[<h1 id="DP专题七–有关复杂集合"><a href="#DP专题七–有关复杂集合" class="headerlink" title="DP专题七–有关复杂集合"></a>DP专题七–有关复杂集合</h1><h2 id="最优配对问题"><a href="#最优配对问题" class="headerlink" title="最优配对问题"></a>最优配对问题</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>空间里有n个点P0P1···Pn，你的任务是把他们配成n/2对（n是偶数）使得每个点恰好在一个点对中<br>所有点对中两点的距离之和应尽量小<br><a id="more"></a></p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>初始状态转移方程为：d(i,S)=min{|PiPj|+d(i-1,S-{i}-{j}} j属于S<br>但其实i并不需要保存 他已经隐含在S中了 S中的最大元素就是i<br>所有可以直接用d(s)表示把S中的元素两两配对的最小距离和<br>修改后的状态转移方程：d(S)=min{|PiPj|+d(S-{i}-{j}} j属于S i=S的最大值<br>所以本题的关键就是如何快速求出集合S的最大值<br>利用集合+位运算的相关知识可以达到平均判断次数为2<br>下面给出代码实现</p>
<h3 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;climits&gt;</span></div><div class="line"><span class="comment">#include&lt;math.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">double dp[1&lt;&lt;20];</div><div class="line">int n,S;</div><div class="line">struct Node</div><div class="line">&#123;</div><div class="line">	int x,y,z;</div><div class="line">&#125;node[20];</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		cin&gt;&gt;node[i].x&gt;&gt;node[i].y&gt;&gt;node[i].z;</div><div class="line">	S=1&lt;&lt;n;  </div><div class="line">	dp[0]=0;    //没有点初始化为0</div><div class="line">&#125;</div><div class="line">double dis(Node &amp;a,Node &amp;b)      //计算两点间的距离（三维）</div><div class="line">&#123;  </div><div class="line">	<span class="built_in">return</span> sqrt((double)(a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)+(a.z-b.z)*(a.z-b.z));  </div><div class="line">&#125;  </div><div class="line">void <span class="function"><span class="title">solve</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int s=1;s&lt;S;s++)     //S表示n的集合</div><div class="line">	&#123;</div><div class="line">		int i,j;</div><div class="line">		dp[s]=INT_MAX;</div><div class="line">		<span class="keyword">for</span>(i=n-1;i&gt;=0;i--)   //i是集合S的最大值</div><div class="line">			<span class="keyword">if</span>(s&amp;(1&lt;&lt;i))     //高位递减 只要进入集合S就退出 i即为最大值</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(j=i-1;j&gt;=0;j--)   //j比i小 递减</div><div class="line">			<span class="keyword">if</span>(s&amp;(1&lt;&lt;j))     //j需确保在集合S中</div><div class="line">				dp[s]=min(dp[s],dis(node[i],node[j])+dp[s^(1&lt;&lt;i)^(1&lt;&lt;j)]);</div><div class="line">	&#125;                          //状态转移方程 异或等价于删去集合中的元素i和j</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	init();</div><div class="line">	solve();</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,dp[S-1]);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="货郎担问题–TSP"><a href="#货郎担问题–TSP" class="headerlink" title="货郎担问题–TSP"></a>货郎担问题–TSP</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>有n个城市 两两之间均有道路直接相连 给出每两个城市i和j之间的道路长度Lij 求一条经过每个城市一次且仅一次 最后回到起点的路线<br>使得经过的道路总长度最短 N≤15</p>
<h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>假定我们从城市1出发，经过了一些地方，并到达了城市j。毋庸置疑，我们需要记录的信息有当前的城市j。同时我们还需要记录已经走过的城市的集合。同理，<br>使用S记录未走过的城市的集合也可以的，且运算方便。<br>于是我们可以得出状态转移方程 go(S,init)=min{go(S−i,i)+dp[i][init]}∀s∈S go(s,init)表示从init点开始，要经过s集合中的所有点的距离<br>因为是NP问题，所以时间复杂度通常比较大。使用dis[s][init]用来去重，初始化为-1，如果已经计算过init—&gt;S（递归形式），则直接返回即可</p>
<h3 id="参考代码-1"><a href="#参考代码-1" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cmath&gt; </span></div><div class="line"><span class="comment">#include&lt;iomanip&gt;</span></div><div class="line">using namespace std;</div><div class="line">int s;</div><div class="line">int N;//点的个数 </div><div class="line">int init_point;</div><div class="line">double x[20];</div><div class="line">double y[20];</div><div class="line">double dp[20][20];//两个城市的距离 </div><div class="line">double dis[1048577][20];//2^20=1048576 表示出发点到S集合是否已经访问过 </div><div class="line">double go(int s,int init)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(dis[s][init]!=-1) <span class="built_in">return</span> dis[s][init];//去重 </div><div class="line">    <span class="keyword">if</span>(s==(1&lt;&lt;(N-1))) <span class="built_in">return</span> dp[N-1][init];//只有最后一个点返回 </div><div class="line">    double minlen=100000;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;N-1;i++)//只能在1到n-2点中查找 </div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(s&amp;(1&lt;&lt;i))//如果i点在s中且不为发出点 </div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span>(go(s&amp;(~(1&lt;&lt;i)),i)+dp[i][init]&lt;minlen)</div><div class="line">                minlen=go(s&amp;(~(1&lt;&lt;i)),i)+dp[i][init];</div><div class="line">        &#125; </div><div class="line">    &#125; </div><div class="line">    <span class="built_in">return</span> dis[s][init]=minlen;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    int T;</div><div class="line">    cin&gt;&gt;T;</div><div class="line">    <span class="keyword">while</span>(T--)//测试样例数 </div><div class="line">    &#123;</div><div class="line">        cin&gt;&gt;N;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;N;i++)</div><div class="line">            cin&gt;&gt;x[i]&gt;&gt;y[i];//读入城市的坐标 </div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;N;i++)</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;N;j++)</div><div class="line">            &#123;</div><div class="line">                dp[i][j]=sqrt(pow((x[i]-x[j]),2)+pow((y[i]-y[j]),2));</div><div class="line">                //计算两个城市的距离 </div><div class="line">            &#125;   </div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;pow(2,N);i++)</div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;N;j++)</div><div class="line">                dis[i][j]=-1;//去重数组初始化  </div><div class="line">        init_point=0;</div><div class="line">        s=0; </div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;N;i++)</div><div class="line">            s=s|(1&lt;&lt;i);//从1开始，保证初始点没有在S里面           </div><div class="line">        double distance=go(s,init_point);</div><div class="line">        cout&lt;&lt;fixed&lt;&lt;setprecision(2)&lt;&lt;distance&lt;&lt;endl;</div><div class="line">    &#125;       </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="图的色数"><a href="#图的色数" class="headerlink" title="图的色数"></a>图的色数</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定一个无向图G 把图中的结点染成尽量少的颜色 使得相邻结点颜色不同</p>
<h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p>设d(S)表示把结点集S染色 所需要颜色数的最小值 则d(S)=d(S-S’)+1 其中S’是S的子集 并且内部没有边<br>即不存在S’内的两个结点u和v使得u和v相邻 换句话说 S’是一个可以染成同一种颜色的结点集</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[dp专题六--树形dp]]></title>
      <url>http://xuboming8.github.io/2017/02/12/dp%E4%B8%93%E9%A2%98%E5%85%AD-%E6%A0%91%E5%BD%A2dp/</url>
      <content type="html"><![CDATA[<h1 id="dp专题六–树形dp"><a href="#dp专题六–树形dp" class="headerlink" title="dp专题六–树形dp"></a>dp专题六–树形dp</h1><h2 id="HDU-1502–树的最大独立集"><a href="#HDU-1502–树的最大独立集" class="headerlink" title="HDU 1502–树的最大独立集"></a>HDU 1502–树的最大独立集</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/1486907888.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148690788846.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148690788889.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148690788928.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148690788988.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>树的结构为人际关系 雇员和老班只能要求一个人 转换成树的最大独立集问题</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define maxn 6050</span></div><div class="line">int dp[maxn][2];</div><div class="line">int vis[maxn];</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">void dfs(int root)</div><div class="line">&#123;</div><div class="line">	vis[root]=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[root].size();i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(!vis[e[root][i]])</div><div class="line">		&#123;</div><div class="line">			dfs(e[root][i]);</div><div class="line">			dp[root][0]+=max(dp[e[root][i]][1],dp[e[root][i]][0]);</div><div class="line">			dp[root][1]+=dp[e[root][i]][0];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">//状态转移方程：</div><div class="line">//用dp[i][0]表示不选中i号，周围的都可以选的最大值，dp[i][1]表示选中i号，那么周围都不能选的最大值。</div><div class="line">//dp[i][0]+=(dp[j][1],dp[j][0])</div><div class="line">//dp[i][1]+=dp[j][0]</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)</div><div class="line">	&#123;</div><div class="line">		/*<span class="keyword">if</span>(n==0)</div><div class="line">			<span class="built_in">break</span>;*/</div><div class="line">		memset(vis,0,sizeof(vis));</div><div class="line">		memset(dp,0,sizeof(dp));</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;dp[i][1]);</div><div class="line">			e[i].clear();</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">			<span class="keyword">if</span>(u==0&amp;&amp;v==0)</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			e[u].push_back(v);</div><div class="line">			e[v].push_back(u);</div><div class="line">		&#125;</div><div class="line">		dfs(1);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,max(dp[1][1],dp[1][0]));  //第一个点取与不取两种情况取最大值</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-4118–树形dp"><a href="#HDU-4118–树形dp" class="headerlink" title="HDU 4118–树形dp"></a>HDU 4118–树形dp</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148690817323.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148690817381.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148690817425.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148690817464.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148690817512.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>树的结构：点代表城市 权值为距离<br>开始时每个城市都有一个人 接着每个人都要移动 最后每个城市依然要保持1个人 求所有人移动的最大距离</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define maxn 100000+50</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int to,w;</div><div class="line">	node(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">int vis[maxn];</div><div class="line">LL ans=0;      //注意答案开为LL型</div><div class="line">int n;</div><div class="line">int num[maxn];   //num记录该结点下的结点数</div><div class="line">void dfs(int u)</div><div class="line">&#123;</div><div class="line">	vis[u]=1;</div><div class="line">	num[u]=1;    //每次访问一个结点时初始化为1</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[u].size();i++)</div><div class="line">	&#123;</div><div class="line">		int next=e[u][i].to;</div><div class="line">		<span class="keyword">if</span>(!vis[next])</div><div class="line">		&#123;</div><div class="line">			dfs(next);</div><div class="line">			num[u]+=num[next];   //父节点的下结点数等于所有子结点数之和</div><div class="line">			LL minnum=min(num[next],n-num[next]);  //找出这个结点两边 结点小的那一边的结点数</div><div class="line">			ans+=e[u][i].w*minnum*2LL;  //该结点数×权值×2就是答案</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">//因为结点两边只有最小的那一边移动才能满足两边顺利移动</div><div class="line">//例如一边结点数为a 另一边为b 假设a＜b 那么选取a b那一端也一定能找出a个点与之匹配</div><div class="line">//ans需要乘以2是因为来回要走两次</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	int flag=1;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=n;i++)</div><div class="line">			e[i].clear();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v,w;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">			e[u].push_back(node(v,w));</div><div class="line">			e[v].push_back(node(u,w));</div><div class="line">		&#125;</div><div class="line">		ans=0;</div><div class="line">		memset(num, 0, sizeof(num));  </div><div class="line">		memset(vis, 0, sizeof(vis));  </div><div class="line">		dfs(1);</div><div class="line">		cout&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;flag++&lt;&lt;<span class="string">": "</span>&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="POJ-1655–树的重心"><a href="#POJ-1655–树的重心" class="headerlink" title="POJ 1655–树的重心"></a>POJ 1655–树的重心</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148708578792.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148708578872.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148708578978.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148708579017.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14870857905.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>求出一棵树的重心和最大子树的最小结点数</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;climits&gt;</span></div><div class="line"><span class="comment">#define maxn 20000+50</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">int vis[maxn];</div><div class="line">int son[maxn];</div><div class="line">int ans,size;</div><div class="line">int n;</div><div class="line">void dfs(int cur)</div><div class="line">&#123;</div><div class="line">	vis[cur]=1;</div><div class="line">	son[cur]=1;      //son用来计算每个结点的子结点数</div><div class="line">	int temp=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[cur].size();i++)</div><div class="line">	&#123;</div><div class="line">		int next=e[cur][i];</div><div class="line">		<span class="keyword">if</span>(!vis[next])</div><div class="line">		&#123;</div><div class="line">			dfs(next);</div><div class="line">			son[cur]+=son[next];    //深搜一个 该结点的子结点数+1</div><div class="line">			temp=max(temp,son[next]);   //首先算出深搜下去的结点最大值</div><div class="line"></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	temp=max(temp,n-son[cur]);   //此段代码需放在<span class="keyword">for</span>循环外 表示搜到头后 逆向回头判断另一边是否更大</div><div class="line">	<span class="keyword">if</span>(temp&lt;size||(temp==size&amp;&amp;cur&lt;ans))   //找到最大子树后比较后其出结点最小值</div><div class="line">	&#123;                                //若结点数相同返回位置小的</div><div class="line">		ans=cur;</div><div class="line">		size=temp;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=n;i++)</div><div class="line">			e[i].clear();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v;</div><div class="line">			e[u].push_back(v);</div><div class="line">			e[v].push_back(u);</div><div class="line">		&#125;</div><div class="line">		ans=INT_MAX,size=INT_MAX;   //初始化为最大值 因为要求最小值</div><div class="line">		memset(vis,0,sizeof(vis));</div><div class="line">		dfs(1);</div><div class="line">		cout&lt;&lt;ans&lt;&lt;<span class="string">" "</span>&lt;&lt;size&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="POJ-3107–树的重心"><a href="#POJ-3107–树的重心" class="headerlink" title="POJ 3107–树的重心"></a>POJ 3107–树的重心</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148708601395.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148708601464.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148708601505.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148708601543.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148708601583.png" alt=""></p>
<h3 id="题目要去"><a href="#题目要去" class="headerlink" title="题目要去"></a>题目要去</h3><p>求出树的所有重心后排序输出</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include &lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;climits&gt;</span></div><div class="line"><span class="comment">#define maxn 50000+50</span></div><div class="line">using namespace std;</div><div class="line">struct Edge        //此题卡时间 必须用前向星存图 使用vector会超时</div><div class="line">&#123;</div><div class="line">	int to,next;</div><div class="line">&#125;;</div><div class="line">Edge edge[2*maxn];   //无向图开两倍</div><div class="line">int head[maxn];</div><div class="line">int vis[maxn];</div><div class="line">int son[maxn];</div><div class="line">int n,ans[maxn],size,num,cnt;</div><div class="line">void add(int u,int v)</div><div class="line">&#123;</div><div class="line">	edge[cnt].to = v;  </div><div class="line">	edge[cnt].next = head[u];  </div><div class="line">	head[u] = cnt++;  </div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(vis,0,sizeof(vis));</div><div class="line">	memset(head,-1,sizeof(head));</div><div class="line">	size=INT_MAX;</div><div class="line">	num=0;</div><div class="line">	cnt=0;</div><div class="line">&#125;</div><div class="line">void dfs(int cur)</div><div class="line">&#123;</div><div class="line">	vis[cur]=1;</div><div class="line">	son[cur]=1;</div><div class="line">	int temp=0;</div><div class="line">	<span class="keyword">for</span>(int i=head[cur];i!=-1;i=edge[i].next)</div><div class="line">	&#123;</div><div class="line">		int next=edge[i].to;</div><div class="line">		<span class="keyword">if</span>(!vis[next])</div><div class="line">		&#123;</div><div class="line">			dfs(next);</div><div class="line">			son[cur]+=son[next];</div><div class="line">			temp=max(temp,son[next]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	temp=max(temp,n-son[cur]);</div><div class="line">	<span class="keyword">if</span>(temp&lt;size)  //与上题一样 区别在于用ans数组才存储重心</div><div class="line">	&#123;</div><div class="line">		num=1;    //只要有比当前小的 ans和num均初始化</div><div class="line">		ans[0]=cur;</div><div class="line">		size=temp;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(temp==size)   //否则存入数组</div><div class="line">		ans[num++]=cur;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)</div><div class="line">	&#123;</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">			add(u,v);</div><div class="line">			add(v,u);</div><div class="line">		&#125;</div><div class="line">		dfs(1);</div><div class="line">		sort(ans,ans+num);</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;num;i++)</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d "</span>,ans[i]);</div><div class="line">		puts(<span class="string">""</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="hihocoder-1050–树的直径"><a href="#hihocoder-1050–树的直径" class="headerlink" title="hihocoder 1050–树的直径"></a>hihocoder 1050–树的直径</h2><p><strong>Input</strong><br>每个测试点（输入文件）有且仅有一组测试数据。<br>每组测试数据的第一行为一个整数N，意义如前文所述。<br>每组测试数据的第2~N行，每行分别描述一根木棍，其中第i+1行为两个整数Ai，Bi，表示第i根木棍连接的两个小球的编号。<br>对于20%的数据，满足N&lt;=10。<br>对于50%的数据，满足N&lt;=10^3。<br>对于100%的数据，满足N&lt;=10^5，1&lt;=Ai&lt;=N, 1&lt;=Bi&lt;=N<br>小Hi的Tip：那些用数组存储树边的记得要开两倍大小哦！</p>
<p><strong>Output</strong><br>对于每组测试数据，输出一个整数Ans，表示给出的这棵树中距离最远的两个结点之间相隔的距离。</p>
<p><strong>Sample Input</strong><br>8<br>1 2<br>1 3<br>1 4<br>4 5<br>3 6<br>6 7<br>7 8</p>
<p><strong>Sample Output</strong><br>6</p>
<h3 id="参考AC代码（一）：两次dfs"><a href="#参考AC代码（一）：两次dfs" class="headerlink" title="参考AC代码（一）：两次dfs"></a>参考AC代码（一）：两次dfs</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">//此题用了一个性质：随便找一个点 dfs搜索到最远位置 该点一定是直径中的一个点</div><div class="line">//接着对该点再进行dfs搜索 得到的就是最大直径</div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#define maxn 100000+50</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">int vis[maxn];</div><div class="line">int n,p,ans;</div><div class="line">void dfs(int deep,int root)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(deep&gt;ans)     //取最深长度</div><div class="line">	&#123;</div><div class="line">		ans=deep;</div><div class="line">		p=root;    //p记录第一次走的最远位置</div><div class="line">	&#125;</div><div class="line">	vis[root]=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[root].size();i++)</div><div class="line">	&#123;</div><div class="line">		int next=e[root][i];</div><div class="line">		<span class="keyword">if</span>(!vis[next])</div><div class="line">			dfs(deep+1,next);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=n;i++)</div><div class="line">			e[i].clear();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v;</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">			e[u].push_back(v);</div><div class="line">			e[v].push_back(u);</div><div class="line">		&#125;</div><div class="line">		p=0,ans=0;</div><div class="line">		memset(vis,0,sizeof(vis));</div><div class="line">		dfs(0,1); </div><div class="line">		ans=0;               //第二次深搜注意初始化</div><div class="line">		memset(vis,0,sizeof(vis));</div><div class="line">		dfs(0,p);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码（二）：使用fi-se后序遍历"><a href="#参考AC代码（二）：使用fi-se后序遍历" class="headerlink" title="参考AC代码（二）：使用fi+se后序遍历"></a>参考AC代码（二）：使用fi+se后序遍历</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#define maxn 100000+50</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;e[maxn];</div><div class="line">int vis[maxn];</div><div class="line">int n,ans;</div><div class="line">int dfs(int root)</div><div class="line">&#123;</div><div class="line">	int <span class="keyword">fi</span>=0,se=0,d;</div><div class="line">	vis[root]=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[root].size();i++)</div><div class="line">	&#123;</div><div class="line">		int next=e[root][i];</div><div class="line">		<span class="keyword">if</span>(!vis[next])</div><div class="line">		&#123;</div><div class="line">			d=dfs(next)+1;   //dfs返回的结果表示以next为根节点的子树的最长路径值</div><div class="line">			<span class="keyword">if</span>(d&gt;<span class="keyword">fi</span>)        //1加的是子树的根节点到next的长度</div><div class="line">			&#123;</div><div class="line">				se=<span class="keyword">fi</span>;    //d比<span class="keyword">fi</span>大 都要更新</div><div class="line">				<span class="keyword">fi</span>=d;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(d&gt;se)  //只比se大 更新se即可</div><div class="line">				se=d;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	ans=max(ans,<span class="keyword">fi</span>+se);</div><div class="line">	<span class="built_in">return</span> <span class="keyword">fi</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=n;i++)</div><div class="line">			e[i].clear();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v;</div><div class="line">			e[u].push_back(v);</div><div class="line">			e[v].push_back(u);</div><div class="line">		&#125;</div><div class="line">		memset(vis,0,sizeof(vis));</div><div class="line">		ans=0;</div><div class="line">		dfs(1);</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-2196–给定权求树的直径"><a href="#HDU-2196–给定权求树的直径" class="headerlink" title="HDU 2196–给定权求树的直径"></a>HDU 2196–给定权求树的直径</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148708664875.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148708664952.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148708664987.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148708665019.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14870866506.png" alt=""></p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定树的边权 对于树中的每个点 求出离该点的最远距离</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#define maxn 10000+50</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int to,w;</div><div class="line">	node(int to,int w):to(to),w(w)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">int n;</div><div class="line">int dp[maxn][3];    //dp[i][0]表示以i为顶点的最大值 dp[i][1]表示以i为顶点的次大值</div><div class="line">void dfs1(int root)    //dp[i][2]表示i的父节点部分获得的最大值</div><div class="line">&#123;</div><div class="line">	int <span class="keyword">fi</span>=0,se=0;</div><div class="line">	int temp=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[root].size();i++)</div><div class="line">	&#123;</div><div class="line">		int next=e[root][i].to;</div><div class="line">		dfs1(next);</div><div class="line">		temp=dp[next][0]+e[root][i].w;</div><div class="line">		<span class="keyword">if</span>(temp&gt;<span class="keyword">fi</span>)</div><div class="line">		&#123;</div><div class="line">			se=<span class="keyword">fi</span>;</div><div class="line">			<span class="keyword">fi</span>=temp;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(temp&gt;se)</div><div class="line">			se=temp;</div><div class="line">	&#125;</div><div class="line">	dp[root][0]=<span class="keyword">fi</span>;      //与求树的一般直径相同 求出<span class="keyword">fi</span>与se的值</div><div class="line">	dp[root][1]=se;</div><div class="line">&#125;</div><div class="line">void dfs2(int root)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[root].size();i++)</div><div class="line">	&#123;</div><div class="line">		int next=e[root][i].to;       //下式是dp[i][2]的状态转移方程 详情看解析</div><div class="line">		dp[next][2]=max(dp[root][2],dp[next][0]+e[root][i].w==dp[root][0]?dp[root][1]:dp[root][0])+e[root][i].w;</div><div class="line">		dfs2(next);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=n;i++)</div><div class="line">			e[i].clear();</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			int p,w;</div><div class="line">			cin&gt;&gt;p&gt;&gt;w;</div><div class="line">			e[p].push_back(node(i,w));</div><div class="line">		&#125;</div><div class="line">		dfs1(1);</div><div class="line">		dp[1][2]=0;     //根没有父节点</div><div class="line">		dfs2(1);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cout&lt;&lt;max(dp[i][0],dp[i][2])&lt;&lt;endl;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148708679465.png" alt=""><br>对于上面那棵树，要求距结点2的最长距离，那么，就需要知道以2为顶点的子树（蓝色圈起的部分，我们叫它Tree（2）），距顶点2的最远距离L1<br>还有知道2的父节点1为根节点的树Tree（1）-Tree(2)部分（即红色圈起部分），距离结点1的最长距离+dist(1,2) = L2，那么最终距离结点2最远的距离就是<br>max{L1，L2}</p>
<p>f[i][0],表示顶点为i的子树的，距顶点i的最长距离<br>f[i][1],表示顶点为i的子树的，距顶点i的次长距离<br>f[i][2],表示Tree(i的父节点)-Tree(i)的最长距离+i跟i的父节点距离</p>
<p>要求所有的f[i][0]和f[i][1]很简单，只要先做一次dfs求每个结点到叶子结点的最长距离和次长距离即可。<br>然后要求f[i][2], 可以从父节点递推到子节点，</p>
<p>假设节点u有n个子节点，分别是v1,v2…vn<br>那么<br>如果vi不是u最长距离经过的节点，f[vi][2] = dist(vi,u)+max(f[u][0], f[u][2])<br>如果vi是u最长距离经过的节点，那么不能选择f[u][0],因为这保存的就是最长距离，要选择Tree（u）第二大距离secondDist,<br>可得f[vi][2] = dist(vi, u) + max(f[u][1], f[u][2])</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[dp基础专题五]]></title>
      <url>http://xuboming8.github.io/2017/02/10/dp%E4%B8%93%E9%A2%98%E4%BA%8C/</url>
      <content type="html"><![CDATA[<h1 id="dp专题五"><a href="#dp专题五" class="headerlink" title="dp专题五"></a>dp专题五</h1><h2 id="最优矩阵链乘问题"><a href="#最优矩阵链乘问题" class="headerlink" title="最优矩阵链乘问题"></a>最优矩阵链乘问题</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>一个n×m阶矩阵和一个m×p阶矩阵连乘 运算量是nmp<br>有n个矩阵链乘 可以给矩阵加括号改变运算顺序 求最小的运算次数<br><a id="more"></a></p>
<h3 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">LL dp[1050][1050];</div><div class="line">int s[1050][1050];</div><div class="line">int n;</div><div class="line">int trans[1050];</div><div class="line">void <span class="function"><span class="title">set</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int r=2;r&lt;=n;r++)          //设置每次的步长为2-n</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n-r+1;i++)    //n-r+1为最后一个区间的起点</div><div class="line">		&#123;</div><div class="line">			int j=i+r-1;         //j为每个区间的开头</div><div class="line">			dp[i][j]=dp[i+1][j]+trans[i]*trans[i+1]*trans[j+1];   //先把A1和后面的矩阵分开 作为预处理</div><div class="line">			s[i][j]=i;           //预处理的分开点为i</div><div class="line">			<span class="keyword">for</span>(int k=i+1;k&lt;j;k++)     //预处理和遍历k可以取到的所有情况</div><div class="line">			&#123;</div><div class="line">				int ans=dp[i][k]+dp[k+1][j]+trans[i]*trans[k+1]*trans[j+1];</div><div class="line">				<span class="keyword">if</span>(ans&lt;dp[i][j])      //如果k处分开后的计算量小于dp 那么dp更新 断点处更新为k</div><div class="line">				&#123;</div><div class="line">					dp[i][j]=ans;</div><div class="line">					s[i][j]=k;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		dp[i][i]=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n+1;i++)</div><div class="line">		cin&gt;&gt;trans[i];</div><div class="line">	<span class="built_in">set</span>();</div><div class="line">	cout&lt;&lt;dp[1][n]&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>迭代过程如下:<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148673726848.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148673726919.png" alt=""></p>
<h2 id="最优三角剖分"><a href="#最优三角剖分" class="headerlink" title="最优三角剖分"></a>最优三角剖分</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>对于一个n个顶点的凸多边形 用n-3条对角线把他分成n-2个三角形 每个三角形规定一个权函数w（i,j,k）要求分成的所有三角形<br>权函数最大</p>
<h3 id="参考代码-1"><a href="#参考代码-1" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">//与矩阵链乘的求解方式类似</div><div class="line">//状态转移方程为：d[i,j]=max&#123;d(i,k)+d(k,j)+w(i,j,k)&#125;</div><div class="line"><span class="comment">#include &lt;iostream&gt;   </span></div><div class="line">using namespace std;   </div><div class="line">const int n= 6;//凸多边形边数  </div><div class="line">int weight[][n] = &#123;&#123;0,2,2,3,1,4&#125;,&#123;2,0,1,5,2,3&#125;,&#123;2,1,0,2,1,4&#125;,&#123;3,5,2,0,6,2&#125;,&#123;1,2,1,6,0,1&#125;,&#123;4,3,4,2,1,0&#125;&#125;;//凸多边形的权  </div><div class="line">int t[n][n],s[n][n];</div><div class="line">int Weight(int a,int b,int c)  </div><div class="line">&#123;  </div><div class="line">	<span class="built_in">return</span> weight[a][b] + weight[b][c] + weight[a][c];  </div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">MinWeightTriangulation</span></span>()  </div><div class="line">&#123;  </div><div class="line">	<span class="keyword">for</span>(int i=0; i&lt;n; i++)  </div><div class="line">	&#123;</div><div class="line">		t[i][i] = 0;   </div><div class="line">		t[i][i+1]=0;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int r=2; r&lt;=n; r++) //r为当前计算的链长（子问题规模）    </div><div class="line">	&#123;  </div><div class="line">		<span class="keyword">for</span>(int i=1; i&lt;=n-r+1; i++)//n-r+1为最后一个r链的前边界    </div><div class="line">		&#123;  </div><div class="line">			int j = i+r-1;//计算前边界为r，链长为r的链的后边界    </div><div class="line">			t[i][j] = t[i+1][j] + Weight(i-1,i,j);//将链ij划分为A(i) * ( A[i+1:j] )这里实际上就是k=i  </div><div class="line">			s[i][j] = i;  </div><div class="line">			<span class="keyword">for</span>(int k=i+1; k&lt;j; k++)  </div><div class="line">			&#123;  </div><div class="line">				//将链ij划分为( A[i:k] )* (A[k+1:j])     </div><div class="line">				int u = t[i][k] + t[k+1][j] + Weight(i-1,k,j);  </div><div class="line">				<span class="keyword">if</span>(u&lt;t[i][j])  </div><div class="line">				&#123;  </div><div class="line">					t[i][j] = u;  </div><div class="line">					s[i][j] = k;  </div><div class="line">				&#125;  </div><div class="line">			&#125;  </div><div class="line">		&#125;  </div><div class="line">	&#125;   </div><div class="line">&#125;  </div><div class="line">void Traceback(int i,int j)  </div><div class="line">&#123;  </div><div class="line">	<span class="keyword">if</span>(i==j) <span class="built_in">return</span>;  </div><div class="line">	Traceback(i,s[i][j]);  </div><div class="line">	Traceback(s[i][j]+1,j);  </div><div class="line">	cout&lt;&lt;<span class="string">"三角剖分顶点：V"</span>&lt;&lt;i-1&lt;&lt;<span class="string">",V"</span>&lt;&lt;j&lt;&lt;<span class="string">",V"</span>&lt;&lt;s[i][j]&lt;&lt;endl;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">	cout&lt;&lt;<span class="string">"此多边形的最优三角剖分值为："</span>;</div><div class="line">	M<span class="keyword">in</span>WeightTriangulation();</div><div class="line">	cout&lt;&lt;t[1][n-1]&lt;&lt;endl;</div><div class="line">	cout&lt;&lt;<span class="string">"最优三角剖分结构为："</span>&lt;&lt;endl;</div><div class="line">	Traceback(1,5); //s[i][j]记录了Vi-1和Vj构成三角形的第3个顶点的位置  </div><div class="line">	<span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="经典DP问题"><a href="#经典DP问题" class="headerlink" title="经典DP问题"></a>经典DP问题</h2><h3 id="LIS"><a href="#LIS" class="headerlink" title="LIS"></a>LIS</h3><p>本博客中均给出了n^2和nlogn复杂度的两种算法<br><a href="http://monkeyxu.cn/2016/08/30/%E6%B5%85%E8%B0%88LIS%E7%AE%97%E6%B3%95-Longest-Increasing-Subsequence/" target="_blank" rel="external">转跳博客链接</a></p>
<h3 id="LCS"><a href="#LCS" class="headerlink" title="LCS"></a>LCS</h3><p>状态转移方程为：<br>若该位置匹配dp[i][j]=dp[i-1][j-1]+1<br>若该位置不匹配dp[i][j]=max(dp[i-1][j],dp[i][j-1])<br><a href="http://monkeyxu.cn/2016/10/26/10-23-%E7%83%AD%E8%BA%AB%E8%B5%9B/#Common-Subsequence" target="_blank" rel="external">详见此题</a></p>
<h3 id="连续和最大子序列问题"><a href="#连续和最大子序列问题" class="headerlink" title="连续和最大子序列问题"></a>连续和最大子序列问题</h3><p>本题有经典的HDU 1003和HDU 1231<br><a href="http://monkeyxu.cn/2016/08/30/ACM-1002-1007/#1003" target="_blank" rel="external">HDU-1003转跳链接</a></p>
<p>HDU 1231仅在1003的基础上略做修改</p>
<p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14867398858.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148673988633.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148673988746.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148673988784.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148673988831.png" alt=""></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int a[10050];</div><div class="line">//状态转移方程：max=max&gt;0?max:a[i]  若前i项和小于0 那么第i+1项不能加上sum</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">		int begin=0,end=0,po=0;</div><div class="line">		int max=a[0],sum=a[0];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(sum&lt;0)</div><div class="line">			&#123;</div><div class="line">				sum=a[i];</div><div class="line">				po=i;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				sum+=a[i];</div><div class="line">			<span class="keyword">if</span>(sum&gt;max)</div><div class="line">			&#123;</div><div class="line">				begin=po;</div><div class="line">				end=i;</div><div class="line">				max=sum;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(max&lt;0)</div><div class="line">			cout&lt;&lt;<span class="string">"0"</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;a[0]&lt;&lt;<span class="string">" "</span>&lt;&lt;a[n-1]&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;max&lt;&lt;<span class="string">" "</span>&lt;&lt;a[begin]&lt;&lt;<span class="string">" "</span>&lt;&lt;a[end]&lt;&lt;endl;    //区别仅在于一个输出起始和终止位置</div><div class="line">	&#125;                                                     //另一个需要输出起始终止位置的值</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-1257"><a href="#HDU-1257" class="headerlink" title="HDU 1257"></a>HDU 1257</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148673879779.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14867388013.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14867388017.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148673880211.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148673880249.png" alt=""></p>
<h3 id="参考AC代码–dp（LIS）"><a href="#参考AC代码–dp（LIS）" class="headerlink" title="参考AC代码–dp（LIS）"></a>参考AC代码–dp（LIS）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">int num[30050];</div><div class="line">int ans[30050];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    /*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;num[i];</div><div class="line">		int len,low,high,mid;</div><div class="line">		memset(ans,0,sizeof(ans));</div><div class="line">		ans[1]=num[1];</div><div class="line">		len=1;</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			low=1;</div><div class="line">			high=len;</div><div class="line">			<span class="keyword">while</span>(low&lt;=high)</div><div class="line">			&#123;</div><div class="line">				mid=(low+high)/2;</div><div class="line">				<span class="keyword">if</span>(ans[mid]&lt;num[i])</div><div class="line">					low=mid+1;</div><div class="line">				<span class="keyword">else</span></div><div class="line">					high=mid-1;</div><div class="line">			&#125;</div><div class="line">			ans[low]=num[i];</div><div class="line">			<span class="keyword">if</span>(low&gt;len)</div><div class="line">				len++;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;len&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码–贪心"><a href="#参考AC代码–贪心" class="headerlink" title="参考AC代码–贪心"></a>参考AC代码–贪心</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int temp[30050];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		int h,k=0;</div><div class="line">		int flag;</div><div class="line">		cin&gt;&gt;h;</div><div class="line">		temp[0]=h;</div><div class="line">		k++;</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;h;</div><div class="line">			flag=<span class="literal">false</span>;</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;k;j++)   //若第一个系统不满足 就判断第二个系统 以此类推</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(h&lt;temp[j])     //只要满足递减 那么temp的值会更新 进行后续判断</div><div class="line">				&#123;</div><div class="line">					temp[j]=h;</div><div class="line">					flag=<span class="literal">true</span>;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(!flag)       //若没有一个temp可以满足递减 那么就要增加新的系统</div><div class="line">				temp[k++]=h;    //temp数组用来存储每个新的系统</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;k&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>贪心的思路较好理解 相当于判断每个系统最多能走多远 若新的高度所有系统都不满足 那么增加新的系统<br>dp的思路实际就是求数组的LIS长度 那么为什么可以用LIS长度呢 换句话说 为什么LIS长度就是题目的答案呢<br>以17 16 15 16 13 12 14 15为例<br>原因有如下三点：<br>（1）例中的LIS长度为2 第一个满足LIS=2的是数字15 16 那么后面的所有数字中不可能出现LIS=3的连续递增子序列 最多只会有2个 例如12 14<br>（2）后面的LIS=2的子序列肯定越来越小 例如第一个为15 16 那么后面的可能为13 14，接着比如是10 12，否则LIS就不等于2 会等于4或更多<br>（3）那么LIS=2的2个数字中 肯定有一个会被15的系统解决 一个被16的系统解决 所以问题得到解决 LIS就是题目答案</p>
<h2 id="UVA-1471"><a href="#UVA-1471" class="headerlink" title="UVA 1471"></a>UVA 1471</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给一个长度为n的序列 你的任务是删除一个连续子序列 使得剩下的序列中有一个长度最大的连续递增子序列 例如，将序列｛5，3，4，9，2，8，6，7，1｝中的<br>｛9，2，8｝删除 得到的序列｛5，3，4，6，7，1｝中包含一个长度为4的连续递增子序列｛3，4，6，7｝ 序列每个数均不超过10^9的正整数</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">#include&lt;algorithm&gt;</div><div class="line">#include&lt;iostream&gt;</div><div class="line">using namespace std;</div><div class="line">const int maxn = 2e5+5;</div><div class="line">int f[maxn],g[maxn];//f:以第i个元素开头的最长L序列长度 g：以第i个元素结尾的最长L序列长度</div><div class="line">int a[maxn];</div><div class="line">int v[maxn];       //存放每个g(i)对应的最小的A[j]</div><div class="line">const int INF = 0x3f3f3f3f;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">	/*freopen(&quot;input.txt&quot;,&quot;r&quot;,stdin);*/</div><div class="line">	int Z; </div><div class="line">	cin&gt;&gt;Z;</div><div class="line">	while(Z--)</div><div class="line">	&#123;</div><div class="line">		int n; scanf(&quot;%d&quot;,&amp;n);</div><div class="line">		for(int i = 0; i &lt; n; i++) scanf(&quot;%d&quot;,a+i);</div><div class="line">		g[0] = 1;</div><div class="line">		for(int i = 1; i &lt; n; i++)</div><div class="line">			g[i] = 1 + (a[i] &gt; a[i-1] ? g[i-1] : 0);  //计算g[i]</div><div class="line">		f[n-1] = 1;</div><div class="line">		for(int i = n-1; i--; )</div><div class="line">			f[i] = 1 + (a[i] &lt; a[i+1] ? f[i+1] : 0);  //计算f[i]</div><div class="line">		int ans = 0;</div><div class="line">		for(int i = 0; i &lt; n; i++)</div><div class="line">		&#123;</div><div class="line">			v[1+i] = INF;</div><div class="line">			int k = lower_bound(v+1,v+1+i,a[i])-(v+1);   //k实际为v中的索引 即对应的g[i]</div><div class="line">			ans = max(ans,k+f[i]);            //g[i]+f[i] 取最大值</div><div class="line">			v[g[i]] = min(v[g[i]],a[i]);      //更新v数组 确保存放的是最小值</div><div class="line">		&#125;                                    //在g[i]相同的情况下 数字越小 约容易和后面的数字拼揍</div><div class="line">		printf(&quot;%d\n&quot;,ans);</div><div class="line">	&#125;</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>算法入门经典（二）P242</p>
<h2 id="最大子矩阵问题"><a href="#最大子矩阵问题" class="headerlink" title="最大子矩阵问题"></a>最大子矩阵问题</h2><p><strong>HDU 1506</strong></p>
<p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148682856114.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148682856181.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148682856223.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148682856264.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148682856303.png" alt=""></p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出一个直方图 每个直方图的底长为1 给出n个直方图的高度 求直方图中的最大矩形面积</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line">using namespace std;</div><div class="line">LL a[maxn];</div><div class="line">LL l[maxn],r[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			scanf(<span class="string">"%I64d"</span>,&amp;a[i]);</div><div class="line">		l[1]=1,r[n]=n;</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)   //求每个点左边连续比该点大的最左边的下标，保存在l数组里</div><div class="line">		&#123;                       //注意保存的是下标</div><div class="line">			int t=i;            //因为保存了l中的元素 所以可以实现跳着走</div><div class="line">			<span class="keyword">while</span>(t&gt;1&amp;&amp;a[t-1]&gt;=a[i])   //注意是<span class="keyword">while</span>不是<span class="keyword">if</span> 因为求的不是连续上升子序列</div><div class="line">				t=l[t-1];              //只要比要比较的元素大就可以了</div><div class="line">			l[i]=t;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=n-1;i&gt;=1;i--)   //求每个点右边连续比该点大的最右边的下标，保存在r数组里</div><div class="line">		&#123;                         //注意保存的是下标</div><div class="line">			int t=i;              //因为保存了r中的元素 所以可以实现跳着走</div><div class="line">			<span class="keyword">while</span>(t&lt;n&amp;&amp;a[t+1]&gt;=a[i])</div><div class="line">				t=r[t+1];</div><div class="line">			r[i]=t;</div><div class="line">		&#125;</div><div class="line">		LL Max=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)    //遍历每个点 右边-左边+1就是最大区间长度 ×高度就是面积</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>((r[i]<span class="_">-l</span>[i]+1)*a[i]&gt;Max)   //遍历比较出最大值</div><div class="line">				Max=(r[i]<span class="_">-l</span>[i]+1)*a[i];</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,Max);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>HDU 1505</strong></p>
<p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148682909901.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148682909965.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148682910013.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148682910052.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148682910105.png" alt=""></p>
<h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>求全是F的矩形的最大面积<br>在上一题的基础上由一维变成二维 做法类似<br>在二维数组里算出连续是F的高度 每一行用上题一样的算法求解 最后把每行求得的最大值再求最大值就是答案</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">int n,m;</div><div class="line">char map[1050][1050];</div><div class="line">int a[1005][1005],l[1005],r[1005];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n,m;</div><div class="line">		cin&gt;&gt;n&gt;&gt;m;</div><div class="line">		memset(a,0,sizeof(a));</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=m;j++)</div><div class="line">				cin&gt;&gt;map[i][j];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)        //如果该位置是R那么置0 否则每一列迭代算出高度</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(map[j][i]==<span class="string">'F'</span>)</div><div class="line">					a[j][i]=a[j-1][i]+1;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		int ans=-1;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)     //对每一行使用HDU-1506求最大子矩阵的方法</div><div class="line">		&#123;</div><div class="line">			l[1]=1,r[m]=m;</div><div class="line">			<span class="keyword">for</span>(int j=2;j&lt;=m;j++)</div><div class="line">			&#123;</div><div class="line">				int t=j;</div><div class="line">				<span class="keyword">if</span>(a[i][j]==0)</div><div class="line">					<span class="built_in">continue</span>;</div><div class="line">				<span class="keyword">while</span> (t&gt;1&amp;&amp;a[i][t-1]&gt;=a[i][j])</div><div class="line">					t=l[t-1];</div><div class="line">				l[j]=t;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">for</span>(int j=m-1;j&gt;=1;j--)</div><div class="line">			&#123;</div><div class="line">				int t=j;</div><div class="line">				<span class="keyword">if</span>(a[i][j]==0)</div><div class="line">					<span class="built_in">continue</span>;</div><div class="line">				<span class="keyword">while</span>(t&lt;m&amp;&amp;a[i][t+1]&gt;=a[i][j])</div><div class="line">					t=r[t+1];</div><div class="line">				r[j]=t;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=m;j++)     //a存放的是高度 r<span class="_">-l</span>+1算的是直方图的某一行能延伸的最大长度</div><div class="line">				<span class="keyword">if</span>((r[j]<span class="_">-l</span>[j]+1)*a[i][j]&gt;ans)</div><div class="line">					ans=(r[j]<span class="_">-l</span>[j]+1)*a[i][j];</div><div class="line">		&#125;                           //乘积就是矩形的面积 算出最大值</div><div class="line">		cout&lt;&lt;(ans*3)&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">//例一迭代出的结果a为：</div><div class="line">//0 1 1 1 1 1</div><div class="line">//1 2 2 2 2 2</div><div class="line">//0 0 0 3 3 3</div><div class="line">//1 1 1 4 4 4   由于上一行的3个0导致断开 所以下行的三个1能延伸的长度均为6 因为1的高度比4的高度小</div><div class="line">//2 2 2 5 5 5   2同理 能延伸的长度的为6 由于2的长度小于5 所以5能延伸的长度为3 3*5=15 即为答案</div></pre></td></tr></table></figure>
<p><strong>HDU 2870</strong></p>
<p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148682971769.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148682971819.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148682971857.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148682971891.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14868297193.png" alt=""></p>
<h3 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出一个矩阵 wxyz分别可以换成abc中的某一个二个或者全部 求更新后的矩阵里 字母相同的最大矩阵面积<br>本题相当于再在上题的基础上增加了abc三个状态 因为最后肯定是转换成全为abc状态中的某一个 所以在上一题<br>求每一行最大值的基础上再多算上三个状态即可</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">char map[1050][1050];</div><div class="line">char str[8]=&#123;<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'w'</span>,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>&#125;;</div><div class="line">int num[1050][1050][3];</div><div class="line">//num[i][j][t]表示i行j列的元素全为a，b，c中的某一个的高度（类似与直方图）</div><div class="line">int change[7][3]=&#123;&#123;1,0,0&#125;,&#123;0,1,0&#125;,&#123;0,0,1&#125;,&#123;1,1,0&#125;,&#123;0,1,1&#125;,&#123;1,0,1&#125;,&#123;1,1,1&#125;&#125;;</div><div class="line">//分别表示a本身b本身c本身和wxyz分别对应可以转换abc的状态 三个数字分别表示abc三种状态</div><div class="line">int l[1050],r[1050];</div><div class="line">int m,n;</div><div class="line">int slove(int i)  //每一行的基础上再加三个状态</div><div class="line">&#123;</div><div class="line">	int max=-1;</div><div class="line">	<span class="keyword">for</span>(int k=0;k&lt;3;k++)</div><div class="line">	&#123;</div><div class="line">		l[1]=1,r[m]=m;</div><div class="line">		<span class="keyword">for</span>(int j=2;j&lt;=m;j++)</div><div class="line">		&#123;</div><div class="line">			int t=j;</div><div class="line">			<span class="keyword">while</span>(t&gt;1&amp;&amp;num[i][j][k]&lt;=num[i][t-1][k])</div><div class="line">				t=l[t-1];</div><div class="line">			l[j]=t;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int j=m-1;j&gt;=1;j--)</div><div class="line">		&#123;</div><div class="line">			int t=j;</div><div class="line">			<span class="keyword">while</span> (t&lt;m&amp;&amp;num[i][j][k]&lt;=num[i][t+1][k])</div><div class="line">				t=r[t+1];</div><div class="line">			r[j]=t;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=m;j++)</div><div class="line">			<span class="keyword">if</span>((r[j]<span class="_">-l</span>[j]+1)*num[i][j][k]&gt;max)</div><div class="line">				max=(r[j]<span class="_">-l</span>[j]+1)*num[i][j][k];</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> max;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		int ans=-1;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=m;j++)</div><div class="line">				cin&gt;&gt;map[i][j];</div><div class="line">		memset(num,0,sizeof(num));</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=m;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">for</span>(int k=0;k&lt;7;k++)   //k代表6个数字中等于哪一个</div><div class="line">				&#123;</div><div class="line">					<span class="keyword">if</span>(map[i][j]==str[k])</div><div class="line">					&#123;</div><div class="line">						<span class="keyword">for</span>(int t=0;t&lt;3;t++)   //t表示该数字可以转换为abc中的哪一个</div><div class="line">						&#123;</div><div class="line">							<span class="keyword">if</span>(change[k][t]==1)  //如果可以转换 那么高度+1</div><div class="line">								num[i][j][t]=num[i-1][j][t]+1;</div><div class="line">							<span class="keyword">else</span></div><div class="line">								num[i][j][t]=0;  //否则高度置0</div><div class="line">						&#125;</div><div class="line">						<span class="built_in">break</span>;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			int temp=slove(i);   //每一行带入solve计算</div><div class="line">			<span class="keyword">if</span>(temp&gt;ans)</div><div class="line">				ans=temp;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[贪心杂选]]></title>
      <url>http://xuboming8.github.io/2017/02/07/%E8%B4%AA%E5%BF%83%E6%9D%82%E9%80%89/</url>
      <content type="html"><![CDATA[<h1 id="贪心杂选"><a href="#贪心杂选" class="headerlink" title="贪心杂选"></a>贪心杂选</h1><h2 id="HDU-4296"><a href="#HDU-4296" class="headerlink" title="HDU 4296"></a>HDU 4296</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647400692.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647400736.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647400775.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647400815.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647400853.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>有n个板，每个板有重量x和强度y两个属性，把板叠在一起，对于每个板有个PDV值，计算方式为这个板上面的板的重量和减去这个板的强度，<br>对于每种叠放方式，取这个叠放方式中所以板中PDV值最大的值为代表值，问所有叠放方式中最小的代表值为多少。 </p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int w,s;</div><div class="line">&#125;a[100050];</div><div class="line">int cmp(node x,node y)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> x.w-y.s&lt;y.w-x.s; //转换为x.s-y.w&lt;y.s-x.w 可以理解为x还能承受的重量小于y</div><div class="line">&#125;                           //即还能承受更多的放下面</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			scanf(<span class="string">"%d%d"</span>,&amp;a[i].w,&amp;a[i].s);</div><div class="line">		sort(a+1,a+1+n,cmp);</div><div class="line">		LL ans=0,sum=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			ans=max(ans,sum<span class="_">-a</span>[i].s);</div><div class="line">			sum+=a[i].w;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-4310"><a href="#HDU-4310" class="headerlink" title="HDU 4310"></a>HDU 4310</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647420529.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647420575.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647420606.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647420639.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647420671.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>Dota游戏中有n组敌人，每次攻击一个敌人会使这个敌人的HP减1，<br>但是同时你的英雄的DPS（开始是是无穷的）的值会减少，减少值为所有在当前回合仍存活的敌人的DPS总和，若敌人的HP&lt;=0会在这一回合结束后死亡<br>要求将所有的敌人都消灭后你的英雄的DPS剩余的最多，即求耗费的DPS的值最少。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int dps,hp;</div><div class="line">&#125;hero[25];</div><div class="line">int cmp(node x,node y)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> x.hp*y.dps&lt;y.hp*x.dps;   //按照攻击力/血量降序排列</div><div class="line">&#125;                                   //换成乘积的形式避免了小数</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		int ans=0,sum=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;hero[i].dps&gt;&gt;hero[i].hp;</div><div class="line">			sum+=hero[i].dps;</div><div class="line">		&#125;</div><div class="line">		sort(hero+1,hero+1+n,cmp);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			ans+=sum*hero[i].hp;</div><div class="line">			sum-=hero[i].dps;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-5661"><a href="#HDU-5661" class="headerlink" title="HDU 5661"></a>HDU 5661</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14864744004.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647440088.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647440124.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647440157.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647440193.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出范围a-b和c-d 要求在这两个范围中分别找出一个数字 要求这两个数字的异或最大</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">LL a,b,c,d;</div><div class="line">int is_ok(LL x,LL y,int p)  //必须满需原本的x和y小于上限</div><div class="line">&#123;                           //x和y加上移动的位置后必须大于下限</div><div class="line">	LL rx=x+(1LL&lt;&lt;p)-1;     //才返回1 否则返回0</div><div class="line">	LL ry=y+(1LL&lt;&lt;p)-1;</div><div class="line">	<span class="keyword">if</span>(x&gt;b||rx&lt;a) <span class="built_in">return</span> 0;</div><div class="line">	<span class="keyword">if</span>(y&gt;d||ry&lt;c) <span class="built_in">return</span> 0;</div><div class="line">	<span class="built_in">return</span> 1;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;</div><div class="line">		LL x=0,y=0;</div><div class="line">		<span class="keyword">for</span>(int i=61;i&gt;=0;i--)      //先从y判断 再判断x 都不满足xy一起加 x和y的顺序可改变</div><div class="line">		&#123;                        //实际可理解为：先让y的某位由0边1 y变了那么x不能变 1^0=1才是最优</div><div class="line">			<span class="keyword">if</span>(is_ok(x,y+(1LL&lt;&lt;i),i))    //若y的某位不能变1 那么x变1 也能保证1异或0是最优解</div><div class="line">				y+=(1LL&lt;&lt;i);             //若xy均不满足一个1一个0就一起变 继续进行后面位数的判断</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(is_ok(x+(1LL&lt;&lt;i),y,i))</div><div class="line">				x+=(1LL&lt;&lt;i);</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(is_ok(x+(1LL&lt;&lt;i),y+(1LL&lt;&lt;i),i))</div><div class="line">			&#123;</div><div class="line">				x+=(1LL&lt;&lt;i);</div><div class="line">				y+=(1LL&lt;&lt;i);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;(x^y)&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-1789"><a href="#HDU-1789" class="headerlink" title="HDU 1789"></a>HDU 1789</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647458996.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647459042.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647459076.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647459111.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14864745915.png" alt=""></p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>Ignatius有N项作业要完成。每项作业都有限期，如果不在限期内完成作业，期末考就会被扣相应的分数。给出测试数据T表示测试数，每个测试以N开始<br>（N为0时结束），接下来一行有N个数据，分别是作业的限期，再有一行也有N个数据，分别是若不完成次作业会在期末时被扣的分数。求出他最佳的作业<br>顺序后被扣的最小的分数。（每个作业费时一天）。</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">int vis[10050];</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int d,re;</div><div class="line">&#125;c[10050];</div><div class="line">int cmp(node x,node y)    //按照减分大小从高到低排序 减分相同期限由高到低排</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(x.re==y.re)</div><div class="line">		<span class="built_in">return</span> x.d&gt;y.d;</div><div class="line">	<span class="built_in">return</span> x.re&gt;y.re;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n,j;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;c[i].d;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;c[i].re;</div><div class="line">		memset(vis,0,sizeof(vis));   //可看作<span class="built_in">hash</span>表</div><div class="line">		sort(c+1,c+1+n,cmp);</div><div class="line">		int ans=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)    //类似与<span class="built_in">hash</span>表存储的原理</div><div class="line">		&#123;                        //对于每门课 从减分高的开始 把期限放到对应的vis数组中</div><div class="line">			<span class="keyword">if</span>(vis[c[i].d]==1)   //若vis中该位置已经放了数字 继续向前判断直到找到空位置或未找到</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">for</span>(j=c[i].d-1;j&gt;=1;j--)</div><div class="line">				&#123;</div><div class="line">					<span class="keyword">if</span>(!vis[j])</div><div class="line">					&#123;</div><div class="line">						vis[j]=1;</div><div class="line">						<span class="built_in">break</span>;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">if</span>(j==0)       //如果没有找到 那么ans加上该课程的减分值</div><div class="line">					ans+=c[i].re;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				vis[c[i].d]=1;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-4864"><a href="#HDU-4864" class="headerlink" title="HDU 4864"></a>HDU 4864</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647476403.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647476452.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647476484.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647476518.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148647476551.png" alt=""></p>
<h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>有n个机器，m个任务。每个机器至多能完成一个任务。对于每个机器，有一个最大运行时间xi和等级yi，对于每个任务，也有一个运行时间xj和等级yj<br>只有当xi&gt;=xj且yi&gt;=yj的时候，机器i才能完成任务j，并获得500<em>xj+2</em>yj金钱。问最多能完成几个任务，当出现多种情况时，输出获得金钱最多的情况</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int time,l;</div><div class="line">&#125;machine[100050],<span class="built_in">test</span>[100050];</div><div class="line">int cmp(node x,node y)         //按照时间从高到低贪心 时间相同按照等级从高到低贪心</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(x.time==y.time)</div><div class="line">		<span class="built_in">return</span> x.l&gt;y.l;</div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="built_in">return</span> x.time&gt;y.time;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n,m;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		int vis[105];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;machine[i].time&gt;&gt;machine[i].l;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">			cin&gt;&gt;<span class="built_in">test</span>[i].time&gt;&gt;<span class="built_in">test</span>[i].l;</div><div class="line">		sort(machine+1,machine+1+n,cmp);</div><div class="line">		sort(<span class="built_in">test</span>+1,<span class="built_in">test</span>+1+m,cmp);</div><div class="line">		LL ans=0;                      //注意sum一定是LL型 WA数发</div><div class="line">		int num=0;</div><div class="line">		memset(vis,0,sizeof(vis));</div><div class="line">		<span class="keyword">for</span>(int i=1,j=1;i&lt;=m;i++)      //遍历每个任务 先找出所有比该任务时间多的机器</div><div class="line">		&#123;                              //再在这些机器中找到等级比任务高且最接近的 该机器清零</div><div class="line">			<span class="keyword">for</span>(;j&lt;=n;j++)          //注意j不要从头遍历 不然清零的机器会重新使用而WA</div><div class="line">			&#123;                       //用到了贪心的思想 下一个任务的时间肯定比上一个少 所以从上一个j出发</div><div class="line">				<span class="keyword">if</span>(machine[j].time&gt;=<span class="built_in">test</span>[i].time)     //依然会得到正确的结果</div><div class="line">					vis[machine[j].l]++;</div><div class="line">				<span class="keyword">else</span></div><div class="line">					<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">for</span>(int k=<span class="built_in">test</span>[i].l;k&lt;=100;k++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(vis[k])</div><div class="line">				&#123;</div><div class="line">					vis[k]--;</div><div class="line">					num++;</div><div class="line">					ans+=(<span class="built_in">test</span>[i].time*500+<span class="built_in">test</span>[i].l*2);</div><div class="line">					<span class="built_in">break</span>;           //只要找到第一个<span class="built_in">break</span> 后面无需再找</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;num&lt;&lt;<span class="string">" "</span>&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-3090"><a href="#HDU-3090" class="headerlink" title="HDU 3090"></a>HDU 3090</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148653854309.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148653854361.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148653854399.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148653854432.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148653854473.png" alt=""></p>
<h3 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出n条路和m的钱数 每条路上有固定的长度和强盗数目 每条路上的强盗会抢走强盗数量*道路长度的钱 一个硬币可以避免1km不受强盗影响<br>问至少有多少钱会被抢走</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int d,p;</div><div class="line">&#125;road[10050];</div><div class="line">int cmp(node x,node y)    //按照强盗数量排序 多的在前面</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(x.p==y.p)</div><div class="line">		<span class="built_in">return</span> x.d&gt;y.d;</div><div class="line">	<span class="built_in">return</span> x.p&gt;y.p;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n,m;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0&amp;&amp;m==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		int sum=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;road[i].d&gt;&gt;road[i].p;</div><div class="line">			sum+=road[i].d*road[i].p;   //先算出总的要抢钱数</div><div class="line">		&#125;</div><div class="line">		sort(road+1,road+1+n,cmp);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(m&gt;=road[i].d)    //能解决掉的部分 对应的钱数也要减掉</div><div class="line">			&#123;</div><div class="line">				m-=road[i].d;</div><div class="line">				sum-=road[i].d*road[i].p;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>      //解决不了某段路 减去最后能解决的部分 结束循环</div><div class="line">			&#123;         //剩下的sum都是要抢的钱数了</div><div class="line">				sum-=m*road[i].p;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;sum&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Machine Learning-2]]></title>
      <url>http://xuboming8.github.io/2017/02/06/Machine-Learning-2/</url>
      <content type="html"><![CDATA[<h1 id="Machine-Learning-2"><a href="#Machine-Learning-2" class="headerlink" title="Machine Learning-2"></a>Machine Learning-2</h1><h2 id="第三周"><a href="#第三周" class="headerlink" title="第三周"></a>第三周</h2><h3 id="分类问题"><a href="#分类问题" class="headerlink" title="分类问题"></a>分类问题</h3><p>我们通常不用线性回归来解决分类问题<br>这是因为极端点往往对线性回归的拟合产生较大偏差<br>通常使用逻辑回归才解决分类问题<br>在分类问题中y通常取0/1代表两种不用的状态<br><a id="more"></a></p>
<h3 id="假设函数表达式"><a href="#假设函数表达式" class="headerlink" title="假设函数表达式"></a>假设函数表达式</h3><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148643564287.png" alt=""><br>根据概率论的相关知识 可以得到<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148643564339.png" alt=""></p>
<h3 id="决策边界"><a href="#决策边界" class="headerlink" title="决策边界"></a>决策边界</h3><p>从图像中可以看出 当z≥0 即θTx≥0 y属于[0.5,1]取1  当θTx&lt;0 y属于[0,0.5]取0<br>ex：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148643645124.png" alt=""><br>当普通的表达式无法满足分类问题的时候 我们可以通过增加高次多项式才使图像满足分类问题<br>例如加上θ0+θ1x1²+θ2x2²可使图像变为圆</p>
<h3 id="代价方程的逻辑回归形式"><a href="#代价方程的逻辑回归形式" class="headerlink" title="代价方程的逻辑回归形式"></a>代价方程的逻辑回归形式</h3><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148643728236.png" alt=""><br>图像如下<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148643728295.png" alt=""><br>从图像中可以看出<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14864372834.png" alt=""></p>
<h3 id="简化代价方程-amp-使用梯度下降算法实现逻辑回归"><a href="#简化代价方程-amp-使用梯度下降算法实现逻辑回归" class="headerlink" title="简化代价方程&amp;使用梯度下降算法实现逻辑回归"></a>简化代价方程&amp;使用梯度下降算法实现逻辑回归</h3><p>将y=0和y=1时的代价方程可简化如下：(并给出向量化的表达式)<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148648658397.png" alt=""><br>当对J进行偏导操作后发现和线性回归的梯度下降算法完全一样：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148648658447.png" alt=""><br>不一样的是 线性回归的中h=XTθ 而逻辑回归中的h=1/1+e(-XTθ)<br>逻辑回归的J向量化如下：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148648658492.png" alt=""></p>
<h3 id="高级优化算法"><a href="#高级优化算法" class="headerlink" title="高级优化算法"></a>高级优化算法</h3><p>在高级优化算法中 我们需要求出代价方程J和代价方程J对θ的偏导数<br>所以我们可以在matlab中使用如下算法 可以快速求解θ J和J是否收敛<br>如下是定义的函数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> [jVal, gradient] = costFunction(theta)</div><div class="line">  jVal = [...code to compute J(theta)...];</div><div class="line">  gradient = [...code to compute derivative of J(theta)...];</div><div class="line">end</div></pre></td></tr></table></figure></p>
<p>如下是在matlab中使用的代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">options = optimset(<span class="string">'GradObj'</span>, <span class="string">'on'</span>, <span class="string">'MaxIter'</span>, 100);</div><div class="line">initialTheta = zeros(2,1);</div><div class="line">   [optTheta, <span class="keyword">function</span>Val, <span class="built_in">exit</span>Flag] = fminunc(@costFunction, initialTheta, options);</div></pre></td></tr></table></figure></p>
<p>例如,定义的函数可以如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> [jVal, gradient] = costFunction(theta)</div><div class="line">  jVal = (theta(1)-5)^2+(theta(2)-5)^2;</div><div class="line">  gradient = zeros(2,1);</div><div class="line">  gradient(1)=2*(theta(1)-5);</div><div class="line">  gradient(2)=2*(theta(2)-5);</div><div class="line">end</div></pre></td></tr></table></figure></p>
<p>那么在matlab中敲入对应的算法后 将会求出θ1=5 θ2=5 J=0 exitFlag=1<br>说明θ1和θ2等于5时 J=0为最小值 且收敛 验证此算法是正确的<br><strong>备注</strong><br>使用此算法需要注意 gradient的纬度d需要≥2 如果纬度是1 需要查询fminunc找出对应资料</p>
<h3 id="一对多的分类问题"><a href="#一对多的分类问题" class="headerlink" title="一对多的分类问题"></a>一对多的分类问题</h3><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148683138633.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148683138701.png" alt=""><br>我们对这个分类问题使用如下算法：<br>每次选取一种类型的问题为1 所有其它类型就为0 这样就转换成了把两种类型的数据分开的子问题<br>如上图所以有三种分类的方法<br>在这三种分类方法中 选取一个hθ最大的分类方法作为分类标准即可</p>
<h3 id="过度拟合问题"><a href="#过度拟合问题" class="headerlink" title="过度拟合问题"></a>过度拟合问题</h3><p>如果我们在使用假设函数中增加了过度的高次项 那么这个函数会过度的拟合这些点 甚至产生扭曲 从而破坏了一般性规律<br>一般在特征过多而我们又没有很多的训练集的时候 就会出现过度拟合的问题<br>为了坚决过度拟合的问题 有如下方法：<br>（1）尽量减少特征的数量 选取更多重要的特征<br>（2）使用模型选择算法 自动删去一些特征（之后会提到）<br>（3）正规化（之后会提到）</p>
<h3 id="假设函数的过度拟合"><a href="#假设函数的过度拟合" class="headerlink" title="假设函数的过度拟合"></a>假设函数的过度拟合</h3><p>下图给出对假设函数出现过度拟合的处理：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148715090233.png" alt=""><br>例如：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148715090293.png" alt=""><br>我们在多项式后加入1000θ3²+θ4² 根据最小化可得θ3和θ4趋近于0 所以图像就会避免过度拟合的问题</p>
<h3 id="正则化解决线性回归"><a href="#正则化解决线性回归" class="headerlink" title="正则化解决线性回归"></a>正则化解决线性回归</h3><p>下图是梯度下降算法的正则化：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14871512378.png" alt=""><br>θ0和θi分别处理<br>展开后如下图所以：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148715123834.png" alt=""><br>对于θj前面的参数可以看作小于1又接近1 所以θj每次以一个很小的数量下降<br>下图是正规方程的正则化：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148715123872.png" alt=""><br>在正规方程中原本存在不可逆的问题 但是正则化后括号内的矩阵一定可逆 L的维数为n+1</p>
<h3 id="正则化解决逻辑回归"><a href="#正则化解决逻辑回归" class="headerlink" title="正则化解决逻辑回归"></a>正则化解决逻辑回归</h3><p>下图是针对逻辑函数的代价方程的正则化：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148715166665.png" alt=""><br>下图是针对逻辑回归的梯度下降算法：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14871516672.png" alt=""><br>形式上与线性回归相同 但注意假设函数不同</p>
<h2 id="第四周"><a href="#第四周" class="headerlink" title="第四周"></a>第四周</h2><h3 id="神经网络模型一"><a href="#神经网络模型一" class="headerlink" title="神经网络模型一"></a>神经网络模型一</h3><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730191236.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730191102.png" alt=""><br>在神经网络中 ai(j)表示对j层的第i个对象 θ(j)表示从j层到j+1层的所有权重(参数)<br>θj的维度等于s(j+1)×(sj+1) 例如θ1=s2×(s1+1)=3×4<br>计算公式如下：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730191155.png" alt=""></p>
<h3 id="神经网络模型二"><a href="#神经网络模型二" class="headerlink" title="神经网络模型二"></a>神经网络模型二</h3><p>这是上一节的公式：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730191155.png" alt=""><br>我们把它变为如下形式：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730261372.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730261418.png" alt=""><br>变为向量形式：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730261454.png" alt=""><br>对于z(j) a(j) hθ(x)有如下公式：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730261539.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730261587.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730261619.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730261652.png" alt=""></p>
<h3 id="具体实例"><a href="#具体实例" class="headerlink" title="具体实例"></a>具体实例</h3><p>可以实现逻辑上的异或 且 或等操作<br>例如 或运算的参数如下：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730300459.png" alt=""><br>其余一些运算如下:<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730300634.png" alt=""><br>公式如下：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730300833.png" alt=""></p>
<h3 id="神经网络中的一对多"><a href="#神经网络中的一对多" class="headerlink" title="神经网络中的一对多"></a>神经网络中的一对多</h3><p>实际问题中的一对多：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730315081.png" alt=""><br>若是四种识别 我们可输出y的结果定义如下：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148730315147.png" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[经典面试之——异或操作]]></title>
      <url>http://xuboming8.github.io/2017/02/06/%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E4%B9%8B%E2%80%94%E2%80%94%E5%BC%82%E6%88%96%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h1 id="经典面试之——异或操作"><a href="#经典面试之——异或操作" class="headerlink" title="经典面试之——异或操作"></a>经典面试之——异或操作</h1><h2 id="例题一"><a href="#例题一" class="headerlink" title="例题一"></a>例题一</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>一个整型数组里除了一个数字(奇数次数字)出现1次（奇数次）之外 其他数字都出现了两次 请写出程序找出这个数字<br>要求时间复杂度n 空间复杂度1<br><a id="more"></a></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>依次异或 出现两次的数字异或等于0 所以那个出现1次或奇次的数字最后讲浮现出来</p>
<h3 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">include&lt;iostream&gt;</div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int T;</div><div class="line">	cin&gt;&gt;T;</div><div class="line">	long long temp,ans;</div><div class="line">	<span class="keyword">while</span>(T--)</div><div class="line">	&#123;</div><div class="line">		int N;</div><div class="line">		cin&gt;&gt;N;</div><div class="line">		N--;</div><div class="line">		cin&gt;&gt;temp;</div><div class="line">		ans=temp;</div><div class="line">		<span class="keyword">while</span>(N--)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;temp;</div><div class="line">			ans^=temp;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="例题二"><a href="#例题二" class="headerlink" title="例题二"></a>例题二</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。<br>要求时间复杂度是O(n)，空间复杂度是O(1)</p>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>如果能够把原数组分为两个子数组。在每个子数组中，包含一个只出现一次的数字，而其他数字都出现两次。如果能够这样拆分原数组，按照前面的办法就<br>是分别求出这两个只出现一次的数字了。<br>我们还是从头到尾依次异或数组中的每一个数字，那么最终得到的结果就是两个只出现一次的数字的异或结果。因为其他数字都出现了两次，在异或中全部<br>抵消掉了。由于这两个数字肯定不一样，那么这个异或结果肯定不为0，也就是说在这个结果数字的二进制表示中至少就有一位为1。我们在结果数字中找到<br>第一个为1的位的位置，记为第N位。现在我们以第N位是不是1为标准把原数组中的数字分成两个子数组，第一个子数组中每个数字的第N位都为1，而第二个<br>子数组的每个数字的第N位都为0。<br>现在我们已经把原数组分成了两个子数组，每个子数组都包含一个只出现一次的数字，而其他数字都出现了两次。因此到此为止，所有的问题我们都已经解<br>决。</p>
<h3 id="参考代码-1"><a href="#参考代码-1" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int a[1000050];</div><div class="line">void FindNumsAppearOnce(int* data, int length)</div><div class="line">&#123;</div><div class="line">    int OR = 0 ;</div><div class="line">    <span class="keyword">for</span> (int i = 0 ; i &lt; length ; i++)//依次异或数组中的每一个数</div><div class="line">        OR = OR ^ data[i] ;</div><div class="line">    int index = 1 ;</div><div class="line">    <span class="keyword">while</span> ((OR &amp; 1) != 1 &amp;&amp; (index &lt; 32))//从右向左找到异或结果中第一个为1的位的位置</div><div class="line">    &#123;</div><div class="line">        OR = OR&gt;&gt;1;</div><div class="line">        index++;</div><div class="line">    &#125;</div><div class="line">    int num1 = 0 ;</div><div class="line">    int num2 = 0 ;</div><div class="line">    <span class="keyword">for</span> (int j = 0 ; j &lt; length ;j++)</div><div class="line">    &#123;</div><div class="line">        int temp = data[j];</div><div class="line">        temp = temp &gt;&gt; (index - 1) ;//向右移位到index的位置</div><div class="line">        <span class="keyword">if</span> ((temp &amp; 1) == 1) //判断该位是否为1</div><div class="line">            num1 = num1 ^ data[j];</div><div class="line">        <span class="keyword">else</span></div><div class="line">            num2 = num2 ^ data[j] ;</div><div class="line">    &#125;</div><div class="line">    cout&lt;&lt;min(num1,num2)&lt;&lt;<span class="string">" "</span>&lt;&lt;max(num1,num2)&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">		FindNumsAppearOnce(a,n);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="例题三"><a href="#例题三" class="headerlink" title="例题三"></a>例题三</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>一个数组中有三个数字a、b、c只出现一次，其他数字都出现了两次。请找出三个只出现一次的数字</p>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>考虑给定数组中有三个单独出现一次的数字，这个会比有两个的稍微复杂。分步分析，设定这三个数为a,b,c:<br>(1)将数组中的数字全部异或，得到的结果x=a^b^c，但是x不是a，b，c中的其中一个，假设x=a，那么b^c=0说明b=c，与题目给定的条件矛盾。<br>(2)设定f(n)可以像2中的那样，从低位开始，找到第一个bit为1的位置，f(x^a),f(x^b),f(x^c)得到的值肯定都不为0，因为x^a,x^b,x^c本身就不为0。<br>f(x^a)^f(x^b)^f(x^c)结果不为0。因为f(x^a)^f(x^b)的结果中可能为0，也可能有两个bit为1。如果假设f(x^c)的结果bit为1的位置与f(x^a)^f(x^b)的<br>其中一个重合，则f(x^a)^f(x^b)^f(x^c)结果中只有1个bit为1，如果不重合的话那么有3个bit位为1。<br>(3)这便可以推断出f(x^a)^f(x^b)^f(x^c)中至少有一个bit位为1。假设从低位到高位的第mbit位为1.那么可以得出结论x^a,x^b,x^c中有一个或者三个的<br>第m位为1（不可能有两个，因为有两个的话，异或的结果就为0了）。<br>(4)证明，x^a,x^b,x^c中只有一个第m-bit位为1.假设他们的第m位都为1，那么x的第m位为0，但是x=a^b^c其第m位肯定为1，所以假设不成立。那么相反，<br>假设x的第m位为1，a,b,c的第m位都为0，也不成立，因为x=a^b^c。所以综上所述x^a,x^b,x^c中只有一个第m位为1。那么这个问题就好办了。根据这个<br>第m位找到第一个只出现一次的数字。然后剩下两个就是问题2所描述的问题。</p>
<h3 id="参考代码-2"><a href="#参考代码-2" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">int get_first_bit(int num)   //效其果是最低位的1不变 其余清0</div><div class="line">&#123;  </div><div class="line">	<span class="built_in">return</span> num&amp;~(num-1);  </div><div class="line">&#125;  </div><div class="line">void get_two_unique_num(int *a,int n,int *num1,int *num2)  </div><div class="line">&#123;  </div><div class="line">	int result_code=0;  </div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">		result_code^=a[i];  </div><div class="line">	int diff=get_first_bit(result_code);    //最低位为1 其余位为0</div><div class="line">	*num1=0;  </div><div class="line">	*num2=0;  </div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">	&#123;  </div><div class="line">		<span class="keyword">if</span>(a[i]&amp;diff)         //不同与例题二的操作 此方法不需要找出最低位1的位置</div><div class="line">		&#123;  </div><div class="line">			(*num1)^=a[i];  </div><div class="line">		&#125;  </div><div class="line">		<span class="keyword">else</span>  </div><div class="line">		&#123;  </div><div class="line">			(*num2)^=a[i];  </div><div class="line">		&#125;  </div><div class="line">	&#125;  </div><div class="line">&#125;  </div><div class="line">void get_three_unique_num(int *a,int n,int *num1,int *num2,int *num3)  </div><div class="line">&#123;  </div><div class="line">	int result_code=0;  </div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">		result_code^=a[i];            //最后结果为x=a^b^c</div><div class="line">	int flag=0;  </div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">		flag^=get_first_bit(result_code^a[i]);   //x^a x^b x^c 分别进行最低位为1 其余清0的操作</div><div class="line">	flag=get_first_bit(flag);            //再把这三个数^再进行清0操作 得到的就是只有最低位为1的数字</div><div class="line">	*num1=0;  </div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">	&#123;  </div><div class="line">		<span class="keyword">if</span>(get_first_bit(result_code^a[i])==flag)  //以最低位的1为基准 只要该位为1的数字全部^ </div><div class="line">		&#123;                                         //即可求出num1</div><div class="line">			(*num1)^=a[i];  </div><div class="line">		&#125;  </div><div class="line">	&#125;  </div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)               //把num1与数组最后一位交换 前面的n-1个数字进行与问题二相同的操作</div><div class="line">	&#123;  </div><div class="line">		<span class="keyword">if</span>(a[i]==(*num1))  </div><div class="line">		&#123;  </div><div class="line">			int temp=a[i];  </div><div class="line">			a[i]=a[n-1];  </div><div class="line">			a[n-1]=temp;  </div><div class="line">			<span class="built_in">break</span>;  </div><div class="line">		&#125;  </div><div class="line">	&#125;  </div><div class="line">	get_two_unique_num(a,n-1,num2,num3);  </div><div class="line">&#125;  </div><div class="line">void <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">	int a[]=&#123;2,2,4,4,6,6,3,5,7&#125;;  </div><div class="line">	int num1,num2,num3;  </div><div class="line">	get_three_unique_num(a,sizeof(a)/sizeof(int),&amp;num1,&amp;num2,&amp;num3);  </div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\t%d\t%d\n"</span>,num1,num2,num3);  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="例题四"><a href="#例题四" class="headerlink" title="例题四"></a>例题四</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出1-1000个连续自然数，然后从中随机去掉两个，再打乱顺序，要求只遍历一次，求出被去掉的两个数。</p>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>首先，这两个数组(打乱前和打乱后)各自异或，也就是1^2^…^1000，得到两个异或值。再对这两个异或值进行一次异或，这样就得到了x^y的指(重复部分互相<br>抵消了)。<br>因为x和y是两个不同的整数，所以这两个数的异或结果，转化为二进制的话，一定在某位是1，假设在第3位。也就是说如果把原始数组按第3位是否为0进行划<br>分，就可以分成两个数组，每个数组各包含一个被抽取的数。如果打乱后的数组也按这个规则划分为两个数组，这样就得到了4个数组，其中两组是第3位为0,<br>另外两组是第3位为1。把第3位为0的两个数组所有元素进行异或就能得到被抽取的一个数，同理也就能获得另外一个被抽取的数，于是问题解决。</p>
<h2 id="例题五"><a href="#例题五" class="headerlink" title="例题五"></a>例题五</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>数组A中，除了某一个数字x之外，其他数字都出现了三次，而x出现了一次。请给出最快的方法，找到x。</p>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>乍一看这个题目，不少同学立马给出了答案：异或。但举个例子，就会发现，异或是行不通的，一般的方法是利用异或的的如下特性：<br>A xor A = 0<br>A xor 0 = A<br>但是这个题目中，数字都是奇数个的，直接采用之前类似题目的异或方法，已经不合适了。</p>
<p>除此之外，我们还可能想到如下的方法：<br>（1）采用hashmap，时间复杂度O(n)，空间复杂度O(n)<br>（2）对数组A进行排序，然后在遍历一次，时间复杂度O(nlogn)，空间复杂度O(1) 这个方法还可以。</p>
<p>是否还有一些效果更好的方法呢？这一类的题目，即使简单的异或不能解决，也可以从二进制位、位操作方面去考虑，总之这样的大方向是不会错的。<br>题目中，如果数组中的元素都是三个三个出现的，那么从二进制表示的角度，每个位上的1加起来，应该可以整除3。如果有一个数x只出现一次，会是什么<br>情况呢？<br>如果某个特定位上的1加起来，可以被3整除，说明对应x的那位是0，因为如果是1，不可能被3整除<br>如果某个特定位上的1加起来，不可以被3整除，说明对应x的那位是1<br>根据上面的描述，我们可以开辟一个大小为32的数组，第0个元素表示，A中所有元素的二进制表示的最低位的和，依次类推。最后，再转换为十进制数即可。<br>这里要说明的是，用一个大小为32的整数数组表示，同样空间是O(1)的。</p>
<h3 id="参考代码-3"><a href="#参考代码-3" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">void <span class="built_in">set</span>(int&amp; a,int i) &#123; a |= (1&lt;&lt; (i &amp; 0x1F));&#125;  //把a第i位置为1</div><div class="line">void clr(int&amp; a,int i) &#123; a &amp;= ~(1&lt;&lt;(i &amp; 0x1f));&#125;  //把a的第i位清0</div><div class="line">void find(int a[],int n)</div><div class="line">&#123;</div><div class="line">    int m[32];</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;32;i++)</div><div class="line">        m[i]=0;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;32;i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">for</span>(int j=0;j&lt;n;j++)</div><div class="line">        &#123;</div><div class="line">            int bit=a[j]&amp;1;</div><div class="line">            m[i]+=bit;</div><div class="line">            a[j] &gt;&gt;=1;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    int result=0;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;32;i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(m[i]%3!=0)</div><div class="line">            <span class="built_in">set</span>(result,i);</div><div class="line">    &#125;</div><div class="line">    cout&lt;&lt;<span class="string">"结果为"</span>&lt;&lt;result&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    int a[]=&#123;1,2,2,2,3,3,3&#125;;</div><div class="line">    int n=sizeof(a)/sizeof(a[0]);</div><div class="line">    find(a,n);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="经典位运算总结"><a href="#经典位运算总结" class="headerlink" title="经典位运算总结"></a>经典位运算总结</h2><p>（1） n&amp;（n-1）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">把最低为的1变成0 原本是0不变 用于计算二进制数中1的个数</div></pre></td></tr></table></figure></p>
<p>（2） n&amp;~（n-1）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在n-1前加了取反符号 作用是保留n中最低位的1 其余位均清零</div></pre></td></tr></table></figure></p>
<p>（3）把a第i位置为1<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void <span class="built_in">set</span>(int&amp; a,int i) &#123; a |= (1&lt;&lt; (i &amp; 0x1F));&#125;</div></pre></td></tr></table></figure></p>
<p>（4）把a的第i位清0<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void clr(int&amp; a,int i) &#123; a &amp;= ~(1&lt;&lt;(i &amp; 0x1f));&#125;</div></pre></td></tr></table></figure></p>
<p>（5）获取第i位(2^i次方形式)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">int <span class="built_in">test</span>(int&amp; a,int i) &#123; <span class="built_in">return</span> a&amp;= (1&lt;&lt;(i &amp; 0x1F));&#125;</div></pre></td></tr></table></figure></p>
<p>（6）a&amp;1<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">判断a的最后一位数字是0还是1 用于判断奇偶性 也可用于二进制数每一位的相加运算 寻找最低位1的位置</div><div class="line">判断二进制中x到y位中1的个数等等。</div></pre></td></tr></table></figure></p>
<p>（7）&amp;1 |1<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">只有1&amp;1结果才为1 只有0|0结果才为0</div></pre></td></tr></table></figure></p>
<p>（8）交换两个数字<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">void swap(int x , int y) </div><div class="line">&#123; </div><div class="line">    x =x^y; </div><div class="line">    y =x^y; </div><div class="line">    x =x^y; </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>（9）返回整数的平均值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">int average(int x, int y) </div><div class="line">&#123;    </div><div class="line">    <span class="built_in">return</span> (x&amp;y)+((x^y)&gt;&gt;1); </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>（10）对于一个数x，判断他是不是2的幂<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">boolean power2(int x) </div><div class="line">&#123; </div><div class="line">    <span class="built_in">return</span> (x&amp;(x-1))==0； </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>（11）计算绝对值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">int abs( int x ) </div><div class="line">&#123; </div><div class="line">int y ; </div><div class="line">y = x &gt;&gt; 31 ; </div><div class="line"><span class="built_in">return</span> (x^y)-y ;        //or: (x+y)^y </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>（12）取模运算转化成位运算 (在不产生溢出的情况下)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a % (2^n) 等价于 a &amp; (2^n - 1)</div></pre></td></tr></table></figure></p>
<p>（13）乘法运算转化成位运算 (在不产生溢出的情况下)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a * (2^n) 等价于 a &lt; &lt; n</div></pre></td></tr></table></figure></p>
<p>（14）除法运算转化成位运算 (在不产生溢出的情况下)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a / (2^n) 等价于 a&gt;&gt; n </div><div class="line">例: 12/8 == 12&gt;&gt;3</div></pre></td></tr></table></figure></p>
<p>（15）x 的 相反数 表示为 (~x+1)<br>（16）求从x位（高）到y位（低）间共有多少个1<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">int FindChessNum(int x, int y, int k) </div><div class="line">&#123; </div><div class="line">	int re = 0; </div><div class="line">	<span class="keyword">for</span> (int i = y; i &lt;= x; i++) </div><div class="line">	&#123; </div><div class="line">		re += ((k &gt;&gt; (i - 1)) &amp; 1); </div><div class="line">	&#125; </div><div class="line">	<span class="built_in">return</span> re; </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[贪心专题-区间问题]]></title>
      <url>http://xuboming8.github.io/2017/02/03/%E8%B4%AA%E5%BF%83%E4%B8%93%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="贪心专题-区间问题"><a href="#贪心专题-区间问题" class="headerlink" title="贪心专题-区间问题"></a>贪心专题-区间问题</h1><h2 id="HDU-1050"><a href="#HDU-1050" class="headerlink" title="HDU 1050"></a>HDU 1050</h2><p><strong>Problem Description</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612676414.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612676475.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612676515.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612676563.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612676605.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>有两排房间 中间是走廊 需要在房间中移动桌子 走廊都是只能使一个桌子移动 问在所给的房间移动桌子最少需要多少时间（次数*10）</p>
<h3 id="参考AC代码-贪心正解"><a href="#参考AC代码-贪心正解" class="headerlink" title="参考AC代码(贪心正解)"></a>参考AC代码(贪心正解)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int a,b;</div><div class="line">	bool flag;</div><div class="line">&#125;room[500];</div><div class="line">bool cmp(node x1,node x2)    //区间左端点升序排列</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> x1.a&lt;x2.a;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;room[i].a&gt;&gt;room[i].b;</div><div class="line">			<span class="keyword">if</span>(room[i].a&gt;room[i].b)</div><div class="line">				swap(room[i].a,room[i].b);   //保证区间左端点小 右端点大</div><div class="line">			<span class="keyword">if</span>(!room[i].a&amp;1)                 //左端点保证是奇数</div><div class="line">				room[i].a--;                 //上操作和下操作是因为存在共用一个走廊的情况 如13和46变为14和36 其实区间相交</div><div class="line">			<span class="keyword">if</span>(room[i].b&amp;1)                  //右端点保证是偶数</div><div class="line">				room[i].b++;</div><div class="line">			room[i].flag=<span class="literal">false</span>;              //每个房间初始化为<span class="literal">false</span>表示未访问</div><div class="line">		&#125;</div><div class="line">		sort(room,room+n,cmp);               //贪心 左端点排序</div><div class="line">		int count=-1,preb;</div><div class="line">		bool ex=<span class="literal">true</span>;</div><div class="line">		<span class="keyword">while</span>(ex)                            //核心 每次尽可能移动到不相交区间的最右端</div><div class="line">		&#123;</div><div class="line">			count++;</div><div class="line">			ex=<span class="literal">false</span>;</div><div class="line">			preb=0;                          //每次进行循环时preb需要清零</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(!room[i].flag&amp;&amp;room[i].a&gt;preb)  //若存在下一个区间与前一个区间不相交 那么改变preb的值 继续右移</div><div class="line">				&#123;</div><div class="line">					room[i].flag=<span class="literal">true</span>;           //访问过的区间不能再访问</div><div class="line">					ex=<span class="literal">true</span>;                     //只要能找到这样的区间 继续进入<span class="keyword">while</span>循环</div><div class="line">					preb=room[i].b;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;count*10&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码（暴力）"><a href="#参考AC代码（暴力）" class="headerlink" title="参考AC代码（暴力）"></a>参考AC代码（暴力）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">int room[500];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		memset(room,0,sizeof(room));      //用room数组存放每个房间重叠的次数</div><div class="line">		int n;                            //最后遍历room求出重叠最多的次数*10即为答案</div><div class="line">		cin&gt;&gt;n;                           //房间数很大时不能使用 此方法是用空间换时间 鉴于此题只有400个房间所以可以使用</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			int a,b;</div><div class="line">			cin&gt;&gt;a&gt;&gt;b;</div><div class="line">			<span class="keyword">if</span>(a&gt;b)</div><div class="line">				swap(a,b);</div><div class="line">			<span class="keyword">if</span>(!a&amp;1)</div><div class="line">				a--;</div><div class="line">			<span class="keyword">if</span>(b&amp;1)</div><div class="line">				b++;</div><div class="line">			<span class="keyword">for</span>(int i=a;i&lt;=b;i++)</div><div class="line">				room[i]++;</div><div class="line">		&#125;</div><div class="line">		int ans=room[0];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;400;i++)</div><div class="line">			ans=max(ans,room[i]);</div><div class="line">		cout&lt;&lt;ans*10&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-2037"><a href="#HDU-2037" class="headerlink" title="HDU 2037"></a>HDU 2037</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612705781.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612705833.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612705869.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612705904.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612705941.png" alt=""></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int a,b;</div><div class="line">&#125;num[150];</div><div class="line">bool cmp(node x,node y)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> x.b&lt;y.b;</div><div class="line">&#125;</div><div class="line">int main()                     //选择最大不相交区间问题</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;num[i].a&gt;&gt;num[i].b;</div><div class="line">		sort(num+1,num+1+n,cmp);        //按照右端点b升序排列 选择第一个区间</div><div class="line">		int ans=1;                      //删除和第一个区间相交的区间 继续选择第一个 以此类推</div><div class="line">		int <span class="built_in">limit</span>=num[1].b;</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(num[i].a&gt;=<span class="built_in">limit</span>)</div><div class="line">			&#123;</div><div class="line">				ans++;</div><div class="line">				<span class="built_in">limit</span>=num[i].b;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-5696"><a href="#HDU-5696" class="headerlink" title="HDU 5696"></a>HDU 5696</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612731191.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612731246.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612731281.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612731316.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612731349.png" alt=""></p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int maxn=100005;</div><div class="line"><span class="comment">#define LL long long </span></div><div class="line">int a[maxn];</div><div class="line">LL ans[maxn];</div><div class="line">void dfs(int low,int high)        //类似于快排的思想 枢轴为最小值</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(low&gt;high)</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	<span class="keyword">if</span>(low==high)               //low==high说明搜索到只有一个数 返回自己的平方作为一个数做区间的值</div><div class="line">	&#123;</div><div class="line">		ans[1]=max(ans[1],1ll*a[low]*a[low]);</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int maxi=low,mini=low;</div><div class="line">	<span class="keyword">for</span>(int i=low;i&lt;=high;i++)      //找出最大值和最小值的位置</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(a[i]&gt;a[maxi])</div><div class="line">			maxi=i;</div><div class="line">		<span class="keyword">if</span>(a[i]&lt;a[mini])</div><div class="line">			mini=i;</div><div class="line">	&#125;</div><div class="line">	ans[high-low+1]=max(ans[high-low+1],1ll*a[maxi]*a[mini]);   //把区间长度的价值（max*min）算出</div><div class="line">	dfs(low,mini-1);                   //以最小值作为枢轴向左和右搜索</div><div class="line">	dfs(mini+1,high);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;	scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">			ans[i]=0;</div><div class="line">		&#125;</div><div class="line">		dfs(1,n);</div><div class="line">		<span class="keyword">for</span>(int i=n-1;i&gt;=1;i--)         //dfs后有的区间未计算 通过和上一个区间求最大值算出</div><div class="line">			ans[i]=max(ans[i],ans[i+1]);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,ans[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-2158"><a href="#HDU-2158" class="headerlink" title="HDU 2158"></a>HDU 2158</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612766444.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612766554.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612766592.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612766631.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148612766671.png" alt=""></p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int maxn=100000+50;</div><div class="line">int data[maxn],num[maxn],mark[maxn],pos[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n,m;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0&amp;&amp;m==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		memset(pos,-1,sizeof(pos));</div><div class="line">		memset(mark,0,sizeof(mark));</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)        //在输入数据的同时用pos数组算出每个数字第一次出现的位置</div><div class="line">		&#123;	</div><div class="line">			cin&gt;&gt;data[i];</div><div class="line">			<span class="keyword">if</span>(pos[data[i]]==-1)</div><div class="line">				pos[data[i]]=i;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)        //对于每次询问 r，l，num一定要初始化</div><div class="line">		&#123;</div><div class="line">			int r=-1,l=n;</div><div class="line">			memset(num,0,sizeof(num));</div><div class="line">			int que_num;</div><div class="line">			cin&gt;&gt;que_num;</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;que_num;j++)</div><div class="line">			&#123;</div><div class="line">				int q;</div><div class="line">				cin&gt;&gt;q;</div><div class="line">				mark[q]=i;           //询问的数字用mark来与未询问的数字区别开</div><div class="line">				<span class="keyword">if</span>(pos[q]&gt;r)         //根据pos与r，l的关系求出第一个最基本的包含询问值的区间</div><div class="line">					r=pos[q];</div><div class="line">				<span class="keyword">if</span>(pos[q]&lt;l)</div><div class="line">					l=pos[q];</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">for</span>(int j=l;j&lt;=r;j++)     //用num数组保存这个最基本区间中每个数字出现的次数</div><div class="line">				num[data[j]]++;</div><div class="line">			int maxlen=r<span class="_">-l</span>+1;         //最基本区间的大小</div><div class="line">			<span class="keyword">while</span>(r&lt;n)                //贪心 向右不停的遍历l 同时维护r 使整个区间内仍满足存在m个访问数</div><div class="line">			&#123;</div><div class="line">				num[data[l]]--;</div><div class="line">				<span class="keyword">if</span>(num[data[l]]==0)           //若某个减少到0 那么l右移 同时维护r 同时右移</div><div class="line">				&#123;</div><div class="line">					<span class="keyword">while</span>(++r&lt;n&amp;&amp;data[l]!=data[r])         //只要r处的值不等于原来l处的值 一直右移 同时此区间数字的个数+1</div><div class="line">						num[data[r]]++;</div><div class="line">					num[data[r]]=1;                  //直到找到l处删减的数字 该数字初始化为1</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">while</span>(++l&lt;=r&amp;&amp;mark[data[l]]!=i);       //l右移时候通过mark数组直接访问下一个需要查询的数字 跳过无需查询的数字</div><div class="line">				<span class="keyword">if</span>(r&lt;n&amp;&amp;r<span class="_">-l</span>+1&lt;maxlen)            //若此时的区间小于maxlen 更新maxlen</div><div class="line">					maxlen=r<span class="_">-l</span>+1;                 </div><div class="line">			&#125;                                    //整个过程需满足r＜n l≤r</div><div class="line">			cout&lt;&lt;maxlen&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="广工业新生赛E-穷游中国在统题"><a href="#广工业新生赛E-穷游中国在统题" class="headerlink" title="广工业新生赛E-穷游中国在统题"></a>广工业新生赛E-穷游中国在统题</h2><p> <strong>Problem Description</strong><br>Travel_poorly队是广工大目前最年轻的金牌队伍，队内成员分别是tmk、YFQ、Maple。这天他们接到教练的order要给新生杯统题，统题是个不轻松的工作,<br>要评估各个题目的难度，设计出一套有梯度的套题，使得做题的情况有区分度。tmk很快想出了解决的办法，他给每道题目都设置了一个难度值，然后按照<br>难度值进行筛选题目，这时候他发现难度值刚开始有可能是无序的，于是他决定要让全部题目都按照难度值从小到大排好序。 这时候YFQ说让他来排序，<br>排序是一个展现算法魅力的过程，他要通过一种有趣的方法来给题目的难度值排序： 首先他把题目划分成很多组，每组的题目都是连续的，例如某一组包<br>含从i到j的题目，那么这一组包含的是第i，i+1，i+2，i+3，…，j题。 这样每道题都属于某一个组，然后他再到组内把题目按照难度值进行从小到大排<br>序。 当每个组内都进行排序之后，最终全部题目的难度值将按照从小到大的顺序排列好。 我们知道每一组里面的题目越多，排序的压力就越大，所以<br>Maple提出一个合理的要求，就是让每个组里面的题目数量尽可能的少，聪明的ACMer，你知道Travel_poorly一共要分出多少个组吗？</p>
<p><strong>Input</strong><br>第一行是一个整数t ( t&lt;= 10 )，表示有t组数据。在每组数据中： 第一行是一个整数n ( n&lt;=1000 00 )，表示题目的总数； 第二行是n个整数A1,A2,A3<br>…An ( 0&lt;=Ai&lt;= 1000 000 000)，表示每道题目的难度值</p>
<p><strong>Output</strong><br>对于每组数据，输出一个正整数，表示一共要分出多少个组能满足Travel_poorly的要求，每两组样例之间输出一个空行。</p>
<p><strong>Sample Input</strong><br>2<br>5<br>3 2 5 4 6<br>5<br>5 4 3 2 1</p>
<p><strong>Sample Output</strong><br>3</p>
<p>1</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;cstring&gt;</span></div><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include &lt;climits&gt;</span></div><div class="line">using namespace std;</div><div class="line">int num[1111111];</div><div class="line">int f[1111111];</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int x,id;</div><div class="line">&#125;a[1111111];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int T,n;</div><div class="line">	cin&gt;&gt;T;</div><div class="line">	<span class="keyword">while</span>(T--)</div><div class="line">	&#123;</div><div class="line">		memset(f,0,sizeof(f));</div><div class="line">		memset(num,0,sizeof(num));</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;num[i]);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			a[i].x=num[i];</div><div class="line">			a[i].id=i;</div><div class="line">		&#125;</div><div class="line">		f[n]=num[n];</div><div class="line">		<span class="keyword">for</span>(int i=n-1;i&gt;=1;i--)    //通过遍历数组实现f存放窗为2的最小值</div><div class="line">		&#123;                          //数组f最后一位存放的是最后一个数字</div><div class="line">			f[i]=num[i];</div><div class="line">			f[i]=min(f[i],f[i+1]);</div><div class="line">		&#125;	</div><div class="line">		int ans=1,mx=-INT_MAX;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)       //同时mx求出前i个数字的最大值</div><div class="line">		&#123;</div><div class="line">            mx=max(mx,num[i]);</div><div class="line">			/*cout&lt;&lt;mx&lt;&lt;endl;*/</div><div class="line">            <span class="keyword">if</span>(f[i+1]&gt;=mx) ans++;    //若前i个数的最大值小于后2个数（窗为2 f数组已计算）的最小值</div><div class="line">        &#125;                            //说明这2个区间不可能合并 为了使每个区间尽可能小 需要把这2个区间分开 ans++</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">		<span class="keyword">if</span>(T!=0)puts(<span class="string">""</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="简单图解"><a href="#简单图解" class="headerlink" title="简单图解"></a>简单图解</h3><p>以第一个输入为例（3 2 5 4 6）<br>（3）（2 5）4 6<br>max=3 min=5<br>（3 2）|（5 4）6<br>max=3   min=4     说明两区间不可能合并 ans++<br>（3 2 5）（4 6）<br>max=5     min=4<br>（3 2|5 4）| 6<br>max=5      min=6   说明前区间和6不可能合并 ans++</p>
<h2 id="HDU-2476"><a href="#HDU-2476" class="headerlink" title="HDU 2476"></a>HDU 2476</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620466149.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620466205.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620466242.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620466281.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620466315.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>区间dp<br>每次可以把一个区间内的字母统一更新为新的字母 问最少经过多少次更新上式可以变为下式</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">int dp[150][150],ans[150];     //dp[i][j]表示区间i-j刷的方法数</div><div class="line">string s1,s2;                  //ans表示0到len-1的方法数</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;s1&gt;&gt;s2)</div><div class="line">	&#123;</div><div class="line">		memset(dp,0,sizeof(dp));</div><div class="line">		int len=s1.size();</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;len;j++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span>(int i=j;i&gt;=0;i--)        //区间i到j</div><div class="line">			&#123;</div><div class="line">				dp[i][j]=dp[i+1][j]+1;    //先每个单独刷 初始化</div><div class="line">				<span class="keyword">for</span>(int k=i+1;k&lt;=j;k++)</div><div class="line">				&#123;</div><div class="line">					<span class="keyword">if</span>(s2[k]==s2[i])      //若k与i处的值相等 把区间s2分成两个部分预处理</div><div class="line">						dp[i][j]=min(dp[i][j],dp[i+1][k]+dp[k+1][j]);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;len;i++)          //根据ans的定义把ans初始化</div><div class="line">			ans[i]=dp[0][i];</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;len;j++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(s1[j]==s2[j])           //如果某个位置s1和s2相等 那么该位置不用刷 等于上一位置j-1的值</div><div class="line">				ans[j]=ans[j-1];</div><div class="line">			<span class="keyword">else</span>                       //若不相等 利用区间分割 分别求0-i i+1-j的和</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">for</span>(int i=0;i&lt;j;i++)</div><div class="line">					ans[j]=min(ans[j],(ans[i]+dp[i+1][j]));</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans[len-1]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="POJ-1328"><a href="#POJ-1328" class="headerlink" title="POJ 1328"></a>POJ 1328</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620480478.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620480532.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620480569.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620480609.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620480645.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>x轴上方是海 下方是陆地 给出一些点的坐标代表岛屿 问在陆地上最少需要建造多少半径已给出的雷达可以覆盖所有的岛屿</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;math.h&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#define maxn 1005</span></div><div class="line">using namespace std;</div><div class="line">struct Node</div><div class="line">&#123;</div><div class="line">	<span class="built_in">float</span> a,b;</div><div class="line">&#125;node[maxn];</div><div class="line">bool cmp(Node x,Node y)       //贪心左端点</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> x.a&lt;y.a;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n;</div><div class="line">	<span class="built_in">float</span> r;</div><div class="line">	int count=1;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;r)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0&amp;&amp;r==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		int flag=0;</div><div class="line">		/*<span class="keyword">if</span>(r&lt;0)              //亲测 不需要判断半径是否小于0 仍可AC</div><div class="line">			flag=1;*/</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">float</span> x,y;        //圆的坐标 半径用<span class="built_in">float</span>或double</div><div class="line">			cin&gt;&gt;x&gt;&gt;y;</div><div class="line">			<span class="keyword">if</span>(abs(y)&gt;r)      //只要有一个圆与x轴无交点 输出-1</div><div class="line">				flag=1;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				node[i].a=-sqrt(r*r-y*y)+x;   //保存圆与x轴的左右交点</div><div class="line">				node[i].b=sqrt(r*r-y*y)+x;</div><div class="line">			&#125;</div><div class="line">			/*cout&lt;&lt;node[i].a&lt;&lt;<span class="string">" "</span>&lt;&lt;node[i].b&lt;&lt;endl;*/</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;count++&lt;&lt;<span class="string">": "</span>;</div><div class="line">		<span class="keyword">if</span>(flag==1)</div><div class="line">		&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		sort(node,node+n,cmp);</div><div class="line">		int ans=1;</div><div class="line">		<span class="built_in">float</span> <span class="built_in">limit</span>=node[0].b;    //注意：中间值一定不能写成int WA数次</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(node[i].a&gt;<span class="built_in">limit</span>)        //若两区间无交点 需+1 右上限更新</div><div class="line">			&#123;</div><div class="line">				ans++;</div><div class="line">				<span class="built_in">limit</span>=node[i].b;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(node[i].b&lt;<span class="built_in">limit</span>)      //若新区间的右上限小于旧区间的右上限 更新<span class="built_in">limit</span></div><div class="line">				<span class="built_in">limit</span>=node[i].b;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="POJ-3485"><a href="#POJ-3485" class="headerlink" title="POJ 3485"></a>POJ 3485</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620502602.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620502649.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620502685.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620502725.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620502762.png" alt=""></p>
<h3 id="题目要去"><a href="#题目要去" class="headerlink" title="题目要去"></a>题目要去</h3><p>与上题类似 在上题的基础上给定的道路有上限 为0-t 在考虑圆与x轴的交点时预处理下即可</p>
<h3 id="参考AC代码-6"><a href="#参考AC代码-6" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;math.h&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct Node</div><div class="line">&#123;</div><div class="line">	double a,b;</div><div class="line">&#125;node[10050];</div><div class="line">bool cmp(Node x,Node y)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(x.b==y.b)</div><div class="line">		<span class="built_in">return</span> x.a&gt;y.a;</div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="built_in">return</span> x.b&lt;y.b;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	double l;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;l)</div><div class="line">	&#123;</div><div class="line">		double r;</div><div class="line">		cin&gt;&gt;r;</div><div class="line">		int n;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		int flag=0;</div><div class="line">		<span class="keyword">if</span>(l&lt;=0||r&lt;=0)</div><div class="line">			flag=1;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			double x,y;</div><div class="line">			cin&gt;&gt;x&gt;&gt;y;</div><div class="line">			<span class="keyword">if</span>(y-r&gt;0)</div><div class="line">				flag=1;</div><div class="line">			node[i].a=x-sqrt(r*r-y*y);</div><div class="line">			<span class="keyword">if</span>(node[i].a&lt;0)             //与上题类似 只需注意区间范围在0<span class="_">-l</span> 若超出范围 更新为上下界</div><div class="line">				node[i].a=0;</div><div class="line">			node[i].b=x+sqrt(r*r-y*y);</div><div class="line">			<span class="keyword">if</span>(node[i].b&gt;l)</div><div class="line">				node[i].b=l;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(flag==1)</div><div class="line">		&#123;</div><div class="line">			cout&lt;&lt;<span class="string">'0'</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		sort(node,node+n,cmp);</div><div class="line">		int ans=1;</div><div class="line">		double <span class="built_in">limit</span>=node[0].b;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(node[i].a&gt;<span class="built_in">limit</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">limit</span>=node[i].b;</div><div class="line">				ans++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="与上题对比"><a href="#与上题对比" class="headerlink" title="与上题对比"></a>与上题对比</h3><p>都是同一类区间重复问题<br>但是采用的分别是对左端点排序和右端点排序的两种方法<br>若对左端点排序 那么for循环里需要进行两步判断<br>若对右端点排序 那么for循环里只需要一步判断即可</p>
<h2 id="POJ-2376"><a href="#POJ-2376" class="headerlink" title="POJ 2376"></a>POJ 2376</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620544338.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620544385.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620544425.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14862054446.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148620544495.png" alt=""></p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>区间覆盖问题 给定一个大区间和若干小区间 求用最少数量的小区间把大区间覆盖 若不能覆盖输出-1</p>
<h3 id="参考AC代码-7"><a href="#参考AC代码-7" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct Node</div><div class="line">&#123;</div><div class="line">	int a,b;</div><div class="line">&#125;node[25555];</div><div class="line">bool cmp(Node x,Node y)    //优先左端点升序排列</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(x.a==y.a)</div><div class="line">		<span class="built_in">return</span> x.b&gt;y.b;</div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="built_in">return</span> x.a&lt;y.a;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	int n,t;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;t)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;node[i].a&gt;&gt;node[i].b;</div><div class="line">			<span class="keyword">if</span>(node[i].a&lt;1)           //预处理 所有不在1-t的范围都应更新到这个范围内</div><div class="line">				node[i].a=1;</div><div class="line">			<span class="keyword">if</span>(node[i].b&gt;t)</div><div class="line">				node[i].b=t;</div><div class="line">		&#125;</div><div class="line">		sort(node,node+n,cmp);</div><div class="line">		int ans=1;</div><div class="line">		<span class="keyword">if</span>(node[0].a&gt;1)                //若第一个区间的起点不是1 那么输出-1 后面的起点一定大于1</div><div class="line">		&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		int id=0;                   //id相当于主区间 后面所有合理的区间都与他比较 id每次都是跳到下一个最远区间的位置</div><div class="line">		<span class="keyword">for</span>(int i = 0; i &lt; n; )</div><div class="line">		&#123;  </div><div class="line">			int cnt = 0;            //cnt用来记录每一轮与主区间比较时最远区间的位置</div><div class="line">			<span class="keyword">for</span>(int j = i + 1; j &lt; n; ++j)</div><div class="line">			&#123;  </div><div class="line">				<span class="keyword">if</span>(node[j].a &gt; node[id].b + 1)     //若存在区间的左端点比上一个区间的右端点+1还要大 直接<span class="built_in">break</span> 后面的区间由于左端点排过序 都不满足</div><div class="line">					<span class="built_in">break</span>;                         //本题需注意1-5 6-10也是合理的区间</div><div class="line">				<span class="keyword">if</span>(node[j].b &gt;= node[id].b + 1)    //每次要比较的区间的右端点需要比主区间的右端点大至少1 才能满足这次的更新有意义（至少后移1）</div><div class="line">				&#123;  </div><div class="line">					<span class="keyword">if</span>(node[j].b &gt; node[cnt].b)    //满足上述条件后找出所有满足该条件的走的最远的位置 置为cnt</div><div class="line">						cnt = j;                   //cnt置0可以使主区间更新后的下一个满足上述条件的区间作为最大值的区间 置为cnt</div><div class="line">				&#125;                                  </div><div class="line">			&#125;  </div><div class="line">			<span class="keyword">if</span>(cnt == 0)                           //若cnt==0说明该区间被主区间所包含 此区间不要 i++</div><div class="line">				i++;   </div><div class="line">			<span class="keyword">else</span>                                   //若找到了最远的区间 ans++ id和i直接跳到最远区间的位置 以此为基准开始做后面区间的判断</div><div class="line">			&#123;  </div><div class="line">				id = cnt;  </div><div class="line">				ans++;  </div><div class="line">				i = id;  </div><div class="line">			&#125;  </div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(node[id].b==t)      //走到最后的右区间达到t 满足输出ans</div><div class="line">			cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span>                  //未到达说明不满足输出-1</div><div class="line">			cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p>本人对for循环主体做了微调 但却超时<br>调整再与cnt不用每次更新 而是等于i 这样每次在进行下一轮比较时候初始化最大区间就是自己 if语句里需改成cnt==i<br>同时也不需要两步if叠加 值需要下一部即可 给出代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">int id=0,cnt=0;                   </div><div class="line">		<span class="keyword">for</span>(int i = 0; i &lt; n; )</div><div class="line">		&#123;           </div><div class="line">			<span class="keyword">for</span>(int j = i + 1; j &lt; n; ++j)</div><div class="line">			&#123;  </div><div class="line">				<span class="keyword">if</span>(node[j].a &gt; node[id].b + 1)     </div><div class="line">					<span class="built_in">break</span>;                         </div><div class="line">				<span class="keyword">if</span>(node[j].b &gt; node[cnt].b)    </div><div class="line">					cnt = j;                                                  </div><div class="line">			&#125;  </div><div class="line">			<span class="keyword">if</span>(cnt == i)                           </div><div class="line">				i++;   </div><div class="line">			<span class="keyword">else</span>                                  </div><div class="line">			&#123;  </div><div class="line">				id = cnt;  </div><div class="line">				ans++;  </div><div class="line">				i = id;  </div><div class="line">			&#125;  </div><div class="line">		&#125;</div></pre></td></tr></table></figure></p>
<p>但却超时 所以提供的代码还是每轮cnt=0的情况</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[欧拉通路 回路]]></title>
      <url>http://xuboming8.github.io/2017/02/01/%E6%AC%A7%E6%8B%89%E9%80%9A%E8%B7%AF-%E5%9B%9E%E8%B7%AF/</url>
      <content type="html"><![CDATA[<h1 id="欧拉回路"><a href="#欧拉回路" class="headerlink" title="欧拉回路"></a>欧拉回路</h1><h2 id="知识点详解"><a href="#知识点详解" class="headerlink" title="知识点详解"></a>知识点详解</h2><p><strong>欧拉通路</strong>: 通过图中每条边且只通过一次，并且经过每一顶点的通路<br><strong>欧拉回路</strong>: 通过图中每条边且只通过一次，并且经过每一顶点的回路<br><strong>有向图的基图</strong>：忽略有向图所有边的方向，得到的无向图称为该有向图的基图。<br><a id="more"></a><br><strong>无向图</strong><br>（1）设G是连通无向图，则称经过G的每条边一次并且仅一次的路径为<strong>欧拉通路</strong>；<br>（2）如果欧拉通路是回路（起点和终点是同一个顶点），则称此回路是<strong>欧拉回路</strong><br>（2）具有欧拉回路的无向图G成为<strong>欧拉图</strong><br><strong>有向图</strong><br>（1）设D是有向图，D的基图连通，则称经过D的每条边一次并且仅有一次的有向路径为<strong>有向欧拉通路</strong><br>（2）如果有向欧拉通路是有向回路，则称此有向回路为<strong>有向欧拉回路</strong><br>（3）具有有向欧拉回路的图D称为<strong>有向欧拉图</strong></p>
<h2 id="定理-amp-推论"><a href="#定理-amp-推论" class="headerlink" title="定理&amp;推论"></a>定理&amp;推论</h2><p><strong>无向图</strong><br><strong>定理</strong><br>　　无向图G存在欧拉通路的充要条件是：G为连通图，并且G仅有两个奇度结点（度数为奇数的顶点）或者无奇度结点。<br><strong>推论</strong><br>（1） 当G是仅有两个奇度结点的连通图时，G的欧拉通路必以此两个结点为端点；<br>（2）当G是无奇度结点的连通图时，G必有欧拉回路<br>（3）G为欧拉图（存在欧拉回路）的充分必要条件是  G为无奇度结点的连通图</p>
<p><strong>有向图</strong><br><strong>定理</strong><br>有向图D存在欧拉通路的充要条件是：D为有向图，D的基图连通，并且所有顶点的出度与入度相等；或者  除两个顶点外，其余顶点的出度与入度都相等<br>，而这两个顶点中一个顶点的出度与入度之差为1，另一个顶点的出度与入度之差为-1.<br><strong>推论</strong><br>（1）当D除出、入度之差为1，-1的两个顶点之外，其余顶点的出度与入度相等时，D的有向欧拉通路必以出、入度之差为1的顶点作为始点，以出、入度之差为-1的顶点作为终点。<br>（2）当D的所有顶点的出、入度都相等时，D中存在有向欧拉回路。<br>（3）有向图D为有向欧拉图的充要条件是  D的基图为连通图，并且所有顶点的出、入度都相等。</p>
<h2 id="欧拉回路求解"><a href="#欧拉回路求解" class="headerlink" title="欧拉回路求解"></a>欧拉回路求解</h2><p>（1）DFS<br>DFS搜索 思想求解欧拉回路的思路为：利用欧拉定理判断出一个图存在欧拉通路或欧拉回路后，选择一个正确的起始顶点，用DFS算法遍历所有的边<br>（每条边只遍历一次），遇到走不通就回退。在搜索前进方向上将遍历过的边按顺序记录下来。这组边的排列就组成了一条欧拉通路或回路。<br>（2）Fleury（佛罗莱算法）<br>设G为一个无向欧拉图，求G中一条欧拉回路的算法如下：<br>1 ）<br>任取G中一顶点v0，令P0=v0；<br>2）<br>假设沿Pi=v0e1v1e2v2……eivi走到顶点vi，按下面方法从E(G)-{e1,e2,…,ei}中选ei+1。<br>ei+1与vi相关联<br>除非无别的边可供选择，否则ei+1不应该是Gi=G-{e1,e2,…,ei}中的桥。<br>3）<br>当2）不能再进行时算法停止。<br>可以证明的是，当算法停止时，所得到的简单回路Pm=v0e1v1e2v2……emvm，（vm=v0）为G中一条欧拉回路。</p>
<h2 id="欧拉回路判定例题"><a href="#欧拉回路判定例题" class="headerlink" title="欧拉回路判定例题"></a>欧拉回路判定例题</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>判定一个图是否是欧拉回路<br>在联通图的基础上判断每个点的度即可</p>
<h3 id="参考代码-HDU-1878"><a href="#参考代码-HDU-1878" class="headerlink" title="参考代码(HDU 1878)"></a>参考代码(HDU 1878)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line">using namespace std;</div><div class="line">int n,m;    //n:点  m:边</div><div class="line">vector&lt;int&gt;e[1050];</div><div class="line">int count;</div><div class="line">int vis[1050],num;</div><div class="line">void dfs(int x)</div><div class="line">&#123;</div><div class="line">	vis[x]=1;</div><div class="line">	num++;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[x].size();i++)</div><div class="line">		<span class="keyword">if</span>(!vis[e[x][i]])</div><div class="line">			dfs(e[x][i]);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	/*freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);*/</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			e[i].clear();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v;</div><div class="line">			e[u].push_back(v);</div><div class="line">			e[v].push_back(u);</div><div class="line">		&#125;</div><div class="line">		memset(vis,0,sizeof(vis));</div><div class="line">		num=0,count=0;</div><div class="line">		dfs(1);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">if</span>(e[i].size()&amp;1)</div><div class="line">				count++;</div><div class="line">		<span class="keyword">if</span>(num==n)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(count==0)</div><div class="line">				cout&lt;&lt;<span class="string">"1"</span>&lt;&lt;endl;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				cout&lt;&lt;<span class="string">"0"</span>&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"0"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>无向图：<br>欧拉回路需满足两个条件：连通性+无奇度结点<br>若题目改为欧拉通路 则需要满足：连通性+无奇度结点或有两个奇度结点</p>
<h2 id="欧拉回路的顺序求解"><a href="#欧拉回路的顺序求解" class="headerlink" title="欧拉回路的顺序求解"></a>欧拉回路的顺序求解</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>求出任一个欧拉回路的顺序<br>使用Fleury模版</p>
<h3 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;stack&gt;</span></div><div class="line">using namespace std;</div><div class="line">int n,m;         //n:点  m:边</div><div class="line">int e[5050][5050];</div><div class="line">int degree[5050],count;</div><div class="line">stack&lt;int&gt;s;</div><div class="line">void dfs(int x)</div><div class="line">&#123;</div><div class="line">	s.push(x);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(e[x][i]==1)</div><div class="line">		&#123;</div><div class="line">			e[x][i]=e[i][x]=0;</div><div class="line">			dfs(i);</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void Fleury(int x)</div><div class="line">&#123;</div><div class="line">	s.push(x);</div><div class="line">	<span class="keyword">while</span>(!s.empty())</div><div class="line">	&#123;</div><div class="line">		int flag=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(e[x][i]==1)</div><div class="line">			&#123;</div><div class="line">				flag=1;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(flag==0)</div><div class="line">		&#123;</div><div class="line">			cout&lt;&lt;s.top();</div><div class="line">			s.pop();</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			int y=s.top();</div><div class="line">			s.pop();</div><div class="line">			dfs(y);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		int flag=1;</div><div class="line">		memset(e,0,sizeof(e));</div><div class="line">		memset(degree,0,sizeof(degree));</div><div class="line">		<span class="keyword">while</span>(!s.empty())</div><div class="line">			s.pop();</div><div class="line">		count=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v;</div><div class="line">			e[u][v]=e[v][u]=1;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(e[i][j]==1)</div><div class="line">					degree[j]++;</div><div class="line">			&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">if</span>(degree[i]&amp;1)</div><div class="line">			&#123;</div><div class="line">				count++;</div><div class="line">				flag=i;</div><div class="line">			&#125;</div><div class="line">		<span class="keyword">if</span>(count==0||count==2)</div><div class="line">			Fleury(flag);</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"No Euler Path"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="有向欧拉回路的裸搜（POJ-2230）"><a href="#有向欧拉回路的裸搜（POJ-2230）" class="headerlink" title="有向欧拉回路的裸搜（POJ 2230）"></a>有向欧拉回路的裸搜（POJ 2230）</h2><h3 id="参考代码-1"><a href="#参考代码-1" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#define maxn 50000+50</span></div><div class="line">using namespace std;</div><div class="line">int n,m;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int v,vis;</div><div class="line">	node(int v,int vis):v(v),vis(vis)&#123;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;e[maxn];</div><div class="line">void dfs(int x)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[x].size();i++)</div><div class="line">		<span class="keyword">if</span>(!e[x][i].vis)</div><div class="line">		&#123;</div><div class="line">			e[x][i].vis=1;</div><div class="line">			dfs(e[x][i].v);</div><div class="line">		&#125;</div><div class="line">	cout&lt;&lt;x&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	//freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			e[i].clear();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v;</div><div class="line">			e[u].push_back(node(v,0));</div><div class="line">			e[v].push_back(node(u,0));</div><div class="line">		&#125;</div><div class="line">		dfs(1);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="简单欧拉路判定-POJ-1300"><a href="#简单欧拉路判定-POJ-1300" class="headerlink" title="简单欧拉路判定(POJ 1300)"></a>简单欧拉路判定(POJ 1300)</h2><h3 id="参考代码-2"><a href="#参考代码-2" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;string&gt;</span></div><div class="line">using namespace std;</div><div class="line">int door[105];</div><div class="line">string s1;</div><div class="line">char s2[1050],s3[1050];</div><div class="line">int m,n;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;s1)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(s1==<span class="string">"ENDOFINPUT"</span>)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		cin&gt;&gt;m&gt;&gt;n;</div><div class="line">		getchar();</div><div class="line">		int cnt=0;</div><div class="line">		memset(door,0,sizeof(door));</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			gets(s2);</div><div class="line">			int len=strlen(s2);</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;len;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(s2[j]!=<span class="string">' '</span>)</div><div class="line">				&#123;</div><div class="line">					int d=s2[j]-<span class="string">'0'</span>;</div><div class="line">					cnt++;</div><div class="line">					door[i]++;</div><div class="line">					door[d]++;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		gets(s3);</div><div class="line">		int count=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			<span class="keyword">if</span>(door[i]&amp;1)</div><div class="line">				count++;</div><div class="line">		<span class="keyword">if</span>(count==0&amp;&amp;m==0)</div><div class="line">			cout&lt;&lt;<span class="string">"YES "</span>&lt;&lt;cnt&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(count==2&amp;&amp;m!=0)</div><div class="line">			cout&lt;&lt;<span class="string">"YES "</span>&lt;&lt;cnt&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>若是欧拉回路 无奇度点<br>若是欧拉通路非回路 有两个奇度点<br>本题的cnt需要每加一条边时+1</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[图论基础杂选]]></title>
      <url>http://xuboming8.github.io/2017/01/31/%E5%9B%BE%E8%AE%BA%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<h1 id="图论基础杂选"><a href="#图论基础杂选" class="headerlink" title="图论基础杂选"></a>图论基础杂选</h1><h2 id="UVA-816"><a href="#UVA-816" class="headerlink" title="UVA 816"></a>UVA 816</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>在普通的迷宫问题上加入了转弯转向的问题 特定的位置只能在特定的转向里选择</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#include&lt;queue&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct Node </div><div class="line">&#123;</div><div class="line">  int r, c, dir; // 位于(r,c)朝向dir(0~3表示四个方向N, E, S, W)</div><div class="line">  Node(int r=0, int c=0, int dir=0):r(r),c(c),dir(dir) &#123;&#125;</div><div class="line">&#125;;</div><div class="line">const int maxn = 10;</div><div class="line">const char* <span class="built_in">dirs</span> = <span class="string">"NESW"</span>; // 顺时针旋转。 </div><div class="line">const char* turns = <span class="string">"FLR"</span>;//“三种转弯方式”。 </div><div class="line">int has_edge[maxn][maxn][4][3];// 表示当前状态（r，c，dir），是否可以沿着转弯方向[trun]行走。 </div><div class="line">int d[maxn][maxn][4];          //表示初始状态到（r，c，dir）的最短路长度。 </div><div class="line">Node p[maxn][maxn][4];          //同时用p[r][c][dir]保存了状态(r, c, dir)在BFS树中的父结点。 </div><div class="line">int r0, c0, dir, r1, c1, r2, c2;</div><div class="line">//把四个方向和3种“转弯方式”编号0~3和0~2. </div><div class="line">int dir_id(char c) &#123; <span class="built_in">return</span> strchr(<span class="built_in">dirs</span>, c) - <span class="built_in">dirs</span>; &#125;</div><div class="line">int turn_id(char c) &#123; <span class="built_in">return</span> strchr(turns, c) - turns; &#125;</div><div class="line">//用于转弯。 </div><div class="line">const int dr[] = &#123;-1, 0, 1, 0&#125;;</div><div class="line">const int dc[] = &#123;0, 1, 0, -1&#125;;</div><div class="line">Node walk(const Node&amp; u, int turn) </div><div class="line">&#123; </div><div class="line">  int dir = u.dir;                    //直行， 方向不变 </div><div class="line">  <span class="keyword">if</span>(turn == 1) dir = (dir + 3) % 4; // 逆时针 ，转向 </div><div class="line">  <span class="keyword">if</span>(turn == 2) dir = (dir + 1) % 4; // 顺时针 ，转向 </div><div class="line">  <span class="built_in">return</span> Node(u.r + dr[dir], u.c + dc[dir], dir);//下一步可能的状态 </div><div class="line">&#125;</div><div class="line">//判断是否出界 </div><div class="line">bool inside(int r, int c) </div><div class="line">&#123;</div><div class="line">  <span class="built_in">return</span> r &gt;= 1 &amp;&amp; r &lt;= 9 &amp;&amp; c &gt;= 1 &amp;&amp; c &lt;= 9;</div><div class="line">&#125;</div><div class="line">//读取r0，c0，dir，并计算出r1，c1， 然后读入has_edge数组。 </div><div class="line">bool <span class="function"><span class="title">read_case</span></span>() </div><div class="line">&#123;</div><div class="line">  char s[99], s2[99];</div><div class="line">  <span class="keyword">if</span>(scanf(<span class="string">"%s%d%d%s%d%d"</span>, s, &amp;r0, &amp;c0, s2, &amp;r2, &amp;c2) != 6) </div><div class="line">	  <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">  <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s);</div><div class="line">  dir = dir_id(s2[0]);</div><div class="line">  r1 = r0 + dr[dir];</div><div class="line">  c1 = c0 + dc[dir];</div><div class="line">  memset(has_edge, 0, sizeof(has_edge));</div><div class="line">  <span class="keyword">for</span>(;;) </div><div class="line">  &#123;</div><div class="line">    int r, c;</div><div class="line">    scanf(<span class="string">"%d"</span>, &amp;r);</div><div class="line">    <span class="keyword">if</span>(r == 0)</div><div class="line">		<span class="built_in">break</span>;</div><div class="line">    scanf(<span class="string">"%d"</span>, &amp;c);</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%s"</span>, s) == 1 &amp;&amp; s[0] != <span class="string">'*'</span>) </div><div class="line">	&#123;</div><div class="line">      <span class="keyword">for</span>(int i = 1; i &lt; strlen(s); i++)</div><div class="line">        has_edge[r][c][dir_id(s[0])][turn_id(s[i])] = 1;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line">void print_ans(Node u)</div><div class="line">&#123;</div><div class="line">  // 从目标结点逆序追溯到初始结点。 </div><div class="line">  vector&lt;Node&gt; nodes;</div><div class="line">  <span class="keyword">for</span>(;;) </div><div class="line">  &#123;</div><div class="line">    nodes.push_back(u);</div><div class="line">    <span class="keyword">if</span>(d[u.r][u.c][u.dir] == 0)</div><div class="line">		<span class="built_in">break</span>;</div><div class="line">    u = p[u.r][u.c][u.dir];</div><div class="line">  &#125;</div><div class="line">  nodes.push_back(Node(r0, c0, dir));</div><div class="line">  //打印解， 每行 10 个。 </div><div class="line">  int cnt = 0;</div><div class="line">  <span class="keyword">for</span>(int i = nodes.size()-1; i &gt;= 0; i--) </div><div class="line">  &#123;</div><div class="line">    <span class="keyword">if</span>(cnt % 10 == 0)</div><div class="line">		<span class="built_in">printf</span>(<span class="string">" "</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">" (%d,%d)"</span>, nodes[i].r, nodes[i].c);</div><div class="line">    <span class="keyword">if</span>(++cnt % 10 == 0) </div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">if</span>(nodes.size() % 10 != 0)</div><div class="line">	  <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">//BFS主过程。 </div><div class="line">void <span class="function"><span class="title">solve</span></span>()</div><div class="line">&#123;</div><div class="line">  queue&lt;Node&gt; q;</div><div class="line">  memset(d, -1, sizeof(d));</div><div class="line">  Node u(r1, c1, dir);</div><div class="line">  d[u.r][u.c][u.dir] = 0;</div><div class="line">  q.push(u);</div><div class="line">  <span class="keyword">while</span>(!q.empty())</div><div class="line">  &#123;</div><div class="line">    Node u = q.front(); q.pop();</div><div class="line">    <span class="keyword">if</span>(u.r == r2 &amp;&amp; u.c == c2) </div><div class="line">	&#123; print_ans(u); <span class="built_in">return</span>; &#125;//到达目的地 </div><div class="line">    <span class="keyword">for</span>(int i = 0; i &lt; 3; i++) </div><div class="line">	&#123;//所有可能的转向，（直行，逆时针转， 顺时针转） </div><div class="line">      Node v = walk(u, i);      //下一步的状态 </div><div class="line">      <span class="keyword">if</span>(has_edge[u.r][u.c][u.dir][i] &amp;&amp; inside(v.r, v.c) &amp;&amp; d[v.r][v.c][v.dir] &lt; 0) &#123;//分别判断</div><div class="line">                //从这一步是否可以达到下一步，下一步是否出界， 下一步是否被走过（同方向）。 </div><div class="line">        d[v.r][v.c][v.dir] = d[u.r][u.c][u.dir] + 1;//最短长度加 1. </div><div class="line">        p[v.r][v.c][v.dir] = u;//记录父结点。 </div><div class="line">        q.push(v);  </div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="built_in">printf</span>(<span class="string">"  No Solution Possible\n"</span>);//走了所有可以走的可能， 无法到达终点。 </div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>() </div><div class="line">&#123;</div><div class="line">  <span class="keyword">while</span>(read_case())</div><div class="line">  &#123;</div><div class="line">    solve();</div><div class="line">  &#125;</div><div class="line">  <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>详见算法竞赛入门经典（二）P165-167</p>
<h2 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h2><h3 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#include&lt;queue&gt;</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;e[20];</div><div class="line">queue&lt;int&gt;q;</div><div class="line">int degree[10];</div><div class="line">int n;</div><div class="line">int u,v;</div><div class="line">void <span class="function"><span class="title">find_degree</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(degree,0,sizeof(degree));</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;e[i].size();j++)</div><div class="line">			degree[e[i][j]]++;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		cout&lt;&lt;i&lt;&lt;<span class="string">":"</span>&lt;&lt;degree[i]&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">toposort</span></span>()</div><div class="line">&#123;</div><div class="line">	int count=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		<span class="keyword">if</span>(degree[i]==0)</div><div class="line">			q.push(i);</div><div class="line">	<span class="keyword">while</span>(q.size())</div><div class="line">	&#123;</div><div class="line">		int id=q.front();</div><div class="line">		q.pop();</div><div class="line">		cout&lt;&lt;id&lt;&lt;<span class="string">" "</span>;</div><div class="line">		count++;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;e[id].size();i++)</div><div class="line">		&#123;</div><div class="line">			degree[e[id][i]]--;</div><div class="line">			<span class="keyword">if</span>(degree[e[id][i]]==0)</div><div class="line">				q.push(e[id][i]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	cout&lt;&lt;count&lt;&lt;endl;</div><div class="line">	<span class="keyword">if</span>(count&lt;n)</div><div class="line">		cout&lt;&lt;<span class="string">"do not exist toposort!"</span>&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">int main(int argc, char** argv)</div><div class="line">&#123;</div><div class="line">	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	cin&gt;&gt;n;</div><div class="line"> 	<span class="keyword">while</span>(cin&gt;&gt;u&gt;&gt;v)</div><div class="line">	&#123;</div><div class="line">		e[u].push_back(v);</div><div class="line">	&#125;</div><div class="line">	find_degree();</div><div class="line">	toposort();</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">//读入数据</div><div class="line">9</div><div class="line">1 3</div><div class="line">1 8</div><div class="line">2 5</div><div class="line">2 4</div><div class="line">2 3</div><div class="line">3 4</div><div class="line">4 6</div><div class="line">4 7</div><div class="line">5 6</div><div class="line">8 9</div><div class="line">9 7</div><div class="line">//若数据做如下修改 则输出不存在toposort</div><div class="line">9</div><div class="line">1 3</div><div class="line">1 8</div><div class="line">2 5</div><div class="line">2 4</div><div class="line">3 2</div><div class="line">4 3</div><div class="line">4 6</div><div class="line">4 7</div><div class="line">5 6</div><div class="line">8 9</div><div class="line">9 7</div></pre></td></tr></table></figure>
<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>toposort可用于检查所给图是否为有向无环图<br>只有有向无环图才能输出拓扑序列</p>
<h2 id="单向TSP问题–UVA-116"><a href="#单向TSP问题–UVA-116" class="headerlink" title="单向TSP问题–UVA 116"></a>单向TSP问题–UVA 116</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>给一个m行n列（m≤10，n≤100）的整数矩阵 从第一列任何位置出发每次往右 右上或右下走一格 最终达到最后一列。要求经过的整数之和最小<br>整个矩阵是环形的 即第一行的上一行是最后一行 最后一行的下一行是第一行 输出路径上每列的行号 多解时输出字典序最小的。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;  </span></div><div class="line"><span class="comment">#include &lt;cstdlib&gt;  </span></div><div class="line"><span class="comment">#include &lt;cstring&gt;  </span></div><div class="line"><span class="comment">#include &lt;cstdio&gt;  </span></div><div class="line">using namespace std;  </div><div class="line">int maps[11][101];  </div><div class="line">int smap[11][101];  </div><div class="line">int fath[11][101];  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">	int n,m;  </div><div class="line">	<span class="keyword">while</span> (~scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m)) </div><div class="line">	&#123;  </div><div class="line">		<span class="keyword">for</span> (int i = 1 ; i &lt;= n ; ++ i)  </div><div class="line">			<span class="keyword">for</span> (int j = 1 ; j &lt;= m ; ++ j)  </div><div class="line">				scanf(<span class="string">"%d"</span>,&amp;maps[i][j]);  </div><div class="line">		memset(smap, 0, sizeof(smap));  </div><div class="line">		<span class="keyword">for</span> (int i = m ; i &gt;= 1 ; -- i)  </div><div class="line">			<span class="keyword">for</span> (int j = 1 ; j &lt;= n ; ++ j)</div><div class="line">			&#123;  </div><div class="line">				smap[j][i] = smap[j][i+1]+maps[j][i];  </div><div class="line">				fath[j][i] = j;  </div><div class="line">				<span class="keyword">if</span> (j &gt; 1 &amp;&amp; smap[j][i] &gt;= smap[j-1][i+1]+maps[j][i]) </div><div class="line">				&#123;  </div><div class="line">					smap[j][i] = smap[j-1][i+1]+maps[j][i];  </div><div class="line">					fath[j][i] = j-1;  </div><div class="line">				&#125;  </div><div class="line">				<span class="keyword">if</span> (j == n &amp;&amp; smap[j][i] &gt;= smap[1][i+1]+maps[j][i])</div><div class="line">				&#123;  </div><div class="line">					smap[j][i] = smap[1][i+1]+maps[j][i];  </div><div class="line">					fath[j][i] = 1;  </div><div class="line">				&#125;  </div><div class="line"></div><div class="line">				<span class="keyword">if</span> (j &lt; n &amp;&amp; smap[j][i] &gt; smap[j+1][i+1]+maps[j][i]) </div><div class="line">				&#123;  </div><div class="line">					smap[j][i] = smap[j+1][i+1]+maps[j][i];  </div><div class="line">					fath[j][i] = j+1;  </div><div class="line">				&#125;  </div><div class="line">				<span class="keyword">if</span> (j == 1 &amp;&amp; smap[j][i] &gt; smap[n][i+1]+maps[j][i]) </div><div class="line">				&#123;  </div><div class="line">					smap[j][i] = smap[n][i+1]+maps[j][i];  </div><div class="line">					fath[j][i] = n;  </div><div class="line">				&#125;  </div><div class="line">			&#125;  </div><div class="line">			int spa = 1;  </div><div class="line">			<span class="keyword">for</span> (int i = 2 ; i &lt;= n ; ++ i)  </div><div class="line">				<span class="keyword">if</span> (smap[spa][1] &gt; smap[i][1])  </div><div class="line">					spa = i;  </div><div class="line">			int min = smap[spa][1];  </div><div class="line">			<span class="keyword">for</span> (int i = 1 ; i &lt;= m ; ++ i) </div><div class="line">			&#123;  </div><div class="line">				<span class="keyword">if</span> (i &lt; m) </div><div class="line">					<span class="built_in">printf</span>(<span class="string">"%d "</span>,spa);  </div><div class="line">				<span class="keyword">else</span> </div><div class="line">					<span class="built_in">printf</span>(<span class="string">"%d\n%d\n"</span>,spa,min);  </div><div class="line">				spa = fath[spa][i];  </div><div class="line">			&#125;  </div><div class="line">	&#125;  </div><div class="line">	<span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>dp，动态规划。因为要字典序最小，所以采用从右向左的方式dp；<br> 状态：f（i，j）表示走到（i，j）的最小和，则有转移方程：<br>f（i，j）= min（f（i+1，j+1），f（i，j+1），f（i-1，j+1））；<br>记录路径输出即可。<br>逆向dp保证字典序最小（后继最小），正向能保证每点前驱最小。<br>因为保证逆序 所以从最后一列开始往前推 fath继续前驱结点<br>最后找到第一列的最小元素 即为开头 利用fath数组正向输出即可</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[数位dp]]></title>
      <url>http://xuboming8.github.io/2017/01/26/%E6%95%B0%E4%BD%8Ddp/</url>
      <content type="html"><![CDATA[<h1 id="数位dp"><a href="#数位dp" class="headerlink" title="数位dp"></a>数位dp</h1><h2 id="windy数"><a href="#windy数" class="headerlink" title="windy数"></a>windy数</h2><p><strong>Problem Description</strong><br>windy定义了一种windy数。不含前导零且相邻两个数字之差至少为2的正整数被称为windy数。 windy想知道，<br>在A和B之间，包括A和B，总共有多少个windy数？</p>
<p><strong>Input</strong><br><a id="more"></a><br>包含两个整数，A B。</p>
<p><strong>Output</strong><br>一个整数</p>
<p><strong>Sample Input</strong><br>1 10<br>25 50</p>
<p><strong>Sample Output</strong><br>9<br>20</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;  </span></div><div class="line"><span class="comment">#include &lt;string.h&gt;  </span></div><div class="line"><span class="comment">#include &lt;math.h&gt;   </span></div><div class="line">using namespace std; </div><div class="line">int dp[11][10],A[10];    //dp[i][j]表示长度为i 最高位为j的windy数的个数</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(dp,0,sizeof(dp));</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=9;i++)   //dp[1][i]表示一位数字的windy数为1</div><div class="line">		dp[1][i]=1;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=10;i++)</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;=9;j++)</div><div class="line">			<span class="keyword">for</span>(int k=0;k&lt;=9;k++)</div><div class="line">				<span class="keyword">if</span>(abs(j-k)&gt;=2)</div><div class="line">					dp[i][j]+=dp[i-1][k];  //状态转移方程d[i][j]=∑d[i-1][k](0≤k≤9且|k-j|≥2)</div><div class="line">&#125;</div><div class="line">int sum(int a)</div><div class="line">&#123;</div><div class="line">	int m=0,ans=0;</div><div class="line">	<span class="keyword">while</span>(a)           //把大数变为数组存放</div><div class="line">	&#123;</div><div class="line">		A[m++]=a%10;</div><div class="line">		a/=10;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;m;i++)    //首先考虑位数小于m的情况</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=9;j++)</div><div class="line">			ans+=dp[i][j];</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;A[m-1];i++)   //其次考虑位数等于m 首位数字小于A[m-1]的情况</div><div class="line">		ans+=dp[m][i];</div><div class="line">	<span class="keyword">for</span>(int i=m-1;i&gt;=1;i--)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;A[i-1];j++)  //使用<span class="keyword">for</span>循环一位一位搜索 使用状态转移方程的思想</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(abs(j-A[i])&gt;=2)</div><div class="line">				ans+=dp[i][j];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(abs(A[i]-A[i-1])&lt;=1)    //如果开头两位不满足windy数的要求 那么已经不满足条件 退出</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int a,b;</div><div class="line">	init();</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;a&gt;&gt;b)</div><div class="line">	&#123;</div><div class="line">		cout&lt;&lt;sum(b+1)-sum(a)&lt;&lt;endl;    //此算法b并未考虑入内 所以带入的实参为b+1</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="递增数"><a href="#递增数" class="headerlink" title="递增数"></a>递增数</h2><h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">int dp[10][10],A[10];   //dp[i][j]表示长度为i 最高位为j的递增数个数</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(dp,0,sizeof(dp));</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=9;i++)</div><div class="line">		dp[1][i]=1;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=9;i++)</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;=9;j++)</div><div class="line">			<span class="keyword">for</span>(int k=j;k&lt;=9;k++)</div><div class="line">				dp[i][j]+=dp[i-1][k];</div><div class="line">&#125;</div><div class="line">int sum(int a)</div><div class="line">&#123;</div><div class="line">	int ans=0,m=0;</div><div class="line">	<span class="keyword">while</span>(a)</div><div class="line">	&#123;</div><div class="line">		A[m++]=a%10;</div><div class="line">		a/=10;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;m;i++)</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=9;j++)</div><div class="line">			ans+=dp[i][j];</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;A[m-1];i++)</div><div class="line">		ans+=dp[m][i];</div><div class="line">	<span class="keyword">for</span>(int i=m-1;i&gt;=1;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int j=A[i];j&lt;=A[i-1];j++)</div><div class="line">			ans+=dp[i][j];</div><div class="line">		<span class="keyword">if</span>(A[i]-A[i-1]&gt;0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	init();</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int x;</div><div class="line">		cin&gt;&gt;x;</div><div class="line">		cout&lt;&lt;sum(x+1)&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-2089-（不要62）"><a href="#HDU-2089-（不要62）" class="headerlink" title="HDU 2089 （不要62）"></a>HDU 2089 （不要62）</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148557863425.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148557863627.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148557863663.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148557863711.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148557863744.png" alt=""></p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">int dp[10][3],A[10];  //dp[i][j]表示长度为i的吉利数的状态</div><div class="line">//dp[i][0]:长为i的数字区间内全为吉利数字</div><div class="line">//dp[i][1]:长为i的数字区间内全为吉利数字 且最高位为2</div><div class="line">//dp[i][2]:长为i的数字区间内有非吉利数字</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(dp,0,sizeof(dp));</div><div class="line">	dp[0][0]=1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=6;i++)</div><div class="line">	&#123;</div><div class="line">		dp[i][0]=dp[i-1][0]*9-dp[i-1][1];    //首位可以取0~9中除了4的其余9种情况 减去首位为6 次位为2的情况</div><div class="line">		dp[i][1]=dp[i-1][0];      //首位为2 剩下i-1位满足是吉利数即可</div><div class="line">		dp[i][2]=dp[i-1][2]*10+dp[i-1][0]+dp[i-1][1];   //若后i-1位已经是非吉利数字 那么首位0~9均可取</div><div class="line">	&#125;				//再加上首位为4的情况和和首位为6 次位为的的情况</div><div class="line">&#125;</div><div class="line">int sum(int a)                           //求出非吉利数 再用a-求得的ans算出吉利数</div><div class="line">&#123; </div><div class="line">	int len=0,ans=0,temp=a;</div><div class="line">	int flag=0;</div><div class="line">	<span class="keyword">while</span>(a)</div><div class="line">	&#123;</div><div class="line">		A[++len]=a%10;</div><div class="line">		a/=10;</div><div class="line">	&#125;</div><div class="line">	A[len+1]=0;                           //最高位置0 用在第三个<span class="keyword">if</span>语句需要判断A[i+1]是否为6的情况</div><div class="line">	<span class="keyword">for</span>(int i=len;i&gt;=1;i--)</div><div class="line">	&#123;</div><div class="line">		ans+=dp[i-1][2]*A[i];             //首先加上后i-1位已经有非吉利数字 乘以A[i]的情况</div><div class="line">		<span class="keyword">if</span>(flag)                          //若已经是非吉利数字 加上后i-1位全是吉利数字的情况</div><div class="line">			ans+=dp[i-1][0]*A[i];</div><div class="line">		<span class="keyword">if</span>(!flag&amp;&amp;A[i]&gt;4)                 //首位若大于4 则可以取到4的情况</div><div class="line">			ans+=dp[i-1][0];</div><div class="line">		<span class="keyword">if</span>(!flag&amp;&amp;A[i+1]==6&amp;&amp;A[i]&gt;2)      //首位+1若等于6次位大于2 则可以取到62的情况</div><div class="line">			ans+=dp[i][1];</div><div class="line">		<span class="keyword">if</span>(!flag&amp;&amp;A[i]&gt;6)                 //首位若大于6 则可以取到6 进而可能取到62的情况</div><div class="line">			ans+=dp[i-1][1];</div><div class="line">		<span class="keyword">if</span>(A[i]==4||(A[i+1]==6&amp;&amp;A[i]==2))  //判断是否为非吉利数字</div><div class="line">			flag=1;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> temp-ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n,m;</div><div class="line">	init();</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0&amp;&amp;m==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		cout&lt;&lt;sum(m+1)-sum(n)&lt;&lt;endl;</div><div class="line">		//因为sum函数中并没有考虑a是不是不幸数的情况，所以m+1只算了1~m，而n只算了1~n-1</div><div class="line">		//这两者相减才是正确答案  </div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-3555"><a href="#HDU-3555" class="headerlink" title="HDU 3555"></a>HDU 3555</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148558611527.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148558611575.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148558611615.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148558611655.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148558611697.png" alt=""></p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">//思路与上题相似</div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">LL dp[25][3];</div><div class="line">int A[25];     </div><div class="line">//dp[i][0]表示长度为i 不含49的数字</div><div class="line">//dp[i][1]表示长度为i 不含49的数字 且最高位为9</div><div class="line">//dp[i][2]表示长度为i 含49的数字</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(dp,0,sizeof(dp));</div><div class="line">	dp[0][0]=1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=22;i++)</div><div class="line">	&#123;</div><div class="line">		dp[i][0]=dp[i-1][0]*10-dp[i-1][1];    </div><div class="line">		dp[i][1]=dp[i-1][0];</div><div class="line">		dp[i][2]=dp[i-1][2]*10+dp[i-1][1];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">LL sum(LL a)</div><div class="line">&#123;</div><div class="line">	int len=0,flag=0;</div><div class="line">	LL ans=0;</div><div class="line">	<span class="keyword">while</span>(a)</div><div class="line">	&#123;</div><div class="line">		A[++len]=a%10;</div><div class="line">		a/=10;</div><div class="line">	&#125;</div><div class="line">	A[len+1]=0;</div><div class="line">	<span class="keyword">for</span>(int i=len;i&gt;=1;i--)</div><div class="line">	&#123;</div><div class="line">		ans+=dp[i-1][2]*A[i];</div><div class="line">		<span class="keyword">if</span>(flag)</div><div class="line">			ans+=dp[i-1][0]*A[i];</div><div class="line">		<span class="keyword">if</span>(!flag&amp;&amp;A[i]&gt;4)</div><div class="line">			ans+=dp[i-1][1];</div><div class="line">		<span class="keyword">if</span>(A[i+1]==4&amp;&amp;A[i]==9)</div><div class="line">			flag=1;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	init();</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		LL x;</div><div class="line">		cin&gt;&gt;x;</div><div class="line">		cout&lt;&lt;sum(x+1)&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-3709"><a href="#HDU-3709" class="headerlink" title="HDU 3709"></a>HDU 3709</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14856144715.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14856144719.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148561447227.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14856144726.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148561447293.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>寻找平衡数 平衡数的概念是 寻找一个枢轴 枢轴左边的力矩（数字大小×该数距离枢轴的距离）与右边相等</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">int bit[20];</div><div class="line">LL dp[20][20][2005];   //dp[i][j][k]表示长为i 平衡点在j位置 k的力矩和</div><div class="line">LL dfs(int po,int o,int l,int <span class="built_in">limit</span>)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(po==-1)                               //po为-1 已经匹配结束 返回力矩和是否为0</div><div class="line">		<span class="built_in">return</span> l==0;</div><div class="line">	<span class="keyword">if</span>(l&lt;0)                                  //l&lt;0 说明后面已经不可能等于0 直接返回0 剪枝</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	<span class="keyword">if</span>(!<span class="built_in">limit</span>&amp;&amp;dp[po][o][l]!=-1)             //若未到上限且该状态已经访问过 直接返回dp存储的数字</div><div class="line">		<span class="built_in">return</span> dp[po][o][l];</div><div class="line">	int end=<span class="built_in">limit</span>?bit[po]:9;                 //若到达上限 end为bit存储的该位数字 后一位只能放≤它的数字</div><div class="line">	LL ans=0;                                //若未到上限 end取9 0~9均可取</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=end;i++)                  //每个po遍历所有≤end的数字</div><div class="line">	&#123;</div><div class="line">		int next=l;</div><div class="line">		next+=(po-o)*i;                      //计算力矩和</div><div class="line">		ans+=dfs(po-1,o,next,<span class="built_in">limit</span>&amp;&amp;i==end); //若i==end 则该位置到达上限</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(!<span class="built_in">limit</span>)                                //dp里存储的是所有未到上限的状态值</div><div class="line">		dp[po][o][l]=ans;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">LL sum(LL a)</div><div class="line">&#123;</div><div class="line">	int len=0;</div><div class="line">	LL ans=0;</div><div class="line">	<span class="keyword">while</span>(a)</div><div class="line">	&#123;</div><div class="line">		bit[len++]=a%10;</div><div class="line">		a/=10;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)</div><div class="line">		ans+=dfs(len-1,i,0,1);       //<span class="keyword">for</span>循环遍历所有平衡点</div><div class="line">	<span class="built_in">return</span> ans-(len-1);              //减去所有00，000···与0重复的情况</div><div class="line">&#125; </div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	memset(dp,-1,sizeof(dp));         //初始化-1</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		LL x,y;</div><div class="line">		cin&gt;&gt;x&gt;&gt;y;</div><div class="line">		cout&lt;&lt;sum(y)-sum(x-1)&lt;&lt;endl;   //此算法考虑的y本身的情况 所以不能用sum(y+1)-sum(x)</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="POJ-3252"><a href="#POJ-3252" class="headerlink" title="POJ 3252"></a>POJ 3252</h2><p><strong>Problem Description</strong><br>The cows, as you know, have no fingers or thumbs and thus are unable to play Scissors, Paper, Stone’ (also known as ‘Rock, Paper,<br>Scissors’, ‘Ro, Sham, Bo’, and a host of other names) in order to make arbitrary decisions such as who gets to be milked first.<br>They can’t even flip a coin because it’s so hard to toss using hooves.<br>They have thus resorted to “round number” matching. The first cow picks an integer less than two billion. The second cow does the<br>same. If the numbers are both “round numbers”, the first cow wins,<br>otherwise the second cow wins.<br>A positive integer N is said to be a “round number” if the binary representation of N has as many or more zeroes than it has ones.<br>For example, the integer 9, when written in binary form, is 1001. 1001 has two zeroes and two ones; thus, 9 is a round number.<br>The integer 26 is 11010 in binary; since it has two zeroes and three ones, it is not a round number.<br>Obviously, it takes cows a while to convert numbers to binary, so the winner takes a while to determine. Bessie wants to cheat<br>and thinks she can do that if she knows how many “round numbers” are in a given range.<br>Help her by writing a program that tells how many round numbers appear in the inclusive range given by the input<br>(1 ≤ Start &lt; Finish ≤ 2,000,000,000).</p>
<p><strong>Input</strong><br>Line 1: Two space-separated integers, respectively Start and Finish.</p>
<p><strong>Output</strong><br>Line 1: A single integer that is the count of round numbers in the inclusive range Start..Finish</p>
<p><strong>Sample Input</strong><br>2 12</p>
<p><strong>Sample Output</strong><br>6</p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>判断一个数转换成二进制数后 若0的个数大于等于1的个数 则这个数字就为round number<br>求给定区间内有多少这样的数字</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;iostream&gt; </span></div><div class="line"><span class="comment">#include &lt;cstring&gt; </span></div><div class="line">using namespace std;</div><div class="line">int c[33][33],bit[33];</div><div class="line">void init()                         //初始化组合数数组</div><div class="line">&#123;</div><div class="line">	c[0][0]=1,c[1][0]=1;</div><div class="line">	c[1][1]=1;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;33;i++)           //运用组合数性质c[i][j]=c[i-1][j-1]+c[i-1][j]</div><div class="line">	&#123;</div><div class="line">		c[i][0]=1;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;i;j++)</div><div class="line">			c[i][j]=c[i-1][j-1]+c[i-1][j];</div><div class="line">		c[i][i]=1;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int sum(int a)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(a&lt;=1)                        //1不符合条件 0非正数</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	int len=0,ans=0;</div><div class="line">	<span class="keyword">while</span>(a)                        //把a转换成二进制存储</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(a&amp;1)</div><div class="line">			bit[len++]=1;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			bit[len++]=0;</div><div class="line">		a&gt;&gt;=1;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=len-1;i&gt;=1;i--)         //运用计算出的公式算位数小于len的round数</div><div class="line">	&#123;                                 //i-1是因为剩下的i位数字首位必为1 剩下i-1位使用推出的公式</div><div class="line">		<span class="keyword">if</span>(i&amp;1)</div><div class="line">			ans+=((1&lt;&lt;(i-1))-c[i-1][(i-1)/2])/2;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			ans+=(1&lt;&lt;(i-1))/2;</div><div class="line">	&#125;</div><div class="line">	int cnt0=0,cnt1=1;</div><div class="line">	<span class="keyword">for</span>(int i=len-2;i&gt;=0;i--)         //计算位数等于len的round数</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(bit[i])                    //每一位数进行判断 若为0 cnt0++ 若为1进行下一步判断</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span>(int j=i;j&gt;=0&amp;&amp;cnt0+1+j&gt;=cnt1+i-j;j--)        </div><div class="line">				ans+=c[i][j];</div><div class="line">			cnt1++;                   //cnt0表示该位之前0的个数 j表示该位之后0的个数 +1表示该位置为0</div><div class="line">		&#125;                             //cnt1表示该位之前1的个数 i表示该位之后的所有位数和 i-i即为1的个数</div><div class="line">		<span class="keyword">else</span>                          //0≥1</div><div class="line">			cnt0++;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int a,b;</div><div class="line">	init();</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;a&gt;&gt;b)</div><div class="line">	&#123;</div><div class="line">		cout&lt;&lt;sum(b+1)-sum(a)&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="公式推导"><a href="#公式推导" class="headerlink" title="公式推导"></a>公式推导</h3><p>本题需要用到的组合数公式：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148567850815.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148567850913.png" alt=""><br>比如：<br>22 =  10110b<br>如果要求 &lt;=22的Round Numbers，也就是找出1-22有多少个二进制的0不少于1的数的个数。<br>22的二进制长度是5.<br>首先找长度比5小的Round Numbers（长度比5小的数肯定小于22啦）<br>长度为4的话，第一位必须是1，后面三位的话，可以有2个0，3个0 所以就是C(3,2)+C(3,3);<br>长度为3的Round Numbers，同理有 C(2,2);<br>长度为2的Round Numbers，有 C(1,1)<br>长度为1的Round Numbers，有 0个</p>
<p>下面是找长度和22相同的Round Numbers。<br>首先第一位是1.<br>22的第二位是0，所以第二位不能为1，必须是0<br>第三位为0的话，（前面有了2个0，1个1），后面两位可以有1个0，2个0<br>C（2，1）+C（2，2）<br>接下来把第三位恢复为1，看第四位。假如第四位是0，（前面有2个0，2个1），后面一位必须是0  C（1，1）</p>
<p>所以大致求的过程就如上面所述。</p>
<h2 id="HOJ-1982"><a href="#HOJ-1982" class="headerlink" title="HOJ 1982"></a>HOJ 1982</h2><p><strong>Problem Description</strong><br>Volodya is an odd boy and his taste is strange as well. It seems to him that a positive integer number is beautiful if and only if<br> it is divisible by each of its nonzero digits. We will not argue with this and just count the quantity of beautiful numbers in given<br> ranges.</p>
<p><strong>Input</strong><br>Multiple test cases.<br>Each line contains two natural numbers li and ri (1 ≤ li ≤ ri ≤ 9 · 10^18).</p>
<p><strong>Output</strong><br>One line specifies the answer.</p>
<p><strong>Sample Input</strong><br>1 9<br>12 15</p>
<p><strong>Sample Output</strong><br>9<br>2</p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>如果一个数能被他每一位的数字整除 那么这个数就称为美丽数<br>求在区间内有多少美丽数</p>
<h3 id="参考AC代码-6"><a href="#参考AC代码-6" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">LL hashh[2530];</div><div class="line">int bit[25];</div><div class="line">LL dp[25][2530][55];    //20×2520×48</div><div class="line">//dp[len][mod][lcm]表示长度为len mod需要进行对2520取余操作从1^18优化到2520 lcm为最小公倍数 因为2520的公约数只有48个</div><div class="line">//所以使用<span class="built_in">hash</span>离散操作可以大大减少内存开销</div><div class="line">LL dfs(int len,int mod,int lcm,int <span class="built_in">limit</span>);</div><div class="line">int GCD(int x,int y)               //求最大公约数</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(y==0)</div><div class="line">		<span class="built_in">return</span> x;</div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="built_in">return</span> GCD(y,x%y);</div><div class="line">&#125;</div><div class="line">int LCM(int x,int y)               //求最小公倍数</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> (x*y)/GCD(x,y);</div><div class="line">&#125;  </div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(dp,-1,sizeof(dp));</div><div class="line">	int len=0;</div><div class="line">	<span class="keyword">for</span>(int i=1;i*i&lt;2520;i++)      //对2520的公约数<span class="built_in">hash</span>处理</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(2520%i==0)</div><div class="line">		&#123;</div><div class="line">			hashh[i]=len++;</div><div class="line">			hashh[2520/i]=len++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">LL sum(LL a)</div><div class="line">&#123;</div><div class="line">	int len=0;</div><div class="line">	<span class="keyword">while</span>(a)</div><div class="line">	&#123;</div><div class="line">		bit[++len]=a%10;</div><div class="line">		a/=10;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> dfs(len,0,1,1);</div><div class="line">&#125;</div><div class="line">LL dfs(int len,int mod,int lcm,int <span class="built_in">limit</span>)   //数位dp模版</div><div class="line">&#123;                                           //mod需要×10+i后就是更新后的数字 %2520进行<span class="built_in">hash</span>优化</div><div class="line">	LL ans=0;</div><div class="line">	<span class="keyword">if</span>(len&lt;=0)</div><div class="line">		<span class="built_in">return</span> (mod%lcm)==0;</div><div class="line">	<span class="keyword">if</span>(!<span class="built_in">limit</span>&amp;&amp;dp[len][mod][hashh[lcm]]!=-1)</div><div class="line">		<span class="built_in">return</span> dp[len][mod][hashh[lcm]];</div><div class="line">	int end=<span class="built_in">limit</span>?bit[len]:9;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=end;i++)</div><div class="line">		ans+=dfs(len-1,(mod*10+i)%2520,i?LCM(lcm,i):lcm,<span class="built_in">limit</span>&amp;&amp;i==end);</div><div class="line">	<span class="keyword">if</span>(!<span class="built_in">limit</span>)</div><div class="line">		dp[len][mod][hashh[lcm]]=ans;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	LL a,b;</div><div class="line">	init();</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;a&gt;&gt;b)</div><div class="line">	&#123;</div><div class="line">		cout&lt;&lt;sum(b)-sum(a-1)&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="HDU-6148"><a href="#HDU-6148" class="headerlink" title="HDU 6148"></a>HDU 6148</h2><p>长度为N 可以递增 递减 递减后递增(不能递增后递减)<br><a href="http://monkeyxu.cn/2017/08/17/muti%E5%A4%9A%E6%A0%A1-7-8/#HDU-6148" target="_blank" rel="external">转跳链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Machine Learning]]></title>
      <url>http://xuboming8.github.io/2017/01/18/Marchine-Learning/</url>
      <content type="html"><![CDATA[<h1 id="Machine-Learning"><a href="#Machine-Learning" class="headerlink" title="Machine Learning"></a>Machine Learning</h1><h2 id="第一周"><a href="#第一周" class="headerlink" title="第一周"></a>第一周</h2><h3 id="监督学习（supervised-learning）与无监督学习（unsupervised-learning）"><a href="#监督学习（supervised-learning）与无监督学习（unsupervised-learning）" class="headerlink" title="监督学习（supervised learning）与无监督学习（unsupervised learning）"></a>监督学习（supervised learning）与无监督学习（unsupervised learning）</h3><p>监督学习<br>——需要部分数据已经明确给出 来预测一个连续的输出值（例如房价）<br>——回归问题（实际的数据 连续的数值 例如识别出照片上人的年龄）<br>——分类问题（分成少数的离散值 例如0代表良性癌症 1代表恶性癌症）</p>
<p>无监督学习<br>——聚类算法<br>——数据没有属性或标签这一概念 所有的数据都是一样的<br>——运用：网页 基因判别 分离音频 大型数据中心 社交网络分析 客户信息数据库 天文数据分析<br><a id="more"></a></p>
<h3 id="单变量线性回归"><a href="#单变量线性回归" class="headerlink" title="单变量线性回归"></a>单变量线性回归</h3><p><strong>m</strong>   样本数量<br><strong>x</strong>   输入<br><strong>y</strong>   输出<br><strong>假设函数</strong>：hθ（x）=θ0+θ1<em>x<br><strong>代价函数</strong>：J（θ0，θ1）=1/2m</em>Σ（hθ（x）-y（i））²<br>假设函数即为：尽可能拟核所有点的函数（此时为线性函数）<br>代价函数即为：对应每个θ值的函数（预测值）与实际值的误差，具体表现形式为所有的差值求和再求平方乘以1/2m<br><strong>目标</strong>：找出θ0和θ1使J（θ0，θ1）尽可能的小</p>
<p><strong>令θ0=0</strong><br>即函数为一条过原点的直线<br>这里给出三个点（1，1）（2，2）（3，3）<br>根据不同的θ1来拟核这些点<br>下面给出具体的操作实例以及最后求出的代价方程图像，从中可以清晰看出J最小时的θ1值<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148483987449.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148483987503.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148483987552.png" alt=""></p>
<p><strong>一并考虑θ0和θ1</strong><br>下面主要采用轮廓图的方式<br>因为当θ0=0时 J的图像近似与一个弓形 所以可以推测出一并考虑两个变量时 画出的3D图形也近似于弓形<br>下面给出画出的3D图形以及使用轮廓图获得最小J的过程 中心点即为J最小值的点 椭圆上任意一点都对应的具体的θ0和θ1<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148484025212.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148484024959.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148484025032.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148484025096.png" alt=""></p>
<h3 id="梯度下降算法解决线性回归"><a href="#梯度下降算法解决线性回归" class="headerlink" title="梯度下降算法解决线性回归"></a>梯度下降算法解决线性回归</h3><p>何为梯度下降算法：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148499373334.png" alt=""><br>其中j=0/1。<br>α称为学习速率 表现为迫近最低点的时候的步数：每次迫近时移动多少<br>当α过小时 每次移动的步长太小 耗费时间<br>当α过大时 可能会导致不再收敛 变为发散<br>直观给出下图<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148499600672.png" alt=""></p>
<p>同时我们应注意 θ0和θ1应该是同步更新的 如下图<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148499515318.png" alt=""><br>右侧的错误示范 在更新θ1时使用了更新后的θ0值 导致算法出错</p>
<p>下面给出使用梯度算法是如何迫近最低点的<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148499600609.png" alt=""><br>偏导数在最低点的右边 表现斜率为正 所以θ值减小 迫近最低点<br>偏导数在最低点的左边 表现效率为负 所以θ值增大 迫近最低点</p>
<p>当迫近最低点时 偏导数（斜率）会逐渐减少 所以步长会依次减少 使顺利迫近到最低点<br>所以我们无需再改变α的值 直观给出下图<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148499600741.png" alt=""></p>
<p>下面给出利用梯度下降算法实现代价方程最小化的算法<br>(简单偏导数的数学运算即可得出以下结论)<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148499653538.png" alt=""><br>再给出利用给算法实现代价方程的图解<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148499672303.png" alt=""></p>
<p>最后梯度下降算法又称批量梯度下降算法<br>这是因为该算法与训练集m有关</p>
<h2 id="第二周"><a href="#第二周" class="headerlink" title="第二周"></a>第二周</h2><h3 id="多变量线性回归"><a href="#多变量线性回归" class="headerlink" title="多变量线性回归"></a>多变量线性回归</h3><p>hθ(x)=θ0+θ1x1+θ2x2+θ3x3+···+θnxn<br>使用内积的形式则变为下列形式：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148544554906.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148544554956.png" alt=""></p>
<h3 id="多变量线性回归的梯度算法"><a href="#多变量线性回归的梯度算法" class="headerlink" title="多变量线性回归的梯度算法"></a>多变量线性回归的梯度算法</h3><p>根据梯度下降算法 给出给出类似的结论：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/1485445831.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148544583143.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148544583203.png" alt=""></p>
<h3 id="线性回归技巧：特征缩放"><a href="#线性回归技巧：特征缩放" class="headerlink" title="线性回归技巧：特征缩放"></a>线性回归技巧：特征缩放</h3><p>把某个变量进行缩放 使得范围如下：<br>−1 ≤ x(i) ≤ 1<br>or<br>−0.5 ≤ x(i) ≤ 0.5<br>就属于合格的特征缩放</p>
<p>有时候也会进行另一个优化操作<strong>均值归一化工作</strong><br>方程如下：<br>xi:=xi−μi/si<br>μi——多变量的平均值<br>si——多变量的标准差（max-min）<br>for example：<br>一个房子的价格在100-2000之间 平均值为1900 那么<br>xi:=price−1000/1900</p>
<h3 id="线性回归技巧2：学习速率的选择"><a href="#线性回归技巧2：学习速率的选择" class="headerlink" title="线性回归技巧2：学习速率的选择"></a>线性回归技巧2：学习速率的选择</h3><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148585071713.png" alt=""><br>若代价函数出现左上方的两种情况 说明学习速率α应适当减少<br>总结：<br>（1）若学习速率α太小 则逼近最小值的速度将会非常慢<br>（2）若学习速率α太大 则所呈现的函数不一定下降 最后甚至可能不收敛<br>所以α的合理选择可以确保梯度下降算法正确的运行</p>
<h3 id="线性回归技巧3：选择合适的函数来拟核训练集"><a href="#线性回归技巧3：选择合适的函数来拟核训练集" class="headerlink" title="线性回归技巧3：选择合适的函数来拟核训练集"></a>线性回归技巧3：选择合适的函数来拟核训练集</h3><p>可以选择一次函数 二次函数 三次函数 或者一次函数与根号x的组合使用等等<br>hθ(x)=θ0+θ1x1<br>hθ(x)=θ0+θ1x1+θ2x21<br>hθ(x)=θ0+θ1x1+θ2x21+θ3x31<br>hθ(x)=θ0+θ1x1+θ2√x1<br>注意点：在这种情况下特征缩放就非常重要 例如x1的范围是1-1000 则x1²的范围和x1³的范围将会非常大</p>
<h3 id="正规方程求解线性回归"><a href="#正规方程求解线性回归" class="headerlink" title="正规方程求解线性回归"></a>正规方程求解线性回归</h3><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148600111937.png" alt=""><br>正规方程是在特征项多加一项x0=1 把所有的特征项看作矩阵X 把样本输出看作向量Y 则满足：<br>θ=(XTX)−1XTy<br>下面给出梯度下降算法和正规方程的优缺点比较：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148600131156.png" alt=""><br>总结如下：<br>梯度下降算法：需要选择α值 需要迭代 复杂度较正规方程较低 当特征非常大时性能较高<br>正规方程：无需选择α值 不需要迭代 复杂度较高 一般在n≤10000时使用 并且在此算法中无需使用特征缩放</p>
<h3 id="正规方程注意点"><a href="#正规方程注意点" class="headerlink" title="正规方程注意点"></a>正规方程注意点</h3><p>在Octave中我们更希望使用pinv而非inv 因为pinv在XXT不可逆时也能求出Θ值<br>若XXT不可逆 可能有以下原因：<br>（1）有多余的特征 当两个或多个特征相似时可以删去重复的特征<br>（2）特征过多（n≥m） 可使用正则化（后面会提到）</p>
<h2 id="matlab基础知识"><a href="#matlab基础知识" class="headerlink" title="matlab基础知识"></a>matlab基础知识</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div></pre></td><td class="code"><pre><div class="line">~=  不等于</div><div class="line">disp 输出</div><div class="line">disp(sprintf(<span class="string">'2 decimals: %0.2f'</span>,a))</div><div class="line">format long   						小数点后输出多位</div><div class="line">format short     					正常输出</div><div class="line">v=1:0.1:2     						表示输出以1为首项0.1为公差到2的所有数据</div><div class="line">v=1:6         						输出1~6</div><div class="line">ones（x,y）   						矩阵元素均为1</div><div class="line">zeros（x，y） 						矩阵元素均为0</div><div class="line">eye（x）      						产生x行x列的单位阵</div><div class="line">rand（x，y）  						产生x行y列的随机数</div><div class="line">randn（x，y） 						产生x行y列的高斯分布（正态分布）</div><div class="line">hist（w）     						打印出w的直方图</div><div class="line">hist（w，50）  						直方图分成50份</div><div class="line">quix <span class="built_in">exit</span>     						退出matlab</div><div class="line">//////////////////////////////////////////////////////////////////////////////////</div><div class="line">/////////////////////////////////////////////////////////////////////////////</div><div class="line">//////////////////////////////////////////////////////////////////////////////////</div><div class="line">size（A）     						返回矩阵A的行数和列数</div><div class="line">size（A，1）  						返回矩阵A的行数</div><div class="line">size（A，2）  						返回矩阵A的列数</div><div class="line">length（A）   						返回矩阵A行列数的最大值</div><div class="line"><span class="built_in">pwd</span>           						matlab的原路径</div><div class="line"><span class="built_in">cd</span> <span class="string">'D:\matlab\data'</span>   				修改路径</div><div class="line">load name.dat    					读取name.dat文件</div><div class="line">load name.txt    					读取name.txt文件</div><div class="line">who           						显示工作环境变量</div><div class="line">whos          						进一步详细显示工作变量</div><div class="line">clear name    						输出name文件</div><div class="line">save new_name.mat v     			把v中存储的数据保存在new_name文件中 存入data文件中</div><div class="line">clear         						清除所有变量</div><div class="line">A（3，2）     						读取矩阵A的三行二列元素</div><div class="line">：            						表示取出这一行或这一列的所有元素</div><div class="line">A（2，：）    						读取矩阵A第二行的所有元素</div><div class="line">A（：，2）    						读取矩阵A第二列的所有元素</div><div class="line">A（[1,3],:）  						读取矩阵A第一行和第二行的所有元素</div><div class="line">A（，:2）=[10;11;12]   				给矩阵第二列的所有元素重新赋值</div><div class="line">A=[A,[10;11;12]]   					在矩阵A的右边加入新的一列元素</div><div class="line">A（：）       						把矩阵A的所有元素并为一列</div><div class="line">C=[A B]      						把矩阵A放左边 矩阵B放右边</div><div class="line">C=[A,B]       						与上述表达式效果相同</div><div class="line">C=[A;B]       						把矩阵A放上面　矩阵B放下面</div><div class="line">//////////////////////////////////////////////////////////////////////////////////</div><div class="line">//////////////////////////////////////////////////////////////////////////////////</div><div class="line">//////////////////////////////////////////////////////////////////////////////////</div><div class="line">A*B           						矩阵A和矩阵B相乘</div><div class="line">A .* B        						矩阵A和矩阵B对应元素相乘</div><div class="line">A .^ 2        						矩阵A对应元素平方</div><div class="line">1 ./ v        						矩阵v的对应元素球倒数</div><div class="line"><span class="built_in">log</span>(v)        						矩阵v的对应元素取对数</div><div class="line">exp（v）      						矩阵v的对应元素取e次幂</div><div class="line">abs（v）     						矩阵v的对应元素取绝对值</div><div class="line">-v            						矩阵v的对应元素取反</div><div class="line">v+1           						矩阵v的对应元素+1</div><div class="line">A<span class="string">'            						矩阵A的转置</span></div><div class="line">（A'）<span class="string">'       						矩阵A的转置的转置 等于A</span></div><div class="line">max（a）      						求出矩阵a对应每一列的最大值 若只有一行那就是这一行的最大值</div><div class="line">[val,ind]=max(a)    				val等于矩阵最大值 ind等于最大值的索引</div><div class="line">a&lt;3           						矩阵a的每个元素会和3比较 若满足返回1 不满足返回0</div><div class="line">find(a&lt;3)    						返回a中小于3的索引</div><div class="line">magic（n）    						输出n阶矩阵 它的每行每列对角线和都相等</div><div class="line">[r,c]=find(A&gt;=7)    				r和c对应起来是存放A中每个大于等于7的元素的行和列</div><div class="line">prod（a）     						对a中的每个元素求积</div><div class="line">floor（a）    						a中的每个元素下取整</div><div class="line">ceil（a）     						a中的每个元素上取整</div><div class="line">max（rand（3），rand（3））   		返回两个3*3的矩阵并且对应位置取出最大值 变为一个矩阵</div><div class="line">max(A,[],1)    						求出A的每一列的最大值（不要[]也可）</div><div class="line">max(A,[],2)    						求出A的每一行的最大值（不要[]也可）</div><div class="line">max（A）       						默认是每一列的最大值</div><div class="line">max（A[:]）   						A中所有元素并为一列求最大值 实际求出矩阵A的最大值</div><div class="line">max（max（A））  					求出矩阵A的最大值</div><div class="line">sum(sum(A .* eye(n)))  				求出矩阵A主对角线的和</div><div class="line">sum(sum(A .* flipud(eye(n))))  		求出矩阵A副对角线的和</div><div class="line">flipud 								表示矩阵上下翻转</div><div class="line">flipud（eye（n））   				副对角线上元素全为1</div><div class="line">pinv（A）       					求矩阵A的逆阵</div><div class="line">A*pinv（A）     					矩阵A*矩阵A的逆阵 等于E</div><div class="line">//////////////////////////////////////////////////////////////////////////////////</div><div class="line">//////////////////////////////////////////////////////////////////////////////////</div><div class="line">//////////////////////////////////////////////////////////////////////////////////</div><div class="line">t=[0:0.01:0.98]   					表示t为0到0.98公差为0.01的所有元素</div><div class="line">y1=sin（2*pi*4*t）</div><div class="line">plot（t，y1）     					画出y1的图像</div><div class="line">y2=cos（2*pi*4*t）</div><div class="line">plot（t，y2）     					画出y2的图线</div><div class="line">holo on           					表示第二个图像会画在第一个图像之上</div><div class="line">plot（t，y2，'r<span class="string">'）   				表示第二个图像会以红色叠在第一个图像之上</span></div><div class="line">xlabel('time<span class="string">')    					横坐标表示time</span></div><div class="line">ylabel('value<span class="string">')   					纵坐标表示value</span></div><div class="line">ledend('sin<span class="string">','</span>cos<span class="string">')   				图像会显示两种图像的图例</span></div><div class="line">title('my plot<span class="string">')    				图像的名字叫my plot</span></div><div class="line">print -dpng 'my_plot.png<span class="string">'   		保存叫my_plot.png的图像</span></div><div class="line">close             					关闭图像</div><div class="line">figue(1);plot(t,y1);   				表示画出编号为1的图像</div><div class="line">figue(2);plot(t,y2);   				表示画出编号为2的图像 两个图像在两个窗口</div><div class="line">subplot（1，2，1）    				图像分成左右两部分 1显示在左边</div><div class="line">plot（t，y1）         				会在左边画出y1的图像</div><div class="line">subplot（1，2，2）    				右边也会显示出对应图像框</div><div class="line">plot（t，y2）         				会在右边画出y2的图像</div><div class="line">axis([0.5 1 -1 1])    				图像的横坐标改为0.5到1 纵坐标改为-1到1</div><div class="line">clf                   				清空图像</div><div class="line">imagesc（magic（n））   			会为魔术阵A画出一个彩色格</div><div class="line">imagesc（A），colorbar，colormap grey</div><div class="line">									图像表内灰白色 并且会显示颜色条</div><div class="line">//////////////////////////////////////////////////////////////////////////////////</div><div class="line">//////////////////////////////////////////////////////////////////////////////////</div><div class="line">//////////////////////////////////////////////////////////////////////////////////</div><div class="line">for i:10,</div><div class="line">v(i)=2^i;</div><div class="line">end;                    			v会打印出2到1-10次放的数字</div><div class="line">////////////////////////////////////////////////////////////////////////</div><div class="line">i=1；</div><div class="line">while i&lt;=5,</div><div class="line">v(i)=100;</div><div class="line">i=i+1;</div><div class="line">end;                   				v的前五个元素置为100</div><div class="line">////////////////////////////////////////////////////////////////////////</div><div class="line">i=1;</div><div class="line">while true,</div><div class="line">v(i)=999;</div><div class="line">i=i+1;</div><div class="line">if i==6,</div><div class="line">break;</div><div class="line">end;</div><div class="line">end;                   				v的前五个元素置为999</div><div class="line">////////////////////////////////////////////////////////////////////////</div><div class="line">v(1)=2;</div><div class="line">if v(1)==1,</div><div class="line">disp('the value is one<span class="string">');</span></div><div class="line">elseif v(1)==2</div><div class="line">disp('the value is two<span class="string">');</span></div><div class="line">else</div><div class="line">disp('the value is not one or two<span class="string">');</span></div><div class="line">end;                   				输出the value is two</div><div class="line">////////////////////////////////////////////////////////////////////////</div><div class="line">新建脚本后可以写入函数 并保存到data中 之后可以直接调用函数</div><div class="line">matlab的函数可以返回多个数值 例如：</div><div class="line">function[y1,y2]=squareandcubethisnumber(x)</div><div class="line">y1=x^2;</div><div class="line">y2=x^3;</div><div class="line">costfunctionJ的例子需掌握</div><div class="line">//////////////////////////////////////////////////////////////////////////////////</div><div class="line">//////////////////////////////////////////////////////////////////////////////////</div><div class="line">//////////////////////////////////////////////////////////////////////////////////</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[12-24 杭电校赛]]></title>
      <url>http://xuboming8.github.io/2016/12/27/12-24-%E6%9D%AD%E7%94%B5%E6%A0%A1%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="杭电校赛"><a href="#杭电校赛" class="headerlink" title="杭电校赛"></a>杭电校赛</h1><h2 id="递增数"><a href="#递增数" class="headerlink" title="递增数"></a>递增数</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14829002546.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148290025561.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148290025602.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148290025653.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148290025697.png" alt=""></p>
<h3 id="参考AC代码-模拟数位dp"><a href="#参考AC代码-模拟数位dp" class="headerlink" title="参考AC代码(模拟数位dp)"></a>参考AC代码(模拟数位dp)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string&gt;</span></div><div class="line">using namespace std;</div><div class="line">int len;</div><div class="line">string num;</div><div class="line">int fun(int n,int po)</div><div class="line">&#123;</div><div class="line">	int sum=0;</div><div class="line">	<span class="keyword">if</span>(po==len)</div><div class="line">		<span class="built_in">return</span> 1;</div><div class="line">	<span class="keyword">for</span>(int i=n;i&lt;=9;i++)</div><div class="line">		sum+=fun(i,po+1);</div><div class="line">	<span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">check</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len-1;i++)</div><div class="line">		<span class="keyword">if</span>(num[i]-<span class="string">'0'</span>&gt;num[i+1]-<span class="string">'0'</span>)</div><div class="line">			<span class="built_in">return</span> 0;</div><div class="line">	<span class="built_in">return</span> 1;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		cin&gt;&gt;num;</div><div class="line">		len=num.length();</div><div class="line">		int sum=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;num.length();i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(i==0)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">for</span>(int j=0;j&lt;num[i]-<span class="string">'0'</span>;j++)</div><div class="line">					sum+=fun(j,i+1);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(num[i-1]-<span class="string">'0'</span>&gt;num[i]-<span class="string">'0'</span>)</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				<span class="keyword">for</span>(int j=num[i-1]-<span class="string">'0'</span>;j&lt;num[i]-<span class="string">'0'</span>;j++)</div><div class="line">					num+=fun(j,i+1);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(len==1||check())</div><div class="line">			cout&lt;&lt;sum&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;sum-1&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码（数位dp）"><a href="#参考AC代码（数位dp）" class="headerlink" title="参考AC代码（数位dp）"></a>参考AC代码（数位dp）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">int dp[10][10],A[10];   //dp[i][j]表示长度为i 最高位为j的递增数个数</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(dp,0,sizeof(dp));</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=9;i++)</div><div class="line">		dp[1][i]=1;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=9;i++)</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;=9;j++)</div><div class="line">			<span class="keyword">for</span>(int k=j;k&lt;=9;k++)</div><div class="line">				dp[i][j]+=dp[i-1][k];</div><div class="line">&#125;</div><div class="line">int sum(int a)</div><div class="line">&#123;</div><div class="line">	int ans=0,m=0;</div><div class="line">	<span class="keyword">while</span>(a)</div><div class="line">	&#123;</div><div class="line">		A[m++]=a%10;</div><div class="line">		a/=10;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;m;i++)</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=9;j++)</div><div class="line">			ans+=dp[i][j];</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;A[m-1];i++)</div><div class="line">		ans+=dp[m][i];</div><div class="line">	<span class="keyword">for</span>(int i=m-1;i&gt;=1;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int j=A[i];j&lt;=A[i-1];j++)</div><div class="line">			ans+=dp[i][j];</div><div class="line">		<span class="keyword">if</span>(A[i]-A[i-1]&gt;0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	init();</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int x;</div><div class="line">		cin&gt;&gt;x;</div><div class="line">		cout&lt;&lt;sum(x+1)&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>模拟数位dp的思想。<br>fun函数参数代表的是从左往右数第po个位置存放的数字是n，功能是利用递归求出比他小的所有递增数。<br>接着挨个判断该数。例如54321，第一步fun函数会求出比50000小的所有递增数。接着算大于50000的递增数，从第二位开始，只要有一位不满足递增数直接break。<br>后面不会再有满足条件的递增数了，否则把所有比该位小，大于等于前一位的数带入到fun函数中计算。<br>例如56789，再求出比50000小的递增数后会代入函数fun（5，2）fun（6，3）·······实际求的就是55000和56600的递增数。</p>
<h2 id="洗衣服"><a href="#洗衣服" class="headerlink" title="洗衣服"></a>洗衣服</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14829011676.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148290116815.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148290116862.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148290116906.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148290116954.png" alt=""></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int solve(int k)</div><div class="line">&#123;</div><div class="line">	int ans=0;</div><div class="line">	int temp1=k/10,temp2=k%10;</div><div class="line">	ans+=temp1*4;</div><div class="line">	<span class="keyword">if</span>(temp2==0)</div><div class="line">		<span class="built_in">return</span> ans;</div><div class="line">	<span class="keyword">if</span>(temp2&lt;=3)</div><div class="line">		ans+=2;</div><div class="line">	<span class="keyword">if</span>(temp2&gt;3&amp;&amp;temp2&lt;=6)</div><div class="line">		ans+=3;</div><div class="line">	<span class="keyword">else</span></div><div class="line">		ans+=4;</div><div class="line">	<span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n,m;</div><div class="line">		cin&gt;&gt;n&gt;&gt;m;</div><div class="line">		int temp1=m/3,temp2=m%3;</div><div class="line">		int ans,ans1,ans2,ans3;</div><div class="line">		ans1=temp1+solve(n-m+temp2);</div><div class="line">		ans2=temp1+1+solve(n-m);</div><div class="line">		ans=min(ans1,ans2);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;10;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(temp1-i&lt;0)</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			ans3=temp1-i+solve(n-m+temp2+i*3);</div><div class="line">			ans=min(ans,ans3);</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>贪心即可。<br>首先写出solve函数：大于10的情况下先考虑10的情况 接下来考虑剩下的衣服。若小于3使用快速洗，若在3和6中间使用标准洗，若大于6则使用大物洗。<br>下面考虑三种情况：首先求出m件单脱水除以3的除数和余数。第一种情况：把余数放入到清洗的范围里。第二种情况：余下的数继续使用单脱水，剩下的<br>n-m件衣服使用清洗。第三种情况：把余数+3*k放到清洗的范围里，依次比较求出最小值。三种情况的最小值即为所求。</p>
<h2 id="炉石"><a href="#炉石" class="headerlink" title="炉石"></a>炉石</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148290199721.png" alt=""><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148290199959.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148290199774.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148290199825.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148290199873.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148290199913.png" alt=""></p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;map&gt;</span></div><div class="line"><span class="comment">#include&lt;string&gt;</span></div><div class="line">using namespace std;</div><div class="line">map&lt;string,int&gt;mp;</div><div class="line">string op[4]=&#123;<span class="string">"Fire"</span>,<span class="string">"Ice"</span>,<span class="string">"Dog"</span>,<span class="string">"Evolved"</span>&#125;;</div><div class="line">int flag;</div><div class="line">int n,m;</div><div class="line">void dfs(int harm,int left,int buff)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(harm&gt;=m)</div><div class="line">	&#123;</div><div class="line">		flag=1;</div><div class="line">		<span class="built_in">return</span> ;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=3;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(mp[op[i]])</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(i==2&amp;&amp;left&gt;=2)</div><div class="line">			&#123;</div><div class="line">				mp[op[i]]--;</div><div class="line">				dfs(harm,left-2,buff+1);</div><div class="line">				mp[op[i]]++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(i==3&amp;&amp;left&gt;=4)</div><div class="line">			&#123;</div><div class="line">				mp[op[i]]--;</div><div class="line">				dfs(harm,left-4,buff+2);</div><div class="line">				mp[op[i]]++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(i==0&amp;&amp;left&gt;=4)</div><div class="line">			&#123;</div><div class="line">				mp[op[i]]--;</div><div class="line">				dfs(harm+buff+6,left-4,buff);</div><div class="line">				mp[op[i]]++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(i==1&amp;&amp;left&gt;=2)</div><div class="line">			&#123;</div><div class="line">				mp[op[i]]--;</div><div class="line">				dfs(harm+buff+3,left-2,buff);</div><div class="line">				mp[op[i]]++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		mp.clear();</div><div class="line">		cin&gt;&gt;n&gt;&gt;m;</div><div class="line">		string st;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;st;</div><div class="line">			mp[st]++;</div><div class="line">		&#125;</div><div class="line">		flag=0;</div><div class="line">		dfs(0,10,0);</div><div class="line">		<span class="keyword">if</span>(flag)</div><div class="line">			cout&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"No"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>深搜，加4层判断即可。<br>利用map的映射统计出每个字符串的个数。深搜中：若造成的伤害大于等于剩余的血量退出函数。接下来进行四层判断，需要额外<br>注意四种技能都在特定的条件下才能使用。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[12-11 哈理工团体新生赛]]></title>
      <url>http://xuboming8.github.io/2016/12/11/12-11-%E5%93%88%E7%90%86%E5%B7%A5%E5%9B%A2%E4%BD%93%E6%96%B0%E7%94%9F%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="哈理工团体新生赛"><a href="#哈理工团体新生赛" class="headerlink" title="哈理工团体新生赛"></a>哈理工团体新生赛</h1><h2 id="Time"><a href="#Time" class="headerlink" title="Time"></a>Time</h2><p><strong>Problem Description</strong><br>Kim是一个掌控时间的大师。不同于一般人，他习惯使用秒来计算时间。如果你问他现在是几点，他会告诉你现在是今天的xxxx秒。Mik想要考考Kim。他想知道从某一天的<br>00:00:00开始，经过s秒后是哪一天。但是Mik不会计算答案，他需要你的帮助。<br>注意：我们认为一天从00:00:00开始，到23:59:59结束。00:00:00经过1秒后是00:00:01；从00:00:00开始，加86400（60<em>60</em>24）秒后就是下一天的00:00:00.</p>
<p><strong>Input</strong><br><a id="more"></a><br>第一行一个整数T表示数据组数。<br>接下来T行，每行一个日期yyyy-MM-dd，接下来一个整数s表示s秒。</p>
<p><strong>Output</strong><br>对于每个输入，输出一行yyyy-MM-dd 表示答案。对于不足两位的数要补齐前导0。</p>
<p><strong>Sample Input</strong><br>3<br>2016-12-10 1000<br>2016-02-28 86400<br>2016-01-01 1000000</p>
<p><strong>Sample Output</strong><br>2016-12-10<br>2016-02-29<br>2016-01-12</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string&gt;</span></div><div class="line">using namespace std;</div><div class="line">int Month[13]=&#123;0,31,28,31,30,31,30,31,31,30,31,30,31&#125;;</div><div class="line">int check(int year)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(year%4==0&amp;&amp;(year%400==0||year%100!=0))</div><div class="line">		<span class="built_in">return</span> 1;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		string s;</div><div class="line">		long long int year,month,day,second,se;</div><div class="line">		cin&gt;&gt;s&gt;&gt;second;</div><div class="line">		year=(s[0]-<span class="string">'0'</span>)*1000+(s[1]-<span class="string">'0'</span>)*100+(s[2]-<span class="string">'0'</span>)*10+s[3]-<span class="string">'0'</span>;</div><div class="line">		month=(s[5]-<span class="string">'0'</span>)*10+s[6]-<span class="string">'0'</span>;</div><div class="line">		day=(s[8]-<span class="string">'0'</span>)*10+s[9]-<span class="string">'0'</span>;</div><div class="line">		se=second/86400;</div><div class="line">		day+=se;</div><div class="line">		<span class="keyword">if</span>(check(year))</div><div class="line">			Month[2]=29;</div><div class="line">		<span class="keyword">if</span>(day&gt;Month[month])</div><div class="line">		&#123;</div><div class="line">			day-=Month[month];</div><div class="line">			month++;</div><div class="line">			<span class="keyword">if</span>(month&gt;=13)</div><div class="line">			&#123;</div><div class="line">				year++;</div><div class="line">				month=1;</div><div class="line">				<span class="keyword">if</span>(check(year))</div><div class="line">					Month[2]=29;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld-%02lld-%02lld\n"</span>,year,month,day);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>简单模拟。<br>注意闰年的处理以及输出补0。</p>
<h2 id="ID"><a href="#ID" class="headerlink" title="ID"></a>ID</h2><p><strong>Problem Description</strong><br>It is very cold in Harbin in the winter, but it is pretty warm in the Zhengxin Building. Today is Saturday, Teacher ABG want to play a trick on the only<br> one student called NWL because he didn’t finish the MOOC.<br>At the beginning, every student is in the building. The teacher calls some students to sweep the snow on the playground out of the building, and<br>sometimes he also call some students who are on the playground back to the building. At last, teacher ABG wants to leave only one student, NWL, on the<br>playground out of the building. It means that the teacher ABG calls NWL’s ID ODD times, but called other students’ ID EVEN times, maybe more than twice.<br>Now give you the list describing the students’ ID which the teacher called in order, please tell us NWL’s ID.</p>
<p><strong>Input</strong><br>The first line is an integer T, describes the number of tests. Then T tests.<br>In each test, the first line is an integer N, describes the number of IDs on the list.<br>Then followed N lines, each line contains an integer M, describes one ID on the list.</p>
<p><strong>Output</strong><br>T lines. Each line, an integer, the NWL’s ID.</p>
<p><strong>Sample Input</strong><br>3<br>3<br>1140310000<br>1140310000<br>1140310000<br>1<br>1140310002<br>5<br>1<br>2<br>2<br>2<br>2</p>
<p><strong>Sample Output</strong><br>1140310000<br>1140310002<br>1</p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>求出数组中出现次数为奇数次（一次）的数字，其余数字出现偶数次。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int T;</div><div class="line">	cin&gt;&gt;T;</div><div class="line">	long long temp,ans;</div><div class="line">	<span class="keyword">while</span>(T--)</div><div class="line">	&#123;</div><div class="line">		int N;</div><div class="line">		cin&gt;&gt;N;</div><div class="line">		N--;</div><div class="line">		cin&gt;&gt;temp;</div><div class="line">		ans=temp;</div><div class="line">		<span class="keyword">while</span>(N--)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;temp;</div><div class="line">			ans^=temp;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>经典算法，考察异或运算。<br>求数组中出现奇数次（一次），或数组中唯一两个出现1次的数字，均可用异或操作。</p>
<h2 id="Game"><a href="#Game" class="headerlink" title="Game"></a>Game</h2><p><strong>Problem Description</strong><br>Kim is a college student who love computer games, but unfortunately his school just published a rule that Games should disappear in the campus<br>, that means nobody can play computer games in school, including the students dormitory. However, the student don’t take it seriously, that’s<br>why the manager of the school gets so angry that he decided to go to the dormitory to punish the students. You should know the manager will<br>punish those students who is playing games at the moment he enter the room, and leave immediately if nobody is playing game in this room.<br>Kim is a talented game player , in fact, he is the Carry of a famous Gaming club, so he needs time to practice he’s skills . And luckily ,<br>Kim’s roommate Mik is a Geek(also a Kim fan), he hacked the manager’s computer and get the timetable of the manager, and tell Kim when will<br>the manager come to their room tomorrow. A big E-sport Event is around the corner, so Kim list m skills he should practice, each skill takes<br>some time to practice and improve Kim’s skill by some points. You should calculate the max total improvement points Kim can get. Note any<br>skills can be practiced any times , including 0.</p>
<p><strong>Input</strong><br>The first line contains a integer T ( T &lt;= 10 ), then T cases follows.<br>In each case, there are 3 parts of input.<br>The first part contains 3 integers L, n, m in a single line.Range[0, L] is the time Kim decide to practice , n is the times manager would enter his room,<br>m indicate the total number of the skills.<br>The second part contains n integers ti(0 &lt;= ti &lt;= L) in a single line, means the manager would enter his room at ti. Note that ti is giving in the<br>increasing order.<br>The third part has m lines , each line contains two integers ci, vi, means this skill needs ci minutes to practice and can make vi points improvement.<br>L&lt;=500, n&lt;=10, m&lt;=100.</p>
<p><strong>Output</strong><br>For each case, you should output the max points Kim can improve.</p>
<p><strong>Sample Input</strong><br>2<br>6 1 3<br>3<br>2 3<br>2 4<br>2 5<br>6 2 3<br>2 4<br>2 3<br>2 4<br>2 5</p>
<p><strong>Sample Output</strong><br>10<br>15</p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>分段背包问题。</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">int cost[555],value[555];</div><div class="line">int num[555];</div><div class="line">int f[555];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int l,m,n;</div><div class="line">		cin&gt;&gt;l&gt;&gt;m&gt;&gt;n;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">			cin&gt;&gt;num[i];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;cost[i]&gt;&gt;value[i];</div><div class="line">		memset(f,0,sizeof(f));</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;=l;j++)</div><div class="line">				<span class="keyword">if</span>(j-cost[i]&gt;=0)</div><div class="line">					f[j]=max(f[j],f[j-cost[i]]+value[i]);</div><div class="line">		int ans=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">			ans+=f[num[i]-num[i-1]];</div><div class="line">		<span class="keyword">if</span>(num[m]&lt;l)</div><div class="line">			ans+=f[l-num[m]];</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>完全背包的变形。<br>分段后把每一段的最大值求和即可。</p>
<h2 id="Mod"><a href="#Mod" class="headerlink" title="Mod"></a>Mod</h2><p><strong>Problem Description</strong><br>Kim刚刚学会C语言中的取模运算（mod）。他想要研究一下一个数字A模上一系列数后的结果是多少。帮他写个程序验证一下。</p>
<p><strong>Input</strong><br>第一行一个整数T代表数据组数。<br>接下来T组数据，第一行一个整数n，接下来n个数字ai<br>接下来一行一个整数m，接下来m个数字bi</p>
<p><strong>Output</strong><br>对于每个bi，输出bi%a1%a2%…%an 。</p>
<p><strong>Sample Input</strong><br>1<br>4<br>10 9 5 7<br>5<br>14 8 27 11 25</p>
<p><strong>Sample Output</strong><br>4<br>3<br>2<br>1<br>0</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int data,jump;</div><div class="line">&#125;no[100050];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n,m;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;no[i].data);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=i+1;j&lt;=n;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(no[j].data&lt;=no[i].data)</div><div class="line">				&#123;</div><div class="line">					no[i].jump=j;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;m);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">		&#123;</div><div class="line">			int qu;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;qu);</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=n;j=no[j].jump)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(j==0)</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				qu%=no[j].data;</div><div class="line">			&#125;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,qu);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>连续求余问题。<br>求出每个数字后边第一个比它小的数的位置。跳着取余即可。</p>
<h2 id="Number-Game"><a href="#Number-Game" class="headerlink" title="Number Game"></a>Number Game</h2><p><strong>Problem Description</strong><br>There are n items and two players, Kim and you. For each player and for each item, the value of the item for this player is known. Denote values of the<br>i-th item for the first and the second player as ai and bi correspondingly.<br>Players take the items in turns. Kim starts the game. Kim is greedy: each turn, he chooses the item which has the maximal ai among the remaining items.<br>If there are several such items, he can take any one of them. What is the maximal possible sum of values bi of items taken by the second player that he<br>can guarantee regardless of the first player’s moves?</p>
<p><strong>Input</strong><br>The first line is an integer T, describes the number of tests. Then T tests.<br>Each case contains a single integer n, the number of items.<br>The second line contains n numbers, i-th is equal to ai, the value of the i-th item for Kim.<br>The third line contains n numbers, i-th is equal to bi, the value of the i-th item for the second player.</p>
<p><strong>Output</strong><br>Output a single number: the maximal sum of values bi of items taken by the second player that he can guarantee.</p>
<p><strong>Sample Input</strong><br>1<br>5<br>1 2 3 4 5<br>2 3 4 5 6</p>
<p><strong>Sample Output</strong><br>8</p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>a跟b玩游戏，每个物品对a,b分别有价值。a每次会去对价值最高 且 对b价值较高的(第二关键字)。求b能取到最大价值。</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;queue&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int x,y;</div><div class="line">&#125;data[1050];</div><div class="line">struct cmp</div><div class="line">&#123;</div><div class="line">	bool operator() (const int a,const int b)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">return</span> a&gt;b;</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line">bool cmp2(node a,node b)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(a.x==b.x)</div><div class="line">		<span class="built_in">return</span> a.y&gt;b.y;</div><div class="line">	<span class="built_in">return</span> a.x&gt;b.x;</div><div class="line">&#125;</div><div class="line">priority_queue&lt;int,vector&lt;int&gt;,cmp&gt;q;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;data[i].x;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;data[i].y;</div><div class="line">		<span class="keyword">while</span>(!q.empty())</div><div class="line">			q.pop();</div><div class="line">		sort(data+1,data+1+n,cmp2);</div><div class="line">		LL ans=0;</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(!(i&amp;1))</div><div class="line">				q.push(data[i].y);</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(data[i].y&gt;q.top())</div><div class="line">			&#123;</div><div class="line">				q.pop();</div><div class="line">				q.push(data[i].y);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span>(!q.empty())</div><div class="line">		&#123;</div><div class="line">			ans+=q.top();</div><div class="line">			q.pop();</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>优先队列。<br>先进行一次多关键字排序。<br>往后每次，如果可以用当前的bi换下下一个被拿走的bi使和变大，那就交换。否则取最大的。</p>
<h2 id="Permutation"><a href="#Permutation" class="headerlink" title="Permutation"></a>Permutation</h2><p><strong>Problem Description</strong><br>n个人排成一队，队头的人编号为1，后面的人编号分别为2,3,…,n. 1号人前面没有人，i号人的前面是i-1。 现在Kim想让这n个人重新排队，要求重新排队后编号为i的人前面不能<br>是i-1。问有多少种排队的方法。方案数可能很大，输出答案模1e9+7。</p>
<p><strong>Input</strong><br>第一行一个整数T，表示有T组数据。<br>接下来T行，每行一个整数n。表示有n个人排成一队。</p>
<p><strong>Output</strong><br>对于每个n，输出答案 mod 1000000007。</p>
<p><strong>Sample Input</strong><br>2<br>1<br>4</p>
<p><strong>Sample Output</strong><br>1<br>11</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">LL f[2222222];</div><div class="line">const LL base = 1000000007;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">	f[1]=1;f[2]=1;f[3]=3;</div><div class="line">	<span class="keyword">for</span>(LL i=4;i&lt;=2000000;i++)&#123;</div><div class="line">		f[i]=(i * (f[i-1]%base) % base - (i-3) * (f[i-3]%base) %base + base )%base; </div><div class="line">	&#125;</div><div class="line">	int T,n;</div><div class="line">	cin&gt;&gt;T;</div><div class="line">	<span class="keyword">while</span>(T--)&#123;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">		cout&lt;&lt;f[n]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>容斥原理，推出f[i] = i<em>f[i-1] - (i-3)</em>f[i-3]</p>
<h2 id="Team"><a href="#Team" class="headerlink" title="Team"></a>Team</h2><p><strong>Problem Description</strong><br>Kim 正在玩一款手游，在这款游戏中，Kim可以选择若干个角色编成一队作战。为了挑战不同的关卡，Kim需要不断的调整编队阵容。然而随着游戏不断更新，队伍成员变得越<br>来越多，Kim已经记不清哪些角色在队伍中，哪些角色不在队伍中了。请你写一个程序来帮助他。<br>具体来说，Kim有三种可以执行的操作。<br>1 x  ：把 x 号角色加入队伍。如果x号角色已经在队伍中，什么都不会发生。<br>2 x  ：把 x 号角色从队伍中移除。如果x号角色不在队伍中，什么都不会发生。<br>3 x  ：撤销第x次操作。如果第x次操作已经被撤销，什么都不会发生。<br>每次操作有一个编号，从1开始。对于3 x操作，第x次操作会被撤销。被撤销的操作相当于没有进行这次操作。<br>Kim可能撤销一次插入，撤销一次删除，或撤销另一次撤销操作。<br>现在请你告诉Kim所有操作都结束后，队伍中有几个角色，都是谁。</p>
<p><strong>Input</strong><br>第一行一个整数T，表示有T组数据。<br>每组数据第一行两个整数n,m表示一共有n个角色（编号1-n）,m个操作。<br>初始队伍中没有角色。<br>接下来m行，每行一个操作，格式为<br>1 x 或 2 x 或 3 x,含义见题目描述。<br>操作的编号等价于给出操作的顺序。第一个给出的操作是1号，第二个给出的操作是2号，以此类推。<br>对于3 x 操作，保证 x 小于 这条操作的编号。</p>
<p><strong>Output</strong><br>对于每组数据，输出两行。<br>第一行一个整数n,表示最后队伍中有n个人。<br>接下来一行n个整数，表示队伍中角色的编号，角色编号按照从小到大的顺序输出。<br>（每个编号后面有一个空格，包括最后一个编号。如果第一行n为0，则第二行为一个空行，即没有编号，只有一个换行符）</p>
<p><strong>Sample Input</strong><br>1<br>5 8<br>1 1<br>1 2<br>3 2<br>1 4<br>3 3<br>3 5<br>1 5<br>2 5</p>
<p><strong>Sample Output</strong><br>2<br>1 4</p>
<h3 id="参考AC代码-6"><a href="#参考AC代码-6" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define max 50050</span></div><div class="line">int succ[max],info[max][3];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n,m;</div><div class="line">		cin&gt;&gt;n&gt;&gt;m;</div><div class="line">		memset(succ,0,sizeof(succ));</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;info[i][0]&gt;&gt;info[i][1];</div><div class="line">			info[i][2]=1;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=m;i&gt;0;i--)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(info[i][2]==0)</div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			<span class="keyword">if</span>(info[i][0]==3)</div><div class="line">				info[info[i][1]][2]=0;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(info[i][2]==0)</div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			<span class="keyword">if</span>(info[i][0]==1)</div><div class="line">				succ[info[i][1]]=1;</div><div class="line">			<span class="keyword">if</span>(info[i][0]==2)</div><div class="line">				succ[info[i][1]]=0;</div><div class="line">		&#125;</div><div class="line">		int sum=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">if</span>(succ[i]==1)</div><div class="line">				sum++;</div><div class="line">		cout&lt;&lt;sum&lt;&lt;endl;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">if</span>(succ[i]==1)</div><div class="line">				cout&lt;&lt;i&lt;&lt;<span class="string">" "</span>;</div><div class="line">		cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><p>模拟<br>注意info和succ数组的用途。</p>
<h2 id="Emirp"><a href="#Emirp" class="headerlink" title="Emirp"></a>Emirp</h2><p><strong>Problem Description</strong><br>An emirp (prime spelled backwards) is a prime number that results in a different prime when its decimal digits are reversed.<br>The first five emirps are 13, 17, 31, 37, 71<br>Now Kim want to know the kth emirp. Help him.</p>
<p><strong>Input</strong><br>The first line is an integer T, describes the number of tests. Then T tests.<br>In each test, one line an integer k.</p>
<p><strong>Output</strong><br>For each test, output the kth emirp.</p>
<p><strong>Sample Input</strong><br>3<br>1<br>2<br>3</p>
<p><strong>Sample Output</strong><br>13<br>17<br>31</p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>求出第n个反素数。</p>
<h3 id="参考AC代码-7"><a href="#参考AC代码-7" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#define LL long long</span></div><div class="line">using namespace std;</div><div class="line">LL re[1005];</div><div class="line">int isprime(LL num)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(num==0||num==1)</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	<span class="keyword">for</span>(int i=2;i*i&lt;=num;i++)</div><div class="line">		<span class="keyword">if</span>(num%i==0)</div><div class="line">			<span class="built_in">return</span> 0;</div><div class="line">	<span class="built_in">return</span> 1;</div><div class="line">&#125;</div><div class="line">LL transform(LL num)</div><div class="line">&#123;</div><div class="line">	LL res=0;</div><div class="line">	<span class="keyword">while</span>(num&gt;0)</div><div class="line">	&#123;</div><div class="line">		res=res*10+num%10;</div><div class="line">		num/=10;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> res;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">excell</span></span>()</div><div class="line">&#123;</div><div class="line">	int i=1;</div><div class="line">	LL x=13;</div><div class="line">	<span class="keyword">while</span>(i&lt;=1005)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(isprime(x)&amp;&amp;isprime(transform(x))&amp;&amp;x!=transform(x))</div><div class="line">			re[i++]=x;</div><div class="line">		x++;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	excell();</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int k;</div><div class="line">		cin&gt;&gt;k;</div><div class="line">		cout&lt;&lt;re[k]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h3><p>反素数：原本是质数，取反后仍是质数，且不是回文。<br>暴力打表即可。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[广工业新生赛]]></title>
      <url>http://xuboming8.github.io/2016/12/05/%E5%B9%BF%E5%B7%A5%E4%B8%9A%E6%96%B0%E7%94%9F%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="广工业新生赛"><a href="#广工业新生赛" class="headerlink" title="广工业新生赛"></a>广工业新生赛</h1><h2 id="Problem-A"><a href="#Problem-A" class="headerlink" title="Problem A"></a>Problem A</h2><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14809478927.png" alt=""><br><a id="more"></a></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">long long fun(long long n)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(n&lt;=1)</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	int i;</div><div class="line">	<span class="keyword">for</span>(i=1;i*2&lt;=n;i*=2);</div><div class="line">	<span class="built_in">return</span> i-1+fun(n-i);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		long long n;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		cout&lt;&lt;fun(n)&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>找规律发现2^n的最大高兴值为2^n-1，所以只需找出小于n最大的2^n的数，并递归计算剩下的n-i即可。</p>
<h2 id="Problem-B"><a href="#Problem-B" class="headerlink" title="Problem B"></a>Problem B</h2><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148094818232.png" alt=""></p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">long long lowestOne(long long n)  </div><div class="line">&#123;  </div><div class="line">        long long Ret = 0;  </div><div class="line">        <span class="keyword">while</span>(n)  </div><div class="line">        &#123;  </div><div class="line">               n&gt;&gt;=1;  </div><div class="line">               Ret += n;  </div><div class="line">         &#125;  </div><div class="line">         <span class="built_in">return</span> Ret;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		long long n,re;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		re=lowestOne(n);</div><div class="line">		cout&lt;&lt;re&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>（一）使用公式<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148094828887.png" alt=""><br>（二）另类公式<br>N!所含质因子2的个数等于N减去N的二进制表示中1的数目。<br>计算二进制中1的数目代码如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">//用 n&amp;(n-1) 来消掉n的从右往左数的第1个1   </div><div class="line">int count1(int n)  </div><div class="line">&#123;  </div><div class="line">    int sum = 0;  </div><div class="line">    <span class="keyword">while</span>(n)  </div><div class="line">    &#123;  </div><div class="line">        n &amp;= (n-1);  </div><div class="line">        sum++;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> sum;         </div><div class="line">&#125;  </div><div class="line">  </div><div class="line">//质因子2的个数或最右边一位1的位数  </div><div class="line">int lowestOne(int n)  </div><div class="line">&#123;  </div><div class="line">       <span class="built_in">return</span> n-count1(n);  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="Problem-C"><a href="#Problem-C" class="headerlink" title="Problem C"></a>Problem C</h2><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148094856348.png" alt=""></p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;cstring&gt;</span></div><div class="line"><span class="comment">#include &lt;climits&gt;</span></div><div class="line"><span class="comment">#define LL long long </span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int T;</div><div class="line">	cin&gt;&gt;T;</div><div class="line">	LL n,a,b,c;</div><div class="line">	<span class="keyword">while</span>(T--)</div><div class="line">	&#123;</div><div class="line">		cin&gt;&gt;n&gt;&gt;a&gt;&gt;b&gt;&gt;c;</div><div class="line">		int tmp = 4 - (n%4);</div><div class="line">		<span class="keyword">if</span>(tmp==4)</div><div class="line">		&#123;</div><div class="line">			puts(<span class="string">"0"</span>);</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(tmp==1)</div><div class="line">		&#123;</div><div class="line">			LL mn=INT_MAX;</div><div class="line">			<span class="keyword">if</span>(mn&gt;a) mn=a;</div><div class="line">			<span class="keyword">if</span>(mn&gt;(b+c)) mn=b+c;</div><div class="line">			<span class="keyword">if</span>(mn&gt;(c+c+c)) mn=c+c+c;</div><div class="line">			cout&lt;&lt;mn&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(tmp==2)</div><div class="line">		&#123;</div><div class="line">			LL mn=INT_MAX;</div><div class="line">			<span class="keyword">if</span>(mn&gt;b) mn=b;</div><div class="line">			<span class="keyword">if</span>(mn&gt;(a+a)) mn=a+a;</div><div class="line">			<span class="keyword">if</span>(mn&gt;(c+c)) mn=c+c;</div><div class="line">			cout&lt;&lt;mn&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(tmp==3)</div><div class="line">		&#123;</div><div class="line">			LL mn=INT_MAX;</div><div class="line">			<span class="keyword">if</span>(mn&gt;c) mn=c;</div><div class="line">			<span class="keyword">if</span>(mn&gt;(a+a+a)) mn=a+a+a;</div><div class="line">			<span class="keyword">if</span>(mn&gt;(a+b)) mn=a+b;</div><div class="line">			cout&lt;&lt;mn&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>需要考虑一下特殊情况：<br>1.差1本的时候除了买一本a，也需考虑b+c以及3<em>c的情况<br>2.差2本的时候需要考虑2</em>c的情况。<br>3.其余为可以想到的基本情况。</p>
<h2 id="Problem-D"><a href="#Problem-D" class="headerlink" title="Problem D"></a>Problem D</h2><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148094881315.png" alt=""></p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int a[200];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int T,n;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;T);</div><div class="line">	<span class="keyword">while</span> (T--)</div><div class="line">	&#123;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">		<span class="keyword">for</span> (int i=1;i&lt;=n;i++) </div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">		int ans=0;</div><div class="line">		<span class="keyword">for</span> (int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (a[i]==0) ans++;</div><div class="line">			<span class="keyword">if</span> (a[i]==3&amp;&amp;i&gt;1)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (a[i-1]==1) a[i]=2;</div><div class="line">				<span class="keyword">if</span> (a[i-1]==2) a[i]=1;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span> (a[i]==3&amp;&amp;i==1)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (a[i+1]==1) a[i]=2;</div><div class="line">				<span class="keyword">if</span> (a[i+1]==2) a[i]=1;</div><div class="line">			&#125;			</div><div class="line">			<span class="keyword">if</span> (a[i]==a[i-1]&amp;&amp;a[i]!=0&amp;&amp;a[i]!=3)</div><div class="line">			&#123;</div><div class="line">				a[i]=0;</div><div class="line">				ans++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,-24*ans);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>需要注意如果连续2天相等且都是在运动的话，休息天数要加一并且该位置的值需赋为0.因为题目明确说明不会连续2天运动。</p>
<h2 id="Problem-H"><a href="#Problem-H" class="headerlink" title="Problem H"></a>Problem H</h2><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148094921007.png" alt=""></p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int a[1000050];</div><div class="line">void FindNumsAppearOnce(int* data, int length)</div><div class="line">&#123;</div><div class="line">    int OR = 0 ;</div><div class="line">    <span class="keyword">for</span> (int i = 0 ; i &lt; length ; i++)//依次异或数组中的每一个数</div><div class="line">        OR = OR ^ data[i] ;</div><div class="line">    int index = 1 ;</div><div class="line">    <span class="keyword">while</span> ((OR &amp; 1) != 1 &amp;&amp; (index &lt; 8 * sizeof(int)))//从右向左找到异或结果中第一个为1的位的位置</div><div class="line">    &#123;</div><div class="line">        OR = OR&gt;&gt;1;</div><div class="line">        index++;</div><div class="line">    &#125;</div><div class="line">    int num1 = 0 ;</div><div class="line">    int num2 = 0 ;</div><div class="line">    <span class="keyword">for</span> (int j = 0 ; j &lt; length ;j++)</div><div class="line">    &#123;</div><div class="line">        int temp = data[j];</div><div class="line">        temp = temp &gt;&gt; (index - 1) ;//向右移位到index的位置</div><div class="line">        <span class="keyword">if</span> ((temp &amp; 1) == 1) //判断该位是否为1</div><div class="line">            num1 = num1 ^ data[j];</div><div class="line">        <span class="keyword">else</span></div><div class="line">            num2 = num2 ^ data[j] ;</div><div class="line">    &#125;</div><div class="line">    cout&lt;&lt;min(num1,num2)&lt;&lt;<span class="string">" "</span>&lt;&lt;max(num1,num2)&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">		FindNumsAppearOnce(a,n);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>本题的是实质是求出数组中唯一两个只出现过一次的数，且要求时间复杂度为O（n），空间复杂度为O（1）。<br>使用暴搜时间复杂度O（n²）会超时，使用hash表同样会因为空间复杂度不是O（1）超时，所以为了满足这两点使用位运算即可。</p>
<h2 id="Problem-J"><a href="#Problem-J" class="headerlink" title="Problem J"></a>Problem J</h2><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148094961972.png" alt=""></p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;algorithm&gt;  </span></div><div class="line">using namespace std;  </div><div class="line">int T,n,ans;  </div><div class="line">bool notPrime[10009];  </div><div class="line">int lst[1235],num,index1;   </div><div class="line">void <span class="function"><span class="title">init</span></span>() </div><div class="line">&#123;</div><div class="line">    memset(notPrime,<span class="literal">false</span>,sizeof(notPrime));  </div><div class="line">    notPrime[1]=notPrime[0]=<span class="literal">true</span>;  </div><div class="line">    <span class="keyword">for</span>(int i=2;i&lt;=5005;++i)  </div><div class="line">        <span class="keyword">for</span>(int j=2;i*j&lt;10009;++j)  </div><div class="line">            notPrime[i*j]=<span class="literal">true</span>;  </div><div class="line">    num=0;  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;10009;++i)  </div><div class="line">        <span class="keyword">if</span>(!notPrime[i])  </div><div class="line">           lst[num++]=i*i;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>() </div><div class="line">&#123;  </div><div class="line">    init();  </div><div class="line">    cin&gt;&gt;T;</div><div class="line">    <span class="keyword">while</span>(T--)</div><div class="line">	&#123;  </div><div class="line">        cin&gt;&gt;n; </div><div class="line">        index1=lower_bound(lst,lst+num,n)-lst;         </div><div class="line">        <span class="keyword">if</span>(index1==0||n-lst[index1-1]&gt;lst[index1]-n)   </div><div class="line">           cout&lt;&lt;lst[index1]&lt;&lt;endl;  </div><div class="line">        <span class="keyword">else</span>  </div><div class="line">           cout&lt;&lt;lst[index1-1]&lt;&lt;endl;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>打表出所有质数进而打表出所有质数的平方。使用lower_bound找出大于等于查找索引的第一个位置，下面只需判断后一个和前一个哪个离索引近就输出哪个即可。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[图论-最短路专题]]></title>
      <url>http://xuboming8.github.io/2016/11/28/%E5%9B%BE%E8%AE%BA-%E6%9C%80%E7%9F%AD%E8%B7%AF%E4%B8%93%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="最短路专题"><a href="#最短路专题" class="headerlink" title="最短路专题"></a>最短路专题</h1><p><strong>DJ裸搜算法 DJ+优化队列算法 spfa（BF+队列）算法 floyd算法</strong></p>
<h2 id="POJ-2387"><a href="#POJ-2387" class="headerlink" title="POJ 2387"></a>POJ 2387</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148055070429.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148055070498.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148055070545.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148055070593.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148055070635.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>最短路模板题，可能存在重边。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;climits&gt;</span></div><div class="line">using namespace std;</div><div class="line">int t,n;</div><div class="line">int map[2020][2020];</div><div class="line">int dis[2020],vis[2020];</div><div class="line">void DJ(int s)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		dis[i]=map[s][i];</div><div class="line">	memset(vis,0,sizeof(vis));</div><div class="line">	vis[s]=1;</div><div class="line">	dis[s]=0;</div><div class="line">	int min,next;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">	&#123;</div><div class="line">		min=INT_MAX;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(!vis[j]&amp;&amp;min&gt;dis[j])</div><div class="line">			&#123;</div><div class="line">				min=dis[j];</div><div class="line">				next=j;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(min==INT_MAX)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		vis[next]=1;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">			<span class="keyword">if</span>(!vis[j]&amp;&amp;map[next][j]!=INT_MAX&amp;&amp;dis[next]+map[next][j]&lt;dis[j])</div><div class="line">				dis[j]=map[next][j]+dis[next];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;t&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">				<span class="keyword">if</span>(i==j)</div><div class="line">					map[i][j]=0;</div><div class="line">				<span class="keyword">else</span></div><div class="line">					map[i][j]=INT_MAX;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;t;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v,w;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">			<span class="keyword">if</span>(w&lt;map[u][v])</div><div class="line">				map[u][v]=map[v][u]=w;</div><div class="line">		&#125;</div><div class="line">		DJ(1);</div><div class="line">		cout&lt;&lt;dis[n]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>DJ算法裸搜。<br>注意在数组map存图的时候要多判断一个w&lt;map[u][v],因为有重边的情况需要存在最小的权值。</p>
<h2 id="HDU-2544"><a href="#HDU-2544" class="headerlink" title="HDU 2544"></a>HDU 2544</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148055127674.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148055127748.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/1480551278.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148055127841.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148055127893.png" alt=""></p>
<h3 id="参考AC代码（一）：DJ裸搜"><a href="#参考AC代码（一）：DJ裸搜" class="headerlink" title="参考AC代码（一）：DJ裸搜"></a>参考AC代码（一）：DJ裸搜</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;climits&gt;</span></div><div class="line">using namespace std;</div><div class="line">int n,m;</div><div class="line">int map[105][105];</div><div class="line">int vis[10050],dis[10050];</div><div class="line">void DJ(int s)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		dis[i]=map[s][i];</div><div class="line">	memset(vis,0,sizeof(vis));</div><div class="line">	vis[s]=1;</div><div class="line">	dis[s]=0;</div><div class="line">	int min,next;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">	&#123;</div><div class="line">		min=INT_MAX;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(dis[j]&lt;min&amp;&amp;!vis[j])</div><div class="line">			&#123;</div><div class="line">				min=dis[j];</div><div class="line">				next=j;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(min==INT_MAX)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		vis[next]=1;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(!vis[j]&amp;&amp;map[next][j]!=INT_MAX&amp;&amp;dis[next]+map[next][j]&lt;dis[j])</div><div class="line">				dis[j]=dis[next]+map[next][j];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0&amp;m==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">				<span class="keyword">if</span>(i==j)</div><div class="line">					map[i][j]=0;</div><div class="line">				<span class="keyword">else</span></div><div class="line">					map[i][j]=INT_MAX;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;m;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v,w;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">			map[u][v]=map[v][u]=w;</div><div class="line">		&#125;</div><div class="line">		DJ(1);</div><div class="line">		cout&lt;&lt;dis[n]&lt;&lt;endl;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码（二）：DJ优化-priority-queue"><a href="#参考AC代码（二）：DJ优化-priority-queue" class="headerlink" title="参考AC代码（二）：DJ优化(priority_queue)"></a>参考AC代码（二）：DJ优化(priority_queue)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#include&lt;queue&gt;</span></div><div class="line"><span class="comment">#include&lt;climits&gt;</span></div><div class="line">using namespace std;</div><div class="line">int n,m;</div><div class="line">int dis[10050];</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int x,id;</div><div class="line">	node(int u,int w)&#123;x=u,id=w;&#125;</div><div class="line">	bool operator &lt; (const node &amp;a) const</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">return</span> id&gt;a.id;</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;eg[10050];</div><div class="line">void DJ(int s)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		dis[i]=INT_MAX;</div><div class="line">	dis[s]=0;</div><div class="line">	priority_queue&lt;node&gt;q;</div><div class="line">	q.push(node(s,dis[s]));</div><div class="line">	<span class="keyword">while</span>(!q.empty())</div><div class="line">	&#123;</div><div class="line">		node now=q.top();</div><div class="line">		q.pop();</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;eg[now.x].size();i++)</div><div class="line">		&#123;</div><div class="line">			node next=eg[now.x][i];</div><div class="line">			<span class="keyword">if</span>(dis[next.x]&gt;dis[now.x]+next.id)</div><div class="line">			&#123;</div><div class="line">				dis[next.x]=now.id+next.id;</div><div class="line">				q.push(node(next.x,dis[next.x]));</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0&amp;&amp;m==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			eg[i].clear();</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;m;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v,w;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">			eg[u].push_back(node(v,w));</div><div class="line">			eg[v].push_back(node(u,w));</div><div class="line">		&#125;</div><div class="line">		DJ(1);</div><div class="line">		cout&lt;&lt;dis[n]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码（三）：spfa优化"><a href="#参考AC代码（三）：spfa优化" class="headerlink" title="参考AC代码（三）：spfa优化"></a>参考AC代码（三）：spfa优化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;queue&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#include&lt;climits&gt;</span></div><div class="line">using namespace std;</div><div class="line">int vis[10050],dis[10050];</div><div class="line">int n,m;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int x,id;</div><div class="line">	node(int u,int w)&#123;x=u,id=w;&#125;</div><div class="line">&#125;;</div><div class="line">vector&lt;node&gt;eg[10050];</div><div class="line">void spfa(int s)</div><div class="line">&#123;</div><div class="line">	vis[s]=1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		dis[i]=INT_MAX;</div><div class="line">	dis[s]=0;</div><div class="line">	queue&lt;int&gt;q;</div><div class="line">	q.push(s);</div><div class="line">	<span class="keyword">while</span>(!q.empty())</div><div class="line">	&#123;</div><div class="line">		int now=q.front();</div><div class="line">		q.pop();</div><div class="line">		vis[now]=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;eg[now].size();i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(eg[now][i].id+dis[now]&lt;dis[eg[now][i].x])</div><div class="line">			&#123;</div><div class="line">				dis[eg[now][i].x]=eg[now][i].id+dis[now];</div><div class="line">				<span class="keyword">if</span>(!vis[eg[now][i].x])</div><div class="line">				&#123;</div><div class="line">					q.push(eg[now][i].x);</div><div class="line">					vis[eg[now][i].x]=1;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0&amp;&amp;m==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			eg[i].clear();</div><div class="line">		memset(vis,0,sizeof(vis));</div><div class="line">		<span class="keyword">while</span>(m--)</div><div class="line">		&#123;</div><div class="line">			int u,v,w;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">			eg[u].push_back(node(v,w));</div><div class="line">			eg[v].push_back(node(u,w));</div><div class="line">		&#125;</div><div class="line">		spfa(1);</div><div class="line">		cout&lt;&lt;dis[n]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码（四）：floyd"><a href="#参考AC代码（四）：floyd" class="headerlink" title="参考AC代码（四）：floyd"></a>参考AC代码（四）：floyd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;climits&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int n,m;</div><div class="line">int f[10050][10050];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0&amp;&amp;m==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">				<span class="keyword">if</span>(i==j)</div><div class="line">					f[i][j]=0;</div><div class="line">				<span class="keyword">else</span></div><div class="line">					f[i][j]=INT_MAX;</div><div class="line">		<span class="keyword">while</span>(m--)</div><div class="line">		&#123;</div><div class="line">			int u,v,w;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">			f[u][v]=f[v][u]=w;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int k=1;k&lt;=n;k++)</div><div class="line">			<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">				<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">					f[i][j]=min(f[i][j],f[i][k]+f[k][j]);</div><div class="line">		cout&lt;&lt;f[1][n]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>最短路水题。<br>四种代码分别使用了：DJ裸搜算法，DJ优化算法，spfa算法，floyd算法。</p>
<h2 id="UVa-247"><a href="#UVa-247" class="headerlink" title="UVa 247"></a>UVa 247</h2><p><strong>Problem Description</strong><br>如果两个人相互打电话（直接或间接），则说他们在同一个电话圈里。例如,a打给b，b打给c，c打给d，d打给a，则这四<br>个人在同一个圈里；如果e打给f但f不打给e，则不能推出e和f在同一个电话圈里。输入n(n&lt;=25)个人的m次电话，找出所<br>有电话圈。人名只包含字母，不超过25个字符，且不重复。</p>
<p><strong>Input</strong><br>The input file will contain one or more data sets. Each data set begins with a line containing two<br>integers, n and m. The first integer, n, represents the number of different people who are in the data<br>set. The maximum value for n is 25. The remainder of the data set consists of m lines, each representing<br>a phone call. Each call is represented by two names, separated by a single space. Names are first names<br>only (unique within a data set), are case sensitive, and consist of only alphabetic characters; no name<br>is longer than 25 letters.<br>For example, if Ben called Dolly, it would be represented in the data file as<br>Ben Dolly<br>Input is terminated by values of zero (0) for n and m.</p>
<p><strong>Output</strong><br>For each input set, print a header line with the data set number, followed by a line for each calling<br>circle in that data set. Each calling circle line contains the names of all the people in any order within<br>the circle, separated by comma-space (a comma followed by a space). Output sets are separated by<br>blank lines.</p>
<p><strong>Sample Input</strong><br>5 6<br>Ben Alexander<br>Alexander Dolly<br>Dolly Ben<br>Dolly Benedict<br>Benedict Dolly<br>Alexander Aaron<br>14 34<br>John Aaron<br>Aaron Benedict<br>Betsy John<br>Betsy Ringo<br>Ringo Dolly<br>Benedict Paul<br>John Betsy<br>John Aaron<br>Benedict George<br>Dolly Ringo<br>Paul Martha<br>George Ben<br>Alexander George<br>Betsy Ringo<br>Alexander Stephen<br>Martha Stephen<br>Benedict Alexander<br>Stephen Paul<br>Betsy Ringo<br>Quincy Martha<br>Ben Patrick<br>Betsy Ringo<br>Patrick Stephen<br>Paul Alexander<br>Patrick Ben<br>Stephen Quincy<br>Ringo Betsy<br>Betsy Benedict<br>Betsy Benedict<br>Betsy Benedict<br>Betsy Benedict<br>Betsy Benedict<br>Betsy Benedict<br>Quincy Martha<br>0 0</p>
<p><strong>Sample Output</strong><br>Calling circles for data set 1:<br>Ben, Alexander, Dolly, Benedict<br>Aaron<br>Calling circles for data set 2:<br>John, Betsy, Ringo, Dolly<br>Aaron<br>Benedict<br>Paul, George, Martha, Ben, Alexander, Stephen, Quincy, Patrick</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;map&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;string&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int vis[30],f[30][30];</div><div class="line">map&lt;string,int&gt;name;</div><div class="line">vector&lt;string&gt;Name;</div><div class="line">int flag=1;</div><div class="line">int n,m;</div><div class="line">void dfs(int u)</div><div class="line">&#123;</div><div class="line">	vis[u]=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		<span class="keyword">if</span>(f[u][i]&amp;&amp;f[i][u])</div><div class="line">			<span class="keyword">if</span>(!vis[i])</div><div class="line">			&#123;</div><div class="line">				cout&lt;&lt;<span class="string">", "</span>&lt;&lt;Name[i];</div><div class="line">				dfs(i);</div><div class="line">			&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0&amp;&amp;m==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		name.clear();</div><div class="line">		Name.clear();</div><div class="line">		memset(f,0,sizeof(f));</div><div class="line">		memset(vis,0,sizeof(vis));</div><div class="line">		int id=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;m;i++)</div><div class="line">		&#123;</div><div class="line">			string a,b;</div><div class="line">			cin&gt;&gt;a&gt;&gt;b;</div><div class="line">			<span class="keyword">if</span>(!name.count(a))</div><div class="line">			&#123;</div><div class="line">				name[a]=id++;</div><div class="line">				Name.push_back(a);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(!name.count(b))</div><div class="line">			&#123;</div><div class="line">				name[b]=id++;</div><div class="line">				Name.push_back(b);</div><div class="line">			&#125;</div><div class="line">			int x=name[a],y=name[b];</div><div class="line">			f[x][y]=1;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int k=0;k&lt;n;k++)  </div><div class="line">            <span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">                <span class="keyword">for</span>(int j=0;j&lt;n;j++)  </div><div class="line">					f[i][j]=(f[i][j]||(f[i][k]&amp;&amp;f[k][j]));  </div><div class="line">		<span class="keyword">if</span>(flag&gt;1)</div><div class="line">			cout&lt;&lt;endl;</div><div class="line">		cout&lt;&lt;<span class="string">"Calling circles for data set "</span> &lt;&lt; flag++ &lt;&lt;<span class="string">":"</span> &lt;&lt; endl;  </div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(!vis[i])</div><div class="line">			&#123;</div><div class="line">				cout&lt;&lt;Name[i];</div><div class="line">				dfs(i);</div><div class="line">				cout&lt;&lt;endl;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>首先用floyd求出传递闭包，即g[i][j]表示i是否直接或者间接给j打过电话，当且仅当g[i][j]=g[j][i]=1时二者处于一个电话圈。<br>构造一个新图，在一个电话圈里的两个人之间连一条边，然后依次输出各个连通分量的所有人即可。<br>注意此题的floyd需稍加改变，因为本题判断的是连通性而非求出最短路。权值为0或1。</p>
<h2 id="UVa-10048"><a href="#UVa-10048" class="headerlink" title="UVa 10048"></a>UVa 10048</h2><p><strong>Problem Description</strong><br>输入一个C个点S条边（c&lt;=100,s&lt;=1000）的无向带权图，边权表示该路径上的噪声值。当噪声值太大时，耳膜可能会受到<br>伤害，所以当你从某点去往另一个点时，总是希望路上经过的最大噪声值最小。输入一些询问，每次询问两个点，输出两<br>点间最大噪声值最小的路径。</p>
<p><strong>Input</strong><br>The input may contain multiple test cases.<br>The first line of each test case contains three integers C(≤ 100), S(≤ 1000) and Q(≤ 10000) where<br>C indicates the number of crossings (crossings are numbered using distinct integers ranging from 1 to<br>C), S represents the number of streets and Q is the number of queries.<br>Each of the next S lines contains three integers: c1, c2 and d indicating that the average sound<br>intensity level on the street connecting the crossings c1 and c2 (c1 ̸= c2) is d decibels.<br>Each of the next Q lines contains two integers c1 and c2 (c1 ̸= c2) asking for the minimum sound<br>intensity level you must be able to tolerate in order to get from crossing c1 to crossing c2.<br>The input will terminate with three zeros form C, S and Q.</p>
<p><strong>Output</strong><br>For each test case in the input first output the test case number (starting from 1) as shown in the<br>sample output. Then for each query in the input print a line giving the minimum sound intensity level<br>(in decibels) you must be able to tolerate in order to get from the first to the second crossing in the<br>query. If there exists no path between them just print the line “no path”.<br>Print a blank line between two consecutive test cases.</p>
<p><strong>Sample Input</strong><br>7 9 3<br>1 2 50<br>1 3 60<br>2 4 120<br>2 5 90<br>3 6 50<br>4 6 80<br>4 7 70<br>5 7 40<br>6 7 140<br>1 7<br>2 6<br>6 2<br>7 6 3<br>1 2 50<br>1 3 60<br>2 4 120<br>3 6 50<br>4 6 80<br>5 7 40<br>7 5<br>1 7<br>2 4<br>0 0 0</p>
<p><strong>Sample Output</strong><br>Case #1<br>80<br>60<br>60<br>Case #2<br>40<br>no path<br>80</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#define INF 0x7FFFFFF</span></div><div class="line">using namespace std;</div><div class="line">int f[105][105];</div><div class="line">int n,m,q;</div><div class="line">int flag=1;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m&gt;&gt;q)    //n:点  m：边  q：询问次数</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0&amp;&amp;m==0&amp;&amp;q==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(j==i)</div><div class="line">					f[i][j]=0;</div><div class="line">				<span class="keyword">else</span></div><div class="line">					f[i][j]=INF;</div><div class="line">			&#125;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;m;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v,w;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">			f[u][v]=f[v][u]=w;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int k=1;k&lt;=n;k++)</div><div class="line">			<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">				<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">					f[i][j]=min(f[i][j],max(f[i][k],f[k][j]));</div><div class="line">		<span class="keyword">if</span>(flag!=1)</div><div class="line">			cout&lt;&lt;endl;</div><div class="line">		cout&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;flag++&lt;&lt;endl;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;q;i++)</div><div class="line">		&#123;</div><div class="line">			int u,v;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v;</div><div class="line">			<span class="keyword">if</span>(f[u][v]!=INF)</div><div class="line">				cout&lt;&lt;f[u][v]&lt;&lt;endl;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				cout&lt;&lt;<span class="string">"no path"</span>&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>输出两点之间权值最大的最短路径。<br>floyd需稍加修改：f[i][j]=min(f[i][j],max(f[i][k],f[k][j]));</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[哈理工新生赛]]></title>
      <url>http://xuboming8.github.io/2016/11/28/%E5%93%88%E7%90%86%E5%B7%A5%E6%96%B0%E4%BA%BA%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="哈理工热身赛题解"><a href="#哈理工热身赛题解" class="headerlink" title="哈理工热身赛题解"></a>哈理工热身赛题解</h1><h2 id="棋盘村"><a href="#棋盘村" class="headerlink" title="棋盘村"></a>棋盘村</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033696486.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033696546.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033696582.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033696615.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033696648.png" alt=""></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include &lt;cstring&gt;</span></div><div class="line"><span class="comment">#define LL long long  </span></div><div class="line">using namespace std;</div><div class="line">const int dx[]=&#123;1,1,2,2,-1,-1,-2,-2&#125;;</div><div class="line">const int dy[]=&#123;2,-2,1,-1,2,-2,1,-1&#125;;</div><div class="line">LL f[21][21];</div><div class="line">bool map[21][21];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t,n,m,x,y;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		memset(f,0,sizeof(f));</div><div class="line">		memset(map,0,sizeof(map));</div><div class="line">		scanf(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;m,&amp;x,&amp;y);</div><div class="line">		map[x][y]=1;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=7;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(x+dx[i]&lt;0||x+dx[i]&gt;n) </div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			<span class="keyword">if</span>(y+dy[i]&lt;0||y+dy[i]&gt;m)</div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			map[x+dx[i]][y+dy[i]]=1;</div><div class="line">		&#125;</div><div class="line">		f[0][0]=1;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;=m;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(i==0&amp;&amp;j==0)</div><div class="line">					<span class="built_in">continue</span>;</div><div class="line">				<span class="keyword">if</span>(i==0) </div><div class="line">					f[i][j]=f[i][j-1];</div><div class="line">				<span class="keyword">if</span>(j==0) </div><div class="line">					f[i][j]=f[i-1][j];</div><div class="line">				<span class="keyword">if</span>(i&amp;&amp;j) </div><div class="line">					f[i][j]=f[i-1][j]+f[i][j-1];</div><div class="line">				<span class="keyword">if</span>(map[i][j]) </div><div class="line">					f[i][j]=0;				</div><div class="line">			&#125;</div><div class="line">		cout&lt;&lt;f[n][m]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>递推。把所有强盗可能经过的点找出来dp赋为0，需额外考虑边上的情况，接着用递推关系得到答案。</p>
<h2 id="FBI-Tree"><a href="#FBI-Tree" class="headerlink" title="FBI Tree"></a>FBI Tree</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033716341.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033716423.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033716456.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14803371649.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033716523.png" alt=""></p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;math.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">char s[1100];</div><div class="line">void dg(int x,int y)</div><div class="line">&#123;</div><div class="line">    int cnt0,cnt1;</div><div class="line">    <span class="keyword">if</span>(x==y)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(s[x]==<span class="string">'0'</span>) <span class="built_in">printf</span>(<span class="string">"B"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"I"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        int mid=(y-x-1)/2;</div><div class="line">        dg(x,x+mid);</div><div class="line">        dg(y-mid,y);</div><div class="line">        cnt0=cnt1=0;</div><div class="line">        <span class="keyword">for</span>(int i=x;i&lt;=y;i++)</div><div class="line">            <span class="keyword">if</span>(s[i]==<span class="string">'0'</span>) </div><div class="line">				cnt0++;</div><div class="line">            <span class="keyword">else</span>  </div><div class="line">				cnt1++;</div><div class="line">        <span class="keyword">if</span>(cnt0==0) </div><div class="line">			<span class="built_in">printf</span>(<span class="string">"I"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(cnt1==0) </div><div class="line">			<span class="built_in">printf</span>(<span class="string">"B"</span>);</div><div class="line">        <span class="keyword">else</span> </div><div class="line">			<span class="built_in">printf</span>(<span class="string">"F"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    int t,n,m;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">    <span class="keyword">while</span>(t--)</div><div class="line">    &#123;</div><div class="line">        cin&gt;&gt;n;</div><div class="line">		scanf(<span class="string">"%s"</span>,s);</div><div class="line">        m=(int)pow(2.0,n);</div><div class="line">        dg(0,m-1);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>类似于线段树的求解。二分+递归即可。</p>
<h2 id="Nine-Digits"><a href="#Nine-Digits" class="headerlink" title="Nine Digits"></a>Nine Digits</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033855442.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033855497.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033855529.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033855563.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033855595.png" alt=""></p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;queue&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#define max 500000</span></div><div class="line">using namespace std;</div><div class="line">int len[max];</div><div class="line">int vis[max];</div><div class="line">int s[9]=&#123;1,10,100,1000,10000,100000,1000000,10000000,100000000&#125;;</div><div class="line">int jie[9]=&#123;0,1,2,6,24,120,720,5040,40320&#125;;     //n!</div><div class="line">int four[4];</div><div class="line">int start=123456789,str[9];</div><div class="line">int temp;</div><div class="line">int transform1(int num)</div><div class="line">&#123;</div><div class="line">	int result;</div><div class="line">	result = num%s[4];</div><div class="line">	result += ((num / s[5]) % 10)*s[4];</div><div class="line">	result += num / s[8] * s[5];</div><div class="line">	result += ((num / s[6]) % 10)*s[6];</div><div class="line">	result += ((num / s[4]) % 10)*s[7];</div><div class="line">	result += ((num / s[7]) % 10)*s[8];</div><div class="line">	<span class="built_in">return</span> result;</div><div class="line">&#125;</div><div class="line">int transform2(int num)</div><div class="line">&#123;</div><div class="line">	int result = num / s[5] * s[5];</div><div class="line">	result += num / s[1] % 10;</div><div class="line">	result += num / s[4] % 10 * s[1];</div><div class="line">	result += num / s[2] % 10 * s[2];</div><div class="line">	result += num % 10 * s[3];</div><div class="line">	result += num / s[3] % 10 * s[4];</div><div class="line">	<span class="built_in">return</span> result;</div><div class="line">&#125;</div><div class="line">int transform3(int num)</div><div class="line">&#123;</div><div class="line">	int result = num / s[6] * s[6] + num % 10;</div><div class="line">	result += num / s[2] % 10 * s[1];</div><div class="line">	result += num / s[5] % 10 * s[2];</div><div class="line">	result += num / s[3] % 10 * s[3];</div><div class="line">	result += num / s[1] % 10 * s[4];</div><div class="line">	result += num / s[4] % 10 * s[5];</div><div class="line">	<span class="built_in">return</span> result;</div><div class="line">&#125;</div><div class="line">int transform4(int num)</div><div class="line">&#123;</div><div class="line">	int result = num % s[3] + num / s[8] * s[8];</div><div class="line">	result += num / s[4] % 10 * s[3];</div><div class="line">	result += num / s[7] % 10 * s[4];</div><div class="line">	result += num / s[5] % 10 * s[5];</div><div class="line">	result += num / s[3] % 10 * s[6];</div><div class="line">	result += num / s[6] % 10 * s[7];</div><div class="line">	<span class="built_in">return</span> result;</div><div class="line">&#125;</div><div class="line">int cantor(int key)</div><div class="line">&#123;</div><div class="line">	int result, temp[9];</div><div class="line">	<span class="keyword">for</span> (int i = 8; i &gt;= 0; i--)</div><div class="line">	&#123;</div><div class="line">		temp[i] = key % 10;</div><div class="line">		key = key / 10;</div><div class="line">	&#125;</div><div class="line">	result = 0;</div><div class="line">	<span class="keyword">for</span> (int i = 0; i&lt;8; i++)</div><div class="line">	&#123;</div><div class="line">		int tot = 0;</div><div class="line">		<span class="keyword">for</span> (int j = i + 1; j&lt;9; j++)</div><div class="line">			<span class="keyword">if</span> (temp[j]&lt;temp[i])</div><div class="line">				tot++;</div><div class="line">		result += tot*jie[8 - i];</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> result;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	queue&lt;int&gt;que;</div><div class="line">	int key1,key2[4],top;</div><div class="line">	len[0]=0;</div><div class="line">	memset(vis,0,sizeof(vis));</div><div class="line">	vis[0]=1;</div><div class="line">	que.push(start);</div><div class="line">	<span class="keyword">while</span>(que.size())</div><div class="line">	&#123;</div><div class="line">		top=que.front();</div><div class="line">		que.pop();</div><div class="line">		key1=cantor(top);</div><div class="line">		four[0]=transform1(top);</div><div class="line">		four[1]=transform2(top);</div><div class="line">		four[2]=transform3(top);</div><div class="line">		four[3]=transform4(top);</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;4;i++)</div><div class="line">		&#123;</div><div class="line">			key2[i]=cantor(four[i]);</div><div class="line">			<span class="keyword">if</span>(!vis[key2[i]])</div><div class="line">			&#123;</div><div class="line">				vis[key2[i]]=1;</div><div class="line">				que.push(four[i]);</div><div class="line">				len[key2[i]]=len[key1]+1;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(~scanf(<span class="string">"%d"</span>,&amp;str[0]))</div><div class="line">	&#123;</div><div class="line">		temp=str[0];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;9;i++)</div><div class="line">		&#123;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;str[i]);</div><div class="line">			temp=str[i]+temp*10;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, len[cantor(temp)]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>类似于魔板的三种变化。使用康拓展开，把每个状态划为一个整数使用DFS搜索直到找出答案。</p>
<h2 id="陈月亮的数学题"><a href="#陈月亮的数学题" class="headerlink" title="陈月亮的数学题"></a>陈月亮的数学题</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033909338.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033909389.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033909421.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033909454.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148033909487.png" alt=""></p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">int prime[65536];</div><div class="line">int s[100000],ans;</div><div class="line">bool isprime(int x)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=2;i*i&lt;=x;i++)</div><div class="line">		<span class="keyword">if</span>(x%i==0) <span class="built_in">return</span> 0;</div><div class="line">	<span class="built_in">return</span> 1;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">printprime</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=65536*2;i++)</div><div class="line">		<span class="keyword">if</span>(isprime(i))</div><div class="line">			prime[++prime[0]]=i;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(prime,0,sizeof(prime));</div><div class="line">	printprime();</div><div class="line">	/*cout&lt;&lt;prime[0]&lt;&lt;endl;*/               //12251</div><div class="line">	int a,b,cnt,top,T;</div><div class="line">	cnt=0;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;T);</div><div class="line">	<span class="keyword">while</span>(T--)</div><div class="line">	&#123;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;a);</div><div class="line">		b=1;</div><div class="line">		memset(s,0,sizeof(s));</div><div class="line">		int tmp=a;</div><div class="line">		top=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=prime[0];i++)</div><div class="line">		&#123;</div><div class="line">			top++;</div><div class="line">			<span class="keyword">if</span>(tmp%prime[i]!=0) </div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			<span class="keyword">while</span>(tmp%prime[i]==0)</div><div class="line">			&#123;</div><div class="line">				s[top]++;</div><div class="line">				tmp/=prime[i];</div><div class="line">				<span class="keyword">if</span>(tmp==1) </div><div class="line">					<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(tmp&gt;1)</div><div class="line">		&#123;</div><div class="line">			top++;</div><div class="line">			s[top]++;</div><div class="line">		&#125;</div><div class="line">		ans=1;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=top;i++)</div><div class="line">		&#123;</div><div class="line">			int bb=(s[i]+2)*(s[i]+1)/2;</div><div class="line">			int tt=bb*bb;</div><div class="line">			ans=ans*tt;</div><div class="line">		&#125;</div><div class="line">	    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>数论题。打表出所有的质数，把输入的数字分解成若干个质数的乘积，算出每个质数的个数，分别带入连续自然数立方和公式后做积运算即为结果。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[蓝桥杯模拟赛]]></title>
      <url>http://xuboming8.github.io/2016/11/22/%E8%93%9D%E6%A1%A5%E6%9D%AF%E6%A8%A1%E6%8B%9F%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="蓝桥杯模拟赛"><a href="#蓝桥杯模拟赛" class="headerlink" title="蓝桥杯模拟赛"></a>蓝桥杯模拟赛</h1><h2 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h2><h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><a id="more"></a>
<p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147981975144.png" alt=""></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">long long bigpow1(int a,int b)   //递归实现</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(b==0)</div><div class="line">		<span class="built_in">return</span> 1;</div><div class="line">	<span class="keyword">if</span>(b&amp;1)</div><div class="line">		<span class="built_in">return</span> bigpow1(a,b/2)*bigpow1(a,b/2)*a;</div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="built_in">return</span> bigpow1(a,b/2)*bigpow1(a,b/2);</div><div class="line">&#125;</div><div class="line">long long bigpow2(int a,int b)    //二分实现</div><div class="line">&#123;</div><div class="line">	int re=1,base=a;</div><div class="line">	<span class="keyword">while</span>(b!=0)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(b&amp;1)</div><div class="line">			re*=base;</div><div class="line">		base*=base;</div><div class="line">		b&gt;&gt;=1;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> re;</div><div class="line">&#125;</div><div class="line">long long bigpow3(int a,int b,int p)    //二分取模</div><div class="line">&#123;</div><div class="line">	int re=1,base=a%p;</div><div class="line">	<span class="keyword">while</span>(b!=0)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(b&amp;1)</div><div class="line">			re*=base%p;</div><div class="line">		base*=base%p;</div><div class="line">		b&gt;&gt;=1;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> re;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int a,b,p;</div><div class="line">	cin&gt;&gt;a&gt;&gt;b&gt;&gt;p;</div><div class="line">	long long re=bigpow3(a,b,p);</div><div class="line">	cout&lt;&lt;re&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>给出了快速幂的递归实现，二分实现以及二分取模实现。</p>
<h2 id="线段点和"><a href="#线段点和" class="headerlink" title="线段点和"></a>线段点和</h2><h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147982016043.png" alt=""></p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int vis[10050],dian[50050];</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int l,r;</div><div class="line">&#125;e[10050];</div><div class="line">bool cmp(node x,node y)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(x.l==y.l)</div><div class="line">		<span class="built_in">return</span> x.r&lt;y.r;</div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="built_in">return</span> x.l&lt;y.l;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n,m;</div><div class="line">	cin&gt;&gt;n&gt;&gt;m;</div><div class="line">	memset(vis,0,sizeof(vis));</div><div class="line">	memset(dian,0,sizeof(dian));</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">	&#123;</div><div class="line">		int x;</div><div class="line">		cin&gt;&gt;x;</div><div class="line">		dian[x]=1;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">		cin&gt;&gt;e[i].l&gt;&gt;e[i].r;</div><div class="line">	int ans=0,E;</div><div class="line">	sort(e+1,e+1+m,cmp);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">	&#123;</div><div class="line">		int max=-INT_MAX;</div><div class="line">		<span class="keyword">if</span>(!vis[i])</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span>(int j=e[i].l;j&lt;=e[i].r;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(dian[j])</div><div class="line">				&#123;</div><div class="line">					int flag=1;</div><div class="line">					<span class="keyword">for</span>(int k=i+1;k&lt;=m;k++)</div><div class="line">					&#123;</div><div class="line">						<span class="keyword">if</span>(j&gt;=e[k].l&amp;&amp;j&lt;=e[k].r)</div><div class="line">							flag++;</div><div class="line">						<span class="keyword">else</span></div><div class="line">							<span class="built_in">break</span>;</div><div class="line">					&#125;</div><div class="line">					<span class="keyword">if</span>(flag&gt;max)</div><div class="line">					&#123;</div><div class="line">						max=flag;</div><div class="line">						E=j;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			ans++;</div><div class="line">			<span class="keyword">for</span>(int j=i+1;j&lt;=m;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(E&gt;=e[j].l&amp;&amp;E&lt;=e[j].r)</div><div class="line">					vis[j]=1;</div><div class="line">				<span class="keyword">else</span></div><div class="line">					<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>对所有区间进行升序排序，若x值一样按y值的升序排列。从第一个区间开始遍历所有给出的点，若满足该区间则判断是否满足下一个区间，直到不满足为止。<br>计算并保留走的最远的点，把中间经历过的区间的vis至为1，直接从下一个区间开始继续遍历给出的所有的点，直到区间已用完。输出点数即可。</p>
<h2 id="超级玛丽"><a href="#超级玛丽" class="headerlink" title="超级玛丽"></a>超级玛丽</h2><h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147982204248.png" alt=""></p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">int dp[50],flag[50];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n,m;</div><div class="line">	cin&gt;&gt;n&gt;&gt;m;</div><div class="line">	memset(flag,0,sizeof(flag));</div><div class="line">	memset(dp,0,sizeof(dp));</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">	&#123;</div><div class="line">		int x;</div><div class="line">		cin&gt;&gt;x;</div><div class="line">		flag[x]++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(!flag[1])</div><div class="line">		dp[1]=1;</div><div class="line">	<span class="keyword">if</span>(!flag[2])</div><div class="line">		dp[2]=1;</div><div class="line">	<span class="keyword">for</span>(int i=3;i&lt;=n;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(flag[i])</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		dp[i]=dp[i-1]+dp[i-2];</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;dp[n]&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>不考虑陷进的情况下，满足斐波拉契递推式dp[n]=dp[n-1]+dp[n-2]。dp[1]=dp[2]=1。考虑陷进的情况下只需把陷进处的dp值赋为0即可。</p>
<h2 id="盾神与砝码称重"><a href="#盾神与砝码称重" class="headerlink" title="盾神与砝码称重"></a>盾神与砝码称重</h2><h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14798224298.png" alt=""></p>
<h3 id="参考AC代码-暴力裸搜"><a href="#参考AC代码-暴力裸搜" class="headerlink" title="参考AC代码(暴力裸搜)"></a>参考AC代码(暴力裸搜)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int n,m,w[25];</div><div class="line">int dfs(int now,int id)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(!now)</div><div class="line">		<span class="built_in">return</span> 1;</div><div class="line">	<span class="keyword">if</span>(now&amp;&amp;id==n+1)</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	<span class="built_in">return</span> dfs(now-w[id],id+1)||dfs(now,id+1)||dfs(now+w[id],id+1);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	cin&gt;&gt;n&gt;&gt;m;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		cin&gt;&gt;w[i];</div><div class="line">	sort(w+1,w+1+n);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">	&#123;</div><div class="line">		int x;</div><div class="line">		cin&gt;&gt;x;</div><div class="line">		<span class="keyword">if</span>(dfs(x,1))</div><div class="line">			cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考代码-优化剪枝"><a href="#参考代码-优化剪枝" class="headerlink" title="参考代码(优化剪枝)"></a>参考代码(优化剪枝)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int n,m,w[25],sum[25];</div><div class="line">int dfs(int now,int id)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(!now)</div><div class="line">		<span class="built_in">return</span> 1;</div><div class="line">	<span class="keyword">if</span>(now&amp;&amp;id==0)</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	<span class="keyword">if</span>(abs(now)&gt;sum[id])</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	<span class="built_in">return</span> dfs(now-w[id],id-1)||dfs(now,id-1)||dfs(now+w[id],id-1);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	cin&gt;&gt;n&gt;&gt;m;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		cin&gt;&gt;w[i];</div><div class="line">	sum[0]=0;</div><div class="line">	sort(w+1,w+1+n);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++) </div><div class="line">		sum[i]=sum[i-1]+w[i];</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">	&#123;</div><div class="line">		int x;</div><div class="line">		cin&gt;&gt;x;</div><div class="line">		<span class="keyword">if</span>(dfs(x,n))</div><div class="line">			cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>暴力裸搜只能得50分，复杂度为3^n（放左 放右 不放）会爆。所以采用优化剪枝的方法，把砝码按质量大小升序排序后求出前缀和。从最大的砝码开始放，<br>加一个剪枝：若目前物体剩余的质量的绝对值仍大于剩余所有砝码的质量，返回0。</p>
<h2 id="减格子"><a href="#减格子" class="headerlink" title="减格子"></a>减格子</h2><h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147982286984.png" alt=""></p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define N 10</span></div><div class="line">int num[N][N];</div><div class="line">int tag[N][N] = &#123;0&#125;;</div><div class="line">int m, n;</div><div class="line">int r = 100;</div><div class="line">int bad(int i, int j)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (i &lt; 0 || i &gt;= n || j &lt; 0 || j &gt;= m || tag[i][j] == 1)</div><div class="line">        <span class="built_in">return</span> 1;  </div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">void go(int i, int j, int k, int count)</div><div class="line">&#123; </div><div class="line">    <span class="keyword">if</span> (bad(i, j) || count &lt; num[i][j])</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    k++;</div><div class="line">    <span class="keyword">if</span> (count == num[i][j])</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (r &gt; k)</div><div class="line">            r = k;</div><div class="line">        <span class="built_in">return</span>; </div><div class="line">    &#125;</div><div class="line">    tag[i][j] = 1;</div><div class="line">    count -= num[i][j];</div><div class="line">    go(i - 1, j, k, count); </div><div class="line">    go(i + 1, j, k, count);</div><div class="line">    go(i, j - 1, k, count); </div><div class="line">    go(i, j + 1, k, count);</div><div class="line">    tag[i][j] = 0;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    int i, j;</div><div class="line">    int half = 0;</div><div class="line">	scanf(<span class="string">"%d %d"</span>, &amp;m, &amp;n);</div><div class="line">    <span class="keyword">for</span> (i = 0; i &lt; n; i++)</div><div class="line">        <span class="keyword">for</span> (j = 0; j &lt; m; j++)</div><div class="line">        &#123;</div><div class="line">            scanf(<span class="string">"%d"</span>, &amp;num[i][j]);</div><div class="line">            half += num[i][j];</div><div class="line">        &#125;</div><div class="line">    <span class="keyword">if</span> (half % 2 == 0 &amp;&amp; half &gt;= num[0][0] * 2)</div><div class="line">    &#123;</div><div class="line">        half /= 2;</div><div class="line">        go(0, 0, 0, half);</div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">if</span> (r == 100)</div><div class="line">        r = 0;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, r);</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>深搜即可。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[后缀数组四大基础应用]]></title>
      <url>http://xuboming8.github.io/2016/11/21/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E5%9B%9B%E5%A4%A7%E5%9F%BA%E7%A1%80%E5%BA%94%E7%94%A8/</url>
      <content type="html"><![CDATA[<h1 id="后缀数组"><a href="#后缀数组" class="headerlink" title="后缀数组"></a>后缀数组</h1><h2 id="例题一"><a href="#例题一" class="headerlink" title="例题一"></a>例题一</h2><p><strong>最长可重叠重复K次子串问题</strong></p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>第一行两个整数 N和K。1≤N≤20000 1≤K≤N<br>接下来有 N 个整数，表示每个音的数字。1≤数字≤100</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>一行一个整数，表示答案。<br><a id="more"></a></p>
<h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><p>8 2<br>1<br>2<br>3<br>2<br>3<br>2<br>3<br>1</p>
<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><p>4</p>
<h3 id="参考AC代码-int型"><a href="#参考AC代码-int型" class="headerlink" title="参考AC代码(int型)"></a>参考AC代码(int型)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int N = 1000050;   </div><div class="line">int sa[N],Rank[N],Rank2[N],height[N],cnt[N*50],*x,*y,n,k; </div><div class="line">int str[N];  </div><div class="line">void radix_sort(int n,int sz)  </div><div class="line">&#123;  </div><div class="line">    memset(cnt,0,sizeof(int)*sz);  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">        cnt[ x[ y[i] ] ]++;  </div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;sz;i++)  </div><div class="line">        cnt[i] += cnt[i-1];  </div><div class="line">    <span class="keyword">for</span>(int i=n-1;i&gt;=0;i--)  </div><div class="line">        sa[ --cnt[ x[ y[i] ] ] ] = y[i];  </div><div class="line">&#125; </div><div class="line">void get_sa(int text[],int n,int sz=1000001)  </div><div class="line">&#123;  </div><div class="line">    x = Rank, y = Rank2;  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">        x[i] = text[i], y[i] = i;  </div><div class="line">    radix_sort(n,sz);  </div><div class="line">    <span class="keyword">for</span>(int len=1;len&lt;n;len&lt;&lt;=1)  </div><div class="line">    &#123;  </div><div class="line">        int yid = 0;  </div><div class="line">        <span class="keyword">for</span>(int i=n-len;i&lt;n;i++)  </div><div class="line">            y[yid++] = i;  </div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">            <span class="keyword">if</span>(sa[i] &gt;= len)  </div><div class="line">                y[yid++] = sa[i] - len;  </div><div class="line">        radix_sort(n,sz);  </div><div class="line">        swap(x,y);  </div><div class="line">        x[ sa[0] ] = yid = 0;  </div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;n;i++)  </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">if</span>(y[ sa[i-1] ]==y[ sa[i] ] &amp;&amp; sa[i-1]+len&lt;n &amp;&amp; sa[i]+len&lt;n &amp;&amp; y[ sa[i-1]+len ]==y[ sa[i]+len ])  </div><div class="line">                x[ sa[i] ] = yid;  </div><div class="line">            <span class="keyword">else</span>  </div><div class="line">                x[ sa[i] ] = ++yid;  </div><div class="line">        &#125;  </div><div class="line">        sz = yid + 1;  </div><div class="line">        <span class="keyword">if</span>(sz &gt;= n)  </div><div class="line">            <span class="built_in">break</span>;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">        Rank[i] = x[i];  </div><div class="line">&#125;  </div><div class="line"> </div><div class="line">void get_height(int text[],int n)  </div><div class="line">&#123;  </div><div class="line">    int k = 0;  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">if</span>(Rank[i] == 0)  </div><div class="line">            <span class="built_in">continue</span>;  </div><div class="line">        k = max(0,k-1);  </div><div class="line">        int j = sa[ Rank[i]-1 ];  </div><div class="line">        <span class="keyword">while</span>(i+k&lt;n &amp;&amp; j+k&lt;n &amp;&amp; text[i+k]==text[j+k])  </div><div class="line">            k++;  </div><div class="line">        height[ Rank[i] ] = k;  </div><div class="line">    &#125;  </div><div class="line">&#125;   </div><div class="line">bool <span class="built_in">set</span>(int mid,int n,int k)  </div><div class="line">&#123;  </div><div class="line">    <span class="keyword">for</span>(int st=0,ed;st&lt;n;st=ed)  </div><div class="line">    &#123;  </div><div class="line">        ed = st + 1;  </div><div class="line">        <span class="keyword">while</span>(ed &lt; n &amp;&amp; height[ed] &gt;= mid)  </div><div class="line">            ed++;  </div><div class="line">        <span class="keyword">if</span>(ed - st &gt;= k)  </div><div class="line">            <span class="built_in">return</span> <span class="literal">true</span>;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> <span class="literal">false</span>;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>() </div><div class="line">&#123;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;k)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;str[i]);  </div><div class="line">		get_sa(str,n);  </div><div class="line">		get_height(str,n);  </div><div class="line">		int l=0,r=n,mid;</div><div class="line">		<span class="keyword">while</span> (l &lt; r)</div><div class="line">		&#123;</div><div class="line">			mid = (l + r + 1) &gt;&gt; 1;</div><div class="line">			<span class="keyword">if</span> (<span class="built_in">set</span>(mid,n,k)) </div><div class="line">				l = mid;</div><div class="line">			<span class="keyword">else</span> </div><div class="line">				r = mid - 1;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, l);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="例题二"><a href="#例题二" class="headerlink" title="例题二"></a>例题二</h2><p><strong>最长不可重叠重复子串问题</strong></p>
<h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>第一行一个整数 N。1≤N≤100000<br>接下来有 N 个整数，表示每个音的数字。1≤数字≤1000</p>
<h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>一行一个整数，表示答案。</p>
<h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><p>8<br>1 2 3 2 3 2 3 1</p>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><p>2</p>
<h3 id="参考AC代码-int型-1"><a href="#参考AC代码-int型-1" class="headerlink" title="参考AC代码(int型)"></a>参考AC代码(int型)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int mx=1e5+5;</div><div class="line">int s[mx],sa[mx],t[mx],t2[mx],c[mx],n;      //s为输入数组 sa为后缀数组 ank为名次数组</div><div class="line">int ank[mx],height[mx];                      //height为相邻公共前缀数组</div><div class="line">int minsa,maxsa;</div><div class="line">void build_sa(int m)</div><div class="line">&#123;</div><div class="line">    int i,*x=t,*y=t2;</div><div class="line">    <span class="keyword">for</span> (i=0;i&lt;m;i++) c[i]=0;</div><div class="line">    <span class="keyword">for</span> (i=0;i&lt;n;i++) c[x[i]=s[i]]++;</div><div class="line">    <span class="keyword">for</span> (i=1;i&lt;m;i++) c[i]+=c[i-1];</div><div class="line">    <span class="keyword">for</span> (i=n-1;i&gt;=0;i--) sa[--c[x[i]]]=i;</div><div class="line">    <span class="keyword">for</span> (int k=1;k&lt;=n;k&lt;&lt;=1)</div><div class="line">    &#123;</div><div class="line">        int p=0;</div><div class="line">        <span class="keyword">for</span> (i=n-k;i&lt;n;i++) y[p++]=i;</div><div class="line">        <span class="keyword">for</span> (i=0;i&lt;n;i++) <span class="keyword">if</span> (sa[i]&gt;=k) y[p++]=sa[i]-k;</div><div class="line">        <span class="keyword">for</span> (i=0;i&lt;m;i++) c[i]=0;</div><div class="line">        <span class="keyword">for</span> (i=0;i&lt;n;i++) c[x[y[i]]]++;</div><div class="line">        <span class="keyword">for</span> (i=1;i&lt;m;i++) c[i]+=c[i-1];</div><div class="line">        <span class="keyword">for</span> (i=n-1;i&gt;=0;i--) sa[--c[x[y[i]]]]=y[i];</div><div class="line">        swap(x,y);</div><div class="line">        p=1;</div><div class="line">        x[sa[0]]=0;</div><div class="line">        <span class="keyword">for</span> (i=1;i&lt;n;i++)</div><div class="line">        x[sa[i]]=y[sa[i-1]]==y[sa[i]]&amp;&amp;y[sa[i-1]+k]==y[sa[i]+k]?p-1:p++;</div><div class="line">        <span class="keyword">if</span> (p&gt;=n) <span class="built_in">break</span>;</div><div class="line">        m=p;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">getHeight</span></span>()</div><div class="line">&#123;</div><div class="line">    int i,j,k=0;</div><div class="line">    <span class="keyword">for</span> (i=0;i&lt;n;i++) ank[sa[i]]=i;</div><div class="line">    <span class="keyword">for</span> (i=0;i&lt;n;i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (k) k--;</div><div class="line">        int j=sa[ank[i]-1];</div><div class="line">        <span class="keyword">while</span> (s[i+k]==s[j+k]) k++;</div><div class="line">        height[ank[i]]=k;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">Init</span></span>() </div><div class="line">&#123;</div><div class="line">    cin&gt;&gt;n;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		cin&gt;&gt;s[i];</div><div class="line">&#125;</div><div class="line">bool check(int K)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">    <span class="keyword">if</span>(height[i]&lt; K)</div><div class="line">    &#123;</div><div class="line">        minsa=sa[i];</div><div class="line">        maxsa=sa[i];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> </div><div class="line">    &#123;</div><div class="line">        minsa=min(minsa,sa[i]);</div><div class="line">        maxsa=max(maxsa,sa[i]);</div><div class="line">        <span class="keyword">if</span>(maxsa-minsa&gt;=K)<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	Init();</div><div class="line">    build_sa(1001);</div><div class="line">	getHeight();</div><div class="line">	int l,r,mid;</div><div class="line">	l = 0; r = n /*&gt;&gt; 1*/;</div><div class="line">	<span class="keyword">while</span> (l &lt; r)</div><div class="line">	&#123;</div><div class="line">		mid = (l + r + 1) &gt;&gt; 1;</div><div class="line">		<span class="keyword">if</span> (check(mid)) </div><div class="line">			l = mid;</div><div class="line">		<span class="keyword">else</span> </div><div class="line">			r = mid - 1;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, l);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="例题三"><a href="#例题三" class="headerlink" title="例题三"></a>例题三</h2><p><strong>最长公共子串问题</strong></p>
<h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>共两行。一行一个仅包含小写字母的字符串。字符串长度不超过 100000。</p>
<h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>一行一个整数，表示答案。</p>
<h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><p>abcdefg<br>abacabca</p>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><p>3</p>
<h3 id="参考AC代码-char型"><a href="#参考AC代码-char型" class="headerlink" title="参考AC代码(char型)"></a>参考AC代码(char型)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int MAXN = 4e5+1e3;</div><div class="line">char s[MAXN];</div><div class="line">int sa[MAXN], wa[MAXN], wb[MAXN], cnt[MAXN];</div><div class="line">int rnk[MAXN], hi[MAXN], l1, l2;</div><div class="line">bool equal(int *r,int a, int b, int k) </div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> r[a]==r[b]&amp;&amp;r[a+k]==r[b+k];</div><div class="line">&#125;</div><div class="line">void DA(int n, int m) </div><div class="line">&#123;</div><div class="line">	int *x=wa, *y=wb, i, j, p;</div><div class="line">	<span class="keyword">for</span>(i=0; i&lt;m; ++i) cnt[i]=0;</div><div class="line">	<span class="keyword">for</span>(i=0; i&lt;n; ++i) ++cnt[x[i]=s[i]];</div><div class="line">	<span class="keyword">for</span>(i=1; i&lt;m; ++i) cnt[i]+=cnt[i-1];</div><div class="line">	<span class="keyword">for</span>(i=n-1; i&gt;-1; --i) sa[--cnt[x[i]]] = i;</div><div class="line">	<span class="keyword">for</span>(j=1; j&lt;=n; j&lt;&lt;=1) &#123;</div><div class="line">		p=0;</div><div class="line">		<span class="keyword">for</span>(i=n-j; i&lt;n; ++i) y[p++] = i;</div><div class="line">		<span class="keyword">for</span>(i=0; i&lt;n; ++i) <span class="keyword">if</span>(sa[i]&gt;=j)</div><div class="line">		   y[p++] = sa[i]-j;	</div><div class="line">		<span class="keyword">for</span>(i=0; i&lt;m; ++i) cnt[i]=0; </div><div class="line">		<span class="keyword">for</span>(i=0; i&lt;n; ++i) ++cnt[x[i]];</div><div class="line">		<span class="keyword">for</span>(i=1; i&lt;m; ++i) cnt[i]+=cnt[i-1];</div><div class="line">		<span class="keyword">for</span>(i=n-1; i&gt;-1; --i) sa[--cnt[x[y[i]]]] = y[i];</div><div class="line">		swap(x,y);</div><div class="line">		m = 1;</div><div class="line">		x[sa[0]] = 0;</div><div class="line">		<span class="keyword">for</span>(i=1;i&lt;n; ++i)</div><div class="line">			x[sa[i]] = equal(y,sa[i-1],sa[i],j)?m-1:m++;</div><div class="line">		<span class="keyword">if</span>(m==n) <span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void calheight(int n) &#123;</div><div class="line">	int i, j, k;</div><div class="line">	<span class="keyword">for</span>(i=0; i&lt;n; ++i) rnk[sa[i]] = i; </div><div class="line">	<span class="keyword">for</span>(i=k=0; i&lt;n-1; ++i) &#123;</div><div class="line">		<span class="keyword">if</span>(k) --k;</div><div class="line">		j = sa[rnk[i]-1];</div><div class="line">		<span class="keyword">while</span>(s[i+k]==s[j+k]) ++k;</div><div class="line">		hi[rnk[i]] = k;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>() </div><div class="line">&#123;</div><div class="line">	int n;</div><div class="line">	scanf(<span class="string">"%s"</span>, s);</div><div class="line">	l1 = strlen(s);</div><div class="line">	s[l1] = <span class="string">'#'</span>;</div><div class="line">	scanf(<span class="string">"%s"</span>, s+l1+1);</div><div class="line">	l2 = strlen(s+l1+1);</div><div class="line">	n = l1+l2+1;</div><div class="line">	DA(n, 130);</div><div class="line">	calheight(n);</div><div class="line">	int res = 0;</div><div class="line">	<span class="keyword">for</span>(int i=1; i&lt;n-1; ++i)</div><div class="line">		<span class="keyword">if</span>((sa[i-1]&lt;l1)^(sa[i]&lt;l1))</div><div class="line">			res = max(res, hi[i]);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="例题四"><a href="#例题四" class="headerlink" title="例题四"></a>例题四</h2><p><strong>重复次数最多的连续字串</strong></p>
<h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><p>一行一个仅包含小写字母的字符串。字符串长度不超过 100000。</p>
<h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><p>一行一个整数，表示答案k。</p>
<h3 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h3><p>babbabaabaabaabab</p>
<h3 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h3><p>4</p>
<h3 id="参考AC代码-char型-1"><a href="#参考AC代码-char型-1" class="headerlink" title="参考AC代码(char型)"></a>参考AC代码(char型)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;cstring&gt;</span></div><div class="line"><span class="comment">#include &lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define N 100005</span></div><div class="line">int wa[N],wb[N],wv[N],ws[N];</div><div class="line">int sa[N],rk[N],height[N];</div><div class="line">char s[N];</div><div class="line">void da(int n)</div><div class="line">&#123;</div><div class="line">    int i,j,p,*x=wa,*y=wb,m=128;</div><div class="line">    <span class="keyword">for</span>(i=0;i&lt;m;i++)ws[i]=0;</div><div class="line">    <span class="keyword">for</span>(i=0;i&lt;n;i++)ws[x[i]=s[i]]++;</div><div class="line">    <span class="keyword">for</span>(i=1;i&lt;m;i++)ws[i]+=ws[i-1];</div><div class="line">    <span class="keyword">for</span>(i=n-1;i&gt;=0;i--)sa[--ws[x[i]]]=i;</div><div class="line">    <span class="keyword">for</span>(j=1,p=1;p&lt;n;j*=2,m=p)&#123;</div><div class="line">        <span class="keyword">for</span>(p=0,i=n-j;i&lt;n;i++)y[p++]=i;</div><div class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)<span class="keyword">if</span>(sa[i]&gt;=j)y[p++]=sa[i]-j;</div><div class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)wv[i]=x[y[i]];</div><div class="line">        <span class="keyword">for</span>(i=0;i&lt;m;i++)ws[i]=0;</div><div class="line">        <span class="keyword">for</span>(i=0;i&lt;n;i++)ws[wv[i]]++;</div><div class="line">        <span class="keyword">for</span>(i=1;i&lt;m;i++)ws[i]+=ws[i-1];</div><div class="line">        <span class="keyword">for</span>(i=n-1;i&gt;=0;i--)sa[--ws[wv[i]]]=y[i];</div><div class="line">        <span class="keyword">for</span>(swap(x,y),p=1,x[sa[0]]=0,i=1;i&lt;n;i++)</div><div class="line">            x[sa[i]]=(y[sa[i-1]]==y[sa[i]]&amp;&amp;y[sa[i-1]+j]==y[sa[i]+j])?p-1:p++;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void calheight(int n)</div><div class="line">&#123;</div><div class="line">    int i,j,k=0;</div><div class="line">    <span class="keyword">for</span>(i=1;i&lt;=n;i++)rk[sa[i]]=i;</div><div class="line">    <span class="keyword">for</span>(i=0;i&lt;n;height[rk[i++]]=k)</div><div class="line">        <span class="keyword">for</span>(k?k--:0,j=sa[rk[i]-1];s[i+k]==s[j+k];k++);</div><div class="line">&#125;</div><div class="line">int lcp[N][32];</div><div class="line">void init(int n)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++)lcp[i][0]=height[i];</div><div class="line">    <span class="keyword">for</span>(int i=1;(1&lt;&lt;i)&lt;=n;i++)</div><div class="line">        <span class="keyword">for</span>(int j=1;j+(1&lt;&lt;i)-1&lt;=n;j++)</div><div class="line">            lcp[j][i]=min(lcp[j][i-1],lcp[j+(1&lt;&lt;i-1)][i-1]);</div><div class="line">&#125;</div><div class="line">int LCP(int a,int b)</div><div class="line">&#123;</div><div class="line">    a--;b--;</div><div class="line">    int l=min(rk[a],rk[b])+1,r=max(rk[a],rk[b]);</div><div class="line">    int len=r<span class="_">-l</span>+1,i;</div><div class="line">    <span class="keyword">for</span>(i=0;(1&lt;&lt;i)&lt;=len;i++);</div><div class="line">    i--;</div><div class="line">    <span class="built_in">return</span> min(lcp[l][i],lcp[r-(1&lt;&lt;i)+1][i]);</div><div class="line">&#125;</div><div class="line">int get(int n)</div><div class="line">&#123;</div><div class="line">    int ans=0;</div><div class="line">    <span class="keyword">for</span>(int l=1;l&lt;=n;l++)</div><div class="line">    <span class="keyword">for</span>(int i=1;i+l&lt;=n;i+=l)&#123;</div><div class="line">        int r=LCP(i,i+l);</div><div class="line">        ans=max(ans,r/l+1);</div><div class="line">        <span class="keyword">if</span>(i<span class="_">-l</span>+r%l&gt;0)</div><div class="line">            ans=max(ans,LCP(i<span class="_">-l</span>+r%l,i+r%l)/l+1);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> ans;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    scanf(<span class="string">"%s"</span>,s);</div><div class="line">    int n=strlen(s);</div><div class="line">    da(n+1);</div><div class="line">    calheight(n);</div><div class="line">    init(n);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,get(n));</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[二分图交叉染色法模版题]]></title>
      <url>http://xuboming8.github.io/2016/11/16/%E4%BA%8C%E5%88%86%E5%9B%BE%E4%BA%A4%E5%8F%89%E6%9F%93%E8%89%B2%E6%B3%95%E6%A8%A1%E7%89%88%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="二分图交叉染色法"><a href="#二分图交叉染色法" class="headerlink" title="二分图交叉染色法"></a>二分图交叉染色法</h1><h2 id="HDU-4751"><a href="#HDU-4751" class="headerlink" title="HDU 4751"></a>HDU 4751</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147928814612.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147928814658.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147928814691.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147928814731.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147928814765.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>输入互相认识人的编号，问可不可以把人群分成认识和不认识的、</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line">using namespace std;</div><div class="line">vector&lt;int&gt;e[150];</div><div class="line">int u;</div><div class="line">bool flag;</div><div class="line">int color[150],map[150][150];</div><div class="line">bool DFS(int v,int c)</div><div class="line">&#123;   </div><div class="line">    color[v]=c;  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;e[v].size();i++)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">if</span>(color[e[v][i]]==c)  </div><div class="line">            <span class="built_in">return</span> <span class="literal">false</span>;  </div><div class="line">        <span class="keyword">if</span>(color[e[v][i]]==0&amp;&amp;!DFS(e[v][i],-c))  </div><div class="line">            <span class="built_in">return</span> <span class="literal">false</span>;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> <span class="literal">true</span>;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++) e[i].clear();  </div><div class="line">		flag=<span class="literal">true</span>;</div><div class="line">		memset(map,0,sizeof(map));</div><div class="line">		memset(color,0,sizeof(color));</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">while</span>(cin&gt;&gt;u&amp;&amp;u)</div><div class="line">				map[i][u]=1;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(j==i)</div><div class="line">					<span class="built_in">continue</span>;</div><div class="line">				<span class="keyword">if</span>(map[i][j]==0)</div><div class="line">				&#123;</div><div class="line">					e[i].push_back(j);</div><div class="line">					e[j].push_back(i);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n&amp;&amp;flag;i++)</div><div class="line">			<span class="keyword">if</span>(color[i]==0)</div><div class="line">				flag=DFS(i,1);</div><div class="line">		<span class="keyword">if</span>(flag)</div><div class="line">			cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>使用边集数组map作为过度作用，从而把互不认识的人加入vector前向星中。DFS中使用交叉染色法。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[11-13 周赛]]></title>
      <url>http://xuboming8.github.io/2016/11/15/11-13-%E5%91%A8%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="11-13-周赛"><a href="#11-13-周赛" class="headerlink" title="11-13 周赛"></a>11-13 周赛</h1><h2 id="Wrestling-Match"><a href="#Wrestling-Match" class="headerlink" title="Wrestling Match"></a>Wrestling Match</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920553614.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920553734.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920553846.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920553916.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920553981.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>给你N场比赛的双方对战情况，每场比赛必定有一方是Good Player另一方是Bad Player。你的任务是判断是否所有的人都可以被分为Good Players or Bad Player。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;vector&gt;  </span></div><div class="line"><span class="comment">#include&lt;string.h&gt;  </span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;  </span></div><div class="line"><span class="comment">#define MAX  1005  </span></div><div class="line">using namespace std;  </div><div class="line">vector&lt;int&gt;G[MAX];  </div><div class="line">int color[MAX];  </div><div class="line">int N,M,X,Y;  </div><div class="line">bool DFS(int v,int c)  </div><div class="line">&#123;   </div><div class="line">    color[v]=c;  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;G[v].size();i++)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">if</span>(color[G[v][i]]==c)  </div><div class="line">            <span class="built_in">return</span> <span class="literal">false</span>;  </div><div class="line">        <span class="keyword">if</span>(color[G[v][i]]==0&amp;&amp;!DFS(G[v][i],-c))  </div><div class="line">            <span class="built_in">return</span> <span class="literal">false</span>;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> <span class="literal">true</span>;  </div><div class="line">&#125;  </div><div class="line">void <span class="function"><span class="title">solve</span></span>()  </div><div class="line">&#123;   </div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=N;i++)  </div><div class="line">    &#123;  </div><div class="line">          </div><div class="line">        <span class="keyword">if</span>(color[i]==1)  </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">if</span>(!DFS(i,1))  </div><div class="line">            &#123;  </div><div class="line">                <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);  </div><div class="line">                <span class="built_in">return</span> ;  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(color[i]==-1)  </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">if</span>(!DFS(i,-1))  </div><div class="line">            &#123;  </div><div class="line">                <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);  </div><div class="line">                <span class="built_in">return</span> ;  </div><div class="line">            &#125;  </div><div class="line">        &#125;   </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=N;i++)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">if</span>(color[i]==0)  </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">if</span>(!DFS(i,1))  </div><div class="line">            &#123;  </div><div class="line">                <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);  </div><div class="line">                <span class="built_in">return</span> ;  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=N;i++)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">if</span>(color[i]==-5)  </div><div class="line">        &#123;  </div><div class="line">            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);  </div><div class="line">            <span class="built_in">return</span> ;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int a,b;  </div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d%d%d"</span>,&amp;N,&amp;M,&amp;X,&amp;Y)!=EOF)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=N;i++)  </div><div class="line">        &#123;</div><div class="line">            G[i].clear();  </div><div class="line">            color[i]=-5;  </div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=M;i++)  </div><div class="line">        &#123;  </div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;a,&amp;b);  </div><div class="line">            color[a]=0;  </div><div class="line">            color[b]=0;  </div><div class="line">            G[a].push_back(b);  </div><div class="line">            G[b].push_back(a);  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=X;i++)  </div><div class="line">        &#123;  </div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;a);  </div><div class="line">            color[a]=1;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=Y;i++)  </div><div class="line">        &#123;  </div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;a);  </div><div class="line">            color[a]=-1;  </div><div class="line">        &#125;  </div><div class="line">        solve();  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>二分图染色即可。交叉染色法的基本思路：<br>首先任意取出一个顶点进行染色,和该节点相邻的点有三种情况:<br>1.未染色—–那么继续染色此节点(染色为另一种颜色)<br>2.已染色但和当前节点颜色不同—–跳过该点<br>3.已染色并且和当前节点颜色相同—–返回失败(该图不是二分图)<br>宽搜+队列或深搜+交叉染色都可以，这里只给出后者的AC代码。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>存在单独的连通块，若不知道他是好还是坏那么输出NO。</p>
<h2 id="To-begin-or-not-to-begin"><a href="#To-begin-or-not-to-begin" class="headerlink" title="To begin or not to begin"></a>To begin or not to begin</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920921052.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920921177.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920921221.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920921257.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920921297.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>有x个黑球和1个红球，抽到红球算游戏胜利，问先手和后手谁赢得几率大或者一样大。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n&amp;1)</div><div class="line">			cout&lt;&lt;<span class="string">"0"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"1"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>多写几组样例可以发现是判断奇偶性的问题。</p>
<h2 id="最大的位或"><a href="#最大的位或" class="headerlink" title="最大的位或"></a>最大的位或</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920945712.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920945769.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920945819.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920951708.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14792094591.png" alt=""></p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		long long l,r;</div><div class="line">		cin&gt;&gt;l&gt;&gt;r;</div><div class="line">		long long i;</div><div class="line">		<span class="keyword">for</span>(i=1;(l|i)&lt;=r;i&lt;&lt;=1)</div><div class="line">			l|=i;</div><div class="line">		<span class="keyword">if</span>(l+1&lt;=r)</div><div class="line">		&#123;</div><div class="line">			l|=i;</div><div class="line">			cout&lt;&lt;l&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;l&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>通过位运算找到小于r的1最多的数，判断自加后仍在不在r范围内，若不在原数就是所求，否则两数相或就是所求。</p>
<h2 id="Convex"><a href="#Convex" class="headerlink" title="Convex"></a>Convex</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920981712.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920981764.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920981807.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920981847.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147920981885.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>求图形面积</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;math.h&gt;</span></div><div class="line"><span class="comment">#define PI 3.1415926</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n,d;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;d)</div><div class="line">	&#123;</div><div class="line">		double re=0;</div><div class="line">		int x;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;x;</div><div class="line">			re+=d*d*sin(PI*x/180)/2;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%.3f\n"</span>,re);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>简单数学模拟。<br>把图形面积划为求三角形面积，运用公式s=1/2absinα。题中的ab和角度都已给出。</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>使用math中的sin函数需注意角度是弧度制。</p>
<h2 id="CRB-and-His-Birthday"><a href="#CRB-and-His-Birthday" class="headerlink" title="CRB and His Birthday"></a>CRB and His Birthday</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147921052223.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147921052298.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147921052339.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14792105238.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147921052419.png" alt=""></p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>背包问题，给出背包容量，物品种类，物品花费和获得糖果的表达式。</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define N 1006</span></div><div class="line">int v,n;</div><div class="line">int w[N&lt;&lt;1],a[N&lt;&lt;1],b[N&lt;&lt;1];</div><div class="line">int dp[N&lt;&lt;1];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    int t;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)</div><div class="line">    &#123;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;v,&amp;n);</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">        &#123;</div><div class="line">            int x,y,z;</div><div class="line">            scanf(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;z);</div><div class="line">            w[i]=x,a[i]=y+z;</div><div class="line">            w[i+n]=x,a[i+n]=y;</div><div class="line">        &#125;</div><div class="line">        memset(dp,0,sizeof(dp));   </div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">            <span class="keyword">for</span>(int j=v;j&gt;=w[i];j--)</div><div class="line">                dp[j]=max(dp[j],dp[j-w[i]]+a[i]);   </div><div class="line">        <span class="keyword">for</span>(int i=n+1;i&lt;=2*n;i++)</div><div class="line">            <span class="keyword">for</span>(int j=w[i];j&lt;=v;j++)</div><div class="line">                dp[j]=max(dp[j],dp[j-w[i]]+a[i]); </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[v]);  </div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>观察Ai×x+Bi的表达式可以发现，第一次买物品获得的价值为Ai+Bi，以后每次的价值为Ai，所以题目可以划为一次01背包和多重背包。</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>由于把所物品化成Ai+Bi和Ai两种价值，相当于物品的种类扩大了两倍，所以数组必须开为原来的两倍。</p>
<h2 id="Counting-Cliques"><a href="#Counting-Cliques" class="headerlink" title="Counting Cliques"></a>Counting Cliques</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147921102389.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147921102455.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147921102495.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147921102495.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147921102768.png" alt=""></p>
<h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>给你一张无向图，要你求元素个数是S的团的个数。<br>团的定义：任意两个点之间都有一条边相邻图。</p>
<h3 id="参考AC代码-5"><a href="#参考AC代码-5" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line">using namespace std;</div><div class="line">int s,u,v,ans;</div><div class="line">int g[111][111];</div><div class="line">int data[111];</div><div class="line">vector&lt;int&gt;e[1111];</div><div class="line">int dfs(int id,int size)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(size==s)</div><div class="line">	&#123;</div><div class="line">		ans++;</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[id].size();i++)</div><div class="line">	&#123;</div><div class="line">		int ep=e[id][i];</div><div class="line">		bool flag=<span class="literal">true</span>;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;size;j++)</div><div class="line">			<span class="keyword">if</span>(!g[ep][data[j]])</div><div class="line">			&#123;</div><div class="line">				flag=<span class="literal">false</span>;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		<span class="keyword">if</span>(flag)</div><div class="line">		&#123;</div><div class="line">			data[++size]=ep;</div><div class="line">			dfs(ep,size);</div><div class="line">			data[size--]=0;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n,m;</div><div class="line">		cin&gt;&gt;n&gt;&gt;m&gt;&gt;s;</div><div class="line">		memset(g,0,sizeof(g));</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			e[i].clear();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;u&gt;&gt;v;</div><div class="line">			<span class="keyword">if</span>(u&gt;v)</div><div class="line">				swap(u,v);</div><div class="line">			e[u].push_back(v);</div><div class="line">			g[u][v]=g[v][u]=1;</div><div class="line">		&#125;</div><div class="line">		ans=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			int size=1;</div><div class="line">			data[1]=i;</div><div class="line">			dfs(i,1);</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>让每一条边都是u指向v,这里有u&lt;v。这样建边，dfs的时候如果出现过1，2，4，8这种情况后，不会再出现2，4，8，1这类的重复计算。<br>使用vector前向星存贮图。使用深搜遍历所有的情况即可。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[11-06 热身赛]]></title>
      <url>http://xuboming8.github.io/2016/11/09/11-06-%E7%83%AD%E8%BA%AB%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="周赛（四）"><a href="#周赛（四）" class="headerlink" title="周赛（四）"></a>周赛（四）</h1><h2 id="A-B"><a href="#A-B" class="headerlink" title="A/B"></a>A/B</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866086183.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866086273.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14786608631.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866086397.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14786608643.png" alt=""></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">void exgcd(int a,int b,int &amp;x,int &amp;y)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>( b== 0 )</div><div class="line">    &#123;</div><div class="line">        x= 1;</div><div class="line">        y= 0;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    exgcd(b,a%b,x,y);</div><div class="line">    int t=x;</div><div class="line">    x=y;</div><div class="line">    y=t<span class="_">-a</span>/b*y;</div><div class="line">    <span class="built_in">return</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int T;</div><div class="line">	cin&gt;&gt;T;</div><div class="line">	<span class="keyword">while</span>(T--)</div><div class="line">	&#123;</div><div class="line">		int p,q,y=9973; </div><div class="line">		long long B,n;</div><div class="line">		cin&gt;&gt;n&gt;&gt;B;</div><div class="line">		exgcd(y,B,p,q);</div><div class="line">		q*=n;</div><div class="line">		q=(q%y+y)%y;</div><div class="line">		cout&lt;&lt;q&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>exgcd模版题。<br>(n=A%9973)等价为A=9973<em>X+n。y=(A/B)%9973等价为A/B=9973</em>Z+y<br>因为A不知道，所以要把A消掉。得到的方程整理即是9973<em>(Z</em>B-X) +B<em>y = n<br>求y。所以把(Z</em>B-X)当成一个未知数就可以了，扩展欧几里德A掉。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>乍看和不定方程无关。但是经过最简单的数学化简后即可化成不定方程，带入exgcd模版后暴力A掉。</p>
<h2 id="Tree"><a href="#Tree" class="headerlink" title="Tree"></a>Tree</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147876116194.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147876116233.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14787611627.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147876116304.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147876116348.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>有N个点，若VA或VB或VA+VB是质数，那么点AB的边权是min(VA,VB,|VA-VB|)，它们才可以连接。求连接所有点的边权之和，若不可连接所有的点输出-1.</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int t,n;</div><div class="line">int a[605];</div><div class="line">int prime[1000005],p[605];</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int u,v,w;</div><div class="line">&#125;e[180005];</div><div class="line">bool cmp(node a,node b)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> a.w&lt;b.w;</div><div class="line">&#125;</div><div class="line">int find(int x)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> p[x]==x?x:find(p[x]);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">read</span></span>()</div><div class="line">&#123;</div><div class="line">	int x=0;</div><div class="line">	char ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&lt;<span class="string">'0'</span> ||ch&gt;<span class="string">'9'</span>)</div><div class="line">		ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span> &amp;&amp;ch&lt;=<span class="string">'9'</span>)</div><div class="line">	&#123;</div><div class="line">		x=x*10+ch-<span class="string">'0'</span>;</div><div class="line">		ch=getchar();</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> x;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">setprime</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(prime,-1,sizeof(prime));</div><div class="line">	prime[0]=prime[1]=0;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;1000000;i++)</div><div class="line">		<span class="keyword">if</span>(prime[i]==-1)</div><div class="line">			<span class="keyword">for</span>(int temp=2*i;temp&lt;=1000000;temp+=i)</div><div class="line">				prime[temp]=0;</div><div class="line">&#125;</div><div class="line">void kruskal(int top)</div><div class="line">&#123;</div><div class="line">	int k=0,ans=0,x,y;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		p[i]=i;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=top;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(k==n-1)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		x=find(e[i].u),y=find(e[i].v);</div><div class="line">		<span class="keyword">if</span>(x!=y)</div><div class="line">		&#123;</div><div class="line">			ans+=e[i].w;</div><div class="line">			p[x]=y;</div><div class="line">			k++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,k&lt;n-1?-1:ans);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	t=<span class="built_in">read</span>();</div><div class="line">	setprime();</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		n=<span class="built_in">read</span>();</div><div class="line">		int top=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			a[i]=<span class="built_in">read</span>();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=i+1;j&lt;=n;j++)</div><div class="line">				<span class="keyword">if</span>(prime[a[i]] || prime[a[j]] || prime[a[i]+a[j]])</div><div class="line">				&#123;</div><div class="line">					e[++top].w=min(min(a[i],a[j]),abs(a[i]<span class="_">-a</span>[j]));</div><div class="line">					e[top].u=i;</div><div class="line">					e[top].v=j;</div><div class="line">				&#125;</div><div class="line">		sort(e+1,e+1+top,cmp);</div><div class="line">		kruskal(top);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>最小生成树即可AC。<br>保存边集的点和权值后使用kruskal算法即可。素数的判断使用了数组，数组的索引就是范围内的所有整数，若为素数值为1，否则为0.</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>注意k=n-1时退出循环，输出是判断k是否等于k-1相当于连接了所有点，不满足输出-1.</p>
<h2 id="Max-Sum-of-Max-K-sub-sequence"><a href="#Max-Sum-of-Max-K-sub-sequence" class="headerlink" title="Max Sum of Max-K-sub-sequence"></a>Max Sum of Max-K-sub-sequence</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866275799.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866275846.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866275883.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866275917.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866275956.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>有一个“环状”数组，求最大长度不超过k的连续子串和的最大值，并输出起始和终止位置。</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cmath&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int N = 1e5 + 10;</div><div class="line">const int INF = 1e9;</div><div class="line">int a[N],sum[N &lt;&lt; 1];</div><div class="line">struct node&#123;</div><div class="line">    int x,id;</div><div class="line">&#125;q[N &lt;&lt; 1];</div><div class="line">int n,k;</div><div class="line">void <span class="function"><span class="title">dull</span></span>()</div><div class="line">&#123;</div><div class="line">    int f = 0,r = 0;</div><div class="line">    int ans = -INF,s,e;</div><div class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= (n &lt;&lt; 1); ++i)</div><div class="line">	&#123;</div><div class="line">        <span class="keyword">while</span>(f &lt; r &amp;&amp; q[r - 1].x &lt; sum[i]) </div><div class="line">			--r;</div><div class="line">        q[r].x = sum[i],q[r++].id = i;</div><div class="line">		<span class="keyword">while</span>(f &lt; r &amp;&amp; i - q[f].id &gt;= k)</div><div class="line">			++f;</div><div class="line">        <span class="keyword">if</span>(i &gt;= k &amp;&amp; q[f].x - sum[i - k] &gt; ans)</div><div class="line">		&#123;</div><div class="line">            ans = q[f].x - sum[i - k];</div><div class="line">            s = i - k + 1;</div><div class="line">            e = q[f].id;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,ans,(s &gt; n ? s - n : s),(e &gt; n ? e - n : e));</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">    int T;</div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;T);</div><div class="line">    <span class="keyword">while</span>(T--)&#123;</div><div class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</div><div class="line">        sum[0] = 0,sum[n + 1] = 0;</div><div class="line">        <span class="keyword">for</span>(int i = 1; i &lt;= n; ++i)&#123;</div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">            sum[i] = sum[i-1] + a[i];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(int i = n + 1; i &lt;= (n &lt;&lt; 1); ++i) sum[i] = sum[i-1] + a[i - n];</div><div class="line">        dull();</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>单调队列即可AC。<br>代码中为了解决环状问题数组扩充了两倍，但其实只需扩充k-1位即可。<br>求出前缀和数组sum后进行单调队列最关键的四部操作:（顺序可交换）（因为求最大值所以要保证队列递减）<br>1.队头出队：为了保证队列的递减性，我们在插入元素v的时候，要将队尾的元素和v比较，如果队尾的元素不大于v,则删除队尾的元素，然后继续将新的队尾的元素与v比较，<br>            直到队尾的元素大于v,这个时候我们才将v插入到队尾。<br>2.队尾出队：由于我们只需要保存i的前k-1个元素中的最大值，所以当队首的元素的索引或下标小于i-k+1的时候，就说明队首的元素对于求f(i)已经没有意义了，因为它已<br>            经不在窗里面了。所以当index[队首元素]&lt;i-k+1时，将队首元素删除。<br>3.记录头/尾的位置<br>4.保存max：单调队列至i的时候，此时单调队列记录的是i-k+1到i中的sum的最大值，那么[i-k+1,i]这一段的最大sum值其实是q[f]-sum[i-k],其中q[f]是单调队列的队列首<br>           元素，也就是最大值。然后用ans记录比较最大值即可。</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>理解单调队列的出队是解题的关键。<br>附上单调队列的最简单应用：一个长度为k的窗在整数数列上移动，求窗里面所包含的数的最大值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;  </span></div><div class="line"><span class="comment">#include&lt;queue&gt;   </span></div><div class="line">using namespace std;   </div><div class="line">struct Node  </div><div class="line">&#123;  </div><div class="line">    int val;  </div><div class="line">    int index;  </div><div class="line">&#125;;  </div><div class="line">void GetMax(int *numSequence,int len, int *result,int k)  </div><div class="line">&#123;  </div><div class="line">    Node *que = new Node[len];  </div><div class="line">    int head = 0;  </div><div class="line">    int end = 0;  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)  </div><div class="line">    &#123;  </div><div class="line">        Node tmp;  </div><div class="line">        tmp.val = numSequence[i];  </div><div class="line">        tmp.index = i;  </div><div class="line">        <span class="keyword">while</span>(end!=0 &amp;&amp; que[end].val&lt;=numSequence[i])  </div><div class="line">            --end;  </div><div class="line">        ++end;  </div><div class="line">        que[end] = tmp;  </div><div class="line">        <span class="keyword">while</span>(end!=0 &amp;&amp; que[head].index&lt;i-k+1)  </div><div class="line">            ++head;  </div><div class="line">        result[i] = que[head].val;  </div><div class="line">    &#125;     </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int len, k;  </div><div class="line">    cin&gt;&gt;len&gt;&gt;k;  </div><div class="line">    int *numSequence = new int[len];  </div><div class="line">    int *maxResult = new int[len];  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;len;i++)  </div><div class="line">        cin&gt;&gt;numSequence[i];  </div><div class="line">    GetMax(numSequence,len,maxResult,k);  </div><div class="line">    <span class="keyword">for</span>(int i=k-1;i&lt;len;i++)  </div><div class="line">        cout&lt;&lt;i&lt;&lt;<span class="string">": "</span>&lt;&lt;maxResult[i]&lt;&lt;endl;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="Candy-Sharing-Game"><a href="#Candy-Sharing-Game" class="headerlink" title="Candy Sharing Game"></a>Candy Sharing Game</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866609286.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866609329.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866609367.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/1478666094.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866609442.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>N个人围成一圈手拿偶数个糖果，每次下达指令后所有人把自己一半的糖果给自己右边的人，若自己手上的糖果为奇数则+1，求最后下达多少次指令后所有人的糖果数才相等，<br>并输出糖果数。</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int f(int a[],int n)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n-1;i++)</div><div class="line">		<span class="keyword">if</span>(a[i]!=a[i+1])</div><div class="line">			<span class="built_in">return</span> 1;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&amp;&amp;n)</div><div class="line">	&#123;</div><div class="line">		int a[500],flag=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			cin&gt;&gt;a[i];</div><div class="line">		<span class="keyword">while</span>(f(a,n))</div><div class="line">		&#123;</div><div class="line">			flag++;</div><div class="line">			int temp=a[n-1]/2;</div><div class="line">			<span class="keyword">for</span>(int i=n-1;i&gt;0;i--)</div><div class="line">			&#123;</div><div class="line">				a[i]=a[i]/2+a[i-1]/2;</div><div class="line">				<span class="keyword">if</span>(a[i]&amp;1)</div><div class="line">					a[i]++;</div><div class="line">			&#125;</div><div class="line">			a[0]=a[0]/2+temp;</div><div class="line">			<span class="keyword">if</span>(a[0]&amp;1)</div><div class="line">				a[0]++;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;flag&lt;&lt;<span class="string">" "</span>&lt;&lt;a[0]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>模拟题。<br>每个人在给出一半后才可以接受别人的糖果。for循环遍历后考虑头尾成环的特殊情况即可。</p>
<h3 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h3><p>环状拉成数组。</p>
<h2 id="Tr-A"><a href="#Tr-A" class="headerlink" title="Tr A"></a>Tr A</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866931994.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866932038.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866932071.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866932104.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147866932144.png" alt=""></p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"><span class="comment">#include &lt;string.h&gt;</span></div><div class="line">typedef struct Node</div><div class="line">&#123;</div><div class="line">    int m[11][11];</div><div class="line">&#125;Matrix;</div><div class="line">Matrix init, unit;  //初始化输入矩阵，单位矩阵如果用递归写Pow函数可以不用单位矩阵</div><div class="line">int n, K;</div><div class="line">void Init( )  //初始化</div><div class="line">&#123;</div><div class="line">    scanf( <span class="string">"%d%d"</span>, &amp;n, &amp;K );</div><div class="line">    <span class="keyword">for</span>( int i=0; i&lt;n; ++ i )</div><div class="line">        <span class="keyword">for</span>( int j=0; j&lt;n; ++ j )</div><div class="line">        &#123;</div><div class="line">            scanf( <span class="string">"%d"</span>, &amp;init.m[i][j] );</div><div class="line">            unit.m[i][j]=( i == j );</div><div class="line">        &#125;</div><div class="line">&#125;</div><div class="line">Matrix Mul( Matrix a, Matrix b )  //矩阵乘法</div><div class="line">&#123;</div><div class="line">    Matrix c;</div><div class="line">    <span class="keyword">for</span>( int i=0; i&lt;n; ++ i )</div><div class="line">        <span class="keyword">for</span>( int j=0; j&lt;n; ++ j )</div><div class="line">        &#123;</div><div class="line">            c.m[i][j]=0;  //特别注意</div><div class="line">            <span class="keyword">for</span>( int k=0; k&lt;n; ++ k )</div><div class="line">                c.m[i][j] += a.m[i][k]*b.m[k][j];</div><div class="line">            c.m[i][j] %= 9973;</div><div class="line">        &#125; </div><div class="line">    <span class="built_in">return</span> c;</div><div class="line">&#125;</div><div class="line">Matrix Pow( Matrix a, Matrix b, int k )</div><div class="line">&#123;</div><div class="line">    <span class="keyword">while</span>( k&gt;1 )</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>( k&amp;1 )  // k为奇数时</div><div class="line">        &#123;</div><div class="line">            k --;</div><div class="line">            b=Mul( a, b );</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>   // k为偶数</div><div class="line">        &#123;</div><div class="line">            k &gt;&gt;= 1;</div><div class="line">            a=Mul( a, a );</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    a=Mul( a, b );</div><div class="line">    <span class="built_in">return</span> a;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>( )</div><div class="line">&#123;</div><div class="line">    int T;</div><div class="line">    scanf( <span class="string">"%d"</span>, &amp;T );</div><div class="line">    <span class="keyword">while</span>( T -- )</div><div class="line">    &#123;</div><div class="line">        Matrix x;</div><div class="line">        Init( );</div><div class="line">        x=Pow( init, unit, K );</div><div class="line">        int sum=0, i=0;</div><div class="line">        n--;</div><div class="line">        <span class="keyword">while</span>( n &gt;= 0 )</div><div class="line">        &#123;</div><div class="line">            sum += x.m[n][n];</div><div class="line">            sum%=9973;</div><div class="line">            n --;    </div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>( <span class="string">"%d\n"</span>, sum%9973 );</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>由于矩阵乘法具有结合律，因此A^4 = A <em> A </em> A <em> A = (A</em>A) <em> (A</em>A) = A^2 <em> A^2。我们可以得到这样的结论：当n为偶数时，A^n = A^(n/2) </em> A^(n/2)；当n为奇数时，<br>A^n = A^(n/2) <em> A^(n/2) </em> A （其中n/2取整）。这就告诉我们，计算A^n也可以使用二分快速求幂的方法。例如，为了算出A^25的值，我们只需要递归地计算出A^12、<br>A^6、A^3的值即可。<br>递归实现POW函数<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Matrix POW( Matrix t,int k )</div><div class="line">&#123;</div><div class="line">       <span class="keyword">if</span>( k == 1 )</div><div class="line">           <span class="built_in">return</span> t;</div><div class="line">       Matrix t1 = POW( t, k/2 );</div><div class="line">       t1 = t1*t1;</div><div class="line">       <span class="keyword">if</span>( k &amp; 1 )</div><div class="line">           <span class="built_in">return</span> t1 * t;</div><div class="line">       <span class="keyword">else</span></div><div class="line">           <span class="built_in">return</span> t1;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>递归的容易理解，但时间花费较多。所以很少用</p>
<h3 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h3><p>了解矩阵乘法的基本规则。</p>
<p>以下给出矩阵运算的模版：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">struct Matrix</div><div class="line">&#123;</div><div class="line">    int matrix[15][15];</div><div class="line">&#125;;</div><div class="line">int n;     //维度,即矩阵A的行列数</div><div class="line">int MOD=9973;//好多问题要求给出取余之后的数字</div><div class="line">Matrix E;</div><div class="line">void initE()    //初始化单位阵</div><div class="line">&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;15;i++)</div><div class="line">        E.matrix[i][i]=1;</div><div class="line">&#125;</div><div class="line">Matrix operator*(Matrix a,Matrix b)</div><div class="line">&#123;</div><div class="line">    int i,j,k;</div><div class="line">    Matrix c;</div><div class="line">    <span class="keyword">for</span> (i=0;i&lt;n;i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">for</span> (j=0;j&lt;n;j++)</div><div class="line">        &#123;</div><div class="line">            c.matrix[i][j] = 0;</div><div class="line">            <span class="keyword">for</span> (k=0;k&lt;n;k++)</div><div class="line">                    c.matrix[i][j]+=(a.matrix[i][k]*b.matrix[k][j]);</div><div class="line">            c.matrix[i][j]%=MOD;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> c;</div><div class="line">&#125;</div><div class="line">Matrix operator+(Matrix a,Matrix b)</div><div class="line">&#123;</div><div class="line">    Matrix c;</div><div class="line">    int i,j;</div><div class="line">    <span class="keyword">for</span> (i=0;i&lt;n;i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">for</span> (j=0;j&lt;n;j++)</div><div class="line">            c.matrix[i][j] = a.matrix[i][j]+b.matrix[i][j];</div><div class="line">        c.matrix[i][j]%=9973;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> c;</div><div class="line">&#125;</div><div class="line">Matrix operator^(Matrix a,int x) </div><div class="line">&#123; </div><div class="line">     Matrix p = E,q = a; </div><div class="line">     <span class="keyword">while</span> (x&gt;=1) </div><div class="line">     &#123; </div><div class="line">         <span class="keyword">if</span>(x%2==1) </div><div class="line">             p = p*q; </div><div class="line">         x/=2; </div><div class="line">         q = q*q; </div><div class="line">     &#125; </div><div class="line">     <span class="built_in">return</span> p; </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[RMQ问题]]></title>
      <url>http://xuboming8.github.io/2016/11/09/RMQ%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="RMQ问题"><a href="#RMQ问题" class="headerlink" title="RMQ问题"></a>RMQ问题</h1><h2 id="母题"><a href="#母题" class="headerlink" title="母题"></a>母题</h2><p>RMQ (Range Minimum/Maximum Query)：对于长度为n的数列A，回答若干询问RMQ(A,i,j)(i,j&lt;=n)，返回数列A中下标在[i,j]里的最小(大）值，也就是说，RMQ问题<br>是指求区间最值的问题 </p>
<p><strong>三种基本算法</strong><br><a id="more"></a></p>
<h2 id="朴素（即搜索）"><a href="#朴素（即搜索）" class="headerlink" title="朴素（即搜索）"></a>朴素（即搜索）</h2><p>时间复杂度：O(n)-O(n) </p>
<h2 id="线段树-segment-tree"><a href="#线段树-segment-tree" class="headerlink" title="线段树(segment tree)"></a>线段树(segment tree)</h2><p>时间复杂度：O(n)-O(qlogn) </p>
<h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h3><p>线段树能在对数时间内在数组区间上进行更新与查询。<br>定义线段树在区间[i, j] 上如下：<br>第一个节点维护着区间 [i, j] 的信息。<br>if i&lt;j , 那么左孩子维护着区间[i, (i+j)/2] 的信息，右孩子维护着区间[(i+j)/2+1, j] 的信息。<br>可知 N  个元素的线段树的高度 为 [logN] + 1(只有根节点的树高度为0) .<br>下面是区间 [0, 9]  的一个线段树:<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147865828788.png" alt=""><br>线段树和堆有一样的结构, 因此如果一个节点编号为 x ，那么左孩子编号为2<em>x  右孩子编号为2</em>x+1.<br>使用线段树解决RMQ问题，关键维护一个数组M[num]，num=2^(线段树高度+1).<br>M[i]:维护着被分配给该节点(编号:i 线段树根节点编号:1)的区间的最小值元素的下标。 该数组初始状态为-1. </p>
<h3 id="模版代码"><a href="#模版代码" class="headerlink" title="模版代码"></a>模版代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;   </span></div><div class="line">using namespace std;   </div><div class="line"><span class="comment">#define MAXN 100  </span></div><div class="line"><span class="comment">#define MAXIND 256 //线段树节点个数   </span></div><div class="line">//构建线段树,目的:得到M数组.  </div><div class="line">void initialize(int node, int b, int e, int M[], int A[])  </div><div class="line">&#123;  </div><div class="line">    <span class="keyword">if</span> (b == e)  </div><div class="line">        M[node] = b; //只有一个元素,只有一个下标  </div><div class="line">    <span class="keyword">else</span>  </div><div class="line">    &#123;  </div><div class="line">    //递归实现左孩子和右孩子  </div><div class="line">        initialize(2 * node, b, (b + e) / 2, M, A);  </div><div class="line">        initialize(2 * node + 1, (b + e) / 2 + 1, e, M, A);  </div><div class="line">    <span class="keyword">if</span> (A[M[2 * node]] &lt;= A[M[2 * node + 1]])  </div><div class="line">        M[node] = M[2 * node];  </div><div class="line">    <span class="keyword">else</span>  </div><div class="line">        M[node] = M[2 * node + 1];  </div><div class="line">    &#125;  </div><div class="line">&#125;   </div><div class="line">//找出区间 [i, j] 上的最小值的索引  </div><div class="line">int query(int node, int b, int e, int M[], int A[], int i, int j)  </div><div class="line">&#123;  </div><div class="line">    int p1, p2;  </div><div class="line">    //查询区间和要求的区间没有交集  </div><div class="line">    <span class="keyword">if</span> (i &gt; e || j &lt; b)  </div><div class="line">        <span class="built_in">return</span> -1;  </div><div class="line">    <span class="keyword">if</span> (b &gt;= i &amp;&amp; e &lt;= j)  </div><div class="line">        <span class="built_in">return</span> M[node];  </div><div class="line">    p1 = query(2 * node, b, (b + e) / 2, M, A, i, j);  </div><div class="line">    p2 = query(2 * node + 1, (b + e) / 2 + 1, e, M, A, i, j);  </div><div class="line">    //minimum is  </div><div class="line">    <span class="keyword">if</span> (p1 == -1)  </div><div class="line">        <span class="built_in">return</span> M[node] = p2;  </div><div class="line">    <span class="keyword">if</span> (p2 == -1)  </div><div class="line">        <span class="built_in">return</span> M[node] = p1;  </div><div class="line">    <span class="keyword">if</span> (A[p1] &lt;= A[p2])  </div><div class="line">        <span class="built_in">return</span> M[node] = p1;  </div><div class="line">    <span class="built_in">return</span> M[node] = p2; </div><div class="line">&#125;   </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int M[MAXIND]; //下标1起才有意义,保存下标编号节点对应区间最小值的下标.  </div><div class="line">    memset(M,-1,sizeof(M));  </div><div class="line">    int a[]=&#123;3,1,5,7,2,9,0,3,4,5&#125;;  </div><div class="line">    initialize(1, 0, sizeof(a)/sizeof(a[0])-1, M, a);  </div><div class="line">    cout&lt;&lt;query(1, 0, sizeof(a)/sizeof(a[0])-1, M, a, 0, 5)&lt;&lt;endl;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="ST（实质是动态规划）"><a href="#ST（实质是动态规划）" class="headerlink" title="ST（实质是动态规划）"></a>ST（实质是动态规划）</h2><p>时间复杂度：O(nlogn)-O(1) </p>
<h3 id="算法分析-1"><a href="#算法分析-1" class="headerlink" title="算法分析"></a>算法分析</h3><p>以最小值为例。a为所寻找的数组.<br>用一个二维数组f(i,j)记录区间[i,i+2^j-1]持续2^j个区间中的最小值。其中f[i,0] = a[i];<br>所以，对于任意的一组(i,j)，f(i,j) = min{f(i,j-1),f(i+2^(j-1),j-1)}来使用动态规划计算出来。<br>这个算法的高明之处不是在于这个动态规划的建立，而是它的查询：它的查询效率是O(1).<br>假设我们要求区间[m,n]中a的最小值，找到一个数k使得2^k&lt;n-m+1.<br>这样，可以把这个区间分成两个部分：[m,m+2^k-1]和[n-2^k+1,n].我们发现，这两个区间是已经初始化好的.<br>前面的区间是f(m,k)，后面的区间是f(n-2^k+1,k).<br>这样，只要看这两个区间的最小值，就可以知道整个区间的最小值</p>
<h3 id="模版代码-1"><a href="#模版代码-1" class="headerlink" title="模版代码"></a>模版代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;  </span></div><div class="line"><span class="comment">#include&lt;cmath&gt;  </span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;  </span></div><div class="line">using namespace std;  </div><div class="line"><span class="comment">#define M 100010  </span></div><div class="line"><span class="comment">#define MAXN 500  </span></div><div class="line"><span class="comment">#define MAXM 500  </span></div><div class="line">int dp[M][18];  </div><div class="line">/* </div><div class="line">*一维RMQ ST算法 </div><div class="line">*构造RMQ数组 makermq(int n,int b[]) O(nlog(n))的算法复杂度 </div><div class="line">*dp[i][j] 表示从i到i+2^j -1中最小的一个值(从i开始持续2^j个数) </div><div class="line">*dp[i][j]=min&#123;dp[i][j-1],dp[i+2^(j-1)][j-1]&#125; </div><div class="line">*查询RMQ rmq(int s,int v) </div><div class="line">*将s-v 分成两个2^k的区间 </div><div class="line">*即 k=(int)<span class="built_in">log</span>2(s-v+1) </div><div class="line">*查询结果应该为 min(dp[s][k],dp[v-2^k+1][k]) </div><div class="line">*/  </div><div class="line">void makermq(int n,int b[])  </div><div class="line">&#123;  </div><div class="line">    int i,j;  </div><div class="line">    <span class="keyword">for</span>(i=0;i&lt;n;i++)  </div><div class="line">        dp[i][0]=b[i];  </div><div class="line">    <span class="keyword">for</span>(j=1;(1&lt;&lt;j)&lt;=n;j++)  </div><div class="line">        <span class="keyword">for</span>(i=0;i+(1&lt;&lt;j)-1&lt;n;i++)  </div><div class="line">            dp[i][j]=min(dp[i][j-1],dp[i+(1&lt;&lt;(j-1))][j-1]);  </div><div class="line">&#125;  </div><div class="line">int rmq(int s,int v)  </div><div class="line">&#123;  </div><div class="line">    int k=(int)(<span class="built_in">log</span>((v<span class="_">-s</span>+1)*1.0)/<span class="built_in">log</span>(2.0));  </div><div class="line">    <span class="built_in">return</span> min(dp[s][k],dp[v-(1&lt;&lt;k)+1][k]);  </div><div class="line">&#125;  </div><div class="line">void makeRmqIndex(int n,int b[]) //返回最小值对应的下标  </div><div class="line">&#123;  </div><div class="line">    int i,j;  </div><div class="line">    <span class="keyword">for</span>(i=0;i&lt;n;i++)  </div><div class="line">        dp[i][0]=i;  </div><div class="line">    <span class="keyword">for</span>(j=1;(1&lt;&lt;j)&lt;=n;j++)  </div><div class="line">        <span class="keyword">for</span>(i=0;i+(1&lt;&lt;j)-1&lt;n;i++)  </div><div class="line">            dp[i][j]=b[dp[i][j-1]] &lt; b[dp[i+(1&lt;&lt;(j-1))][j-1]]? dp[i][j-1]:dp[i+(1&lt;&lt;(j-1))][j-1];  </div><div class="line">&#125;  </div><div class="line">int rmqIndex(int s,int v,int b[])  </div><div class="line">&#123;  </div><div class="line">    int k=(int)(<span class="built_in">log</span>((v<span class="_">-s</span>+1)*1.0)/<span class="built_in">log</span>(2.0));  </div><div class="line">    <span class="built_in">return</span> b[dp[s][k]]&lt;b[dp[v-(1&lt;&lt;k)+1][k]]? dp[s][k]:dp[v-(1&lt;&lt;k)+1][k];  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int a[]=&#123;3,4,5,7,8,9,0,3,4,5&#125;;  </div><div class="line">    //返回下标  </div><div class="line">    makeRmqIndex(sizeof(a)/sizeof(a[0]),a);  </div><div class="line">    cout&lt;&lt;rmqIndex(0,9,a)&lt;&lt;endl;  </div><div class="line">    cout&lt;&lt;rmqIndex(4,9,a)&lt;&lt;endl;  </div><div class="line">    //返回最小值  </div><div class="line">    makermq(sizeof(a)/sizeof(a[0]),a);  </div><div class="line">    cout&lt;&lt;rmq(0,9)&lt;&lt;endl;  </div><div class="line">    cout&lt;&lt;rmq(4,9)&lt;&lt;endl;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[扩展欧几里德算法]]></title>
      <url>http://xuboming8.github.io/2016/11/02/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E7%AE%97%E6%B3%95/</url>
      <content type="html"><![CDATA[<h1 id="欧几里德算法-amp-扩展欧几里德算法"><a href="#欧几里德算法-amp-扩展欧几里德算法" class="headerlink" title="欧几里德算法 &amp; 扩展欧几里德算法"></a>欧几里德算法 &amp; 扩展欧几里德算法</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="欧几里德算法"><a href="#欧几里德算法" class="headerlink" title="欧几里德算法"></a>欧几里德算法</h3><p>又称辗转相除法，给出c语言实现如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">int gcd(int a,int b)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> b?gcd(a,a%b):a;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h3 id="扩展欧几里得算法"><a href="#扩展欧几里得算法" class="headerlink" title="扩展欧几里得算法"></a>扩展欧几里得算法</h3><p>对于不完全为 0 的非负整数 a，b，gcd（a，b）表示 a，b 的最大公约数，必然存在整数对 x，y ，使得 gcd（a，b）=ax+by。<br>c语言实现如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">int exgcd(int a,int b,int &amp;x,int &amp;y)&#123;</div><div class="line">    <span class="keyword">if</span> (b==0)</div><div class="line">	&#123;</div><div class="line">        x=1,y=0;</div><div class="line">        <span class="built_in">return</span> a;</div><div class="line">    &#125;</div><div class="line">    int q=exgcd(b,a%b,y,x);</div><div class="line">    y-=a/b*x;</div><div class="line">    <span class="built_in">return</span> q;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="POJ-1061"><a href="#POJ-1061" class="headerlink" title="POJ-1061"></a>POJ-1061</h2><p><strong>Description</strong><br>两只青蛙在网上相识了，它们聊得很开心，于是觉得很有必要见一面。它们很高兴地发现它们住在同一条纬度线上，于是它们约定各自朝西跳，直到碰面为止。可是它们<br>出发之前忘记了一件很重要的事情，既没有问清楚对方的特征，也没有约定见面的具体位置。不过青蛙们都是很乐观的，它们觉得只要一直朝着某个方向跳下去，总能碰<br>到对方的。但是除非这两只青蛙在同一时间跳到同一点上，不然是永远都不可能碰面的。为了帮助这两只乐观的青蛙，你被要求写一个程序来判断这两只青蛙是否能够碰<br>面，会在什么时候碰面。 我们把这两只青蛙分别叫做青蛙A和青蛙B，并且规定纬度线上东经0度处为原点，由东往西为正方向，单位长度1米，这样我们就得到了一条首尾<br>相接的数轴。设青蛙A的出发点坐标是x，青蛙B的出发点坐标是y。青蛙A一次能跳m米，青蛙B一次能跳n米，两只青蛙跳一次所花费的时间相同。纬度线总长L米。现在要<br>你求出它们跳了几次以后才会碰面。 </p>
<p><strong>Input</strong><br>输入只包括一行5个整数x，y，m，n，L，其中x≠y &lt; 2000000000，0 &lt; m、n &lt; 2000000000，0 &lt; L &lt; 2100000000。</p>
<p><strong>Output</strong><br>输出碰面所需要的跳跃次数，如果永远不可能碰面则输出一行”Impossible”</p>
<p><strong>Sample Input</strong><br>1 2 3 4 5</p>
<p><strong>Sample Output</strong><br>4</p>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">此处的方程是：(n - m)*t + L*p = x-y</div><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line">long long int gcd( long long int x, long long int y )</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>( y== 0 )</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">return</span> x;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> gcd( y, x% y );</div><div class="line">&#125;</div><div class="line">void exgcd( long long int a, long long int b, long long int &amp;x, long long int &amp;y )</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>( b== 0 )</div><div class="line">    &#123;</div><div class="line">        x= 1;</div><div class="line">        y= 0;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    exgcd( b, a% b, x, y );</div><div class="line">    long long int t= x;</div><div class="line">    x= y;</div><div class="line">    y= t- a/ b* y;</div><div class="line">    <span class="built_in">return</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>(  )</div><div class="line">&#123;</div><div class="line">    long long int x, y, m, n, l;</div><div class="line">    <span class="keyword">while</span>( scanf( <span class="string">"%lld %lld %lld %lld %lld"</span>, &amp;x, &amp;y, &amp;m, &amp;n, &amp;l )!= EOF )</div><div class="line">    &#123;</div><div class="line">        long long int a= n- m, b= l, c= x- y, p, q;</div><div class="line">        long long int d= gcd( a, b );</div><div class="line">        <span class="keyword">if</span>( c% d )</div><div class="line">        &#123;</div><div class="line">            puts( <span class="string">"Impossible"</span> );</div><div class="line">            <span class="built_in">continue</span>;</div><div class="line">        &#125;</div><div class="line">        a/= d, b/= d, c/= d;</div><div class="line">        exgcd( a, b, p, q );</div><div class="line">        p*= c;</div><div class="line">        long long int t= p% b;</div><div class="line">        <span class="keyword">while</span>( t&lt; 0 )</div><div class="line">        &#123;   </div><div class="line">            t+= b; </div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>( <span class="string">"%lld\n"</span>, t );</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="NEFU-84"><a href="#NEFU-84" class="headerlink" title="NEFU 84"></a>NEFU 84</h2><p><strong>Description</strong><br>我们假设佛祖的手掌是一个圆圈（所以任凭大圣一个筋斗云十万八千里也是飞不出其手掌心），圆圈的长为n，逆时针记为：0，1，2，…,n-1，而大圣每次飞的距离为d.现<br>在大圣所在的位置记为x,而大圣想去的地方在y。现在要你告诉大圣至少要多少筋斗云才能到达目的地。 </p>
<p><strong>Input</strong><br>有多组测试数据。<br>第一行是一个正整数T，表示测试数据的组数。<br>每组测试数据包括一行，四个非负整数，n（2 &lt; n &lt; 10^9），表示如来手掌圆圈的长度；d(0 &lt; d &lt; n),筋斗所能飞的距离；x(0 &lt;= x &lt; n),大圣的初始位置；<br>y(0 &lt;= y &lt; n)，大圣想去的地方。<br>注意孙悟空的筋斗云只沿着逆时针方向翻。 </p>
<p><strong>Output</strong><br>对于每组测试数据，输出一行，给出大圣最少要翻多少个筋斗云才能到达目的地。如果无论翻多少个筋斗云也不能到达，输出“Impossible”. </p>
<p><strong>Sample Input</strong><br>2<br>3 2 0 2<br>3 2 0 1 </p>
<p><strong>Sample Output</strong><br>1<br>2 </p>
<h3 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">此处的方程是 sd-tn=x-y.</div><div class="line">带入exgcd函数后实现部分与上题相同</div></pre></td></tr></table></figure>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>若题目能化到ax+by=l的不定方程的形式，那么可以套用ex欧几里德算法，求出d=gcd（a，b）后，abl三数同时除以d后带入exgcd方程，返回的p*=l，在%b后判断是否非<br>负。为负加上b直到为正即可。若l%d！=0则不满足题意。</p>
<h2 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">该模版中若求q，则主函数不变，若求p，则主函数中q换成p</div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">void exgcd(int a,int b,int &amp;x,int &amp;y)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(b==0)</div><div class="line">    &#123;</div><div class="line">        x=1;</div><div class="line">        y=0;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    exgcd(b,a%b,x,y);</div><div class="line">    int t=x;</div><div class="line">    x=y;</div><div class="line">    y=t<span class="_">-a</span>/b*y;</div><div class="line">    <span class="built_in">return</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int p,q,x,y,l;   //px+qy=l</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;x&gt;&gt;y&gt;&gt;l)</div><div class="line">	&#123;</div><div class="line">		exgcd(x,y,p,q);</div><div class="line">		<span class="keyword">if</span>(l%q)</div><div class="line">		&#123;</div><div class="line">            puts(<span class="string">"unsolvable"</span>);</div><div class="line">            <span class="built_in">continue</span>;</div><div class="line">        &#125;</div><div class="line">		q*=l;</div><div class="line">		q=(q%y+y)%y;</div><div class="line">		cout&lt;&lt;q&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[10-30 热身赛]]></title>
      <url>http://xuboming8.github.io/2016/11/02/10-30-%E7%83%AD%E8%BA%AB%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="周赛（三）"><a href="#周赛（三）" class="headerlink" title="周赛（三）"></a>周赛（三）</h1><h2 id="Bits"><a href="#Bits" class="headerlink" title="Bits"></a>Bits</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147807991565.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147807991666.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147807991718.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147807991798.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147807991833.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>求给定范围内数字的二进制表示中1最多的并输出该数字。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    long long a, b;</div><div class="line">    int n;</div><div class="line">    cin&gt;&gt;n;</div><div class="line">    <span class="keyword">while</span>(n--)</div><div class="line">	&#123;</div><div class="line">        cin&gt;&gt;a&gt;&gt;b;</div><div class="line">        <span class="keyword">for</span>(long long i=1; (a|i) &lt;= b; i&lt;&lt;=1)</div><div class="line">            a |= i;</div><div class="line">        cout&lt;&lt;a&lt;&lt;endl; </div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>因为本题的数据量很大，所以一般的操作是不能过的，使用位运算可以快速解答。从低位开始把0变为1，判断是够小于上限b，循环结束后输出1个数最多的二进制数。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>或|运算的作用是把0“变为”1，与&amp;运算符的作用是把1“变为”0。</p>
<h2 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808068013.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808068122.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808068214.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808068256.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808068298.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定数组An的值后给定l与r的值求出表达式的值。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n,m,a[100050],next[100050];</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;n); </div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;a[i]);  </div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			next[i]=-1;</div><div class="line">			<span class="keyword">for</span>(int j=i+1;j&lt;=n;j++)</div><div class="line">				<span class="keyword">if</span>(a[j]&lt;=a[i])</div><div class="line">				&#123;</div><div class="line">					next[i]=j;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">		&#125;</div><div class="line">		 scanf(<span class="string">"%d"</span>,&amp;m);  </div><div class="line">		<span class="keyword">while</span>(m--)</div><div class="line">		&#123;</div><div class="line">			int l,r;</div><div class="line">		    scanf(<span class="string">"%d%d"</span>,&amp;l,&amp;r);  </div><div class="line">			int F=a[l];</div><div class="line">			<span class="keyword">for</span>(int i=next[l];i&lt;=r;i=next[i])</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(i==-1)</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				F%=a[i];</div><div class="line">			&#125;</div><div class="line">			 <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,F);  </div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>题目最后可以划为A(l)%A(l+1)%~~~%A(r)。由于正常的暴力遍历会超时，所以在计算前先计算每一个An的next值：下一个小于等于该数的第一个位置。只有除数小于<br>被除数经过%运算才不等于被除数本身，所以最后实现的时候表现为跳着进行%运算。</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>如果挨个进行%运算会超时，考虑的%运算的特点即可写出每一位置的next值，即可AC。</p>
<h2 id="Ball"><a href="#Ball" class="headerlink" title="Ball"></a>Ball</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808258091.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808258174.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808258209.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808258244.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808258288.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定数组a和数组b和若干段区间，数组a在区间内可以任意交换，问最后交换后数组a可否等于数组b</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int x,id;</div><div class="line">&#125;a[1050];</div><div class="line">int b[1050];</div><div class="line">bool cmp(node x,node y)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> x.id&lt;y.id;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n,m,flag=1;</div><div class="line">		cin&gt;&gt;n&gt;&gt;m;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;a[i].x;</div><div class="line">			a[i].id=-1;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;b[i];</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">				<span class="keyword">if</span>(a[j].x==b[i]&amp;&amp;a[j].id==-1)</div><div class="line">				&#123;</div><div class="line">					a[j].id=i;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">		&#123;</div><div class="line">			int s,e;</div><div class="line">			cin&gt;&gt;s&gt;&gt;e;</div><div class="line">			sort(a+s,a+e+1,cmp);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">if</span>(a[i].x!=b[i])</div><div class="line">			&#123;</div><div class="line">				flag=0;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		<span class="keyword">if</span>(flag)</div><div class="line">			cout&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"No"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>记录下数组a的每一个数字在数组b中出现的位置id（未找到初始化为-1），最后区间的交换实际为位置id的sort升序排序，排序后判断a是否等于b即可。</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>使用贪心算法才是正确的解法，交换实际为id的排序。</p>
<h2 id="Chilly-Willy"><a href="#Chilly-Willy" class="headerlink" title="Chilly Willy"></a>Chilly Willy</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808414105.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808414145.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808414179.png" alt=""></p>
<p><strong>Sample Input &amp;&amp; output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808414213.png" alt=""></p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>找出n位数中能被2，3，5，7同时整除的最小数</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;   </span></div><div class="line">using namespace std;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int n,p,i;  </div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;n);  </div><div class="line">    <span class="keyword">if</span>(n&lt;3)  </div><div class="line">    &#123;  </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"-1"</span>);  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n==3)  </div><div class="line">    &#123;  </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"210"</span>);  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">else</span>  </div><div class="line">    &#123;  </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"1"</span>);  </div><div class="line">        <span class="keyword">for</span>(i=0,p=50;i&lt;n-4;i++)  </div><div class="line">        &#123;  </div><div class="line">            <span class="built_in">printf</span>(<span class="string">"0"</span>);  </div><div class="line">            p=p*10%210;  </div><div class="line">        &#125;  </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%03d\n"</span>,p);  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>找规律题。后面三个数每6个是一个循环，只需在中间添0即可。</p>
<h2 id="Pagodas"><a href="#Pagodas" class="headerlink" title="Pagodas"></a>Pagodas</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808451458.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808451502.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808451533.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808451569.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147808451609.png" alt=""></p>
<h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>有编号为1-N的N座塔，其实两人位置为a和b开始修塔，每次修塔的位置要满足i=j+k||i=j-k，某个人先开始，最后谁无法修塔谁输，求谁赢</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    int T,n,a,b;</div><div class="line">    cin&gt;&gt;T;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=T;i++)</div><div class="line">	&#123;</div><div class="line">        scanf(<span class="string">"%d%d%d"</span>,&amp;n,&amp;a,&amp;b);   </div><div class="line">        <span class="keyword">while</span>(b)</div><div class="line">		&#123;</div><div class="line">            <span class="keyword">if</span>(a&gt;b) swap(a,b);</div><div class="line">            b%=a;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(n/a%2) <span class="built_in">printf</span>(<span class="string">"Case #%d: Yuwgna\n"</span>,i);</div><div class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Case #%d: Iaka\n"</span>,i);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>归纳可发现最后剩下塔的数量一定是一个以gcd（a，b）为差的等差数列（或者全部修完，可以看成差为0的等差数列），N/gcd（a，b）就是可以修的全部塔的个数，只需判<br>断它的奇偶性即可。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[化繁为简：位运算]]></title>
      <url>http://xuboming8.github.io/2016/11/01/%E5%8C%96%E7%B9%81%E4%B8%BA%E7%AE%80%EF%BC%9A%E4%BD%8D%E8%BF%90%E7%AE%97/</url>
      <content type="html"><![CDATA[<h1 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h1><h2 id="六种基本位运算"><a href="#六种基本位运算" class="headerlink" title="六种基本位运算"></a>六种基本位运算</h2><p><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147798733019.jpg" alt=""></p>
<h2 id="位运算的实例"><a href="#位运算的实例" class="headerlink" title="位运算的实例"></a>位运算的实例</h2><a id="more"></a>
<h3 id="数字间交换"><a href="#数字间交换" class="headerlink" title="数字间交换"></a>数字间交换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">void exchange(int a, int b)</div><div class="line">&#123;</div><div class="line">    a = a ^ b;</div><div class="line">    b = a ^ b;</div><div class="line">    a = a ^ b;</div><div class="line">    <span class="built_in">return</span> ;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>总结</strong><br>公式：a^b^b=a<br>这是一种最安全，最高效的方法——利用位运算符（^）异或交换，简单，易记。</p>
<h3 id="16进制快速转8进制"><a href="#16进制快速转8进制" class="headerlink" title="16进制快速转8进制"></a>16进制快速转8进制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string&gt;</span></div><div class="line"><span class="comment">#define base 7</span></div><div class="line">using namespace std;</div><div class="line">void HtoO(string hex)</div><div class="line">&#123;</div><div class="line">	int curbit=0;</div><div class="line">	string Oct,tmpOct;</div><div class="line">	int len=hex.size();</div><div class="line">	<span class="keyword">for</span>(int i=len-3;i&gt;=0;i-=3)</div><div class="line">	&#123;</div><div class="line">		int d=0;</div><div class="line">		<span class="keyword">for</span>(int k=0;k&lt;3;k++)</div><div class="line">		&#123;</div><div class="line">			int t=i+k;</div><div class="line">			<span class="keyword">if</span>(hex[t]&gt;=<span class="string">'0'</span>&amp;&amp;hex[t]&lt;=<span class="string">'9'</span>)</div><div class="line">				curbit=hex[t]-<span class="string">'0'</span>;</div><div class="line">			<span class="keyword">if</span>(hex[t]&gt;=<span class="string">'A'</span>&amp;&amp;hex[t]&lt;=<span class="string">'F'</span>)</div><div class="line">				curbit=hex[t]-<span class="string">'A'</span>+10;</div><div class="line">			d=d*16+curbit;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int k=0;k&lt;4;k++)</div><div class="line">		&#123;</div><div class="line">			tmpOct+=<span class="string">'0'</span>+(d&amp;base);</div><div class="line">			d&gt;&gt;=3;</div><div class="line">		&#125;</div><div class="line">		d=0;</div><div class="line">	&#125;</div><div class="line">	int rest=len%3;</div><div class="line">	<span class="keyword">if</span>(rest!=0)</div><div class="line">	&#123;</div><div class="line">		int d=0;</div><div class="line">		<span class="keyword">for</span>(int k=0;k&lt;rest;k++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(hex[k]&gt;=<span class="string">'0'</span>&amp;&amp;hex[k]&lt;=<span class="string">'9'</span>)</div><div class="line">				curbit=hex[k]-<span class="string">'0'</span>;</div><div class="line">			<span class="keyword">if</span>(hex[k]&gt;=<span class="string">'A'</span>&amp;&amp;hex[k]&lt;=<span class="string">'F'</span>)</div><div class="line">				curbit=hex[k]-<span class="string">'A'</span>+10;</div><div class="line">			d=d*16+curbit;</div><div class="line">		&#125;</div><div class="line">		int max=ceil(4.0/3.0*rest);</div><div class="line">		<span class="keyword">for</span>(int k=0;k&lt;max;k++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(k==max-1&amp;&amp;(d&amp;base)!=0 ||k&lt;max-1)</div><div class="line">				tmpOct+=<span class="string">'0'</span>+(d&amp;base);</div><div class="line">			d&gt;&gt;=3;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	int j=tmpOct.size()-1;</div><div class="line">	<span class="keyword">for</span>(;j&gt;=0;j--)</div><div class="line">		Oct+=tmpOct[j];</div><div class="line">	cout&lt;&lt;Oct&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    int n;</div><div class="line">    cin&gt;&gt;n;</div><div class="line">    <span class="keyword">while</span>(n--)</div><div class="line">	&#123;</div><div class="line">        string hex;</div><div class="line">		cin&gt;&gt;hex;</div><div class="line">		HtoO(hex);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>总结</strong><br><a href="http://blog.csdn.net/jiluoxingren/article/details/50478759" target="_blank" rel="external">参考博客</a><br>大体思路：每次取三个十六进制数转换成十进制（实际是以二进制存储），共12位确保可以恰好生成4个八进制数。每次取三个二进制数与7进行与运算后存入tmpOct中，接着<br>d右移三位进行下一个三位二进制数的运算。十六进制数中余下的不足三位的需要额外考虑，ceil是求大于等于x的最小整数，由于tmpOct中是逆序存储，所以正过来存入Oct<br>中并输出。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[字典树trie]]></title>
      <url>http://xuboming8.github.io/2016/10/31/%E5%AD%97%E5%85%B8%E6%A0%91trie/</url>
      <content type="html"><![CDATA[<h1 id="字典树"><a href="#字典树" class="headerlink" title="字典树"></a>字典树</h1><h2 id="HDU-1251"><a href="#HDU-1251" class="headerlink" title="HDU 1251"></a>HDU 1251</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147791755232.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14779175528.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147791755314.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147791755348.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147791755387.png" alt=""></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">typedef struct Trie</div><div class="line">&#123;</div><div class="line">	int v;</div><div class="line">	struct Trie *next[26];</div><div class="line">&#125;trie;</div><div class="line">trie *root;</div><div class="line">trie *<span class="function"><span class="title">newnode</span></span>()</div><div class="line">&#123;</div><div class="line">	trie *temp=new trie;</div><div class="line">	temp-&gt;v=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;26;i++)</div><div class="line">	   temp-&gt;next[i]=NULL;</div><div class="line">    <span class="built_in">return</span> temp;</div><div class="line">&#125;</div><div class="line">void creattrie(char *str)</div><div class="line">&#123;</div><div class="line">	int len=strlen(str);</div><div class="line">	trie *p=root;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)</div><div class="line">	&#123;</div><div class="line">		int id=str[i]-<span class="string">'a'</span>;</div><div class="line">		<span class="keyword">if</span>(p-&gt;next[id]==NULL)</div><div class="line">		   p-&gt;next[id]=newnode();</div><div class="line">        <span class="keyword">else</span> </div><div class="line">			p-&gt;next[id]-&gt;v++;</div><div class="line">        p=p-&gt;next[id];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int findtrie(char *str)</div><div class="line">&#123;</div><div class="line">	int len=strlen(str);</div><div class="line">	trie *p=root;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)</div><div class="line">	&#123;</div><div class="line">		int id=str[i]-<span class="string">'a'</span>;</div><div class="line">		p=p-&gt;next[id];</div><div class="line">		<span class="keyword">if</span>(p==NULL)</div><div class="line">			<span class="built_in">return</span> 0;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> p-&gt;v;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	char str1[15],str2[15];</div><div class="line">	root=newnode();</div><div class="line">	<span class="keyword">while</span>(gets(str1)&amp;&amp;str1[0]!=<span class="string">'\0'</span>)</div><div class="line">		creattrie(str1);</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;str2)</div><div class="line">	&#123;</div><div class="line">		int re=findtrie(str2);</div><div class="line">		cout&lt;&lt;re&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>字典树模版题。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>根节点root也需要初始化。本题要求读入与查找中需要空行，注意输入格式gets(str1)&amp;&amp;str1[0]!=’\0’。</p>
<h2 id="HDU-1671"><a href="#HDU-1671" class="headerlink" title="HDU 1671"></a>HDU 1671</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14779184277.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147791842809.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147791842845.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147791842878.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147791842917.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>输入一连串电话号码。求当中有没有一个电话是另一个电话号码的前缀。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#define MAX 9</span></div><div class="line">using namespace std;</div><div class="line">typedef struct Trie</div><div class="line">&#123;</div><div class="line">	bool end;</div><div class="line">	struct Trie *next[MAX+1];</div><div class="line">&#125;trie;</div><div class="line">bool flag;</div><div class="line">trie *<span class="function"><span class="title">newnode</span></span>()</div><div class="line">&#123;</div><div class="line">	trie *temp=new trie;</div><div class="line">	temp-&gt;end=<span class="literal">false</span>;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=MAX;i++)</div><div class="line">	   temp-&gt;next[i]=NULL;</div><div class="line">    <span class="built_in">return</span> temp;</div><div class="line">&#125;</div><div class="line">void creattrie(char *str,trie *root)</div><div class="line">&#123;</div><div class="line">	int len=strlen(str);</div><div class="line">	trie *p=root;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)</div><div class="line">	&#123;</div><div class="line">		int id=str[i]-<span class="string">'0'</span>;</div><div class="line">		<span class="keyword">if</span>(p-&gt;next[id]==NULL)</div><div class="line">			p-&gt;next[id]=newnode();</div><div class="line">		<span class="keyword">if</span>(p-&gt;next[id]-&gt;end==<span class="literal">true</span>)</div><div class="line">		&#123;</div><div class="line">			flag=<span class="literal">true</span>;</div><div class="line">			<span class="built_in">return</span>;</div><div class="line">		&#125;</div><div class="line">		p=p-&gt;next[id];</div><div class="line">	&#125;</div><div class="line">	p-&gt;end=<span class="literal">true</span>;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=MAX;i++)</div><div class="line">		<span class="keyword">if</span>(p-&gt;next[i]!=NULL)</div><div class="line">		&#123;</div><div class="line">			flag=<span class="literal">true</span>;</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">&#125;</div><div class="line">void del(trie *root)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;=MAX;i++)</div><div class="line">        <span class="keyword">if</span>(root-&gt;next[i]!=NULL)</div><div class="line">            del(root-&gt;next[i]);</div><div class="line">    free(root);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		flag=<span class="literal">false</span>;</div><div class="line">		trie *root=newnode();</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			char str[11];</div><div class="line">			cin&gt;&gt;str;</div><div class="line">			<span class="keyword">if</span>(flag==<span class="literal">false</span>)</div><div class="line">				creattrie(str,root);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(flag==<span class="literal">false</span>)</div><div class="line">			cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">		del(root);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>与字典树的模版略有不同，区别在于不是找前缀的词频，而是求是否重复出现。需要定义end记录每个电话号码的末尾，flag记录是否重复出现。</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>本题需要free掉存储树的内存空间，不然会超内存。MAX定义为9，所以指针中的next域为MAX+1.</p>
<h2 id="UVa-12333"><a href="#UVa-12333" class="headerlink" title="UVa 12333"></a>UVa 12333</h2><p><strong>题目要求</strong><br>The well-known Fibonacci sequence is defined as following:<br>F(0) = F(1) = 1<br>F(n) = F(n − 1) + F(n − 2) ∀n ≥ 2<br>Here we regard n as the index of the Fibonacci number F(n).<br>This sequence has been studied since the publication of Fibonacci’s book Liber Abaci. So far, many<br>properties of this sequence have been introduced.<br>You had been interested in this sequence, while after reading lots of papers about it. You think<br>there’s no need to research in it anymore because of the lack of its unrevealed properties. Yesterday,<br>you decided to study some other sequences like Lucas sequence instead.<br>Fibonacci came into your dream last night. “Stupid human beings. Lots of important properties<br>of Fibonacci sequence have not been studied by anyone, for example, from the Fibonacci number<br>347746739…”<br>You woke up and couldn’t remember the whole number except the first few digits Fibonacci told<br>you. You decided to write a program to find this number out in order to continue your research on<br>Fibonacci sequence.</p>
<p><strong>input</strong><br>There are multiple test cases. The first line of input contains a single integer T denoting the number<br>of test cases (T ≤ 50000).<br>For each test case, there is a single line containing one non-empty string made up of at most 40<br>digits. And there won’t be any unnecessary leading zeroes.</p>
<p><strong>ouput</strong><br>For each test case, output the smallest index of the smallest Fibonacci number whose decimal notation<br>begins with the given digits. If no Fibonacci number with index smaller than 100000 satisfy that<br>condition, output ‘-1’ instead — you think what Fibonacci wants to told you beyonds your ability.</p>
<p><strong>Sample Input</strong><br>15<br>1<br>12<br>123<br>1234<br>12345<br>9<br>98<br>987<br>9876<br>98765<br>89<br>32<br>51075176167176176176<br>347746739<br>5610</p>
<p><strong>Sample Output</strong><br>Case #1: 0<br>Case #2: 25<br>Case #3: 226<br>Case #4: 1628<br>Case #5: 49516<br>Case #6: 15<br>Case #7: 15<br>Case #8: 15<br>Case #9: 43764<br>Case #10: 49750<br>Case #11: 10<br>Case #12: 51<br>Case #13: -1<br>Case #14: 1233<br>Case #15: 22374</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#define MAX 10</span></div><div class="line">using namespace std;</div><div class="line">typedef struct Trie</div><div class="line">&#123;</div><div class="line">	struct Trie *next[MAX];</div><div class="line">	int id;</div><div class="line">&#125;trie;</div><div class="line">trie *<span class="function"><span class="title">newnode</span></span>()</div><div class="line">&#123;</div><div class="line">	trie *temp=new trie;</div><div class="line">	temp-&gt;id=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;MAX;i++)</div><div class="line">	   temp-&gt;next[i]=NULL;</div><div class="line">    <span class="built_in">return</span> temp;</div><div class="line">&#125;</div><div class="line">void creattrie(trie *root,char *str,int len,int id)</div><div class="line">&#123;</div><div class="line">	trie *p=root;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)</div><div class="line">	&#123;</div><div class="line">		int num=str[i]-<span class="string">'0'</span>;</div><div class="line">		<span class="keyword">if</span>(p-&gt;next[num]==NULL)</div><div class="line">			p-&gt;next[num]=newnode();</div><div class="line">         p=p-&gt;next[num];  </div><div class="line">		 <span class="keyword">if</span>(p-&gt;id==0)</div><div class="line">			 p-&gt;id=id;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int search(trie *root,char *str)</div><div class="line">&#123;</div><div class="line">	int len=strlen(str);</div><div class="line">	trie *p=root;</div><div class="line">	<span class="keyword">if</span>(*str==<span class="string">'1'</span>&amp;&amp;strlen(str)==1)</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;len;i++)</div><div class="line">		&#123;</div><div class="line">			int num=str[i]-<span class="string">'0'</span>;</div><div class="line">			p=p-&gt;next[num];</div><div class="line">			<span class="keyword">if</span>(p==NULL)</div><div class="line">				<span class="built_in">return</span> -1;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> p-&gt;id;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int F[2][21000];</div><div class="line">char FF[42],In[42];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	trie *root;</div><div class="line">	root=newnode();</div><div class="line">	memset(F,0,sizeof(F));</div><div class="line">	F[0][0]=F[1][0]=1;</div><div class="line">	creattrie(root,<span class="string">"1"</span>,1,0);</div><div class="line">	int s=0,e=1,r,count,p,q;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;100000;i++)</div><div class="line">	&#123;</div><div class="line">		p=i%2,q=(i+1)%2;</div><div class="line">		<span class="keyword">for</span>(int j=s;j&lt;e;j++)</div><div class="line">			F[p][j]=F[p][j]+F[q][j];</div><div class="line">		<span class="keyword">for</span>(int j=s;j&lt;e;j++)</div><div class="line">			<span class="keyword">if</span>(F[p][j]&gt;=10)</div><div class="line">			&#123;</div><div class="line">				F[p][j]%=10;</div><div class="line">				F[p][j+1]+=1;</div><div class="line">			&#125;</div><div class="line">		<span class="keyword">if</span>(F[p][e]!=0)</div><div class="line">			e++;</div><div class="line">		<span class="keyword">if</span>(e<span class="_">-s</span>&gt;40)</div><div class="line">			s++;</div><div class="line">		r=e-1,count=0;</div><div class="line">		<span class="keyword">while</span>(r&gt;=0&amp;&amp;count&lt;40)</div><div class="line">			FF[count++]=F[p][r--]+<span class="string">'0'</span>;</div><div class="line">		creattrie(root,FF,count,i);</div><div class="line">	&#125;</div><div class="line">	int T;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;T) != EOF)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=T;i++)</div><div class="line">		&#123;</div><div class="line">			scanf(<span class="string">"%s"</span>,In); </div><div class="line">			<span class="built_in">printf</span>(<span class="string">"Case #%d: %d\n"</span>,i,search(root,In));  </div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>本题是有关斐波拉契数列的前缀问题。运用大数的存储原理才计算菲波拉契数，并且利用滚动数组的原理才减少开销，存储前10w个菲波拉契数的前40位。在构造字典树的同<br>时记录下每个菲波拉契数的id。最后只要查找前缀最后一个数对应的id即可。</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>查找1的菲波拉契数需要额外考虑，因为它本身的id就为0，所以在菲波拉契数13存入的时候id就会被改动为6，额外考虑。字符型-‘0’=整形。整形+’0’=字符型。滚动数组的<br>构造方式也需要记忆。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[vector实现前向星]]></title>
      <url>http://xuboming8.github.io/2016/10/28/vector%E5%AE%9E%E7%8E%B0%E5%89%8D%E5%90%91%E6%98%9F/</url>
      <content type="html"><![CDATA[<h1 id="使用vector“数组”模拟链表—-前向星结构"><a href="#使用vector“数组”模拟链表—-前向星结构" class="headerlink" title="使用vector“数组”模拟链表—-前向星结构"></a>使用vector“数组”模拟链表—-前向星结构</h1><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;  </span></div><div class="line"><span class="comment">#include &lt;vector&gt;  </span></div><div class="line"><span class="comment">#include &lt;cstdlib&gt;  </span></div><div class="line"><span class="comment">#define MAX 10000  </span></div><div class="line">using namespace std;  </div><div class="line">struct EdgeNode         //边表节点类型 </div><div class="line">&#123;                      </div><div class="line">    int to, w;          //顶点序号和边长  </div><div class="line">&#125;;  </div><div class="line">vector&lt;EdgeNode&gt; map[MAX];  </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;  </div><div class="line">    EdgeNode e;  </div><div class="line">    int n, m, i, j, k, w;  </div><div class="line">    cin &gt;&gt; n &gt;&gt; m;        //n个顶点m组数据     </div><div class="line">    <span class="keyword">for</span>(i = 0; i &lt; m; ++i)&#123;  </div><div class="line">        cin &gt;&gt; j &gt;&gt; k &gt;&gt; w;  </div><div class="line">        e.to = k; e.w = w;  </div><div class="line">        map[j].push_back(e);  </div><div class="line">    &#125;       </div><div class="line">              //遍历  </div><div class="line">    <span class="keyword">for</span>(i = 1; i &lt;= n; ++i)&#123;  </div><div class="line">        <span class="keyword">for</span>(vector&lt;EdgeNode&gt;:: iterator k = map[i].begin();   </div><div class="line">        k != map[i].end(); ++k)&#123;  </div><div class="line">            EdgeNode t = *k;  </div><div class="line">            cout &lt;&lt; i &lt;&lt; <span class="string">' '</span> &lt;&lt; t.to &lt;&lt; <span class="string">' '</span> &lt;&lt; t.w &lt;&lt; endl;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    system(<span class="string">"pause"</span>);  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>to：指向子节点<br>w：边权<br>n：顶点数<br>m：数据数<br>j：父节点<br>k：子节点</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[10-23 热身赛]]></title>
      <url>http://xuboming8.github.io/2016/10/26/10-23-%E7%83%AD%E8%BA%AB%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="周赛（二）"><a href="#周赛（二）" class="headerlink" title="周赛（二）"></a>周赛（二）</h1><h2 id="Digital-Roots"><a href="#Digital-Roots" class="headerlink" title="Digital Roots"></a>Digital Roots</h2><p><a href="http://monkeyxu.cn/2016/08/30/ACM-1013-1017/#1013" target="_blank" rel="external">转跳链接</a></p>
<h2 id="Factorial"><a href="#Factorial" class="headerlink" title="Factorial"></a>Factorial</h2><a id="more"></a>
<p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14774517317.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14774517322.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745173316.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745173416.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745173448.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定一个整数n，求n的阶乘末尾0的个数。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int sum=0,temp=5;</div><div class="line">		int n;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		<span class="keyword">while</span>(1)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(n/temp==0)</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			sum+=n/temp;</div><div class="line">			temp*=5;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;sum&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>末尾的0只能由5和末尾是2，4，6，8的数相乘得到，所以末尾0的个数取决于n分解因式中有多少个5.</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>在求有多少5的因子时，用n/temp(初始化为5)后temp*=5再进入循环可以高效率。</p>
<h2 id="Common-Subsequence"><a href="#Common-Subsequence" class="headerlink" title="Common Subsequence"></a>Common Subsequence</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745392581.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745392623.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745392657.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745392691.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745392723.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>求两个字符串的最长上升（不下降）子序列。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int dp[500][500]; </div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	string X,Y;</div><div class="line">	int i, j;</div><div class="line">	memset(dp,0,sizeof(dp));</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;X&gt;&gt;Y)</div><div class="line">    &#123;</div><div class="line">    	int len1 = X.length();</div><div class="line">    	int len2 = Y.length();</div><div class="line">		<span class="keyword">for</span>(i = 1; i &lt;= len1; i++)</div><div class="line">			<span class="keyword">for</span>(j = 1; j &lt;= len2; j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(X[i-1] == Y[j-1])</div><div class="line">					dp[i][j] = dp[i-1][j-1] + 1;</div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(dp[i][j-1] &gt; dp[i-1][j])</div><div class="line">					dp[i][j] = dp[i][j-1];</div><div class="line">				<span class="keyword">else</span></div><div class="line">					dp[i][j] = dp[i-1][j];</div><div class="line">			&#125;</div><div class="line">    cout&lt;&lt;dp[len1][len2]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>典型dp问题。如果字符串匹配，那么这一状态的值等于上一状态的值+1，若不匹配，那么该状态的值为：a串中不匹配的位置与b串匹配的结果和b串不匹配的位置与a串匹配<br>的结果的较大者。</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>写出状态转移方程是关键，分为匹配成功和不成功两个状态。</p>
<h2 id="A-strange-lift"><a href="#A-strange-lift" class="headerlink" title="A strange lift"></a>A strange lift</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14774546397.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745464014.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745464046.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745464079.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745464112.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>电梯在每一层都只能上升下降规定的层数，要求从a层上升到b层的最小移动次数。</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;queue&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int vis[250],k[250],a,b;</div><div class="line">int bfs(int k1,int k2)</div><div class="line">&#123;</div><div class="line">	int now;</div><div class="line">	queue&lt;int&gt;q;</div><div class="line">	q.push(k1);</div><div class="line">	vis[k1]=0;</div><div class="line">	<span class="keyword">while</span>(!q.empty())</div><div class="line">	&#123;</div><div class="line">		now=q.front();</div><div class="line">		q.pop();</div><div class="line">		<span class="keyword">if</span>(now==k2)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		int next=now+k[now];</div><div class="line">		<span class="keyword">if</span>(next&gt;=1&amp;&amp;next&lt;=b&amp;&amp;!vis[next])</div><div class="line">		&#123;</div><div class="line">			q.push(next);</div><div class="line">			vis[next]=vis[now]+1;</div><div class="line">		&#125;</div><div class="line">		next=now-k[now];</div><div class="line">		<span class="keyword">if</span>(next&gt;=1&amp;&amp;next&lt;=b&amp;&amp;!vis[next])</div><div class="line">		&#123;</div><div class="line">			q.push(next);</div><div class="line">			vis[next]=vis[now]+1;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> vis[k2];</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;a&gt;&gt;b)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;k[i];</div><div class="line">		memset(vis,0,sizeof(vis));</div><div class="line">		cout&lt;&lt;bfs(a,b)&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>典型的宽搜问题。使用宽搜+队列快速求解。</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>基础题，需要牢牢掌握。</p>
<h2 id="Shaolin"><a href="#Shaolin" class="headerlink" title="Shaolin"></a>Shaolin</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745520443.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745520493.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14774552053.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745520565.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745520643.png" alt=""></p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>有一个能力值为max的老和尚，新来的和尚需要和老和尚切磋，必须和能力值最接近的老和尚切磋，输入顺序为进入顺序，求输出（切磋）顺序。</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;map&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	map&lt;int,int&gt;m;</div><div class="line">	int n,id,power;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&amp;&amp;n)</div><div class="line">	&#123;</div><div class="line">		m.clear();</div><div class="line">		m[1000000000]=1;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;id&gt;&gt;power;</div><div class="line">			map&lt;int,int&gt;::iterator it=m.lower_bound(power);</div><div class="line">			<span class="keyword">if</span>(it==m.end())</div><div class="line">			&#123;</div><div class="line">				it--;</div><div class="line">				cout&lt;&lt;id&lt;&lt;<span class="string">" "</span>&lt;&lt;it-&gt;second&lt;&lt;endl;</div><div class="line">				m[power]=id;</div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			&#125;</div><div class="line">			int t1=it-&gt;first;</div><div class="line">			int tmp=it-&gt;second;</div><div class="line">			<span class="keyword">if</span>(it!=m.begin())</div><div class="line">			&#123;</div><div class="line">				it--;</div><div class="line">				<span class="keyword">if</span>(power-it-&gt;first&lt;=t1-power)</div><div class="line">					cout&lt;&lt;id&lt;&lt;<span class="string">" "</span>&lt;&lt;it-&gt;second&lt;&lt;endl;</div><div class="line">				<span class="keyword">else</span></div><div class="line">					cout&lt;&lt;id&lt;&lt;<span class="string">" "</span>&lt;&lt;tmp&lt;&lt;endl;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				cout&lt;&lt;id&lt;&lt;<span class="string">" "</span>&lt;&lt;it-&gt;second&lt;&lt;endl;</div><div class="line">			m[power]=id;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>使用stl中的map可以使题目快速得到求解。map中把能力值映射到编号中，再定义一个map中的迭代器it指向m中大于等于power的第一个位置。接着把it的位置分为三种情况：<br>开头末位和中间，中间又分为插入位置的前者和后者两种情况。</p>
<h3 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h3><p>it-&gt;first:映射map中的键(key),本题为能力值<br>it-&gt;second:映射map中的值(value)，本题为编号<br>若没有找到，lower_bound返回的是最后一个位置的下一个位置。<br>map中的lower_bound若返回的是一个迭代器，传参的个数为1，平常当函数使用时传参的个数为3个（也可为4个）：数组的启末位置和查找的索引。</p>
<h2 id="Find-Q"><a href="#Find-Q" class="headerlink" title="Find Q"></a>Find Q</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745729489.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745729533.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745729572.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745729638.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147745729605.png" alt=""></p>
<h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>查找一个字符串中的连续的q中的连续子序列。</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	char s[100050];</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		cin&gt;&gt;s;</div><div class="line">		long long int sum=0,i=0;</div><div class="line">		<span class="keyword">while</span>(s[i]!=<span class="string">'\0'</span>)</div><div class="line">		&#123;</div><div class="line">			long long int k=0,flag=1;</div><div class="line">			<span class="keyword">while</span>(s[i]==<span class="string">'q'</span>)</div><div class="line">			&#123;</div><div class="line">				i++;</div><div class="line">				k++;</div><div class="line">				flag=0;</div><div class="line">			&#125;</div><div class="line">			sum+=k*(k+1)/2;</div><div class="line">			<span class="keyword">if</span>(flag)</div><div class="line">				i++;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;sum&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>一个长度为k的相同字符串中所有的连续子串个数为：k*(k+1)/2。查找字符串中每个q的起始位置和长度后算出子串个数加入sum中。</p>
<h3 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h3><p>连续子串的公式可由数学归纳法得出。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[10-16 热身赛]]></title>
      <url>http://xuboming8.github.io/2016/10/20/10-16-%E7%83%AD%E8%BA%AB%E8%B5%9B/</url>
      <content type="html"><![CDATA[<h1 id="周赛（一）"><a href="#周赛（一）" class="headerlink" title="周赛（一）"></a>周赛（一）</h1><h2 id="Triangle"><a href="#Triangle" class="headerlink" title="Triangle"></a>Triangle</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709527798.png" alt=""><br><a id="more"></a></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709527867.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709527907.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709527943.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709527986.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>有n根长度不一的火柴（序号为1-n的火柴长度分别为1-n），要求拿走y根火柴使剩下的长度无法组成三角形并且要求y的数量最小。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;  </div><div class="line">const int N = 25;   </div><div class="line">int s[N]=&#123;0,0,0,0,1,1,2,3,3,4,5,6,7,7,8,9,10,11,12,13,14&#125;;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int t,p=1;   </div><div class="line">    cin&gt;&gt;t;</div><div class="line">    <span class="keyword">while</span>(t--)  </div><div class="line">    &#123;  </div><div class="line">        int n;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">        cout&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;p++&lt;&lt;<span class="string">": "</span>&lt;&lt;s[n]&lt;&lt;endl;</div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>由于由前三个测试样例为1 1 2，并且算出第四个测试样例为3后可以联想到斐波拉契数列。在斐波拉契数列中，按序任意插入一个数后都一定可以组成三角形。例如abde为<br>四个菲波拉契数，那么a+b=d，b+d=e。在bd中插入c后必然有a+b&gt;c b+c&gt;d。所以在n个有序递增为1的整数中，只需要去掉菲波拉契数即可，剩下的数不可能组成三角形。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>联想到斐波拉契数列后应正确使用。由于本题的数据量很小maxsize只有20，所以可以打表暴力求解，无需刻意编写删除菲波拉契数的算法。</p>
<h2 id="Vitya-in-the-Countryside"><a href="#Vitya-in-the-Countryside" class="headerlink" title="Vitya in the Countryside"></a>Vitya in the Countryside</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709755155.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709755198.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709755245.png" alt=""></p>
<p><strong>Sample Input &amp; output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709763807.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>题目给出循环数 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1。接下来继续以0循环。要求输入给定个数的<br>数字后判断最后一个数字的下一个数相比前一个数在循环中为up还是down，如果无法判断则输出-1。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n,a[100];</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		cin&gt;&gt;a[i];</div><div class="line">	<span class="keyword">if</span>(n==1)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(a[n]==0)</div><div class="line">			cout&lt;&lt;<span class="string">"UP"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">if</span>(a[n]==15)</div><div class="line">			cout&lt;&lt;<span class="string">"DOWN"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">if</span>(a[n]!=0&amp;&amp;a[n]!=15)</div><div class="line">			cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(a[n]==0)</div><div class="line">			cout&lt;&lt;<span class="string">"UP"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(a[n]==15)</div><div class="line">				cout&lt;&lt;<span class="string">"DOWN"</span>&lt;&lt;endl;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(a[n]&gt;a[n-1])</div><div class="line">					cout&lt;&lt;<span class="string">"UP"</span>&lt;&lt;endl;</div><div class="line">				<span class="keyword">if</span>(a[n]&lt;a[n-1])</div><div class="line">					cout&lt;&lt;<span class="string">"DOWN"</span>&lt;&lt;endl;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>此题的特殊点在于必须特判0和15两个数字，在判断up down或者-1时只需加入这2个特殊情况即可，输入为1个数字的时候也要特判。</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>此题虽然难度小，题意也很好理解，但极易WA，必须在考虑了所有情况后才可AC。</p>
<h2 id="Anatoly-and-Cockroaches"><a href="#Anatoly-and-Cockroaches" class="headerlink" title="Anatoly and Cockroaches"></a>Anatoly and Cockroaches</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14770982678.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709826974.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709827021.png" alt=""></p>
<p><strong>Sample Input &amp; output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709829648.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定一个只有r和b的字符串，要求最后操作的结果为rb间隔排列，具体操作为交换任意两个数或把一个位置的r（b）换成b（r），求操作的最小次数。</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;  </span></div><div class="line"><span class="comment">#include&lt;string.h&gt;  </span></div><div class="line"><span class="comment">#include&lt;stdlib.h&gt;  </span></div><div class="line"><span class="comment">#include&lt;math.h&gt;  </span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;  </span></div><div class="line">using namespace std;  </div><div class="line">const int maxn = 1e5+ 5;  </div><div class="line">char st[maxn];  </div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;  </div><div class="line">    int n;  </div><div class="line">    scanf(<span class="string">"%d%s"</span>,&amp;n,st);  </div><div class="line">    int cnt1=0,cnt2=0,cnt3=0,cnt4=0;  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;  </div><div class="line">        <span class="keyword">if</span>(i%2==0&amp;&amp;st[i]!=<span class="string">'r'</span>) cnt1++;  </div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i%2==1&amp;&amp;st[i]!=<span class="string">'b'</span>) cnt2++;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;n;i++)&#123;  </div><div class="line">        <span class="keyword">if</span>(i%2==0&amp;&amp;st[i]!=<span class="string">'b'</span>) cnt3++;  </div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i%2==1&amp;&amp;st[i]!=<span class="string">'r'</span>) cnt4++;  </div><div class="line">    &#125;  </div><div class="line">    int ans1=abs(cnt1-cnt2)+(cnt1+cnt2-abs(cnt1-cnt2))/2;  </div><div class="line">    int ans2=abs(cnt3-cnt4)+(cnt3+cnt4-abs(cnt3-cnt4))/2;  </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,min(ans1,ans2));  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>假如有5个字符，那么最后操作完的结果必然为rbrbr或brbrb。分别计算出两种状态下的r需要转换成b和b需要转换成r的位置的个数记为w1和w2，由于在操作过程中要求次<br>数最少，所以优先考虑交换。因为交换可使两个位置达到要求状态而涂色只可改变一个位置。所以计算出w1-w2，这部分由于没有对应的两两交换的可能，所以必须涂色，<br>而剩下的可以两两配对，即可交换。再把两种状态下的结果求min即可。最后的表达式为abs(w1-w2)+(w1+w2-abs(w1-w2))/2.</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>从结果出发较为简便，无需考虑每次交换的过程采用搜索。最后的结果一定为间隔排序那么从结果出发即可。求出最后表达式即可ac。</p>
<h2 id="Efim-and-Strange-Grade"><a href="#Efim-and-Strange-Grade" class="headerlink" title="Efim and Strange Grade"></a>Efim and Strange Grade</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709918955.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709919007.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709919052.png" alt=""></p>
<p><strong>Sample Input &amp; output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147709919093.png" alt=""></p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定一个小数和查询次数，查询时可以随意访问任意一个小数位并进行进位操作，求所有查询过程中的最大值，最后位数的0不可输出。</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define MAX 200050</span></div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    char str[MAX];  </div><div class="line">    int n,t;  </div><div class="line">    int point;  </div><div class="line">    memset(str,0,sizeof(str));  </div><div class="line">    scanf(<span class="string">"%d%d%s"</span>,&amp;n,&amp;t,str);    </div><div class="line">    <span class="keyword">for</span>(int i=n+1;i&gt;=1;i--)  </div><div class="line">    &#123;  </div><div class="line">        str[i]=str[i-1];  </div><div class="line">    &#125;  </div><div class="line">    str[0]=<span class="string">'0'</span>;  </div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++)  </div><div class="line">        <span class="keyword">if</span>(str[i]==<span class="string">'.'</span>)  </div><div class="line">            point = i;  </div><div class="line">    int flag = 0;  </div><div class="line">    <span class="keyword">for</span>(int i=point+1;i&lt;strlen(str);i++)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">if</span>(str[i]&gt;=<span class="string">'5'</span>)  </div><div class="line">        &#123;  </div><div class="line">            flag = i;  </div><div class="line">            <span class="built_in">break</span>;  </div><div class="line">        &#125;  </div><div class="line">    &#125;   </div><div class="line">    <span class="keyword">while</span>(t--)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">if</span>(str[flag]&lt;<span class="string">'5'</span>)   </div><div class="line">            <span class="built_in">break</span>;  </div><div class="line">        str[flag]=<span class="string">'\0'</span>;  </div><div class="line">        <span class="keyword">if</span>(str[flag-1]==<span class="string">'.'</span>)  </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">for</span>(int i=point-1;i&gt;=0;i--)  </div><div class="line">            &#123;  </div><div class="line">                <span class="keyword">if</span>(str[i]==<span class="string">'9'</span>)  </div><div class="line">                    str[i]=<span class="string">'0'</span>;  </div><div class="line">                <span class="keyword">else</span>  </div><div class="line">                &#123;  </div><div class="line">                    str[i]+=1;  </div><div class="line">                    <span class="built_in">break</span>;  </div><div class="line">                &#125;  </div><div class="line">            &#125; </div><div class="line">			str[point]=<span class="string">'\0'</span>;</div><div class="line">            <span class="built_in">break</span>;    </div><div class="line">        &#125;  </div><div class="line">        str[--flag] +=1;   </div><div class="line">    &#125;     </div><div class="line">    <span class="keyword">for</span>(int i=strlen(str)-1;i&gt;=point;i--)  </div><div class="line">    &#123;  </div><div class="line">          </div><div class="line">        <span class="keyword">if</span>(str[i]!=<span class="string">'0'</span>)  </div><div class="line">            <span class="built_in">break</span>;  </div><div class="line">        str[i]=<span class="string">'\0'</span>;  </div><div class="line">    &#125;      </div><div class="line">    <span class="keyword">if</span>(str[0]==<span class="string">'1'</span>)  </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"1"</span>);  </div><div class="line">	puts(str+1);</div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>求出小数点后第一个大于4的位数后依次向前判断即可。具体操作如下：输入时留出str[0]的位置防止进位数组越界。之后计算出小数点的位置point和第一个大于4的位置<br>flag，若所有位置都无需进位那么flag依旧为初始化的0，只执行最后一步的puts（str+1）。在找出第一个进位的position以后执行while循环，需要特判若进位时小数点<br>左边+1的情况，若为9则+1后变为0，str[0]变为1。只要有一位小于5退出循环它就是最大数。若进位时未牵涉到小数点那么执行str[–flag]+=1的进位操作，继续检查下<br>一个flag位。再由strlen（str）-1位置开始向前扫面去掉末尾的0后输出结果。若str[0]==1说明整数部位由9变为了10那么输出1，结果剩下的部分由puts输出。</p>
<h3 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h3><p>此题需要注意会不断的通过赋值’\0’缩减字符串，要正确判断在在什么时候什么位置加上结束符。整数部分可能进位后多产生一位，所以str[0]必须在输入数据的时候空出<br>来以防溢出。最后输出的时候若用cout或printf均超时，所以用专门的字符串输出函数puts即可。</p>
<h2 id="The-more-The-Better"><a href="#The-more-The-Better" class="headerlink" title="The more, The Better"></a>The more, The Better</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147710144995.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147710145035.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147710145081.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14771014512.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147710145158.png" alt=""></p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码(1)"></a>参考AC代码(1)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;  </span></div><div class="line"><span class="comment">#include &lt;string.h&gt;  </span></div><div class="line"><span class="comment">#include &lt;algorithm&gt;  </span></div><div class="line">using namespace std;   </div><div class="line">struct node  </div><div class="line">&#123;  </div><div class="line">    int to,next;  </div><div class="line">&#125; tree[205];  </div><div class="line">int vis[205],dp[205][205],ans[205][205],head[205],money[205]; </div><div class="line">int len,n,m;    </div><div class="line">void add(int a,int b)  </div><div class="line">&#123;  </div><div class="line">    tree[len].to = b;  </div><div class="line">    tree[len].next = head[a];  </div><div class="line">    head[a] = len++;  </div><div class="line">&#125;   </div><div class="line">void dfs(int root)  </div><div class="line">&#123;  </div><div class="line">    int i,j,k,tem;  </div><div class="line">    vis[root] = 1;  </div><div class="line">    <span class="keyword">for</span>(i = head[root]; i!=-1; i = tree[i].next)  </div><div class="line">    &#123;  </div><div class="line">        tem = tree[i].to;  </div><div class="line">        <span class="keyword">if</span>(!vis[tem])  </div><div class="line">        &#123;  </div><div class="line">            dfs(tem);  </div><div class="line">            <span class="keyword">for</span>(k = m; k&gt;=0; k--)//01背包  </div><div class="line">                <span class="keyword">for</span>(j = 0; j&lt;=k; j++)  </div><div class="line">                    ans[root][k] = max(ans[root][k],ans[root][k-j]+dp[tem][j]);  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">for</span>(j = 1; j&lt;=m+1; j++)  </div><div class="line">        dp[root][j] = ans[root][j-1]+money[root];  </div><div class="line">&#125;    </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int i,a,b;  </div><div class="line">    <span class="keyword">while</span>(~scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m),n+m)  </div><div class="line">    &#123;  </div><div class="line">        len = 0;  </div><div class="line">        memset(head,-1,sizeof(head));  </div><div class="line">        <span class="keyword">for</span>(i = 1; i&lt;=n; i++)  </div><div class="line">        &#123;  </div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;a,&amp;b);  </div><div class="line">            money[i] = b;  </div><div class="line">            add(a,i);  </div><div class="line">        &#125;  </div><div class="line">        money[0] = 0;  </div><div class="line">        memset(vis,0,sizeof(vis));  </div><div class="line">        memset(dp,0,sizeof(dp));  </div><div class="line">        memset(ans,0,sizeof(ans));  </div><div class="line">        dfs(0);  </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[0][m+1]);  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码（二）"><a href="#参考AC代码（二）" class="headerlink" title="参考AC代码（二）"></a>参考AC代码（二）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;  </span></div><div class="line"><span class="comment">#include &lt;string.h&gt;  </span></div><div class="line"><span class="comment">#include &lt;algorithm&gt;  </span></div><div class="line">using namespace std;  </div><div class="line"></div><div class="line">int n,m;</div><div class="line">int num[255];</div><div class="line">int  map[255][255];</div><div class="line">int dp[255][255];</div><div class="line">bool v[255];</div><div class="line">void dfs(int root)&#123;</div><div class="line">    int i,j,k;</div><div class="line">    v[root]=<span class="literal">true</span>;</div><div class="line">    <span class="keyword">for</span>(i=1;i&lt;=num[root];i++)</div><div class="line">	&#123;</div><div class="line">        int t=map[root][i];       //son </div><div class="line">        <span class="keyword">if</span>(!v[t]) </div><div class="line">		dfs(t);         //若未访问 则跟进 </div><div class="line">        <span class="keyword">for</span>(j=m;j&gt;=2;j--)</div><div class="line">		&#123;         //选择1个的状态不用更新了，因为是强制要加进去的，即必须先选择的</div><div class="line">            <span class="keyword">for</span>(k=1;k&lt;j;k++)</div><div class="line">			&#123;</div><div class="line">				dp[root][j]=max(dp[root][j],dp[root][k]+dp[t][j-k]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">    int i,j;</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m),n||m)</div><div class="line">	&#123;</div><div class="line">        int a,b;</div><div class="line">        dp[0][1]=0;        //添加一个0号点为根节点，必取，价值为0</div><div class="line">        memset(num,0,sizeof(num));</div><div class="line">        <span class="keyword">for</span>(i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">            scanf(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</div><div class="line">            dp[i][1]=b; </div><div class="line">            map[a][++num[a]]=i;          //边集数组</div><div class="line">        &#125;</div><div class="line">        m++;        //增加一个点，森林转换成树</div><div class="line">        <span class="keyword">for</span>(i=0;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">            dp[i][0]=0;</div><div class="line">			v[i]=0;</div><div class="line">            <span class="keyword">for</span>(j=2;j&lt;=m;j++)</div><div class="line">			&#123;</div><div class="line">                dp[i][j]=0;</div><div class="line">            &#125;</div><div class="line">        &#125;           //初始化 </div><div class="line">        dfs(0);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[0][m]);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码（三）"><a href="#参考AC代码（三）" class="headerlink" title="参考AC代码（三）"></a>参考AC代码（三）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#define N 205</span></div><div class="line">using namespace std;</div><div class="line">int n,m;</div><div class="line">int dp[N][N],vis[N],w[N],ans[N][N];</div><div class="line">vector&lt;int&gt;e[N];</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	memset(dp,0,sizeof(dp));</div><div class="line">	memset(vis,0,sizeof(vis));</div><div class="line">	memset(ans,0,sizeof(ans));</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++)</div><div class="line">		e[i].clear();</div><div class="line">&#125;</div><div class="line">void dfs(int root)</div><div class="line">&#123;</div><div class="line">	int next;</div><div class="line">	vis[root]=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[root].size();i++)</div><div class="line">	&#123;</div><div class="line">		next=e[root][i];</div><div class="line">		<span class="keyword">if</span>(!vis[next])</div><div class="line">		&#123;</div><div class="line">			dfs(next);</div><div class="line">			<span class="keyword">for</span>(int k=m;k&gt;=0;k--)</div><div class="line">				<span class="keyword">for</span>(int j=0;j&lt;=k;j++)</div><div class="line">					ans[root][k]=max(ans[root][k],ans[root][k-j]+dp[next][j]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=m+1;i++)</div><div class="line">		dp[root][i]=ans[root][i-1]+w[root];</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0&amp;&amp;m==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int to=1;to&lt;=n;to++)</div><div class="line">		&#123;</div><div class="line">			int from,weight;</div><div class="line">			cin&gt;&gt;from&gt;&gt;weight;</div><div class="line">			e[from].push_back(to);</div><div class="line">			w[to]=weight;</div><div class="line">		&#125;</div><div class="line">		w[0]=0;</div><div class="line">		dfs(0);</div><div class="line">		cout&lt;&lt;dp[0][m+1]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>AC代码（1）：<br>使用了<a href="http://blog.csdn.net/acdreamers/article/details/16902023" target="_blank" rel="external">前向星</a>这种特殊的边集数组来模拟链表实现对树的遍历。链接中博主对前向星做出了十分详细的介绍，这里不在赘述。<br>vis数组用来记录走过的位置，dp[root][k]表示必取根节点root访问k个城堡获取的最大价值，ans[root][k]表示不取根节点root访问k个城堡获取的最大价值。在构建好前<br>向星后，进入dfs进行深搜。注意此时的最大价值类似于01背包问题，所以第一层for循环逆序，正序会使得重复访问得到错误结果。由于dp表示必取根节点，所以在执行遍<br>历时上限应为m+1,0号结点价值为0必取，这里它也算作了一个城堡，所以最后的输出结果为dp[0][m+1]。在dfs的两层for循环中必须取到0，因为考虑到了根节点未取到的<br>情况。最后的状态转移方程dp[root][j]=ans[root][j-1]+money[root]意义为：根结点的价值+不取根节点向上遍历j-1个城堡的价值就是dp里遍历j个城堡的最大价值。dp<br>和ans数组的列始终应保持差1的状态（由数组本身的意义 取不取根节点决定的）。<br>AC代码（2）：<br>构建边集数组来存放图。边集数组map[a][b]表示以a为父结点有子节点数b。num[a]表示以a为父结点存放的子节点数，dp[][1]表示只取一个根节点的价值赋值为b，<br>dp[][0]初始化为0。dfs的遍历过程与一类似，这里只需要注意for循环里的下限即可。由于dp[][0/1]的价值是固定不变的无需更新，所以j的下限只需取到2，由于<br>dp[][0]并没有意义，所以k的下限只需取到1即可。状态转移方程与一类似。</p>
<h3 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h3><p>注意对状态转移方程的理解以及如何对树的遍历：上面介绍了两种方法，用数组模拟链表的前向星和用数组存图的边集数组。两种方法中最后的dp中的m均为m+1，因为把0号<br>结点当作为价值为0的0号结点，方便遍历。dfs中两层for循环的更新顺序与上下限也需要额外注意，由数组本身的意义来确定范围。</p>
<h2 id="Color-the-ball"><a href="#Color-the-ball" class="headerlink" title="Color the ball"></a>Color the ball</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147710440423.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147710440489.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147710446703.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147710442423.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147710442767.png" alt=""></p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define MAX 100005</span></div><div class="line">int c[MAX];</div><div class="line">int lowbit(int x)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> x&amp;(-x);</div><div class="line">&#125;</div><div class="line">void change(int i,int n,int x)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">while</span>(i&lt;=n)</div><div class="line">	&#123;</div><div class="line">		int s=lowbit(i);</div><div class="line">		c[i]+=x;</div><div class="line">		i+=s;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int sum(int idx)</div><div class="line">&#123;</div><div class="line">	int sum=0;</div><div class="line">	<span class="keyword">while</span>(idx&gt;0)</div><div class="line">	&#123;</div><div class="line">		int s=lowbit(idx);</div><div class="line">		sum+=c[idx];</div><div class="line">		idx-=s;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int N,a,b;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;N&amp;&amp;N!=0)</div><div class="line">	&#123;</div><div class="line">		memset(c,0,sizeof(c));</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;N;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;a&gt;&gt;b;</div><div class="line">			change(a,N,1);</div><div class="line">			change(b+1,N,-1);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=N;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(i==1)</div><div class="line">				cout&lt;&lt;c[i];</div><div class="line">			<span class="keyword">else</span></div><div class="line">				cout&lt;&lt;<span class="string">" "</span>&lt;&lt;sum(i);</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>典型的树状数组问题，由于数据量过大且是区间问题，所以用树状数组可以快速求解。a到b的区间+1可以表示为a到上限+1 b到上限-1.</p>
<h3 id="注意事项-5"><a href="#注意事项-5" class="headerlink" title="注意事项"></a>注意事项</h3><p>理解树状数组的存储原理。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[神奇的树状数组]]></title>
      <url>http://xuboming8.github.io/2016/10/03/%E7%A5%9E%E5%A5%87%E7%9A%84%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</url>
      <content type="html"><![CDATA[<h1 id="树状数组的存储原理"><a href="#树状数组的存储原理" class="headerlink" title="树状数组的存储原理"></a>树状数组的存储原理</h1><p><a href="http://www.cnblogs.com/fancy-itlife/p/4312170.html" target="_blank" rel="external">转跳链接</a></p>
<h2 id="例题-ACM-HDOJ-1166"><a href="#例题-ACM-HDOJ-1166" class="headerlink" title="(例题)ACM-HDOJ 1166"></a>(例题)ACM-HDOJ 1166</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147549666304.png" alt=""><br><a id="more"></a></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147549666368.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147549666408.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147549666456.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147549666497.png" alt=""></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define MAX 50005</span></div><div class="line">int c[MAX],que[MAX];</div><div class="line">int lowbit(int x)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> x&amp;(-x);</div><div class="line">&#125;</div><div class="line">void create(int n)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">	&#123;</div><div class="line">		int s=lowbit(i);</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;s;j++)</div><div class="line">			c[i]+=que[i-j];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int sum(int idx)</div><div class="line">&#123;</div><div class="line">	int sum=0;</div><div class="line">	<span class="keyword">while</span>(idx&gt;0)</div><div class="line">	&#123;</div><div class="line">		int s=lowbit(idx);</div><div class="line">		sum+=c[idx];</div><div class="line">		idx-=s;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">void change(int i,int n,int x)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">while</span>(i&lt;=n)</div><div class="line">	&#123;</div><div class="line">		int s=lowbit(i);</div><div class="line">		c[i]+=x;</div><div class="line">		i+=s;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t,j=1;</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;t);</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int N;</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;N);</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=N;i++)</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;que[i]);</div><div class="line">		memset(c,0,sizeof(c));</div><div class="line">		create(N);</div><div class="line">		cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;j++&lt;&lt;<span class="string">":"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">while</span>(1)</div><div class="line">		&#123;</div><div class="line">			char ch[10];</div><div class="line">			int i,n,a,b;</div><div class="line">			scanf(<span class="string">"%s"</span>,ch);</div><div class="line">			<span class="keyword">if</span>(!strcmp(ch,<span class="string">"Add"</span>))</div><div class="line">			&#123;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;i,&amp;n);</div><div class="line">				change(i,N,n);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(!strcmp(ch,<span class="string">"Sub"</span>))</div><div class="line">			&#123;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;i,&amp;n);</div><div class="line">				change(i,N,-n);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(!strcmp(ch,<span class="string">"Query"</span>))</div><div class="line">			&#123;</div><div class="line">				scanf(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</div><div class="line">				int s=sum(b)-sum(a-1);</div><div class="line">				cout&lt;&lt;s&lt;&lt;endl;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">int a[maxn],tree[maxn];</div><div class="line">int n;</div><div class="line">void <span class="function"><span class="title">creat</span></span>()&#123;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)&#123;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;(i&amp;(-i));j++) tree[i]+=a[i-j];</div><div class="line">	&#125;</div><div class="line">&#125; </div><div class="line">void change(int x,LL val)&#123;</div><div class="line">    <span class="keyword">while</span>(x&lt;=n) &#123;</div><div class="line">        tree[x]+=val;</div><div class="line">        x+=x&amp;(-x);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">LL sum(int x)&#123;</div><div class="line">    LL res=0;</div><div class="line">    <span class="keyword">while</span> (x)&#123;</div><div class="line">        res+=tree[x];</div><div class="line">        x-=x&amp;(-x);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> res;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[atoi与itoa函数介绍]]></title>
      <url>http://xuboming8.github.io/2016/09/01/atoi%E4%B8%8Eitoa%E5%87%BD%E6%95%B0%E4%BB%8B%E7%BB%8D/</url>
      <content type="html"><![CDATA[<h1 id="atoi函数与itoa函数"><a href="#atoi函数与itoa函数" class="headerlink" title="atoi函数与itoa函数"></a>atoi函数与itoa函数</h1><h2 id="atoi函数"><a href="#atoi函数" class="headerlink" title="atoi函数"></a>atoi函数</h2><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p>把字符串转换成整形数<br><a id="more"></a></p>
<h3 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h3><p>int atoi(const char *str);<br>函数的返回值用一个整形变量接受，str表示准备进行转换的字符串。</p>
<h3 id="函数介绍"><a href="#函数介绍" class="headerlink" title="函数介绍"></a>函数介绍</h3><p>atoi( ) 函数会扫描参数str字符串，跳过前面的空白字符（例如空格，tab缩进等），直到遇上数字或正负符号才开始做转换，而再遇到非数字或字符串结束时<br>(‘\0’)才结束转换，并将结果返回。如果str不能转换成int或者str为空字符串，那么将返回0。需要加入头文件stdlib.h。</p>
<h3 id="简化实例"><a href="#简化实例" class="headerlink" title="简化实例"></a>简化实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">int n;</div><div class="line">char *str=<span class="string">"12345.67"</span>;</div><div class="line">n=atoi(str);</div><div class="line">cout&lt;&lt;n&lt;&lt;endl;</div></pre></td></tr></table></figure>
<p>输出结果为12345</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">char a[]=<span class="string">"-100"</span>;</div><div class="line">char b[]=<span class="string">"123"</span>;</div><div class="line">int c;</div><div class="line">c=atoi(a)+atoi(b);</div><div class="line">cout&lt;&lt;c&lt;&lt;endl;</div></pre></td></tr></table></figure>
<p>输出结果为23</p>
<h2 id="itoa函数"><a href="#itoa函数" class="headerlink" title="itoa函数"></a>itoa函数</h2><h3 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h3><p>将整形转换为字符串</p>
<h3 id="原型-1"><a href="#原型-1" class="headerlink" title="原型"></a>原型</h3><p>char<br>char &#42;itoa(int value,char &#42;string,int radix);<br>value为被转换的整数，string为转换后储存的字符数组，radix转换进制数，如2,8,10,16 进制等。使用需加入头文件stdlib.h。</p>
<h3 id="简单实例"><a href="#简单实例" class="headerlink" title="简单实例"></a>简单实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">int number=123456;</div><div class="line">char string[25];</div><div class="line">itoa(number,string,10);</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[十三种基础排序算法[置顶]]]></title>
      <url>http://xuboming8.github.io/2016/09/01/%E4%B9%9D%E5%A4%A7%E5%9F%BA%E7%A1%80%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
      <content type="html"><![CDATA[<h1 id="基础排序算法分析与总结"><a href="#基础排序算法分析与总结" class="headerlink" title="基础排序算法分析与总结"></a>基础排序算法分析与总结</h1><h2 id="插入类排序"><a href="#插入类排序" class="headerlink" title="插入类排序"></a>插入类排序</h2><h3 id="直接插入排序"><a href="#直接插入排序" class="headerlink" title="直接插入排序"></a>直接插入排序</h3><p><strong>算法思想</strong>：<br>(1)将第i个记录插入到前面i-1个已经排序好的记录中<br>(2)插入过程为依次比较后移，直到找到比第i个记录小的数为止，插入。<br><a id="more"></a><br><img src="http://images2015.cnblogs.com/blog/739525/201603/739525-20160329094816957-1860272498.jpg" alt=""><br><strong>算法实例</strong>：<br>待排序列｛48，62，35，77，55，14，35，98｝<br>A）｛48｝ 62 35 77 55 14 35 98<br>B）｛48 62｝ 35 77 55 14 35 98<br>C）｛35 48 62｝ 77 55 14 35 98<br>D）｛35 48 62 77｝ 55 14 35 98<br>E）｛35 48 55 62 77｝ 14 35 98<br>F）｛14 35 48 55 62 77｝ 35 98<br>G）｛14 35 35 48 55 62 77｝ 98<br>H）｛14 35 35 48 55 62 77 98｝<br>以下是用插入排序对30个元素的数组进行排序的动画：<br><img src="http://img.blog.csdn.net/20150606133020561" alt=""><br>对序列{6, 5, 3, 1, 8, 7, 2, 4}进行插入排序的实现过程如下<br><img src="http://images2015.cnblogs.com/blog/739525/201603/739525-20160329095145504-1018443290.gif" alt=""><br>直接插入排序动画图：<br><img src="http://images2015.cnblogs.com/blog/739525/201603/739525-20160328201132394-577931661.gif" alt=""><br><strong>算法实现</strong>：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define n 10</span></div><div class="line">int a[10]=&#123;10,43,13,0,90,44,67,23,16,88&#125;;</div><div class="line">void insertsort(int a[])           //直接插入排序</div><div class="line">&#123;</div><div class="line">	int pre,key;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">	&#123;</div><div class="line">		key=a[i];</div><div class="line">		pre=i-1;</div><div class="line">		<span class="keyword">while</span>(pre&gt;=0&amp;&amp;a[pre]&gt;key)</div><div class="line">		&#123;</div><div class="line">			a[pre+1]=a[pre];</div><div class="line">			pre--;</div><div class="line">		&#125;</div><div class="line">		a[pre+1]=key;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	insertsort(a);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		cout&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>算法分析</strong><br>1.空间复杂度：O（1）<br>2.平均时间复杂度：O（n²）<br>  最差情况：反序，需要移动n*(n-1)/2个元素 ，运行时间为O(n^2)。 　<br>  最好情况：正序，不需要移动元素，运行时间为O(n)．<br>3.稳定的排序算法<br>4.该排序与选择排序的区别是：选中已经排好序列的后一个数来进行插入操作，没有从未排序数中选择的过程<br>5.该排序与折半插入排序的区别：减少比较次数，直接插入排序为挨个比较，折半插入排序为二分比较，效率更高</p>
<h3 id="折半插入排序"><a href="#折半插入排序" class="headerlink" title="折半插入排序"></a>折半插入排序</h3><p><strong>算法思想</strong><br>与直接插入排序类似，只是通过二分查找找到需要插入的位置，直接插入，而非一个一个比较查找<br><strong>算法实例</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148493217649.jpg" alt=""><br>A）｛48｝ 62 35 77 55 14 35 98<br>B）｛48 62｝ 35 77 55 14 35 98<br>C）｛35 48 62｝ 77 55 14 35 98<br>D）｛35 48 62 77｝ 55 14 35 98<br>E）｛35 48 55 62 77｝ 14 35 98<br>F）｛14 35 48 55 62 77｝ 35 98<br>G）｛14 35 35 48 55 62 77｝ 98<br>H）｛14 35 35 48 55 62 77 98｝<br><strong>算法实现</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define n 10</span></div><div class="line">int a[10]=&#123;10,43,13,0,90,44,67,23,16,88&#125;;</div><div class="line">int low=0,high=9;</div><div class="line">void binsertsort(int a[])          //折半插入排序</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">	&#123;</div><div class="line">		int key=a[i];</div><div class="line">		int low=0,high=i;</div><div class="line">		<span class="keyword">while</span>(low&lt;=high)</div><div class="line">		&#123;</div><div class="line">			int mid=(low+high)/2;</div><div class="line">			<span class="keyword">if</span>(a[mid]&lt;key)</div><div class="line">				low=mid+1;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				high=mid-1;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int j=i;j&gt;=low+1;j--)</div><div class="line">			a[j]=a[j-1];</div><div class="line">		a[low]=key;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	binsertsort(a);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		cout&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>算法分析</strong><br>1.空间复杂度：O（1）<br>2.平均时间复杂度：O（n²）<br>3.折半插入排序是一种稳定的排序算法<br>4.折半插入排序并没有改变时间复杂度，而是把比较次数的数量级降到了O（n*logn）<br>5.当n较大时 折半插入排序的比较次数要比直接插入排序的最差情况要好很多 但比其最好情况要差</p>
<h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3><p><strong>算法思想</strong><br>希尔排序法(缩小增量法) 属于插入类排序，是将整个无序列分割成若干小的子序列分别进行插入排序的方法。<br>把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减少，每组包含的关键词越来越多，当增量减至1时，整个文件恰被分成一组，算法便终止<br>希尔排序是基于插入排序的以下两点性质而提出改进方法的：<br>(1)插入排序在对几乎已经排好序的数据操作时，效率高，即可以达到线性排序的效率。<br>(2)但插入排序一般来说是低效的，因为插入排序每次只能将数据移动一位。<br><strong>算法实例</strong><br>假设有这样一组数[<strong>13</strong> <strong>14</strong> <strong>94</strong> <strong>33</strong> <strong>82</strong> <strong>25</strong> <strong>59</strong> <strong>94</strong> <strong>65</strong> <strong>23</strong> <strong>45</strong> <strong>27</strong> <strong>73</strong> <strong>25</strong> <strong>39</strong> <strong>10</strong>]，如果我们以步长为5开始进行排序，我们可以通过将这列表放在有5列的表中来更好地描述算法，<br>这样他们就应该看起来是这样：<br><strong>13</strong> <strong>14</strong> <strong>94</strong> <strong>33</strong> <strong>82</strong><br><strong>25</strong> <strong>59</strong> <strong>94</strong> <strong>65</strong> <strong>23</strong><br><strong>45</strong> <strong>27</strong> <strong>73</strong> <strong>25</strong> <strong>39</strong><br><strong>10</strong><br>然后我们对每列进行排序：<br><strong>10</strong> <strong>14</strong> <strong>73</strong> <strong>25</strong> <strong>23</strong><br><strong>13</strong> <strong>27</strong> <strong>94</strong> <strong>33</strong> <strong>39</strong><br><strong>25</strong> <strong>59</strong> <strong>94</strong> <strong>65</strong> <strong>82</strong><br><strong>45</strong><br>将上述四行数字，依序接在一起时我们得到：[<strong>10</strong> <strong>14</strong> <strong>73</strong> <strong>25</strong> <strong>23</strong> <strong>13</strong> <strong>27</strong> <strong>94</strong> <strong>33</strong> <strong>39</strong> <strong>25</strong> <strong>59</strong> <strong>94</strong> <strong>65</strong> <strong>82</strong> <strong>45</strong>].这时10已经移至正确位置了，然后再以3为步长进行排序：<br><strong>10</strong> <strong>14</strong> <strong>73</strong><br><strong>25</strong> <strong>23</strong> <strong>13</strong><br><strong>27</strong> <strong>94</strong> <strong>33</strong><br><strong>39</strong> <strong>25</strong> <strong>59</strong><br><strong>94</strong> <strong>65</strong> <strong>82</strong><br><strong>45</strong><br>排序之后变为：<br><strong>10</strong> <strong>14</strong> <strong>13</strong><br><strong>25</strong> <strong>23</strong> <strong>33</strong><br><strong>27</strong> <strong>25</strong> <strong>59</strong><br><strong>39</strong> <strong>65</strong> <strong>73</strong><br><strong>45</strong> <strong>94</strong> <strong>82</strong><br><strong>94</strong><br>最后以1步长进行排序（此时就是简单的插入排序了）。<br>希尔排序动画图：<br><img src="http://images2015.cnblogs.com/blog/739525/201603/739525-20160328205313363-2043878119.gif" alt=""><br><strong>算法实现</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define n 10</span></div><div class="line">int a[10]=&#123;10,43,13,0,90,44,67,23,16,88&#125;;</div><div class="line">//******************************希尔排序******************************</div><div class="line">void shellsort(int a[])</div><div class="line">&#123;</div><div class="line">	int j;</div><div class="line">	<span class="keyword">for</span>(int gap=n/2;gap&gt;0;gap/=2)</div><div class="line">		<span class="keyword">for</span>(int i=gap;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			int temp=a[i];</div><div class="line">			<span class="keyword">for</span>(j=i-gap;j&gt;=0&amp;&amp;a[j]&gt;temp;j-=gap)</div><div class="line">				a[j+gap]=a[j];</div><div class="line">			a[j+gap]=temp;</div><div class="line">		&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	shellsort(a);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		cout&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>算法分析</strong><br>1.空间复杂度：O（1）<br>2.时间复杂度：平均 O(n^1.5)或O(n^1.3)<br>　　　　　　　最好 O(n)<br>　　　　　　　最坏 O(n^2)<br>3.希尔排序是一种不稳定的排序算法<br>4.希尔排序对于中等规模（n≤1000）的序列具有较高的效率，而且希尔排序算法简单，容易执行，因此很多排序应用程序都选用了希尔排序<br>5.关于增量d的取法，最初Shell提出取d=n[n/2]–下取整，再取d=d=n[n/2]，直到d=1为止。<br>  该思路的缺点是，奇数位置的元素在最后一步才会与偶数位置的元素进行比较，使得希尔排序效率降低<br>  后来Knuth提出d=[n/3]+1<br>  本文代码采用的是d=n[n/2]的增量取法</p>
<h2 id="交换类排序"><a href="#交换类排序" class="headerlink" title="交换类排序"></a>交换类排序</h2><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><p><strong>算法思想</strong><br>冒泡排序通过重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来，直到没有再需要交换的元素为止（对n个项目需要O(n^2)的比较次数）<br>这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。<br>1.比较相邻的元素。如果第一个比第二个大，就交换他们两个。　<br>2.对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。<br>3.针对所有的元素重复以上的步骤，除了最后一个。<br>4.持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。　<br><strong>算法实例</strong><br>对序列{6, 5, 3, 1, 8, 7, 2, 4}进行冒泡排序的实现过程如下<br><img src="http://images2015.cnblogs.com/blog/739525/201603/739525-20160329100443676-1647340243.gif" alt=""><br>冒泡排序动画如下:<br><img src="http://img.blog.csdn.net/20150606135844053" alt=""><br><strong>算法实现</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define n 10</span></div><div class="line">int a[10]=&#123;10,43,13,0,90,44,67,23,16,88&#125;;</div><div class="line">void exchange(int &amp;a,int &amp;b)</div><div class="line">&#123;</div><div class="line">	a=a^b;</div><div class="line">	b=a^b;</div><div class="line">	a=a^b;</div><div class="line">&#125;</div><div class="line">//*****************************冒泡******************************</div><div class="line">void <span class="function"><span class="title">bubble</span></span>()</div><div class="line">&#123;</div><div class="line">	int *b=a;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;n-i;j++)</div><div class="line">			<span class="keyword">if</span>(a[j]&gt;a[j+1])</div><div class="line">				exchange(b[j],b[j+1]);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		cout&lt;&lt;b[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	bubble();</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>算法分析</strong><br>1.空间复杂度：O（1）<br>2.时间复杂度：  平均O (n²)<br>                最好O(n)<br>3.冒泡排序是一种稳定的排序算法<br>4.冒泡两层for循环外层表示进行n-1趟排序 内层表示每趟要进行n-i次比较<br>5.冒泡排序的改进：<br>思路：增加一个标识位 当某一趟冒泡排序没有进行元素交换 即元素已经有序时 冒泡结束<br>核心部分改为以下即可：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">int flag=1;</div><div class="line"><span class="keyword">for</span>(int i=1;i&lt;=n-1&amp;&amp;flag;i++)</div><div class="line">	<span class="keyword">for</span>(int j=0;j&lt;n-1;j++)</div><div class="line">	&#123;</div><div class="line">		flag=0;</div><div class="line">		<span class="keyword">if</span>(a[j]&gt;=a[j]+1)</div><div class="line">		&#123;</div><div class="line">			a[j]=a[j]^a[j+1];</div><div class="line">			a[j+1]=a[j]^a[j+1];</div><div class="line">			a[j]=a[j]^a[j+1];</div><div class="line">			flag=1;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><p><strong>算法思想</strong><br>快速排序（Quicksort）是对冒泡排序的一种改进，又称划分交换排序（partition-exchange sort。<br>快速排序使用分治法（Divide and conquer）策略来把一个序列（list）分为两个子序列（sub-lists）<br>1.从数列中挑出一个元素，称为”基准”（pivot）<br>2.重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区结束之后，该基准就处于数列<br>的中间位置。这个称为分区（partition）操作。<br>3.递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序<br><strong>算法实例</strong><br><img src="http://img.blog.csdn.net/20160519164311224" alt=""><br><strong>算法实现</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define n 10</span></div><div class="line">int a[10]=&#123;10,43,13,0,90,44,67,23,16,88&#125;;</div><div class="line">int low=0,high=9;</div><div class="line">//*****************************快排(int)****************************</div><div class="line">int getmid(int list[],int low,int high)</div><div class="line">&#123;</div><div class="line">	int temp=list[low];</div><div class="line">	<span class="keyword">while</span>(low&lt;high)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">while</span>(low&lt;high&amp;list[high]&gt;=temp)</div><div class="line">			high--;</div><div class="line">		list[low]=list[high];</div><div class="line">		<span class="keyword">while</span>(low&lt;high&amp;&amp;list[low]&lt;=temp)</div><div class="line">			low++;</div><div class="line">		list[high]=list[low];</div><div class="line">	&#125;</div><div class="line">	list[low]=temp;</div><div class="line">	<span class="built_in">return</span> low;</div><div class="line">&#125;</div><div class="line">void quicksort(int a[],int low,int high)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(low&lt;high)</div><div class="line">	&#123;</div><div class="line">		int mid=getmid(a,low,high);</div><div class="line">		quicksort(a,low,mid-1);</div><div class="line">		quicksort(a,mid+1,high);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	quicksort(a,low,high);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		cout&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>算法分析</strong><br>1.平均空间复杂度：O（logn）<br>2.平均时间复杂度：O（n<em>logn）<br>                  最差：O(n²)<br>                  最好：O(n</em>logn)<br>3.快排是一种不稳定的排序算法<br>4.当数据趋近于无序时 快排的时间复杂度最优<br>  当数据趋近于有序有 快排就会退化为一般的排序算法 时间复杂度退化为O(n²)<br>5.快排使用了递推 因此需要栈的辅助 空间复杂度较别的算法略高<br>6.优化（一）<br>  枢轴的选取十分重要 选取的枢轴越接近中间值 算法的效率越高<br>  正常算法的枢轴选取为数组的首元素<br>  因此具体优化可以：每次选取避免选取到最值 可采用取平均值的方法求得尽可能靠中间的值<br>7.优化二（二）<br>  获取枢轴的一般步骤为：<br>  （1）确定枢轴<br>  （2）从最高位开始找到第一个小于枢轴的数 与枢轴交换<br>  （3）从最低位开始找到第一个大于枢轴的数 与枢轴交换<br>  （4）直到high=low停止 实现枢轴的坐标均小于它 右边均大于它<br>   针对两次交换操作 可以做如下优化：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">list[low]=list[high];  //temp为枢轴</div><div class="line">list[high]=list[low];</div><div class="line">list[low]=temp;       //当low=high时退出<span class="keyword">while</span>循环执行该步</div></pre></td></tr></table></figure></p>
<p>   如上优化可以避免进行两次交换操作<br>   哪怕使用空间复杂度为1的位运算来交换两个数也会额外增加代码书写难度</p>
<h2 id="选择类排序"><a href="#选择类排序" class="headerlink" title="选择类排序"></a>选择类排序</h2><h3 id="简单选择排序"><a href="#简单选择排序" class="headerlink" title="简单选择排序"></a>简单选择排序</h3><p><strong>算法思想</strong><br>每趟在n-i+1个记录中选取最小的关键字作为有序列中的第i个记录<br><strong>算法实例</strong><br>待排序列｛<strong>48</strong>，<strong>62</strong>，<strong>35</strong>，<strong>77</strong>，<strong>55</strong>，<strong>14</strong>，<strong>35</strong>，<strong>98</strong>｝<br>A）<strong>14</strong>｛<strong>62</strong> <strong>35</strong> <strong>77</strong> <strong>55</strong> <strong>48</strong> <strong>35</strong> <strong>98</strong>｝<br>B）<strong>14</strong> <strong>35</strong>｛<strong>62</strong> <strong>77</strong> <strong>55</strong> <strong>48</strong> <strong>35</strong> <strong>98</strong>｝<br>C）<strong>14</strong> <strong>35</strong> <strong>35</strong>｛<strong>77</strong> <strong>55</strong> <strong>48</strong> <strong>62</strong> <strong>98</strong>｝<br>D）<strong>14</strong> <strong>35</strong> <strong>35</strong> <strong>48</strong>｛<strong>55</strong> <strong>77</strong> <strong>62</strong> <strong>98</strong>｝<br>E）<strong>14</strong> <strong>35</strong> <strong>35</strong> <strong>48</strong> <strong>55</strong>｛<strong>77</strong> <strong>62</strong> <strong>98</strong>｝<br>F）<strong>14</strong> <strong>35</strong> <strong>35</strong> <strong>48</strong> <strong>55</strong> <strong>62</strong>｛<strong>77</strong> <strong>98</strong>｝<br>G）<strong>14</strong> <strong>35</strong> <strong>35</strong> <strong>48</strong> <strong>55</strong> <strong>62</strong> <strong>77</strong>｛<strong>98</strong>｝<br>H）<strong>14</strong> <strong>35</strong> <strong>35</strong> <strong>48</strong> <strong>55</strong> <strong>62</strong> <strong>77</strong> <strong>98</strong><br>选择排序的比较过程如下：<br><img src="http://img.blog.csdn.net/20150606134600369" alt=""><br>动画效果如下：<br><img src="http://img.blog.csdn.net/20150606134622646" alt=""><br><strong>算法实现</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">void selectsort(int a[],int n)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n-1;i++)</div><div class="line">	&#123;</div><div class="line">		int k=i;</div><div class="line">		<span class="keyword">for</span>(int j=i+1;j&lt;=n;j++)</div><div class="line">			<span class="keyword">if</span>(a[j]&lt;a[k])</div><div class="line">				k=j;</div><div class="line">		<span class="keyword">if</span>(k!=i)</div><div class="line">			swap(r[i],r[k]);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>算法分析</strong><br>1.空间复杂度：O（1）<br>2.时间复杂度：O(n²)<br>3.简单选择排序是不稳定的排序算法</p>
<h3 id="树形选择排序"><a href="#树形选择排序" class="headerlink" title="树形选择排序"></a>树形选择排序</h3><p><strong>算法思想</strong><br>又成锦标赛排序<br>基本思想是先把待排序的n个记录的关键字两两比较 取出最小者 然后在[n/2]个较小者中 采用同样的方法进行比较 直至选出最小的关键字为止<br>这一过程可以用一颗满二叉树来表示 不满时的结点用正无穷来填补<br>重复以上操作 直到所有的关键字全被取出为止<br><strong>算法实例</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148493184991.png" alt=""><br><strong>算法分析</strong><br>1.时间复杂度为：O（n*logn）</p>
<h3 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h3><p><strong>算法思想</strong><br>堆是一种数据结构，最好的理解堆的方式就是把堆看成一棵完全二叉树，这个完全二叉树满足任何一个非叶节点的值，都不大于（或不小于）其左右孩子节点的值。<br>若父亲大孩子小，则这样的堆叫做大根堆；若父亲小孩子大，这样的堆叫做小根堆。根据堆的定义，其根节点的值是最大（或最小），因此将一个无序序列调整为一个堆，<br>就可以找出这个序列的最大（或最小）值，然后将找出的这个值交换到序列的最后（或最前），这样有序序列元素增加1个，无序序列中元素减少1个，对新的无序序列重<br>复这样的操作，就实现了序列排序。堆排序中最关键的操作是将序列调整为堆，整个排序的过程就是通过不断调整使得不符合堆定义的完全二叉树变为符合堆定义的完全<br>二叉树的过程。<br>堆排序执行过程（大根堆）：<br>（1）从无序序列所确定的完全二叉树的第一个非叶子节点开始，从右至左，从下至上，对每个节点进行调整，最终将得到一个大根堆。<br>将当前节点（a）的值与其孩子节点进行比较，如果存在大于a值的孩子节点，则从中选出最大的一个与a交换。<br>当a来到下一层的时候重复上述过程，直到a的孩子节点值都小于a的值为止。<br>（2）将当前无序序列中第一个元素，在树中是根节点（a）与无序序列中最后一个元素（b）交换。a进入有序序列，到达最终位置，<br>无序序列中元素减少1个，有序序列中元素增加1个，此时只有节点b可能不满足堆的定义，对其进行调整。<br><strong>算法实例</strong><br>初始化动画如下：<br><img src="http://img.blog.csdn.net/20150606133355179" alt=""><br>堆排序动画如下：<br><img src="http://img.blog.csdn.net/20150606133543747" alt=""><br><strong>算法实现</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define n 10</span></div><div class="line">void exchange(int &amp;a,int &amp;b)</div><div class="line">&#123;</div><div class="line">	a=a^b;</div><div class="line">	b=a^b;</div><div class="line">	a=a^b;</div><div class="line">&#125;</div><div class="line">//******************************堆排序******************************</div><div class="line">void heapsort(int b[])</div><div class="line">&#123;</div><div class="line">	creat_heap(b);</div><div class="line">	<span class="keyword">for</span>(int i=n;i&gt;=1;i--)</div><div class="line">	&#123;</div><div class="line">		exchange(b[1],b[i]);</div><div class="line">		sift(b,1,i-1);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void creat_heap(int b[])</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=n/2;i&gt;=1;i--)</div><div class="line">		sift(b,i,n);</div><div class="line">&#125;</div><div class="line">void sift(int b[],int k,int m)</div><div class="line">&#123;</div><div class="line">	int t=b[k];</div><div class="line">	bool flag=<span class="literal">false</span>;</div><div class="line">	int i=k,j=2*i;</div><div class="line">	<span class="keyword">while</span>(j&lt;=m&amp;&amp;!flag)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(b[j]&lt;b[j+1]&amp;&amp;j+1&lt;=m)</div><div class="line">			j=j+1;</div><div class="line">		<span class="keyword">if</span>(t&gt;=b[j])</div><div class="line">			flag=<span class="literal">true</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			b[i]=b[j];</div><div class="line">			i=j;</div><div class="line">			j=2*i;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	b[i]=t;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int b[100];</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		cin&gt;&gt;b[i];</div><div class="line">	heapsort(b);</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		cout&lt;&lt;b[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>算法分析</strong><br>1.空间复杂度：O（1）<br>2.时间复杂度为：O（n<em>logn）<br>  最差时间复杂度：O（n</em>logn）<br>3.堆排序是一种不稳定的排序算法<br>4.由于堆排序的最差时间复杂度依然为O（n*logn） 这是堆排序最大的优点<br>5.它并不适用于n个数较小的情况 对于n较大的文件非常有效 如从1000000个记录中选出前10个最小的 这种情况用堆排序最好<br>6.堆中定义的三种操作<br>  （1）创建大根堆（Build_Max_Heap）：将堆所有数据重新排序<br>  （2）大根堆调整（Max_Heapify）：将堆的节点作调整，使得子节点永远小于父节点<br>  （3）堆排序（HeapSort）：移除位在第一个数据的根节点，并做大根堆调整的递归运算<br>7.由于堆排序运用了子节点与父节点的关系 所以数组最好从a[1]开始存储数据 方便运算<br>8.堆的存储：<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148492044202.png" alt=""></p>
<h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><p><strong>算法思想</strong><br>其核心就是“两两归并”，首先将原始序列看成每个只含有单独1个元素的子序列，两两归并，形成若干有序二元组，则第一趟归并排序结束，再将这个序列看成若干个<br>二元组子序列，继续两两归并，形成若干有序四元组，则第二趟归并排序结束，以此类推，最后只有两个子序列，再进行一次归并，即完成整个归并排序。<br>若将两个有序表合并成一个有序表，称为二路归并。<br><strong>算法实例</strong><br><img src="http://img.blog.csdn.net/20160517150920429" alt=""><br><img src="http://img.my.csdn.net/uploads/201210/29/1351511800_4371.jpg" alt=""><br>归并排序动画如下：<br><img src="http://img.blog.csdn.net/20150606133653347" alt=""><br><strong>算法实现</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define n 10</span></div><div class="line">int a[10]=&#123;10,43,13,0,90,44,67,23,16,88&#125;;</div><div class="line">void Merge_array(int a[],int low,int mid,int high,int temp[])</div><div class="line">&#123;</div><div class="line">	int i=low,m=mid,j=mid+1,h=high;</div><div class="line">	int k=0;</div><div class="line">	<span class="keyword">while</span>(i&lt;=m&amp;&amp;j&lt;=h)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(a[i]&lt;=a[j])</div><div class="line">			temp[k++]=a[i++];</div><div class="line">		<span class="keyword">else</span></div><div class="line">			temp[k++]=a[j++];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(i&lt;=m)</div><div class="line">		temp[k++]=a[i++];</div><div class="line">	<span class="keyword">while</span>(j&lt;=h)</div><div class="line">		temp[k++]=a[j++];</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;k;i++)</div><div class="line">		a[low+i]=temp[i];</div><div class="line">&#125;</div><div class="line">void Merge_sort(int a[],int low,int high,int temp[])</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(low&lt;high)</div><div class="line">	&#123;</div><div class="line">		int mid=(low+high)/2;</div><div class="line">		Merge_sort(a,low,mid,temp);</div><div class="line">		Merge_sort(a,mid+1,high,temp);</div><div class="line">		Merge_array(a,low,mid,high,temp);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int temp[10];</div><div class="line">	Merge_sort(a,low,high,temp);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		cout&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>算法分析</strong><br>1.空间复杂度：O（n）<br>2.时间复杂度为：O（n*logn）<br>3.归并排序是一种稳定的排序算法<br>4.归并排序运用了二分递归的方法实现两两排序 把两个子表合成一个总表的方法类似于单链表的合并操作<br>5.参加网上测试样例：对于5万个随机数 归并排序几乎不需要时间 对于20万个随机数 仅耗时62ms 而快排需要78ms<br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/148492107059.png" alt=""></p>
<h2 id="三大线性时间排序算法"><a href="#三大线性时间排序算法" class="headerlink" title="三大线性时间排序算法"></a>三大线性时间排序算法</h2><h3 id="计数排序"><a href="#计数排序" class="headerlink" title="计数排序"></a>计数排序</h3><p><strong>算法思想</strong><br>计数排序用到一个额外的计数数组C，根据数组C来将原数组A中的元素排到正确的位置。<br>计数数组C用来统计比数组中每个数字小的数有多少个 例如有个17个小于x的元素 那么C[x]=17 x可直接放在第18个位置<br>1.统计数组A中每个值A[i]出现的次数，存入C[A[i]]<br>2.从前向后，使数组C中的每个值等于其与前一项相加，这样数组C[A[i]]就代表了数组A中小于等于A[i]的元素个数<br>3.反向填充目标数组B：将数组元素A[i]放在数组B的第C[A[i]]项（即B[C[A[i]] - 1]），每放一个元素就将C[A[i]]递减<br><strong>算法实例</strong><br>下图给出了对{4, 1, 3, 4, 3}进行计数排序的简单演示过程<br><img src="http://images2015.cnblogs.com/blog/739525/201603/739525-20160329112223504-109981973.gif" alt=""><br>再给出一个实现图解：<br><img src="http://images.cnitblog.com/i/175043/201407/140246168184432.jpg" alt=""><br><strong>算法实现</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define n 10</span></div><div class="line">int a[10]=&#123;10,43,13,0,90,44,67,23,16,88&#125;;</div><div class="line">//******************************计数排序****************************</div><div class="line">void Counting_sort(int a[])</div><div class="line">&#123;</div><div class="line">	int b[11],c[100];</div><div class="line">	memset(c,0,sizeof(c));</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		c[a[i]]++;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;100;i++)</div><div class="line">		c[i]+=c[i-1];</div><div class="line">	<span class="keyword">for</span>(int i=n-1;i&gt;=0;i--)</div><div class="line">	&#123;</div><div class="line">		b[c[a[i]]]=a[i];</div><div class="line">		c[a[i]]--;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		cout&lt;&lt;b[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	Counting_sort(a);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>算法分析</strong><br>1.空间复杂度:O(n+k)<br>2.时间复杂度：O(n+k)–k为数据的范围<br>  平均时间复杂度：O(n+k)<br>  最差时间复杂度：O(n+k)<br>3.计数排序是一种稳定的排序算法<br>4.如果在面试中有面试官要求你写一个O(n)时间复杂度的排序算法，你千万不要立刻说：这不可能！虽然前面基于比较的排序的下限是O(nlogn)。<br>  但是确实也有线性时间复杂度的排序，只不过有前提条件，就是待排序的数要满足一定的范围的整数，而且计数排序需要比较多的辅助空间。<br>  其基本思想是，用待排序的数作为计数数组的下标，统计每个数字的个数。然后依次输出即可得到有序序列。<br>5.计数排序的时间复杂度和空间复杂度取决于数组A的数据范围(等于A中元素的最大值与最小值的差加上1)，因此对于数据范围很大的数组，计数排序需要大量时间<br>  和内存 所以计数排序并不适用与数据范围很大的数组<br>6.计数排序经常用作基数排序算法的一个子过程，其稳定性对于基数排序的正确性来说非常关键<br>7.计数排序不是比较排序，排序的速度快于任何比较排序算法</p>
<h3 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h3><p><strong>算法思想</strong><br>工作原理是将数组分解到有限数量的桶里，每个桶再分别进行排序。桶内排序有可能使用其他排序算法或是以递归的方式继续使用桶排序<br>1.在数组中查找数值的最大值和最小值；<br>2.初始化一个数组当作空桶，长度为 (MaxValue - MinValue + 1)。<br>3.遍历被排序数组，并把数值逐个放入对应的桶中。<br>4.对每个不是空的桶进行排序。<br>5.从不是空的桶里把数值再放回原来的数组中。<br><strong>算法实例</strong><br>下图给出了对{29, 25, 3, 49, 9, 37, 21, 43}进行桶排序的简单演示过程<br><img src="http://images.cnitblog.com/i/175043/201407/141242228816031.png" alt=""><br><img src="http://images.cnitblog.com/i/175043/201407/141242472874543.png" alt=""><br><strong>算法实现</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define n 10</span></div><div class="line">int a[10]=&#123;10,43,13,0,90,44,67,23,16,88&#125;;</div><div class="line">//******************************桶排序******************************</div><div class="line">//*****快排的源码已给出 不再复制</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int data[10];</div><div class="line">	int count;</div><div class="line">&#125;;</div><div class="line">void Bucket_sort(int a[])</div><div class="line">&#123;</div><div class="line">	int Max=a[0],M<span class="keyword">in</span>=a[0],num;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">	&#123;</div><div class="line">		Max=max(Max,a[i]);</div><div class="line">		M<span class="keyword">in</span>=min(M<span class="keyword">in</span>,a[i]);</div><div class="line">	&#125;</div><div class="line">	num=(Max-M<span class="keyword">in</span>+1)/10+1;</div><div class="line">	struct node *p;</div><div class="line">	p=new struct node[num];</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;num;i++)</div><div class="line">		p[i].count=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">	&#123;</div><div class="line">		int k=(a[i]-M<span class="keyword">in</span>+1)/10;</div><div class="line">		p[k].data[p[k].count]=a[i];</div><div class="line">		p[k].count++;</div><div class="line">	&#125;</div><div class="line">	int pos=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;num;i++)</div><div class="line">	&#123;</div><div class="line">		quicksort(p[i].data,0,p[i].count-1);</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;p[i].count;j++)</div><div class="line">			a[pos++]=p[i].data[j];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	Bucket_sort(a);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		cout&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>算法分析</strong><br>1.空间复杂度：O(k×n)<br>2.时间复杂度：O(n+k)  （k=N*(logN-logM)–N为待排数据 M为桶的数量）<br>  平均时间复杂度：O(n+k)<br>  最差时间复杂度：O(n²)<br>3.桶排序是一种稳定的排序算法<br>4.当要被排序的数组中的数值是均匀分布时 桶排序的运行时间为线性时间O(n)。桶排序不是比较排序，它不受O(nlogn)下界的影响<br>5.在桶排序中找到正确的映射函数f(k)是关键 他可以把N个数据尽可能平均的分配到M个桶中<br>  其作用就相当于快排中的划分 希尔排序中的子序列 归并排序中的子问题 已经把大量数据分割成了基本有序的数据块<br>  例如上述图解的映射函数为f(k)=k/10<br>6.每个桶中可以根据情况使用各种排序函数 本文使用的是快排 也可以使用计数排序 堆排等等<br>7.桶排序算是计数排序的一种改进和推广 但是网上有许多资料把计数排序和桶排序混为一谈 其实桶排序要比计数排序复杂许多<br>8.代码中的结构体模拟了vector的作用 算出最大值-最小值后使用指针p动态分配空间 使得空间消耗最优</p>
<h3 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h3><p><strong>算法思想</strong><br>基数排序又是一种和前面排序方式不同的排序方式 基数排序不需要进行记录关键字之间的比较 基数排序是一种借助多关键字排序思想对单逻辑关键字进行排序的方法<br>所谓的多关键字排序就是有多个优先级不同的关键字 比如说成绩的排序 如果两个人总分相同 则语文高的排在前面 语文成绩也相同则数学高的排在前面<br>如果对数字进行排序 那么个位、十位、百位就是不同优先级的关键字 如果要进行升序排序 那么个位、十位、百位优先级一次增加<br>基数排序是通过多次的收分配和收集来实现的 关键字优先级低的先进行分配和收集<br>原理是将整数值按相同的有效位进行分组，然后在有效位区间内进行排序<br>1.获得值的最右侧的最小的位。<br>2.根据该位的值将数组内的元素值进行分组，但仍然保持元素的顺序。(以此来保持算法稳定性)<br>3.重复上述分组过程，直到所有的位都已被处理。<br><strong>算法实例</strong><br>下图给出了对{ 329, 457, 657, 839, 436, 720, 355 }进行基数排序的简单演示过程<br><img src="http://images2015.cnblogs.com/blog/739525/201603/739525-20160329112725566-1371714328.jpg" alt=""><br>再给出链式基数排序的实现过程<br><img src="http://images2015.cnblogs.com/blog/735119/201603/735119-20160305151241455-435533779.png" alt=""><br><img src="http://images2015.cnblogs.com/blog/735119/201603/735119-20160305151315580-1475685491.png" alt=""><br>数排序中可以选择采用<br>最低有效位基数排序(LSD Radix Sort：Least Significant Digit Radix Sort)或最高有效位基数排序(MSD Radix Sort：Most Significant Digit Radix Sort)<br>LSD 的排序方式由值的最低位也就是最右边开始,而 MSD 则相反 由值的最高位也就是最左边开始<br><img src="http://images.cnitblog.com/i/175043/201407/141258384434292.png" alt=""><br>但由于MSD比LDS复杂 所以一般采用从低位开始排序的算法<br>例如，如下这个无序的数列需要排序：<br>　　170, 45, 75, 90, 802, 2, 24, 66<br>使用 LSD 方式从最低位开始（个位）排序的结果是：<br>　　170, 90, 802, 2, 24, 45, 75, 66<br>再继续从下一位（十位）继续排序的结果是：<br>　　802, 2, 24, 45, 66, 170, 75, 90<br>再继续从下一位（百位）继续排序的结果是：<br>　　2, 24, 45, 66, 75, 90, 170, 802<br><strong>算法实现</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">//******************************基数排序****************************</div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define n 10</span></div><div class="line">int a[10]=&#123;10,43,13,0,90,44,67,23,16,88&#125;;</div><div class="line">void Radix_sort(int a[])</div><div class="line">&#123;</div><div class="line">	int Max=a[0],count=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		Max=max(Max,a[i]);</div><div class="line">	<span class="keyword">while</span>(Max&amp;10)</div><div class="line">	&#123;</div><div class="line">		Max/=10;</div><div class="line">		count++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=count;i++)</div><div class="line">	&#123;</div><div class="line">		int k=0;</div><div class="line">		vector&lt;int&gt;v[10];</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;n;j++)</div><div class="line">		&#123;</div><div class="line">			int flag=(int)pow(10.0,count-1);</div><div class="line">			int temp=(a[j]/flag)%10;</div><div class="line">			v[temp].push_back(a[j]);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;10;j++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(!v[j].size())</div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			quicksort(v[j],0,v[j].size()-1);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;10;j++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(!v[j].size())</div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			<span class="keyword">for</span>(int m=0;m&lt;v[j].size();m++)</div><div class="line">				a[k++]=v[j][m];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	Radix_sort(a);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		cout&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>算法分析</strong><br>1.空间复杂度:O(d×n)<br>2.时间复杂度:O(d×n)<br>3.基数排序是一种稳定的排序算法<br>4.基数排序的时间复杂度是O(n*dn)，其中n是排序元素个数，dn是数字位数。这个时间复杂度不一定优于O(nlogn)，dn的大小取决于数字位的选择(比如比特位数)<br>  和待排序数据所属数据类型的全集的大小；dn决定了进行多少轮处理，而n是每轮处理的操作数目。<br>5.由于整数也可以表达字符串(比如名字或日期)和特定格式的浮点数，所以基数排序并不是只能用于整数排序<br>　如果考虑和比较排序进行对照 基数排序的形式复杂度虽然不一定更小 但由于不进行比较 因此其基本操作的代价较小 而且如果适当的选择基数<br>　dn一般不大于logn 所以基数排序一般要快过基于比较的排序 比如快速排序<br>6.基数排序类似于桶排序的思想 把数字按照位数放到10个桶中 每个桶中可以使用计数排序 因为在数据量较小时计数排序具有较高的效率<br>7.由于分块(桶)的数量是确定 所以可以使用vector来动态在每个桶中存放数字 即较少了内存消耗也减少了书写难度</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>1</strong>.<strong>稳定性</strong><br>指待排序的序列中有两个或两个以上相同的项，在排序前和排序后看这些相同项的相对<strong>位置</strong>有没有发生<strong>变化</strong>，如果没有发生变化，即该排序方法是稳定的，<br>如果发生变化，则说该排序方法是不稳定的。<br><strong>2</strong>.在是三种排序算法中<br>稳定：<strong>直接插入排序</strong> <strong>折半插入排序</strong> <strong>冒泡排序</strong> <strong>归并排序</strong> <strong>基数排序</strong>  <strong>计数排序</strong> <strong>桶排序</strong><br>不稳定：<strong>希尔排序</strong>  <strong>快速排序</strong> <strong>简单选择排序</strong> <strong>堆排序</strong><br>即除了“<strong>快些（希）选堆</strong>”以外 其余都是稳定的排序算法<br><strong>3</strong>.经过一趟排序能够保证一个元素到达最终位置的是<strong>冒泡排序</strong>、<strong>快速排序</strong>、<strong>简单选择排序</strong>、<strong>堆排序</strong><br><strong>4</strong>.元素比较次数和原始序列无关的是<strong>简单选择排序</strong>、<strong>折半插入排序</strong>。<br><strong>5</strong>.排序趟数和原始序列有关的是<strong>交换类排序</strong>（<strong>冒泡排序</strong> <strong>快速排序</strong>）。<br><strong>6</strong>.<strong>快速排序</strong>、<strong>归并排序</strong>、<strong>堆排序</strong>的平均时间为O(nlogn) <strong>希尔排序</strong>复杂度为O(n^1.3)或O(n^1.5)。<br><strong>7</strong>.对于<strong>选择排序</strong> 给定含n个元素的输入序列 任何比较排序在<strong>最坏情况</strong>下都需要Ω(nlogn)次比较来进行排序。<br>  <strong>归并排序</strong>和<strong>堆排序</strong>在最坏情况下达到上界O(nlogn) 它们都是渐进最优的排序算法 <strong>快速排序</strong>在平均情况下达到上界 O(nlogn)。<br>  而三种<strong>线性时间排序算法</strong>（<strong>基数排序</strong> <strong>计数排序</strong> <strong>桶排序</strong>）将突破O(nlogn)的下界 以线性时间运行<br><strong>8</strong>.三种<strong>线性时间排序算法</strong>是非比较排序 在特定条件下速度快过所有<strong>比较排序</strong><br><strong>9</strong>.没有最优的排序算法 根据数据的特性以及大小选择合适的排序算法才是关键<br><strong>10</strong>.最后总结下几种较优排序算法的实用情况：<br><strong>选择排序</strong><br>　<strong>直接插入排序</strong>：在数据基本有序时有较高的性能<br>　<strong>希尔排序</strong>：在中等数据量规模(n&lt;1000)具有较高的效率 但不稳定<br>　<strong>快排排序</strong>: 在数据量较大且数据趋于无序时具有较高效率 但不稳定且过多递归容易爆内存<br>　<strong>堆排序</strong>：  适用于数据量非常大的情况 最差时间复杂度依然为O(n×logn) 这是堆排序最大的优点 但不稳定<br>　<strong>归并排序</strong>：和前三种排序算法不同的是归并排序是一种稳定的排序算法 且综合性能很强 在要求稳定性时优先使用归并排序<br><strong>非选择排序</strong><br>　<strong>计数排序</strong>: 适用于数据范围较小的情况 线性时间O(n)运行 稳定 但耗空间较大<br>　<strong>桶排序</strong>：  适用于数据是均匀分布的情况 线性时间O(n)运行 稳定 但映射函数的选择对性能的影响巨大<br>　<strong>基数排序</strong>：线性时间O(n)运行 稳定 但数据的位数过大时不宜使用</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[DP问题专题四 背包延伸]]></title>
      <url>http://xuboming8.github.io/2016/08/30/DP%E9%97%AE%E9%A2%98%E4%B8%93%E9%A2%98%E5%9B%9B-%E8%83%8C%E5%8C%85%E5%BB%B6%E4%BC%B8/</url>
      <content type="html"><![CDATA[<h1 id="分组背包-混合背包-二维背包"><a href="#分组背包-混合背包-二维背包" class="headerlink" title="分组背包 混合背包 二维背包"></a>分组背包 混合背包 二维背包</h1><h2 id="ACM-HDOJ-1712-分组背包"><a href="#ACM-HDOJ-1712-分组背包" class="headerlink" title="ACM-HDOJ 1712(分组背包)"></a>ACM-HDOJ 1712(分组背包)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147166963402.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147166963447.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147166963483.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147166963515.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147166963608.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>在规定的时候内复习规定的课程，每门课程复习对应的天数有对应的成效。求在规定时间内的最大成效。第一行的两个数字代表课程数量和拥有的天数。对应的矩阵代表：<br>第一行第一列代表复习第一门一天的成效，第一行第二列代表复习第一门二天的成效，第二行代表第二门课，以此类推。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int dp[105],m,matrix[105][105];</div><div class="line">void GroupedPack(int x)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=m;i&gt;0;i--)</div><div class="line">		<span class="keyword">for</span>(int j=i;j&gt;0;j--)</div><div class="line">			dp[i]=max(dp[i],dp[i-j]+matrix[x][j]);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0&amp;&amp;m==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=m;j++)</div><div class="line">				cin&gt;&gt;matrix[i][j];</div><div class="line">		memset(dp,0,sizeof(dp));</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			GroupedPack(i);</div><div class="line">		cout&lt;&lt;dp[m]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>由于每门课复习不同的天数有不同的成效，所以用分组背包来求解。在一般背包的基础上多加一层for循环来判断每种物品不同的价值即可。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>第三个for循环中的j必须从i开始递减至0，因为每门课花费的天数必须少于给定的总天数。</p>
<h2 id="ACM-HDOJ-3591-混合背包"><a href="#ACM-HDOJ-3591-混合背包" class="headerlink" title="ACM-HDOJ 3591(混合背包)"></a>ACM-HDOJ 3591(混合背包)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147169450293.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147169450342.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147169450377.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147169450411.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147169450445.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>小倩去超市买东西。第一行给出两个数据表示她带有的硬币数目和需要买的商品的总资金，下面n行代表硬币的面额和数量。买完商品如果给出的钱超出了总价值，那么收<br>银员会找对应的钱。小倩给出的钱最多为2w，已知收银员的硬币无数，求小倩买商品的硬币和收银员找零的硬币和的最小数量。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#define m 20000</span></div><div class="line"><span class="comment">#define Inf 0x7FFFFFF</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int num,value;</div><div class="line">&#125;coin[250];</div><div class="line">int dp1[m+5],dp2[m+5],n;</div><div class="line">void ZeroOnePack(int dp[],int value,int weight)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int v=m;v&gt;=value;v--)</div><div class="line">		dp[v]=min(dp[v],dp[v-value]+weight);</div><div class="line">&#125;</div><div class="line">void CompletePack(int dp[],int value)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int v=value;v&lt;=m;v++)</div><div class="line">		dp[v]=min(dp[v],dp[v-value]+1);</div><div class="line">&#125;</div><div class="line">void MultiPack(int dp[],int value,int amount)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(value*amount&gt;=m)</div><div class="line">	&#123;</div><div class="line">		CompletePack(dp,value);</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int k=1;k&lt;amount;k*=2)</div><div class="line">	&#123;</div><div class="line">		ZeroOnePack(dp,k*value,k);</div><div class="line">		amount-=k;</div><div class="line">	&#125;</div><div class="line">	ZeroOnePack(dp,amount*value,amount);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n,t,flag=1;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;t)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==0&amp;&amp;t==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;coin[i].value;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;coin[i].num;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">			dp1[i]=dp2[i]=Inf;</div><div class="line">		dp1[0]=dp2[0]=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			MultiPack(dp1,coin[i].value,coin[i].num);</div><div class="line">			CompletePack(dp2,coin[i].value);</div><div class="line">		&#125;</div><div class="line">		int ans=dp1[t];</div><div class="line">		<span class="keyword">for</span>(int i=t+1;i&lt;=20000;i++)</div><div class="line">			ans=min(ans,dp1[i]+dp2[i-t]);</div><div class="line">		<span class="keyword">if</span>(ans==Inf)</div><div class="line">			cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;flag++&lt;&lt;<span class="string">": -1"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;flag++&lt;&lt;<span class="string">": "</span>&lt;&lt;ans&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>完全背包+多重背包：由于小倩买东西的时候给出的商品数量已知，所以是多重背包问题。收银员找钱的时候由于硬币无数，所以是完全背包问题。定义2个数组dp1和dp2<br>分别记录2种背包的状态。由于求的是最小数量，所以两个dp数组初始化为Inf，dp[0]初始化为0.带入模版求完后求出最小值。注意dp1[i]与dp2[i-t]即可(i是小倩付的钱).</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>由于此题求的是最小数量而不是最小价值，所以原本的多重背包的模版应稍作调整。max函数换成min，删去原本模版中的weight(硬币的数量都是一个一个的放入背包中)，<br>01背包背包中状态方程中min的第二项的后面应加weight而完全背包中应加1，理由如下：01背包中使用了二进制优化，所以k带入01背包后由于修改了面纸，对应面纸的<br>硬币原本的数量已经不为1，所以需要加上weight(k),而完全背包中是严格的一个硬币对应原本的面纸，所以min中第二项只需加1即可，无需引入weight变量。</p>
<h2 id="ACM-HDOJ-2159-二维完全背包"><a href="#ACM-HDOJ-2159-二维完全背包" class="headerlink" title="ACM-HDOJ 2159(二维完全背包)"></a>ACM-HDOJ 2159(二维完全背包)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14720190837.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147201908413.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147201908449.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147201908482.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147201908515.png" alt=""></p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int value,weight;</div><div class="line">&#125;a[105];</div><div class="line">int dp[105][105];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n,m,k,s,i;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m&gt;&gt;k&gt;&gt;s)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=k;i++)</div><div class="line">			cin&gt;&gt;a[i].value&gt;&gt;a[i].weight;</div><div class="line">		memset(dp,0,sizeof(dp));</div><div class="line">		<span class="keyword">for</span>(i=1;i&lt;=m;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=k;j++)</div><div class="line">				<span class="keyword">for</span>(int w=1;w&lt;=s;w++)</div><div class="line">					<span class="keyword">if</span>(a[j].weight&lt;=i)</div><div class="line">						dp[i][w]=max(dp[i][w],dp[i<span class="_">-a</span>[j].weight][w-1]+a[j].value);</div><div class="line">			<span class="keyword">if</span>(dp[i][s]&gt;=n)</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(i&gt;m)</div><div class="line">			cout&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;m-i&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>dp[i][k]表示在i忍耐度下杀k只怪所得到的最多经验，状态转移方程为:dp[i][k]=max(dp[i][k],dp[i-a[j].w][k-1]+a[j].v)。三个for循环分别表示忍耐度，怪物的种类以<br>及怪物的最大击杀量(从w=1开始实际就表示为击杀量)，并且在使用状态方程前应判断该种类的怪物消耗的忍耐度要小于人持有的忍耐度。若当前获得的经验已经可以升级，<br>那么立即退出循环，此时的i就是使用掉的忍耐度。如果i大于总忍耐度m那么输出-1，否则输出m-i(剩下的最大忍耐度)。</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>此问题的实质依然为完全背包，要正确理解三个for循环的顺序与意义，第一个for循环于忍耐度有关，剩下2个for循环与怪物有关。并且在使用状态方程前一定要判断该种类<br>怪物的忍耐度是够小于人的总忍耐度。</p>
<h2 id="ACM-HDOJ-3496-二维01背包"><a href="#ACM-HDOJ-3496-二维01背包" class="headerlink" title="ACM-HDOJ 3496(二维01背包)"></a>ACM-HDOJ 3496(二维01背包)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147203654342.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147203654402.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147203654439.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147203654472.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147203654506.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>要求在N盘DVD中选出M盘，每盘DVD都有对应的耗时和价值，要求在耗时小于l的情况下求出看完M盘DVD所获得的最大价值。</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#define Inf 0x7FFFFFF</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int value,cost;</div><div class="line">&#125;a[105];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n,m,l;</div><div class="line">		int dp[105][1005];</div><div class="line">		cin&gt;&gt;n&gt;&gt;m&gt;&gt;l;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;a[i].cost&gt;&gt;a[i].value;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=m;i++)</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;=l;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(i==0)</div><div class="line">					dp[i][j]=0;</div><div class="line">				<span class="keyword">else</span></div><div class="line">					dp[i][j]=-Inf;</div><div class="line">			&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=m;j&gt;=1;j--)</div><div class="line">				<span class="keyword">for</span>(int k=l;k&gt;=a[i].cost;k--)</div><div class="line">					dp[j][k]=max(dp[j][k],dp[j-1][k<span class="_">-a</span>[i].cost]+a[i].value);</div><div class="line">		<span class="keyword">if</span>(dp[m][l]&gt;0)</div><div class="line">			cout&lt;&lt;dp[m][l]&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"0"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>01背包的模型，但由于有DVD光盘数限制和时间限制2个条件，所以使用二维数组求解。dp[i][k]表示看完i盘DVD且耗时k的情况下获得的最大价值。dp的初始化需要把第一<br>行赋值为0，其余为-Inf。三个for循环分别代表总光盘数，看的光盘数和耗时(逆序)，如果价值小于0则输出0.</p>
<h3 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h3><p>由于此题存在价值为负的情况，所以最后dp求出的值若为负数则要输出0。另外dp数组的初始化也要额外注意，因为价值有负，所以dp数组的第一行需要初始化为0，其余<br>复制为-Inf。dp数组的初始化要从0开始。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[DP问题专题三 完全·分组背包巩固]]></title>
      <url>http://xuboming8.github.io/2016/08/30/DP%E9%97%AE%E9%A2%98%E4%B8%93%E9%A2%98%E4%B8%89-%E5%AE%8C%E5%85%A8%C2%B7%E5%88%86%E7%BB%84%E8%83%8C%E5%8C%85%E5%B7%A9%E5%9B%BA/</url>
      <content type="html"><![CDATA[<h1 id="完全背包-分组背包巩固与强化"><a href="#完全背包-分组背包巩固与强化" class="headerlink" title="完全背包 分组背包巩固与强化"></a>完全背包 分组背包巩固与强化</h1><h2 id="ACM-HDOJ-1171-多重背包水题"><a href="#ACM-HDOJ-1171-多重背包水题" class="headerlink" title="ACM-HDOJ 1171(多重背包水题)"></a>ACM-HDOJ 1171(多重背包水题)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147141028211.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147141028252.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147141028293.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147141028328.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147141028369.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>与1059题类似，只是输出变成了平分的结果，若不能平分则前者必须不小于后者。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int value,num;</div><div class="line">&#125;a[55];</div><div class="line">int dp[250050];</div><div class="line">int m;</div><div class="line">void ZeroOnePack(int value,int weight)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int v=m;v&gt;=value;v--)</div><div class="line">		dp[v]=max(dp[v],dp[v-value]+weight);</div><div class="line">&#125;</div><div class="line">void CompletePack(int value,int weight)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int v=value;v&lt;=m;v++)</div><div class="line">		dp[v]=max(dp[v],dp[v-value]+weight);</div><div class="line">&#125;</div><div class="line">void MultiPack(int value,int weight,int amount)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(value*amount&gt;=m)</div><div class="line">	&#123;</div><div class="line">		CompletePack(value,weight);</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int k=1;k&lt;amount;k*=2)</div><div class="line">	&#123;</div><div class="line">		ZeroOnePack(k*value,k*weight);</div><div class="line">		amount-=k;</div><div class="line">	&#125;</div><div class="line">	ZeroOnePack(amount*value,amount*weight);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n &amp;&amp; n&gt;=0)</div><div class="line">	&#123;</div><div class="line">		int sum=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;a[i].value&gt;&gt;a[i].num;</div><div class="line">			sum+=a[i].value*a[i].num;</div><div class="line">		&#125;</div><div class="line">		m=sum&gt;&gt;1;</div><div class="line">		memset(dp,0,sizeof(dp));</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			MultiPack(a[i].value,a[i].value,a[i].num);</div><div class="line">		<span class="keyword">if</span>(dp[m]==m)</div><div class="line">			cout&lt;&lt;m&lt;&lt;<span class="string">" "</span>&lt;&lt;m&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;sum-dp[m]&lt;&lt;<span class="string">" "</span>&lt;&lt;dp[m]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>依旧运用背包模版进行解答，具体思路参考ACM-HDOJ 1059题。<br>多重背包模版的思路：若该物品价值大于背包最大容量则进入完全背包求解，否则进行01背包求解，其中可以进行二进制优化减少运算时间。(比如有价值为20的物品2个<br>，可以看成价值为20的物品和价值为20的物品，以此类推就转化为01背包问题了。)<br><a href="http://monkeyxu.cn/2016/08/30/DP%E9%97%AE%E9%A2%98%E4%B8%93%E9%A2%98%E4%B8%80-Dynamic-Programming-%E8%83%8C%E5%8C%85%E5%85%A5%E9%97%A8/" target="_blank" rel="external">转跳ACM-HDOJ 1059</a></p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>输出的前者必须大于等于后者，注意dp数组的大小是50×50×100.由于dp[m]是最优解，所以sum-dp[m]必然大于dp[m]。<br>其余参考ACM-HDOJ 1059题。</p>
<h2 id="ACM-HDOJ-2191-多重背包水题"><a href="#ACM-HDOJ-2191-多重背包水题" class="headerlink" title="ACM-HDOJ 2191(多重背包水题)"></a>ACM-HDOJ 2191(多重背包水题)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147166259497.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147166259541.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147166259577.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14716625961.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147166259644.png" alt=""></p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int dp[105],n;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int v,w,num;</div><div class="line">&#125;a[105];</div><div class="line">void ZeroOnePack(int value,int weight)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int v=n;v&gt;=value;v--)</div><div class="line">		dp[v]=max(dp[v],dp[v-value]+weight);</div><div class="line">&#125;</div><div class="line">void CompletePack(int value,int weight)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int v=value;v&lt;=n;v++)</div><div class="line">		dp[v]=max(dp[v],dp[v-value]+weight);</div><div class="line">&#125;</div><div class="line">void MultiPack(int value,int weight,int amount)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(value*amount&gt;=n)</div><div class="line">	&#123;</div><div class="line">		CompletePack(value,weight);</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int k=1;k&lt;amount;k*=2)</div><div class="line">	&#123;</div><div class="line">		ZeroOnePack(k*value,k*weight);</div><div class="line">		amount-=k;</div><div class="line">	&#125;</div><div class="line">	ZeroOnePack(amount*value,amount*weight);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int m;</div><div class="line">		cin&gt;&gt;n&gt;&gt;m;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">			cin&gt;&gt;a[i].v&gt;&gt;a[i].w&gt;&gt;a[i].num;</div><div class="line">		memset(dp,0,sizeof(dp));</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=m;i++)</div><div class="line">			MultiPack(a[i].v,a[i].w,a[i].num);</div><div class="line">		cout&lt;&lt;dp[n]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>使用多重背包模版</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>注意dp数组的大小。</p>
<h2 id="ACM-HDOJ-1114-完全背包变形"><a href="#ACM-HDOJ-1114-完全背包变形" class="headerlink" title="ACM-HDOJ 1114(完全背包变形)"></a>ACM-HDOJ 1114(完全背包变形)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147159660465.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147159660514.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147159660554.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147159660588.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147159660627.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>完全背包变形。只是把求最优解变成了求装满背包的最小值。</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment"># define Inf 0x7FFFFFF</span></div><div class="line">using namespace std;</div><div class="line">int dp[10005];</div><div class="line">int sum;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int p,w;</div><div class="line">&#125;coin[550];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int E,F,n;</div><div class="line">		cin&gt;&gt;E&gt;&gt;F;</div><div class="line">		sum=F-E;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			cin&gt;&gt;coin[i].p&gt;&gt;coin[i].w;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;100005;i++)</div><div class="line">			dp[i]=Inf;</div><div class="line">		dp[0]=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=coin[i].w;j&lt;=sum;j++)</div><div class="line">				dp[j]=min(dp[j],dp[j-coin[i].w]+coin[i].p);</div><div class="line">		<span class="keyword">if</span>(dp[sum]!=Inf)</div><div class="line">			cout&lt;&lt;<span class="string">"The minimum amount of money in the piggy-bank is "</span>&lt;&lt;dp[sum]&lt;&lt;<span class="string">"."</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"This is impossible."</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>与完全背包类似。dp的初始化为long int的最大值，dp[0]需初始化为0.另外把状态方程中的max换成min。最后判断dp[sum]的值是否为Inf，若等于则说明没有这样的最小<br>值。</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>由于把最优解变成了求最小值，所以dp的初始化一定注意，要初始化为一个很大的数才行。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[DP问题专题二 01背包专题]]></title>
      <url>http://xuboming8.github.io/2016/08/30/DP%E9%97%AE%E9%A2%98%E4%B8%93%E9%A2%98%E4%BA%8C-01%E8%83%8C%E5%8C%85%E4%B8%93%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="01背包巧用与强化"><a href="#01背包巧用与强化" class="headerlink" title="01背包巧用与强化"></a>01背包巧用与强化</h1><h2 id="ACM-HDOJ-2602-01背包水题"><a href="#ACM-HDOJ-2602-01背包水题" class="headerlink" title="ACM-HDOJ 2602(01背包水题)"></a>ACM-HDOJ 2602(01背包水题)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147141259952.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147141260004.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147141260041.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14714126008.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147141260113.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>01背包水题。只是把物品变成了骨头。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int value[1050],cost[1050],dp[1050],bag,n;</div><div class="line">		memset(dp,0,sizeof(dp));</div><div class="line">		cin&gt;&gt;n&gt;&gt;bag;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;value[i];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;cost[i];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int v=bag;v&gt;=cost[i];v--)</div><div class="line">				dp[v]=max(dp[v],dp[v-cost[i]]+value[i]);</div><div class="line">		cout&lt;&lt;dp[bag]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>参考DP专题一的01背包介绍，此题完全套状态方程。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>内循环逆序。</p>
<h2 id="ACM-HDOJ-2639-01背包第k优解"><a href="#ACM-HDOJ-2639-01背包第k优解" class="headerlink" title="ACM-HDOJ 2639(01背包第k优解)"></a>ACM-HDOJ 2639(01背包第k优解)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14714290374.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147142903796.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147142903836.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147142903872.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147142903905.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>在2602题的基础上求第k优解。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct Node</div><div class="line">&#123;</div><div class="line">	int value,cost;</div><div class="line">&#125;node[1005];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n,k,v,dp[1005][31]=&#123;0&#125;,a[31],b[31];</div><div class="line">		cin&gt;&gt;n&gt;&gt;v&gt;&gt;k;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;node[i].value;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;node[i].cost;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=v;j&gt;=node[i].cost;j--)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">for</span>(int d=1;d&lt;=k;d++)</div><div class="line">				&#123;</div><div class="line">					a[d]=dp[j-node[i].cost][d]+node[i].value;</div><div class="line">					b[d]=dp[j][d];</div><div class="line">				&#125;</div><div class="line">				int x,y,z;</div><div class="line">				x=y=z=1;</div><div class="line">				int a[d]=b[d]=-1;</div><div class="line">				<span class="keyword">while</span>(z&lt;=k &amp;&amp; (a[x]!=-1 || b[y]!=-1))</div><div class="line">				&#123;</div><div class="line">					<span class="keyword">if</span>(a[x]&gt;b[y])</div><div class="line">						dp[j][z]=a[x++];</div><div class="line">					<span class="keyword">else</span></div><div class="line">						dp[j][z]=b[y++];</div><div class="line">					<span class="keyword">if</span>(dp[j][z]!=dp[j][z-1])</div><div class="line">						z++;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		cout&lt;&lt;dp[v][k]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>　　对于求次优解、第K优解类的问题，如果相应的最优解问题能写出状态转移方程、用动态规划解决，那么求次优解往往可以相同的复杂度解决，第K优解则比求最优解的复<br>杂度上多一个系数K。其基本思想是将每个状态都表示成有序队列，将状态转移方程中的max/min转化成有序队列的合并。这里仍然以01背包为例讲解一下。首先看01背包求<br>最优解的状态转移方程：f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}。如果要求第K优解，那么状态f[i][v]就应该是一个大小为K的数组f[i][v][1..K]。其中f[i][v][k]表<br>示前i个物品、背包大小为 v时，第k优解的值。“f[i][v]是一个大小为K的数组”这一句，熟悉C语言的同学可能比较好理解，或者也可以简单地理解为在原来的方程中加了一维。<br>显然f[i][v][1..K]这K个数是由大到小排列的，所以我们把它认为是一个有序队列。然后原方程就可以解释为：f[i][v]这个有序队列是由f[i-1][v]和f[i-1][v-c[i]]+w[i]这两<br>个有序队列合并得到的。有序队列f[i-1][v]即f[i-1][v][1..K]，f[i-1][v-c[i]]+w[i]则理解为在f[i-1][v-c[i]] [1..K]的每个数上加上w[i]后得到的有序队列.合并这两个有<br>序队列并将结果的前K项储存到f[i][v][1..K]中的复杂度是O(K)。最后的答案是f[N][V][K]。总的复杂度是O(VNK)。<br>　　为什么这个方法正确呢？实际上，一个正确的状态转移方程的求解过程遍历了所有可用的策略，也就覆盖了问题的所有方案。只不过由于是求最优解，所以其 它在任何一<br>个策略上达不到最优的方案都被忽略了。如果把每个状态表示成一个大小为K的数组，并在这个数组中有序的保存该状态可取到的前K个最优值。那么， 对于任两个状态的max<br>运算等价于两个由大到小的有序队列的合并。另外还要注意题目对于“第K优解”的定义，将策略不同但权值相同的两个方案是看作同一个解还是不同的解。如果是前者，则维护<br>有序队列时要保证队列里的数没有重复的。<br>　　用个形象的比喻吧：如果我想知道学年最高分，那么，我只要知道每个班级的最高分，然后统计一遍就可以了。如果我想知道学年前十呢？我必须要知道每个班的前十名。<br>大家在心里模拟一下，对，这就是本题核心的算法。两种决策，就可以看作这个学年只有两个班。<br>　　根据以上思路，将原来的dp[i]扩展成dp[i][j]表示背包容量用了i的第j优解。</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>分别使用a，b两个数组存储两种状态，再合并求最大值。</p>
<h2 id="ACM-HDOJ-2955-01背包巧用"><a href="#ACM-HDOJ-2955-01背包巧用" class="headerlink" title="ACM-HDOJ 2955(01背包巧用)"></a>ACM-HDOJ 2955(01背包巧用)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147145086533.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147145086591.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14714508672.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147145086628.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147145086676.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>小偷抢银行，给出银行的个数，每个银行中的存款和每个银行中被抓的概率，求出在小于给定概率的情况下抢得的最大值。</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int money;</div><div class="line">	double caught;</div><div class="line">&#125;bank[105];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int n,sum=0;</div><div class="line">		double p,dp[10005];</div><div class="line">		cin&gt;&gt;p&gt;&gt;n;</div><div class="line">		p=1-p;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;bank[i].money&gt;&gt;bank[i].caught;</div><div class="line">			bank[i].caught=1-bank[i].caught;</div><div class="line">			sum+=bank[i].money;</div><div class="line">		&#125;</div><div class="line">		memset(dp,0.0,sizeof(dp));</div><div class="line">		dp[0]=1.0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=sum;j&gt;=bank[i].money;j--)</div><div class="line">				dp[j]=max(dp[j],dp[j-bank[i].money]*bank[i].caught);</div><div class="line">		<span class="keyword">for</span>(int i=sum;i&gt;=0;i--)</div><div class="line">			<span class="keyword">if</span>(dp[i]&gt;p)</div><div class="line">			&#123;</div><div class="line">				cout&lt;&lt;i&lt;&lt;endl;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>1、抢n个银行，不被抓，是每次都不被抓，用乘法原理处理每次不被抓的概率。<br>2、转化为01背包：将所有银行的总钱数当做背包的容积v，将不被抓的概率当做cost[i]，<br>在一般的01背包中都是加上cost[i] ，这里由于是乘法原理，所以应该是转化为乘法。<br>这样，传统的01背包累加问题变成了垒乘。<br>3、状态转移方程：dp[j]=max(dp[j],dp[j-bank[i].money]*bank[i].caught)<br>dp[j]表示抢j钱时的最大不被抓概率。</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>此题乍看与背包问题无关，其实是变相的01背包问题。由于dp求得的是最大的不被抓概率，所以程序中的p和bank[i].caught必须转化为不被抓的概率，即用1减去本身。<br>最后在判断的时候需注意i从sum开始，即从最大背包容量开始判断，每个容量对应的最大不被抓概率是否满足小于给定的概率，若满足则立刻输出并结束循环，保证输出<br>的是最优化值。dp的初始化也要注意给dp[0]赋为1，因为当抢钱数为0是不会被抓。</p>
<h2 id="ACM-HDOJ-3466-01背包排序"><a href="#ACM-HDOJ-3466-01背包排序" class="headerlink" title="ACM-HDOJ 3466(01背包排序)"></a>ACM-HDOJ 3466(01背包排序)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147150959198.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147150959256.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14715095929.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147150959324.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147150959358.png" alt=""></p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>用钱买商品，每件物品只有在大于特定资金才能进行交易，在总资金一定的情况下求获得的最大价值。</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int p,q,v,cha;</div><div class="line">&#125;a[550];</div><div class="line">int cmp(node A,node B)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> A.cha&lt;B.cha;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n,m,dp[5050];</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;a[i].p&gt;&gt;a[i].q&gt;&gt;a[i].v;</div><div class="line">			a[i].cha=a[i].q<span class="_">-a</span>[i].p;</div><div class="line">		&#125;</div><div class="line">		memset(dp,0,sizeof(dp));</div><div class="line">		sort(a,a+n,cmp);</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=m;j&gt;=a[i].q;j--)</div><div class="line">				dp[j]=max(dp[j],dp[j<span class="_">-a</span>[i].p]+a[i].v);</div><div class="line">		cout&lt;&lt;dp[m]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>此道01背包问题需要sort排序，理由如下：<br>有两个物品(p1,q1,v1),(p2,q2,v2)，然后物品1先放的话，物品2就可以借助物品1产生的各种状态来进行下一步转移，而如果物品2的q2值过高，在这个[q2,m]的区间内都<br>不存在物品1造成的新状态的话，那么物品1的状态就没有得到利用。而如果交换顺序，先放了物品2，那么显然物品1就可以利用物品2产生的新状态。<br>所以物品1能从物品2转移的状态区间其实是[min(q1+p2,m),m]，物品2能从物品1转移的状态区间是[min(q2+p1,m),m]。所以尽可能地复用这个区间，让区间小的先来，<br>区间大的后来，这样排序之后所有物品都能从前面的物品得到新状态进行转移。<br>先买A，至少需要p1+q2，先买B，至少需要p2+q1;若A q2-p2;即差值大的先买，所以先买的应排到后面。<br>而普通的01背包之所以不需要排序,是因为p1==q1,p2==q2,排序跟不排是一回事。这一类的dp题要注意后效性是否存在，如果存在通过改变顺序之类的办法来取消后效性。<br>在ACM-HDOJ 2546题中，qi恒定为5，所以也是需要排序的。</p>
<h3 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h3><p>因为01背包的内循环是逆序，所以在先买差值大的情况下，a数组应从小到大进行排列，确保在循环中先从末尾的最大买起。</p>
<h2 id="ACM-HDOJ-1864-01背包变形"><a href="#ACM-HDOJ-1864-01背包变形" class="headerlink" title="ACM-HDOJ 1864(01背包变形)"></a>ACM-HDOJ 1864(01背包变形)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147157839619.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147157839674.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147157839708.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14715783975.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147157839789.png" alt=""></p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">int dp[3000050];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int money[31],fund2;</div><div class="line">	int num1,num2;</div><div class="line">	double sum1,fund;</div><div class="line">	char ch;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%lf%d"</span>,&amp;sum1,&amp;num1)&amp;&amp;num1)</div><div class="line">	&#123;</div><div class="line">		int sum=int(sum1*100);</div><div class="line">		memset(money,0,sizeof(money));</div><div class="line">		memset(dp,0,sizeof(dp));</div><div class="line">		int l=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;num1;i++)</div><div class="line">		&#123;</div><div class="line">			scanf(<span class="string">"%d"</span>,&amp;num2);</div><div class="line">			int a=0,b=0,c=0,flag=1;</div><div class="line">			<span class="keyword">while</span>(num2--)</div><div class="line">			&#123;</div><div class="line">				scanf(<span class="string">" %c:%lf"</span>,&amp;ch,&amp;fund);</div><div class="line">				fund2=int(fund*100);</div><div class="line">				<span class="keyword">if</span>(ch==<span class="string">'A'</span>&amp;&amp;a+fund2&lt;=60000)</div><div class="line">					a+=fund2;</div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">'B'</span>&amp;&amp;b+fund2&lt;=60000)</div><div class="line">					b+=fund2;</div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">'C'</span>&amp;&amp;c+fund2&lt;=60000)</div><div class="line">					c+=fund2;</div><div class="line">				<span class="keyword">else</span></div><div class="line">					flag=0;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(a+b+c&lt;=100000 &amp;&amp; a&lt;=60000 &amp;&amp; b&lt;=60000 &amp;&amp; c&lt;=60000 &amp;&amp; flag)</div><div class="line">				money[l++]=a+b+c;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;=l;i++)</div><div class="line">			<span class="keyword">for</span>(int j=sum;j&gt;=money[i];j--)</div><div class="line">				dp[j]=max(dp[j],dp[j-money[i]]+money[i]);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,dp[sum]/100.0);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>依次搜索每张发票的信息，判断是否满足题给的三个条件：只有ABC三类，ABC单项小于600，ABC和小于1000.若均满足后存入money数组，之后对该数组进行01背包的<br>操作后即可得出结果。</p>
<h3 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h3><p>由于该题要求有关数据均要保留两位小数，所以为了简化操作，把所有的小数均扩大100倍后进行整型操作，最后只需要把结果在除以100.0即可。注意l的定义要在for循环之<br>外，因为money数组存放的是所有满足条件发票的总资金。只要有一个不是ABC类型的flag=0，不满足if判断直接进行下一张发票的判断。dp数组应该开到30×1000×100的<br>大小，防止数组越界。(多乘的100是因为扩大了100倍)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[DP问题专题一(Dynamic Programming) 背包入门]]></title>
      <url>http://xuboming8.github.io/2016/08/30/DP%E9%97%AE%E9%A2%98%E4%B8%93%E9%A2%98%E4%B8%80-Dynamic-Programming-%E8%83%8C%E5%8C%85%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<h1 id="经典DP-背包问题"><a href="#经典DP-背包问题" class="headerlink" title="经典DP 背包问题"></a>经典DP 背包问题</h1><h2 id="三种基本背包问题的概念"><a href="#三种基本背包问题的概念" class="headerlink" title="三种基本背包问题的概念"></a>三种基本背包问题的概念</h2><p><strong>01背包(Zero one pack)：</strong><br>有N件物品和一个容量为V的背包， 每种物品均只有一件。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使价值总和最大。<br><strong>完全背包(Complete Pack)：</strong><br>有N种物品和一个容量为V的背包，每种物品都有无限件可用。第i种物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，<br>且价值总和最大。<br><strong>多重背包(Multiple Pack)：</strong><br>有N种物品和一个容量为V的背包，第i种物品最多有n[i]件可用。每件费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且<br>价值总和最大。<br><a id="more"></a></p>
<h2 id="01背包"><a href="#01背包" class="headerlink" title="01背包"></a>01背包</h2><p>1背包（ZeroOnePack）: 有N件物品和一个容量为V的背包，每种物品均只有一件。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使价值总和最大。<br>这是最基础的背包问题，特点是：每种物品仅有一件，可以选择放或不放。<br>用子问题定义状态：即f[i][v]表示前i件物品恰放入一个容量为v的背包可以获得的最大价值。<br>其状态转移方程是：</p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147124545174.png" alt=""><br></div><br>把这个过程理解下：<br>在前i件物品放进容量v的背包时，它有两种情况</p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147124545224.png" alt=""><br></div><br>PS：第二种是如果第i件放进去，那么在容量v-c[i]里就要放进前i-1件物品<br>最后比较第一种与第二种所得价值的大小，哪种相对大，f[i][v]的值就是哪种。<br>这里是用二维数组存储的，可以把空间优化，用一维数组存储。<br>代码如下：(外循环正序 内循环逆序 使f[v]和f[v-c[i]]+w[i]表示前一状态的价值)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> i=1..N</div><div class="line">   <span class="keyword">for</span> v=V..0</div><div class="line">        f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;</div></pre></td></tr></table></figure></p>
<h2 id="完全背包"><a href="#完全背包" class="headerlink" title="完全背包"></a>完全背包</h2><p>完全背包(CompletePack): 有N种物品和一个容量为V的背包，每种物品都有无限件可用。第i种物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费<br>用总和不超过背包容量，且价值总和最大。<br>完全背包按其思路仍然可以用一个二维数组来写出：（两种状态方程）</p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147125503938.png" alt=""><br></div></p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147256532522.png" alt=""><br></div><br>同样的它也可以用一维数组来表示<br>代码如下：(外循环和内循环均正序 保证使f[v]和f[v-c[i]]+w[i]表示当前状态的价值)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> i=1..N</div><div class="line">    <span class="keyword">for</span> v=0..V</div><div class="line">        f[v]=max&#123;f[v],f[v-c[i]]+w[i]&#125;</div></pre></td></tr></table></figure></p>
<h2 id="多重背包"><a href="#多重背包" class="headerlink" title="多重背包"></a>多重背包</h2><p>多重背包(MultiplePack): 有N种物品和一个容量为V的背包。第i种物品最多有n[i]件可用，每件费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和<br>不超过背包容量，且价值总和最大。<br>其状态转移方程是：</p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147125503989.png" alt=""><br></div><br>多重背包问题可以转化为01背包问题：(提供如下模版)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">void ZeroOnePack(int value,int weight)  </div><div class="line">&#123;  </div><div class="line">    <span class="keyword">for</span>(int v=m;v&gt;=value;v--)  </div><div class="line">        dp[v]=max(dp[v-value]+weight,dp[v]);  </div><div class="line">&#125;  </div><div class="line">void CompletePack(int value,int weight)  </div><div class="line">&#123;  </div><div class="line">    <span class="keyword">for</span>(int v=value;v&lt;=m;v++)  </div><div class="line">        dp[v]=max(dp[v],dp[v-value]+weight);  </div><div class="line">&#125;  </div><div class="line">void MultiPack(int value,int weight,int amount)  </div><div class="line">&#123;  </div><div class="line">    <span class="keyword">if</span>(value*amount&gt;=m)  </div><div class="line">    &#123;  </div><div class="line">        CompletePack(value,weight);  </div><div class="line">        <span class="built_in">return</span> ;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">for</span>(int k=1;k&lt;amount;k*=2)  </div><div class="line">    &#123;  </div><div class="line">        ZeroOnePack(k*value,k*weight);  </div><div class="line">        amount-=k;  </div><div class="line">    &#125;  </div><div class="line">    ZeroOnePack(amount*value,amount*weight);  </div><div class="line">&#125;</div><div class="line">value表示每件的花费 weight表示每件的价值 amount表示每件可取的数量 m表示最大背包容量</div><div class="line">具体在1059题中使用</div></pre></td></tr></table></figure></p>
<p>也可变形为以下模版，性质不变：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">void ZeroOnePack(int value,int cost)  </div><div class="line">&#123;  </div><div class="line">    <span class="keyword">for</span>(int v=m;v&gt;=cost;v--)  </div><div class="line">        dp[v]=max(dp[v-value]+cost,dp[v]);  </div><div class="line">&#125;  </div><div class="line">void CompletePack(int value,int cost)  </div><div class="line">&#123;  </div><div class="line">    <span class="keyword">for</span>(int v=cost;v&lt;=m;v++)  </div><div class="line">        dp[v]=max(dp[v],dp[v-value]+cost);  </div><div class="line">&#125;  </div><div class="line">void MultiPack(int value,int cost,int amount)  </div><div class="line">&#123;  </div><div class="line">    <span class="keyword">if</span>(value*amount&gt;=m)  </div><div class="line">    &#123;  </div><div class="line">        CompletePack(value,cost);  </div><div class="line">        <span class="built_in">return</span> ;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">for</span>(int k=1;k&lt;amount;k*=2)  </div><div class="line">    &#123;  </div><div class="line">        ZeroOnePack(k*value,k*cost);  </div><div class="line">        amount-=k;  </div><div class="line">    &#125;  </div><div class="line">    ZeroOnePack(amount*value,amount*cost);  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="二进制优化"><a href="#二进制优化" class="headerlink" title="二进制优化"></a>二进制优化</h2><p>假如给了我们价值为2，数量是10的物品，我们应该把10给拆开，首先算出2^0=1,2^1=2,2^2=4,2^3=8。好了那么现在，1+2+4=7<10,1+2+4+8=15>10,所以剩下<br>的数字应为10-7=3。最后组成10的数字就求得为1，2，4，3。由这4个数字可以表示1-10里的任意一个数，所以这批物品就可以表示为价值为2，4，6，8的四种货物，总价<br>值依然为20，问题就得到了简化。</10,1+2+4+8=15></p>
<h3 id="二维划为一维数组的正逆序问题"><a href="#二维划为一维数组的正逆序问题" class="headerlink" title="二维划为一维数组的正逆序问题"></a>二维划为一维数组的正逆序问题</h3><p>鉴于上面的分析，在01背包中应采取逆序遍历，而在完全背包中应采取正向遍历，原因参考下列博客：<br><a href="http://blog.csdn.net/xiajiawei0206/article/details/19933781" target="_blank" rel="external">由于该博主已经十分详细的分析了，这里就不在赘述</a><br>但上篇博客未牵涉到完全背包问题，所以做如下补充：<br>想想为什么P01中要按照v=V..0的逆序来循环。这是因为要保证第i次循环中的状态f[i][v]是由状态f[i-1][v-c[i]]递推而来。换句话说，这正是为了保证每件物品只选一次，<br>保证在考虑“选入第i件物品”这件策略时，依据的是一个绝无已经选入第i件物品的子结果f[i-1][v-c[i]]。而现在完全背包的特点恰是每种物品可选无限件，所以在考虑“加<br>选一件第i种物品”这种策略时，却正需要一个可能已选入第i种物品的子结果f[i][v-c[i]]，所以就可以并且必须采用v= 0..V的顺序循环。这就是这个简单的程序为何成立的<br>道理。</p>
<h2 id="ACM-HDOJ-2546-01背包"><a href="#ACM-HDOJ-2546-01背包" class="headerlink" title="ACM-HDOJ 2546(01背包)"></a>ACM-HDOJ 2546(01背包)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14713396409.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147133964134.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147133964171.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147133964204.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147133964245.png" alt=""></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int cmp(int a,int b)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> a&lt;b;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n &amp;&amp; n!=0)</div><div class="line">	&#123;</div><div class="line">		int price[1050]=&#123;0&#125;,m,dp[1050]=&#123;0&#125;;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;price[i];</div><div class="line">		cin&gt;&gt;m;</div><div class="line">		<span class="keyword">if</span>(m&lt;5)</div><div class="line">		&#123;</div><div class="line">			cout&lt;&lt;m&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		sort(price+1,price+1+n,cmp);</div><div class="line">		int Max=price[n];</div><div class="line">		m-=5;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">			<span class="keyword">for</span>(int j=m;j&gt;=price[i];j--)</div><div class="line">				dp[j]=max(dp[j],dp[j-price[i]]+price[i]);</div><div class="line">		cout&lt;&lt;(m-dp[m])+(5-Max)&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>典型的01背包问题。但在使用状态方程前应先做如下操作：由于卡里的余额必须要大于5，所以可以做先拿5元买最贵的菜，接着卡里剩余m-5使用01背包问题求出最大价<br>值（这是逆向思维，若换成正序的情形更容易理解，相当于先买除了最贵以外的菜，确保买完后卡里的钱大于5元而且最少，最接近5元，接着用这5元去买最贵的菜，卡<br>里剩下的负值就是最小的余额）。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>虽然题目类型是典型的01背包问题，但是不代表可以直接使用状态方程求解，在经过一系列的操作后才可以使用。如本题在使用状态方程前需先用5元去买最贵的物品。<br>至于为什么要排序，详见DP专题二————ACM-HDOJ 3466题思路</p>
<h2 id="ACM-HDOJ-1963-完全背包"><a href="#ACM-HDOJ-1963-完全背包" class="headerlink" title="ACM-HDOJ 1963(完全背包)"></a>ACM-HDOJ 1963(完全背包)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147135793769.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147135793825.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147135793857.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147135793898.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147135793932.png" alt=""></p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct node</div><div class="line">&#123;</div><div class="line">	int cost,reward;</div><div class="line">&#125;a[20];</div><div class="line">int dp[1000];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int t;</div><div class="line">	cin&gt;&gt;t;</div><div class="line">	<span class="keyword">while</span>(t--)</div><div class="line">	&#123;</div><div class="line">		int sum,year,n;</div><div class="line">		cin&gt;&gt;sum&gt;&gt;year;</div><div class="line">		cin&gt;&gt;n;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;a[i].cost&gt;&gt;a[i].reward;</div><div class="line">			a[i].cost/=1000;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=year;i++)</div><div class="line">		&#123;</div><div class="line">			int s=sum/1000;</div><div class="line">			memset(dp,0,sizeof(dp));</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=n;j++)</div><div class="line">				<span class="keyword">for</span>(int k=a[j].cost;k&lt;=s;k++)</div><div class="line">					dp[k]=max(dp[k],dp[k<span class="_">-a</span>[j].cost]+a[j].reward);</div><div class="line">			sum+=dp[s];</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;sum&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>因为每种物品可以进行多次购买，所以可以看作完全背包问题。但是要注意的是，由于本金可能会很大，所以我们要对背包的大小进行压缩，值得注意的是，题目已经说了本<br>金与物品的购买价格都是1000的倍数，所以我们可以将他们都除以1000来进行压缩，然后就是一道完全背包模板题了。</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>要对背包的大小进行压缩。</p>
<h2 id="ACM-HDOJ-1059-多重背包"><a href="#ACM-HDOJ-1059-多重背包" class="headerlink" title="ACM-HDOJ 1059(多重背包)"></a>ACM-HDOJ 1059(多重背包)</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147105616483.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147105616587.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147105616623.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147105616656.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14710561669.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>有一堆钻石，有6种不同的价值（1…6），现在告诉你每种的数量，问你能不能把这堆钻石按总的价值平均分开。</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;cstdio&gt; </span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int data[7];</div><div class="line">int dp[60001];</div><div class="line">int m;</div><div class="line">void ZeroOnePack(int value,int weight)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int v=m;v&gt;=value;v--)</div><div class="line">		dp[v]=max(dp[v],dp[v-value]+weight);</div><div class="line">&#125;</div><div class="line">void CompletePack(int value,int weight)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int v=value;v&lt;=m;v++)</div><div class="line">		dp[v]=max(dp[v],dp[v-value]+weight);</div><div class="line">&#125;</div><div class="line">void MultiPack(int value,int weight,int amount)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(value*amount&gt;=m)</div><div class="line">	&#123;</div><div class="line">		CompletePack(value,weight);</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(int k=1;k&lt;amount;k*=2)</div><div class="line">	&#123;</div><div class="line">		ZeroOnePack(k*value,k*weight);</div><div class="line">		amount-=k;</div><div class="line">	&#125;</div><div class="line">	ZeroOnePack(amount*value,amount*weight);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int count=1;</div><div class="line">	<span class="keyword">while</span>(1)</div><div class="line">	&#123;</div><div class="line">		int sum=0;</div><div class="line">		bool mark=<span class="literal">true</span>;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=6;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;data[i];</div><div class="line">			sum+=data[i]*i;</div><div class="line">			<span class="keyword">if</span>(data[i])</div><div class="line">				mark=<span class="literal">false</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(mark)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		cout&lt;&lt;<span class="string">"Collection #"</span>&lt;&lt;count++&lt;&lt;<span class="string">":"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">if</span>(sum&amp;1)</div><div class="line">		&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"Can't be divided."</span>&lt;&lt;endl;</div><div class="line">			cout&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		m=sum&gt;&gt;1;</div><div class="line">		memset(dp,0,sizeof(dp));</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=6;i++)</div><div class="line">			<span class="keyword">if</span>(data[i])</div><div class="line">				MultiPack(i,i,data[i]);</div><div class="line">		<span class="keyword">if</span>(dp[m]==m)</div><div class="line">			cout&lt;&lt;<span class="string">"Can be divided."</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"Can't be divided."</span>&lt;&lt;endl;</div><div class="line">		cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>只要能把钻石总价值的一半放进背包中，就满足题意。首先求出sum，并sum的一半赋给m作为背包最大容量。接着6个位置中每个位置进行判断，若不为0则进入模版进<br>行判断。01背包和完全背包军用了一维数组形式的状态转移方程，注意01背包中循环是逆序，完全背包是正序即可。多重背包中，如果总价值大于背包的最大容量，那<br>么就可以等效为完全背包问题。否则进行二进制优化，优化的结果均带入01背包进行计算，最后得出的dp[m]与m进行判断。</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>若总价值为奇数则可以直接剪枝，用sum&amp;1的二进制方法比sum%2的方法更简洁。sum&amp;1为0说明是偶数，为1说明是奇数。同样m=sum/2也可以用sum&gt;&gt;=1来表示，把<br>二进制数像右移动一位相当于缩小了2^1倍。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[经典的搜索类游戏]]></title>
      <url>http://xuboming8.github.io/2016/08/30/%E7%BB%8F%E5%85%B8%E7%9A%84%E6%90%9C%E7%B4%A2%E7%B1%BB%E6%B8%B8%E6%88%8F/</url>
      <content type="html"><![CDATA[<h1 id="连连看-推箱子-蜘蛛纸牌"><a href="#连连看-推箱子-蜘蛛纸牌" class="headerlink" title="连连看 推箱子 蜘蛛纸牌"></a>连连看 推箱子 蜘蛛纸牌</h1><h2 id="连连看"><a href="#连连看" class="headerlink" title="连连看"></a>连连看</h2><p><strong>ACM-HDOJ 1175</strong></p>
<p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147076014848.png" alt=""></p>
<p><strong>Input</strong><br><a id="more"></a><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147076014895.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147076014932.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147076014964.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147076015004.png" alt=""></p>
<h3 id="参考AC代码（1）：深搜-剪枝"><a href="#参考AC代码（1）：深搜-剪枝" class="headerlink" title="参考AC代码（1）：深搜+剪枝"></a>参考AC代码（1）：深搜+剪枝</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;cstring&gt;  </span></div><div class="line">using namespace std;   </div><div class="line">const int MAX = 1003;  </div><div class="line">const int dirx[5] = &#123;0,0,1,0,-1&#125;;</div><div class="line">const int diry[5] = &#123;0,1,0,-1,0&#125;;  </div><div class="line">int map[MAX][MAX],flag[MAX][MAX];</div><div class="line">int n,m,bx,by;  </div><div class="line">bool mark;   </div><div class="line">void dfs(int x,int y,int cnt,int dir)</div><div class="line">&#123;  </div><div class="line">    int i,tx,ty;</div><div class="line">    <span class="keyword">if</span>(x&lt;1 || y&lt;1 || x&gt;n || y&gt;m || cnt&gt;2)</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">    //注意下面几个剪枝的顺序，顺序搞错了就会出错，因为最后一个元素非0  </div><div class="line">    <span class="keyword">if</span>(x==bx &amp;&amp; y==by)</div><div class="line">	&#123; </div><div class="line">        mark = <span class="literal">true</span>;  </div><div class="line">        <span class="built_in">return</span>;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">if</span>(map[x][y]!=0)</div><div class="line">		<span class="built_in">return</span>;  </div><div class="line">    <span class="keyword">if</span>(flag[x][y]!=-1 &amp;&amp; flag[x][y]&lt;cnt)</div><div class="line">		<span class="built_in">return</span>;  </div><div class="line">    flag[x][y] = cnt;  </div><div class="line">    <span class="keyword">for</span>(i=1;i&lt;=4;i++)</div><div class="line">	&#123;  </div><div class="line">        tx = x + dirx[i];  </div><div class="line">        ty = y + diry[i];  </div><div class="line">        <span class="keyword">if</span>(dir!=i) </div><div class="line">            dfs(tx,ty,cnt+1,i);  </div><div class="line">		<span class="keyword">else</span></div><div class="line">            dfs(tx,ty,cnt,i);   </div><div class="line">    &#125;  </div><div class="line">&#125;    </div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;  </div><div class="line">    int i,j,t,ax,ay;  </div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d %d"</span>,&amp;n,&amp;m)!=EOF)</div><div class="line">	&#123;  </div><div class="line">        <span class="keyword">if</span>(n==0 &amp;&amp; m==0)</div><div class="line">			<span class="built_in">break</span>;  </div><div class="line">        <span class="keyword">for</span>(i=1;i&lt;=n;++i) </div><div class="line">            <span class="keyword">for</span>(j=1;j&lt;=m;++j)</div><div class="line">                scanf(<span class="string">"%d"</span>,&amp;map[i][j]);  </div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;t);  </div><div class="line">        <span class="keyword">while</span>(t--)</div><div class="line">		&#123;  </div><div class="line">            memset(flag,-1,sizeof(flag));  </div><div class="line">            scanf(<span class="string">"%d %d %d %d"</span>,&amp;ax,&amp;ay,&amp;bx,&amp;by);  </div><div class="line">            mark = <span class="literal">false</span>;  </div><div class="line">            <span class="keyword">if</span>(map[ax][ay]!=map[bx][by] || map[ax][ay]==0 || map[bx][by]==0)     //剪枝</div><div class="line">			&#123;  </div><div class="line">                <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);  </div><div class="line">                <span class="built_in">continue</span>;  </div><div class="line">            &#125;  </div><div class="line">            flag[ax][ay] = 0;  </div><div class="line">            <span class="keyword">for</span>(i=1;i&lt;=4;i++) </div><div class="line">                dfs(ax+dirx[i],ay+diry[i],0,i); </div><div class="line">            <span class="keyword">if</span>(mark)</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);  </div><div class="line">			<span class="keyword">else</span></div><div class="line">                <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);   </div><div class="line">        &#125;  </div><div class="line">    &#125;   </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码（2）：广搜-优化队列"><a href="#参考AC代码（2）：广搜-优化队列" class="headerlink" title="参考AC代码（2）：广搜+优化队列"></a>参考AC代码（2）：广搜+优化队列</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;cstring&gt;</span></div><div class="line"><span class="comment">#include &lt;queue&gt;</span></div><div class="line">using namespace std;</div><div class="line">const int S = 1010;</div><div class="line">int n,m;</div><div class="line">int q,sx,sy,dx,dy;</div><div class="line">int map[S][S],flag[S][S];</div><div class="line">const int dirx[4]=&#123;-1,1,0,0&#125;,diry[4]=&#123;0,0,-1,1&#125;;</div><div class="line">typedef struct </div><div class="line">&#123;</div><div class="line">    int x,y,dir,turn;</div><div class="line">&#125;point;</div><div class="line">queue&lt;point&gt;que;</div><div class="line">inline bool check(point &amp;P)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(P.x&gt;=1&amp;&amp;P.x&lt;=n&amp;&amp;P.y&gt;=1&amp;&amp;P.y&lt;=m) </div><div class="line">		<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">    <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line">bool <span class="function"><span class="title">bfs</span></span>()</div><div class="line">&#123;</div><div class="line">    point cur,next;</div><div class="line">    <span class="keyword">while</span>(que.size())</div><div class="line">	&#123;</div><div class="line">        cur = que.front();</div><div class="line">        que.pop();</div><div class="line">        <span class="keyword">if</span>(cur.x==dx&amp;&amp;cur.y==dy) </div><div class="line">			<span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;4;i++)</div><div class="line">		&#123;</div><div class="line">            <span class="keyword">if</span>(cur.dir!=i)</div><div class="line">			&#123;</div><div class="line">                next.dir=i;</div><div class="line">                next.turn=cur.turn+1;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">                next.dir=cur.dir;</div><div class="line">                next.turn=cur.turn;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(next.turn&gt;2) </div><div class="line">				<span class="built_in">continue</span>;                </div><div class="line">            next.x=cur.x+dirx[i],next.y=cur.y+diry[i];</div><div class="line">            <span class="keyword">if</span>(check(next)&amp;&amp;(!map[next.x][next.y]||(next.x==dx&amp;&amp;next.y==dy))&amp;&amp;flag[next.x][next.y]&gt;=next.turn)</div><div class="line">			&#123;</div><div class="line">                que.push(next);</div><div class="line">                flag[next.x][next.y]=next.turn;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d %d"</span>,&amp;n,&amp;m)&amp;&amp;(n||m))</div><div class="line">	&#123;</div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">            <span class="keyword">for</span>(int j=1;j&lt;=m;j++) </div><div class="line">				scanf(<span class="string">"%d"</span>,&amp;map[i][j]);</div><div class="line">        scanf(<span class="string">"%d"</span>,&amp;q);</div><div class="line">        <span class="keyword">while</span>(q--)</div><div class="line">		&#123;</div><div class="line">            scanf(<span class="string">"%d %d %d %d"</span>,&amp;sx,&amp;sy,&amp;dx,&amp;dy);</div><div class="line">            <span class="keyword">if</span>((map[sx][sy]!=map[dx][dy])||!map[sx][sy]||!map[dx][dy]||(sx==dx&amp;&amp;sy==dy))</div><div class="line">			&#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</div><div class="line">                <span class="built_in">continue</span>;</div><div class="line">			&#125;</div><div class="line">            <span class="keyword">while</span>(que.size()) </div><div class="line">				que.pop();</div><div class="line">            memset(flag,1,sizeof(flag));</div><div class="line">            point start;</div><div class="line">            start.x=sx,start.y=sy,start.turn=0;</div><div class="line">            <span class="keyword">for</span>(int i=0;i&lt;4;i++)</div><div class="line">			&#123;</div><div class="line">                start.dir=i;</div><div class="line">                que.push(start);</div><div class="line">            &#125;</div><div class="line">            flag[sx][sy]=0;</div><div class="line">            <span class="keyword">if</span>(bfs()) </div><div class="line">				<span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</div><div class="line">            <span class="keyword">else</span> </div><div class="line">				<span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><blockquote>
<p>此类型为典型的搜索类题型，使用DFS或BFS均可以解决问题，再搭配优化队列或剪枝可以避免超时，超内存，减少运算复杂度。<br>方法一使用了深搜+剪枝：<br>使用数组map来储存每个位置，0代表该位置为空。数组flag作为标志数组，用来判断每个位置是否走过，用来存放到达每个点的最优化拐弯次数，并且初始化为-1。<br>如果进行判断的2个点不相等，或者2个点中任何一个点为空，或者2个点在同一个位置，那么直接剪枝输出NO。flag在第一个点位置的值设为0。接着开始移动起点<br>并进入dfs。首先如果越界或者cnt（记录转弯次数）大于2，直接剪枝，若到达终点直接返回true，如果map中该位置不为0，剪枝（空位才能走，若下一步是终点的<br>情况已经在上一步返回true结束循环了），若flag中存放的值不为-1（不等于-1说明该点已经走过，需要进行下一步判断）并且flag在改点的值小于cnt（flag记录<br>的是最优化拐弯次数，如果都小于当前可以进行的拐弯次数，那么不满足题意），剪枝。把cnt的值赋给该位置的flag。接下来继续进行移动，若dir（记录该点的方<br>向）和i（下一步的方向）相等，那么继续进入dfs进行下一步判断，此时代入的参数cnt不变（拐弯字数未变），i（下一步的方向）。若dir！=i，说明该点进行了拐<br>弯操作，那么代入的参数中cnt需要+1，继续进入dfs循环。如果第一个方向没有找到结果，那么回到主函数的for循环进行第二个方向的判断。<br>方法二使用了广搜+优化队列：<br>与方法一类似，下面只叙述不一样的部分。该方法采用了优化队列，开始是先把4个方向的结构体变量start存入队列，进入bfs进行判断，与方法一的的for循环类似，都<br>是可以保证在一个方向无法满足题意的情况下可以从起点开始进行下一方向的判断。接着把队列顶端的元素赋给cur，接着出队列，接着再用一个for循环进行移动，此时<br>判断i与que.dir是否相等，若相等则说明为拐弯，next.dir等于cur.dir，next.turn等于cur.turn，若不相等说明进行了拐弯，next.dir与目前的i保持一致，next.turn<br>变为cur.turn+1。接着进行一系列的判断（与方法一类似 首先保证未越界，其次地图上该点等于0可走，或者下一步已经到了终点，最后flag存放的最优化拐弯次数要大<br>于等于目前可以进行的拐弯次数turn）后若next满足题意，则next进队列，flag存放这一位置的最优化拐弯次数。</p>
</blockquote>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><blockquote>
<p>由于方法略有不同，而且剪枝的顺序也不同，所以两段代码在有些方面需要注意：<br>第一段代码不需要判断flag存放的拐弯数是否大于2剪枝，因为在第一步的时候已经判断cnt如果大于2剪枝。并且在21行的代码中不需要判断下一个步是否到达终点。有<br>人可能会问，地图上除了为0的点可以走之外，如果下一步到了终点的话也是可行的，这个判断是对的，但是在前面的剪枝中已经判断如果到达了终点后直接返回true，<br>并不会执行下一步，换言之，如果程序执行到了第21行，那么下一步必然不可能到终点。第二段代码中也并不需要额外判断flag大于2剪枝，因为在for循环中已经判断<br>若turn大于2后直接continue进入下一循环。并且在这一段代码中必须判断下一步map的点为0或者是否为终点，这是由于该代码是在进行了移动后再进行判断的，没有<br>像第一段代码是先判断后移动，必须要注意，否则会WA。</p>
</blockquote>
<h2 id="推箱子"><a href="#推箱子" class="headerlink" title="推箱子"></a>推箱子</h2><p><strong>ACM-HDOJ 1254</strong></p>
<p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147081340477.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147081340537.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14708134057.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147081340603.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147081340639.png" alt=""></p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;  </span></div><div class="line"><span class="comment">#include&lt;cstring&gt;  </span></div><div class="line"><span class="comment">#include&lt;queue&gt;  </span></div><div class="line">using namespace std;   </div><div class="line">int Map[8][8];  </div><div class="line">bool vis[8][8][4],us[8][8];//标记箱子推过的方向  人走过的点  </div><div class="line">int dir[4][2]=&#123;0,1,0,-1,1,0,-1,0&#125;;  </div><div class="line">struct node  </div><div class="line">&#123;  </div><div class="line">    int x,y;  </div><div class="line">    int xx,yy;  </div><div class="line">    int t;  </div><div class="line">&#125;st,ed;  </div><div class="line">struct edg  </div><div class="line">&#123;  </div><div class="line">    int x,y;  </div><div class="line">&#125;a,b;  </div><div class="line">int n,m;  </div><div class="line">queue&lt;node&gt;q;   </div><div class="line">void Bfs()  //对于箱子  广搜人能将箱子像哪个方向推  </div><div class="line">&#123;  </div><div class="line">    queue&lt;edg&gt;qq;  </div><div class="line">    memset(us,<span class="literal">false</span> ,sizeof(us));  </div><div class="line">    qq.push(a);  </div><div class="line">    <span class="keyword">while</span>(qq.size())  </div><div class="line">    &#123;  </div><div class="line">        a=qq.front();  </div><div class="line">        qq.pop();  </div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;4;i++)  </div><div class="line">        &#123;  </div><div class="line">            int xx,yy;  </div><div class="line">            xx=a.x+dir[i][0];  </div><div class="line">            yy=a.y+dir[i][1];  </div><div class="line">            <span class="keyword">if</span>(xx&gt;=0&amp;&amp;xx&lt;n&amp;&amp;yy&gt;=0&amp;&amp;yy&lt;m)  </div><div class="line">            &#123;  </div><div class="line">                <span class="keyword">if</span>(xx==st.x&amp;&amp;yy==st.y)  </div><div class="line">                &#123;  </div><div class="line">                    int x=st.x+dir[i][0],y=st.y+dir[i][1];  </div><div class="line">                    <span class="keyword">if</span>(x&gt;=0&amp;&amp;x&lt;n&amp;&amp;y&gt;=0&amp;&amp;y&lt;m)  </div><div class="line">                    &#123;  </div><div class="line">                        <span class="keyword">if</span>(!vis[x][y][i]&amp;&amp;Map[x][y]!=1)  //能推且到达的点不是墙  </div><div class="line">                        &#123;  </div><div class="line">                            ed.x=x;  </div><div class="line">                            ed.y=y;  </div><div class="line">                            ed.xx=xx;  </div><div class="line">                            ed.yy=yy;  </div><div class="line">                            ed.t=st.t+1;  </div><div class="line">                            q.push(ed);  </div><div class="line">                            vis[x][y][i]=<span class="literal">true</span> ;  </div><div class="line">                        &#125;  </div><div class="line">                    &#125;  </div><div class="line">                &#125;  </div><div class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(!us[xx][yy]&amp;&amp;Map[xx][yy]!=1)  </div><div class="line">                &#123;  </div><div class="line">                    us[xx][yy]=<span class="literal">true</span> ;  </div><div class="line">                    b.x=xx;  </div><div class="line">                    b.y=yy;  </div><div class="line">                    qq.push(b);  </div><div class="line">                &#125;  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> ;  </div><div class="line">&#125;   </div><div class="line">void <span class="function"><span class="title">bfs</span></span>()  </div><div class="line">&#123;  </div><div class="line">    <span class="keyword">while</span>(q.size()) q.pop();  </div><div class="line">    q.push(st);  </div><div class="line">    <span class="keyword">while</span>(q.size())  </div><div class="line">    &#123;  </div><div class="line">        st=q.front();  </div><div class="line">        q.pop();  </div><div class="line">        <span class="keyword">if</span>(Map[st.x][st.y]==3)  </div><div class="line">        &#123;  </div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,st.t);  </div><div class="line">            <span class="built_in">return</span> ;  </div><div class="line">        &#125;  </div><div class="line">        a.x=st.xx;  </div><div class="line">        a.y=st.yy;  </div><div class="line">        Bfs();  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);  </div><div class="line">    <span class="built_in">return</span> ;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int t;  </div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);  </div><div class="line">    <span class="keyword">while</span>(t--&amp;&amp;scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m))  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">for</span>(int i=0;i&lt;n;i++)  </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">for</span>(int j=0;j&lt;m;j++)  </div><div class="line">            &#123;  </div><div class="line">                scanf(<span class="string">"%d"</span>,&amp;Map[i][j]);  </div><div class="line">                <span class="keyword">if</span>(Map[i][j]==2)  </div><div class="line">                    st.x=i,st.y=j;  </div><div class="line">                <span class="keyword">if</span>(Map[i][j]==4)  </div><div class="line">                    st.xx=i,st.yy=j;  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">        st.t=0;  </div><div class="line">        memset(vis,<span class="literal">false</span> ,sizeof(vis));  </div><div class="line">        bfs();  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><blockquote>
<p>由于此题存在判断人推箱子和箱子是否到终点两个状态，所以需要使用两个广搜互相嵌套，分别用来表示箱子的状态和人推箱子的状态，配上2个优化队列，可以确保人<br>走的路线和箱子走的路线为最优路线，符合题目所要求的最小移动次数。在主函数中分别把箱子的起点和人的起点用st记录下来，开始的移动次数为0，接着进入第一个<br>dfs函数。该函数是用来判断箱子是否达到了终点。若未到达终点则把现在人的位置赋给a，接着进入二个BFS函数。该函数是用来判断人推箱子的状态。先移动人，确保<br>把人移到箱子的位置，若未走到箱子的位置，那么根据数组us（初始化为false）存放元素的情况和不能走到墙上继续走下一步，接着把此时人的位置赋给b，并且压入队<br>列qq，直到人走到目前箱子的位置，记录下元素i的值，此时的箱子只能向i方向进行移动（推箱子的游戏中箱子只能和人的运动方向一致）。箱子移动的时候需判断vis<br>数组中存放的元素和移动的位置是否为墙。若箱子成功走出下一步，那么把此时人和箱子的位置情况全部赋给ed，接着把ed压入队列q，接着进入第一个bfs函数判断此<br>时的箱子是否到达了终点，若未到达继续进入第二个BFS函数进行下一步移动。</p>
</blockquote>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><blockquote>
<p>此题中的判断数组vis需要设置为三维数组，因为每个点都可以走1次以上，只有每个点都走过4个方向后该点才不能走。写出代码后可以用推到墙上只能顺着墙移动和推<br>到拐角后不能移动2个特殊情况进行验证。此题最关键的是要分清2个bfs的状态以及箱子只能和人的运动方向一致，所以先移动人后移动箱子。</p>
</blockquote>
<h2 id="蜘蛛纸牌"><a href="#蜘蛛纸牌" class="headerlink" title="蜘蛛纸牌"></a>蜘蛛纸牌</h2><p><strong>ACM-HDOJ 1584</strong></p>
<p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147090961577.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147090961617.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147090961654.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147090961686.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14709096172.png" alt=""></p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;math.h&gt;</span></div><div class="line"><span class="comment">#include &lt;string.h&gt;    </span></div><div class="line">int a[15],vis[15],ans;   </div><div class="line">void dfs(int cnt,int sum)  </div><div class="line">&#123;  </div><div class="line">    int i,j;  </div><div class="line">    <span class="keyword">if</span>(sum&gt;=ans)  </div><div class="line">		 <span class="built_in">return</span> ;  </div><div class="line">    <span class="keyword">if</span>(cnt == 9)  </div><div class="line">    &#123;  </div><div class="line">        ans = sum;  </div><div class="line">        <span class="built_in">return</span> ;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">for</span>(i = 1;i&lt;10;i++)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">if</span>(!vis[i])  </div><div class="line">        &#123;  </div><div class="line">            vis[i] = 1;  </div><div class="line">            <span class="keyword">for</span>(j = i+1;j&lt;=10;j++)  </div><div class="line">            &#123;  </div><div class="line">                <span class="keyword">if</span>(!vis[j])  </div><div class="line">                &#123;  </div><div class="line">                    dfs(cnt+1,sum+abs(a[i]<span class="_">-a</span>[j]));  </div><div class="line">                    <span class="built_in">break</span>;  </div><div class="line">                &#125;  </div><div class="line">            &#125;  </div><div class="line">            vis[i] = 0;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">&#125;    </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int t,i,x;  </div><div class="line">    scanf(<span class="string">"%d"</span>,&amp;t);  </div><div class="line">    <span class="keyword">while</span>(t--)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">for</span>(i = 1;i&lt;=10;i++)  </div><div class="line">        &#123;  </div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;x);  </div><div class="line">            a[x] = i;              //牌面为x的牌在第i个位置  </div><div class="line">        &#125;  </div><div class="line">        memset(vis,0,sizeof(vis));  </div><div class="line">        ans = 10000000;  </div><div class="line">        dfs(0,0);  </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><blockquote>
<p>使用深搜算法，判断所有的情况。首先在输入数据的时候把牌面为x的数放在数组a的第i个位置，最后使用数组a的时候就是按照从1-10的顺序来显示它们所在的位置，进<br>入dfs函数中后，cnt代表的是已经完成了1-9步中的第几步操作（无论如何移动，9步操作是上限），sum用来存放移动的距离。由于是遍布了所有的情况，所以每一种<br>情况都会对应一个sum，如果下一步的sum大于等于上一步的sum（实为第一步的sum，之后逐渐变为最小的移动数值），那么结束函数回到上一步的函数的循环中。<br>如果cnt已经执行了9次，而且执行到了这步说明这一步的sum小于之前的最小移动距离ans，那么把最新的sum赋给ans后结束本次函数返回上一函数的循环中。接着第<br>2个for循环进行遍布所有的情况。vis数组是用来判断每个位置是否使用过，未使用过为0，使用过为1。第一个for循环中如果该位置未被访问过，那么该位置赋给1后<br>进入第二个for循环，从i+1开始判断，if这一位置也未访问过，那么进入dfs递归，带入的参数cnt需要+1，sum为当前的sum加上2个位置差的绝对值，以此找到最小移<br>动距离。若未满足当前情况或已经找到目前的最短距离而退出循环后，该位置需要重新赋为0（实际运算顺序为从最后开始逆向把前面的每一个位置重新赋为0，全部赋<br>为0后进行新的移动和判断）。</p>
</blockquote>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><blockquote>
<p>把牌面为x的数放在数组a的第i个位置直接简化了操作。由于数组a是按照顺序排好的，所以第二个for循环就可以直接从i+1开始判断。第二个for循环的break语句也用的<br>很好，因为在寻找最小距离的时候，1只能放在2上，2只能放在3上······以此类推。若1放在了3上，那么为了把2加进去，必须还要把1移走，必然不可能是最短距离了。<br>所以需要用break语句结束循环并把该位置的vis重新定义为0。并且第二个for循环只是找到该步的移动方向，仅此一步，下一步的移动要进行下一个dfs进行判断。第一<br>个for循环的i是小于10，而第二个的for循环的j为小于等于10。因为10张牌只需要进行9次操作，所以i的位置到9即可，j=i+1=10，即可进行最后一步移动。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[深度优先搜索(DFS)与广度优先搜索(BFS)]]></title>
      <url>http://xuboming8.github.io/2016/08/30/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2-DFS-%E4%B8%8E%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2-BFS/</url>
      <content type="html"><![CDATA[<h1 id="DFS-depth-first-search-与BFS-breadth-first-search"><a href="#DFS-depth-first-search-与BFS-breadth-first-search" class="headerlink" title="DFS(depth first search)与BFS(breadth first search)"></a>DFS(depth first search)与BFS(breadth first search)</h1><h2 id="深度优先搜索-DFS"><a href="#深度优先搜索-DFS" class="headerlink" title="深度优先搜索(DFS)"></a>深度优先搜索(DFS)</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>深度优先搜索通过栈来实现，一般用来搜索能不能到达目的地之类。深度优先搜索通过栈来实现，一般用来搜索能不能到达目的地之类。<br>面图中的数字显示了深度优先搜索顶点被访问的顺序。<br><a id="more"></a></p>
<div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147047199947.png" alt=""><br></div>

<p>它可以被形象的描述为“打破沙锅问到底”，具体一点就是访问一个顶点之后，继而访问它的下一个邻接的顶点，如此往复，直到当前顶点满足条件或者它不存在<br>邻接顶点。</p>
<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>占内存少，能找到最优解（一定条件下），但能很快找到接近解（优点），可能不必遍历所有分枝（也就是速度快），一个典型应用是连连看游戏。</p>
<h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>深度优先搜索用栈（stack）来实现，整个过程可以想象成一个倒立的树形：<br>1、把根节点压入栈中。<br>2、每次从栈中弹出一个元素，搜索所有在它下一级的元素，把这些元素压入栈中。并把这个元素记为它下一级元素的前驱。<br>3、找到所要找的元素时结束程序。<br>4、如果遍历整个树还没有找到，结束程序。</p>
<p><strong>代码实例</strong><br><a href="http://monkeyxu.cn/2016/08/30/ACM-1008-1012/" target="_blank" rel="external">ACM-HDOJ 1010题(深搜+剪枝实现)</a></p>
<h2 id="广度优先搜索-BFS"><a href="#广度优先搜索-BFS" class="headerlink" title="广度优先搜索(BFS)"></a>广度优先搜索(BFS)</h2><h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>广度优先搜索通过队列来实现，一般用来搜索最短路径。<br>下面图中的数字显示了广度优先搜索顶点被访问的顺序。</p>
<div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147047199904.png" alt=""><br></div>

<p>可以被形象的描述为“浅尝辄止”，具体一点就是每个顶点只访问它的邻接节点（如果它的邻接节点没有被访问）并且记录这个邻接节点，当访问完它的邻接节点之<br>后就结束这个顶点的访问。</p>
<h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><p>占内存多，能找到最优解，必须遍历所有分枝。</p>
<h3 id="应用-1"><a href="#应用-1" class="headerlink" title="应用"></a>应用</h3><p>广度优先搜索使用队列（queue）来实现，整个过程也可以看做一个倒立的树形：<br>1、把根节点放到队列的末尾。<br>2、每次从队列的头部取出一个元素，查看这个元素所有的下一级元素，把它们放到队列的末尾。并把这个元素记为它下一级元素的前驱。<br>3、找到所要找的元素时结束程序。<br>4、如果遍历整个树还没有找到，结束程序。</p>
<p><strong>代码实例</strong><br><a href="http://monkeyxu.cn/2016/08/30/ACM-1023-1027-1058/" target="_blank" rel="external">ACM-HDOJ 1026题(广搜+优化队列实现)</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[浅谈LIS算法(Longest Increasing Subsequence)]]></title>
      <url>http://xuboming8.github.io/2016/08/30/%E6%B5%85%E8%B0%88LIS%E7%AE%97%E6%B3%95-Longest-Increasing-Subsequence/</url>
      <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>LIS（Longest Increasing Subsequence）：最长上升（不下降）子序列，有两种算法复杂度为O(n*logn)和O(n^2)。这种算法只能得到最终的数据个数，但是如果<br>需要得到具体的内容就不行了。由于第一种算法使用了2个for循环，所以算法的复杂度为O(n^2),该算法比较简洁易懂，但是复杂度较高。而第二种算法使用了一个for循<br>环和二分法，算法的复杂度为O(nlogn)。此算法虽稍微复杂，但是复杂度降了下来，在需要运算时间的情况下优先选择第二种算法。</p>
<h2 id="思路以及代码详解"><a href="#思路以及代码详解" class="headerlink" title="思路以及代码详解"></a>思路以及代码详解</h2><a id="more"></a>
<p><strong>算法（nlogn）</strong></p>
<h3 id="思路（一）"><a href="#思路（一）" class="headerlink" title="思路（一）"></a>思路（一）</h3><p>假定存在一个序列d[1…9]=2 1 5 3 6 4 8 9 7，可以看出LIS长度为5。现在开始一步一步的找出来最终的结果。<br>　　定义序列B，令i=1…9来逐个考察。此外用变量len来记录现在最长算到了多少了。<br>　　首先，把d[1]放到B里，即B[1]=d[1]，就是说长度为1的LIS的最小末尾是2，这时len=1，然后把d[2]有序的放到B里，令B[1]=1（d[2]），就是说长度为1的LIS最<br>小末尾是1，d[1]=2已经没有用了，这时len=1不变。接着d[3]=5，5&gt;1，所以令B[1+1]=d[3]=5，就是说长度为2的LIS的最小末尾是5，此时的B[1…2]=1,5，len=2。<br>　　再来，d[4]=3，它正好在1和5之间，当然放在1的位置上不合适，因为1<3，因此长度为2的最小末尾应该是3，淘汰掉5，这时候b[1...2]=1,3，len=2。 　　继续d[5]="6，它在3后边，所以B[3]=4，B[1...3]=1,3,6，len=3。" 　　第6个，d[6]="4，它加在3和6之间，所以我们把6换掉，这样B[1...3]=1,3,4，len=3。" 　　第7个，d[7]="8，8">4，所以B[4]=8，B[1…4]=1,3,4,8，len=4。<br>　　第8个，d[8]=9，B[1…5]=1,3,4,8,9，len=5。<br>　　最后一个，d[9]=7，所以B[1…5]=1,3,4,7,9，len=5。<br>　　注意这里的B并不是LIS，而是对应长度的LIS的最小末尾。<br>　　总结下：若后一个数比前一个数大，那么直接此数的后面，若后一个数比前一个数小，那么覆盖掉该数。最后得到的len就是LIS长度。</3，因此长度为2的最小末尾应该是3，淘汰掉5，这时候b[1...2]=1,3，len=2。></p>
<h3 id="代码-一"><a href="#代码-一" class="headerlink" title="代码(一)"></a>代码(一)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define maxn 100050</span></div><div class="line">int a[maxn];</div><div class="line">int ans[maxn];</div><div class="line">int <span class="function"><span class="title">main</span></span>()&#123;</div><div class="line">//	freopen(<span class="string">"input.txt"</span>,<span class="string">"r"</span>,stdin);</div><div class="line">	int n; </div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++) scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">	int len=1;</div><div class="line">	ans[0]=a[0];</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(a[i]&gt;=ans[len-1]) ans[len++]=a[i];</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			int pos=upper_bound(ans,ans+len,a[i])-ans;</div><div class="line">			ans[pos]=a[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,len);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>算法（n^2）</strong></p>
<h3 id="思路（二）"><a href="#思路（二）" class="headerlink" title="思路（二）"></a>思路（二）</h3><p>再以数组a[0~8]={2,1,5,3,6,4,8,9,7}为例，先定义d[0]=1来存放LIS长度，接着从数组的第二个元素开始,每次都把d[i]定义为1，接着拿该元素之前的所有元素与它比较<br>，由于1<2,所以不进行额外的运算，d[1]依然是1。接着是第三个元素5，由于2<5，所以d[2]=d[0]+1=2，接着1也小于5，所以d[2]=d[1]+1=2。下一个元素为3，由于 1和2="" 都小于3，所以d[3]="d[0]+1=d[1]+1=2，但是5">3,所以最后的d[3]=2。接下来轮到元素6，由于之前的所有元素均小于6，所以d[4]=d[0]+1=d[1]+1=2，接着<br>d[4]=d[2]+1=d[3]+1=3，所以最后的d[4]为3。下面的元素为4，由于最多只轮到3&lt;4，所以d[5]=d[3]+1=3。接下来同理d[6]=4,d[7]=5,d[8]=4。最后寻找数组d的<br>最大值，为5，所以LIS长度为5。<br>总结：用2个for循环，第一个for循环用来依次移动需要比较的元素，第二个for循环用来把该元素与之前的所有元素进行比较，d在该位置存放的长度为之前所有元素中最后一<br>个小于该元素且dp值最大的d存放的长度+1（表现出来的形式为该元素只要大于前面某个dp值最大的元素，那么d[j]立刻变为d[i]+1），若该元素小于之前所有的元素，那么该<br>位置存放的位置保持为1。</2,所以不进行额外的运算，d[1]依然是1。接着是第三个元素5，由于2<5，所以d[2]=d[0]+1=2，接着1也小于5，所以d[2]=d[1]+1=2。下一个元素为3，由于></p>
<h3 id="代码（二）"><a href="#代码（二）" class="headerlink" title="代码（二）"></a>代码（二）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int d[1050],len;</div><div class="line">	memset(d,0,sizeof(d));</div><div class="line">	int n,a[1050];</div><div class="line">	scanf(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		scanf(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">	&#123;</div><div class="line">		int maxn=0;</div><div class="line">		<span class="keyword">for</span>(int j=i-1;j&gt;=0;j--)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(a[i]&gt;=a[j])</div><div class="line">				maxn=max(maxn,d[j]);</div><div class="line">		&#125;</div><div class="line">		d[i]=maxn+1;</div><div class="line">		len=max(len,d[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,len);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>链接：<a href="http://monkeyxu.cn/2016/08/30/ACM-1023-1027-1058/" target="_blank" rel="external">ACM-HDOJ 1025题</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Talking with Catalan]]></title>
      <url>http://xuboming8.github.io/2016/08/30/Talking-with-Catalan/</url>
      <content type="html"><![CDATA[<h1 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h1><p>由于卡特兰数在很多公司的面试题中频繁出现，在竞赛中更是多次考察，所以特地总结下卡特兰数的应用。</p>
<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>卡特兰数又称卡塔兰数，是组合数学中一个常出现在各种计数问题中的数列。以比利时的数学家欧仁·查理·卡塔兰 (1814–1894)的名字来命名。</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><a id="more"></a>
<p>令h(0)=1,h(1)=1，catalan数满足递推式：h(n)= h(0)h(n-1)+h(1)h(n-2) + … + h(n-1)h(0) (n&gt;=2)<br>另类递推式：<br>h(n)=h(n-1)(4n-2)/(n+1);<br>递推关系的解为：<br>h(n)=C(2n,n)/(n+1)=(2n)!/(n+1)!n! (n=0,1,2,…)　　　　　<strong>C(2n，n)代表从2n个数中取得n个数的组合数</strong><br>递推关系的另类解为：<br>h(n)=C(2n,n)-C(2n,n-1)(n=0,1,2,…)</p>
<h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><h3 id="求卡特兰数"><a href="#求卡特兰数" class="headerlink" title="求卡特兰数"></a>求卡特兰数</h3><p><strong>题目要求</strong><br>根据递推式或递归关系求解</p>
<p><strong>解法</strong><br>任何有关catalan数的题目最后都是要进行求h(n)的运算，大多用h(n)=h(n-1)(4n-2)/(n+1)进行推导。牵涉到大数的乘除。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">//数组a存放大数，b为进行乘除的数字。</div><div class="line">void multiply(int a[],int len,int b)</div><div class="line">&#123;  </div><div class="line">    <span class="keyword">for</span>(int i=len-1,carry=0;i&gt;=0;--i)</div><div class="line">    &#123;</div><div class="line">        carry+=b*a[i];  </div><div class="line">        a[i]=carry%BASE;  </div><div class="line">        carry/=BASE;  </div><div class="line">    &#125;   </div><div class="line">&#125;  </div><div class="line">void divide(int a[],int len,int b) </div><div class="line">&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0,div=0;i&lt;len;++i)</div><div class="line">    &#123;  </div><div class="line">        div=div*BASE+a[i];  </div><div class="line">        a[i]=div/b;</div><div class="line">        div%=b;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div><div class="line">//具体运算在ACM-HDOJ 1023题已给出</div></pre></td></tr></table></figure></p>
<h3 id="出栈问题"><a href="#出栈问题" class="headerlink" title="出栈问题"></a>出栈问题</h3><p><strong>题目要求</strong><br>一个栈(无穷大)的进栈序列为1、2、3、…、n，有多少个不同的出栈序列?</p>
<p><strong>解法</strong><br>此方法在ACM-HDOJ 1023题思路中已给出证明。<a href="http://monkeyxu.cn/2016/08/30/ACM-1023-1027-1058/" target="_blank" rel="external">1023链接</a></p>
<h3 id="由高到矮排队问题"><a href="#由高到矮排队问题" class="headerlink" title="由高到矮排队问题"></a>由高到矮排队问题</h3><p><strong>题目要求</strong><br>12个高矮不同的人，排成两排，每排必须是从矮到高排列，而且第二排比对应的第一排的人高，问排列方式有多少种？</p>
<p><strong>解法</strong><br>我们先把这12个人从低到高排列,然后,选择6个人排在第一排,那么剩下的6个肯定是在第二排.<br>用0表示对应的人在第一排,用1表示对应的人在第二排,那么含有6个0,6个1的序列,就对应一种方案.<br>比如000000111111就对应着<br>第一排：0 1 2 3 4 5<br>第二排：6 7 8 9 10 11<br>010101010101就对应着<br>第一排：0 2 4 6 8 10<br>第二排：1 3 5 7 9 11<br>问题转换为，这样的满足条件的01序列有多少个。<br>观察规律我们发现1的出现前边必须有一个相应的0对应，所以从左到右的所有序列中0的个数要一直大于1的个数。那么我们从左往右扫描，第一次出现1的个数<br>等于0的个数是第k位，那么在此之前，0的个数是大于1的个数的。在此之后，0的个数也是大于1的个数的。所以第k位0和1的个数第一次相等的排列有他们这两<br>部分的个数相乘的结果。那么所有的k有多少种，则把它们相加起来，就是最后的排列数。每一项的种类是f（k-1）*f（n-k），求和后便是卡特兰数。<br>如果把0看成入栈操作，1看成出栈操作，等价于给定6个元素，合法的入栈出栈序列有多少个。依旧转换成求卡特兰数的问题。<br>需要注意此题中n个人，那么带入通项的数字应为n/2。</p>
<h3 id="括号化问题"><a href="#括号化问题" class="headerlink" title="括号化问题"></a>括号化问题</h3><p><strong>题目要求</strong><br>矩阵链乘： P=A1×A2×A3×……×An，依据乘法结合律，不改变其顺序，只用括号表示成对的乘积，试问有几种括号化的方案？</p>
<p><strong>解法</strong><br>n个矩阵需要连乘(n-1)次，因此需要(n-1)对括号。且这里的括号只是为了使矩阵两两结合，而不是单纯为加括号而加括号，像( (a1) (a2))，这里将两个矩<br>阵分别括起来是不符合要求的。因此这里如果确定了括号的顺序，那么矩阵的结合顺序也会确定，如(()())对应了(( a1 a2) (a3 a4))。注意到是(n-1)<br>对括号，即(n-1)个左括号和(n-1)个右括号，那么应该使用h[n-1]来计算。</p>
<h3 id="买票找零问题"><a href="#买票找零问题" class="headerlink" title="买票找零问题"></a>买票找零问题</h3><p><strong>题目要求</strong><br>2n个人排队买票，其中n个人持50元，n个人持100元。每张票50元，且一人只买一张票。初始时售票处没有零钱找零。请问这2n个人一共有多少种排队顺序，不至<br>于使售票处找不开钱？</p>
<p><strong>解法</strong><br>队伍的序号标为0,1,…,2n-1,并把50元看作左括号，100元看作右括号，合法序列即括号能完成配对的序列。对于一个合法的序列，第0个一定是左括号，它必然与<br>某个右括号配对，记其位置为k。那么从1到k-1、k+1到2n-1也分别是两个合法序列。每一项的种类是f（k-1）*f（n-k），求和后便是卡特兰数。也需注意此题中n<br>个人，带入通项的数字应为n/2。</p>
<h3 id="凸多边形三角划分"><a href="#凸多边形三角划分" class="headerlink" title="凸多边形三角划分"></a>凸多边形三角划分</h3><p><strong>题目要求</strong></p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147005039992.png" alt=""><br></div><br>将一个凸多边形区域分成三角形区域(划分线不交叉)的方法数?</p>
<p><strong>解法</strong><br>使用卡特兰数通项进行计算。</p>
<h3 id="圆上点对互连问题"><a href="#圆上点对互连问题" class="headerlink" title="圆上点对互连问题"></a>圆上点对互连问题</h3><p><strong>题目要求</strong></p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147006099407.png" alt=""><br></div><br>在圆上选择2n个点，将这些点成对连接起来，且所得n条线段不相交，求可行的方法数。</p>
<p><strong>解法</strong><br>将圆上的点依次标为P0,P1,…P2n-1。为了避免混淆，使用F(2n)表示2n个点可连成的线段数，选择Pk与P0相连(0&lt;k&lt;n)，同样地可以看出，k必为奇数，否则1至k-1<br>之间有奇数个点，不可能成对连成直线。同样地把k设为2i+1，那么线段P0Pk把剩余的点分为了1…2i和2i+2…2n-1，且新的连线不能与0k相交，它们只能属于0k<br>把园划分出的这两个区域之一。即F(2n) = ∑F(2i)F(2n-1-(2i+2)+1) = ∑F(2i)F(2n-2i-2)，其中i = 0 … n-1。这时，又转化成熟悉的形式了。</p>
<h3 id="给定节点组成二叉搜索树"><a href="#给定节点组成二叉搜索树" class="headerlink" title="给定节点组成二叉搜索树"></a>给定节点组成二叉搜索树</h3><p><strong>题目要求</strong></p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147006227873.png" alt=""><br></div><br>给定N个节点，能构成多少种形状不同的二叉树？</p>
<p><strong>解法</strong><br>从递推公式出发，记为F3(n)，选出一点为根，k个点作为左子树，n-k-1个点作为右子树。那么F3(n) = ∑F3(k)F3(n-k-1)，k=0,…,n-1。该公式是以F3（0）=1开始的。<br>满足卡特兰数的形式。</p>
<h3 id="街区对角线问题"><a href="#街区对角线问题" class="headerlink" title="街区对角线问题"></a>街区对角线问题</h3><p><strong>题目要求</strong></p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147006242846.png" alt=""><br></div><br>某个城市的某个居民，每天他须要走过2n个街区去上班（他在其住所以北n个街区和以东n个街区处工作）。如果他不跨越（但可以碰到）从家到办公室的对角线，那么有多少<br>条可能的道路？</p>
<p><strong>解法</strong><br>为了不跨越对角线，向东走的步数时刻要大于等于向北走的步数。可以看出路线序列由n次向东和n次向北组成，且从第一个元素开始的任意子序列中向东次数不少于向北次数此<br>时可以等效为按高矮排队问题。用卡特兰数递推式求解。注意为h(n)。</p>
<h3 id="n层阶梯切割问题"><a href="#n层阶梯切割问题" class="headerlink" title="n层阶梯切割问题"></a>n层阶梯切割问题</h3><p><strong>题目要求</strong></p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147006275273.png" alt=""><br></div><br>用n个长方形填充一个高度为n的阶梯状图形的方法个数？</p>
<p><strong>解法</strong><br>使用卡特兰数通项进行计算。</p>
<h3 id="01串问题"><a href="#01串问题" class="headerlink" title="01串问题"></a>01串问题</h3><p><strong>题目要求</strong><br>要求长度为2*n的字符串中只由0和1组成 且0和1的个数相等 且对应任意一个前缀1的个数不小于0的个数<br>求有多少种组合方法</p>
<p><strong>解法</strong><br>答案为h(n)的卡特兰数</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ACM 1023-1027 1058]]></title>
      <url>http://xuboming8.github.io/2016/08/30/ACM-1023-1027-1058/</url>
      <content type="html"><![CDATA[<h1 id="HDOJ-ACM-1023-1027-1058解答及思路"><a href="#HDOJ-ACM-1023-1027-1058解答及思路" class="headerlink" title="HDOJ-ACM 1023-1027 1058解答及思路"></a>HDOJ-ACM 1023-1027 1058解答及思路</h1><h2 id="1023"><a href="#1023" class="headerlink" title="1023"></a>1023</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146997325701.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146997325741.png" alt=""><br><a id="more"></a></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146997325827.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146997325864.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146997325902.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>基于1022题，在它的基础上要求输出小于100辆火车进站后的出站顺序。</p>
<h3 id="参考AC代码-一"><a href="#参考AC代码-一" class="headerlink" title="参考AC代码(一)"></a>参考AC代码(一)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;memory.h&gt;  </span></div><div class="line">using namespace std;  </div><div class="line"><span class="comment">#define MAX 101  </span></div><div class="line"><span class="comment">#define BASE 10</span></div><div class="line">void multiply(int a[],int len,int b)</div><div class="line">&#123;  </div><div class="line">    <span class="keyword">for</span>(int i=len-1,carry=0;i&gt;=0;--i)</div><div class="line">    &#123;</div><div class="line">        carry+=b*a[i];  </div><div class="line">        a[i]=carry%BASE;  </div><div class="line">        carry/=BASE;  </div><div class="line">    &#125;   </div><div class="line">&#125;  </div><div class="line">void divide(int a[],int len,int b) </div><div class="line">&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0,div=0;i&lt;len;++i)</div><div class="line">    &#123;  </div><div class="line">        div=div*BASE+a[i];  </div><div class="line">        a[i]=div/b;</div><div class="line">        div%=b;  </div><div class="line">    &#125;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int i,j,h[101][MAX];  </div><div class="line">    memset(h[1],0,MAX*sizeof(int));</div><div class="line">    <span class="keyword">for</span>(i=2,h[1][MAX-1]=1;i&lt;=100;++i)</div><div class="line">    &#123;  </div><div class="line">        memcpy(h[i],h[i-1],MAX*sizeof(int));</div><div class="line">        multiply(h[i],MAX,4*i-2);</div><div class="line">        divide(h[i],MAX,i+1);    </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;i)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">for</span>(j=0;j&lt;MAX &amp;&amp; h[i][j]==0;++j);</div><div class="line">        <span class="keyword">for</span>(;j&lt;MAX;++j) </div><div class="line">			cout&lt;&lt;h[i][j];  </div><div class="line">       cout&lt;&lt;endl;</div><div class="line">    &#125;      </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码-二"><a href="#参考AC代码-二" class="headerlink" title="参考AC代码(二)"></a>参考AC代码(二)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;memory.h&gt;  </span></div><div class="line">using namespace std;  </div><div class="line"><span class="comment">#define MAX 101  </span></div><div class="line"><span class="comment">#define BASE 10000</span></div><div class="line"> //base只是一个基度，对最终取值并没有影响，相反，base取值愈大，计算量愈小。base发生改变的时候，下面的输出也要相应地做出调整</div><div class="line">void multiply(int a[],int len,int b)          //乘法   </div><div class="line">&#123;  </div><div class="line">    <span class="keyword">for</span>(int i=len-1,carry=0;i&gt;=0;--i)          //从最后一位开始相乘,依次向前与每一位相乘   </div><div class="line">    &#123;</div><div class="line">        carry+=b*a[i];  </div><div class="line">        a[i]=carry%BASE;  </div><div class="line">        carry/=BASE;  </div><div class="line">    &#125;   </div><div class="line">&#125;  </div><div class="line">void divide(int a[],int len,int b)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">for</span>(int i=0,div=0;i&lt;len;++i)               //从高位除起  </div><div class="line">    &#123;  </div><div class="line">        div=div*BASE+a[i];  </div><div class="line">        a[i]=div/b;                //b为除数  </div><div class="line">        div%=b;  </div><div class="line">    &#125;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int i,j,h[101][MAX];  </div><div class="line">    memset(h[1],0,MAX*sizeof(int));                //赋值，每一个都置为0   </div><div class="line">    <span class="keyword">for</span>(i=2,h[1][MAX-1]=1;i&lt;=100;++i)           //运用递归，并且h[1]=1;   </div><div class="line">    &#123;  </div><div class="line">        memcpy(h[i],h[i-1],MAX*sizeof(int));        //h[i]=h[i-1];按字节拷贝，保证了h[i]和h[i-1]指向数组的一致性   </div><div class="line">        multiply(h[i],MAX,4*i-2);//h[i]*=(4*i-2);  </div><div class="line">        divide(h[i],MAX,i+1);//h[i]/=(i+1);          </div><div class="line">    &#125;                                             //递归得到前100项的卡特兰数！  </div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;i) </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">for</span>(j=0;j&lt;MAX &amp;&amp; h[i][j]==0;++j);        //从0位开始搜索，找到不为0的第一个数</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,h[i][j++]);            //第一位可能不足四位，就地输出</div><div class="line">        <span class="keyword">for</span>(;j&lt;MAX;++j)  </div><div class="line">        &#123;  </div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%04d"</span>,h[i][j]);         //处在中间的值也可能没有四位，这时候要注意了，往左边加0，凑足4位，不然答案会出错</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>　　首先，我们假设f（n）是序列个数为n的出栈序列种数。（我们假定，最后出栈的元素为k，k取不同值时的情况是相互独立的，也就是求出每种k最后出栈的情况数后可<br>用加法原则，由于k最后出栈，因此，在k入栈之前，比k小的值均出栈，此处情况有f(k-1)种，而之后比k大的值入栈，且都在k之前出栈，因此有f(n-k)种方式，由于比k<br>小和比k大的值入栈出栈情况是相互独立的，此处可用乘法原则，f(n-k)f(k-1)种，求和便是Catalan递归式。而该题要用到Catalan的递归式：h(n)=h(n-1)(4*n-2)/(n+1);<br>而该题最大求到了h（100），已经超过了50位且接近60位数，所以long long型也无法使用，要使用大数的乘法和除法。代码一是以10为基准教容易理解。而代码二是以<br>10000为基准，即数组的一个位置可存放四位数，把四位数作为一个整体进行计算。此题的乘除法也设计的极为巧妙，大大减少了运算复杂度。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>　　开始需要把h[1]的那一行全部初始化为0，再用memset时确保每一行没有用到的位置全部置为0。在使用10000为基准的时候要注意一次性输出4位数，若不满4位数则要<br>向左用0补齐。在使用除法运算的时候，若有一位没有除尽，则要把余数*基数加上后一位的数字，继续进行除法运算。若基数取的是10，则进行的是我们熟悉的运算，容易<br>理解。但相应的也会增加程序的运行时间。</p>
<h3 id="转跳-Catalan-number"><a href="#转跳-Catalan-number" class="headerlink" title="转跳 Catalan number"></a><a href="http://monkeyxu.cn/2016/08/30/Talking-with-Catalan/" target="_blank" rel="external">转跳 Catalan number</a></h3><h2 id="1024"><a href="#1024" class="headerlink" title="1024"></a>1024</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147018886492.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147018886537.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147018886576.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14701888661.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147018886645.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>给定n个数，和m个段。求在这n个数中求出m个子段，使得这些子段的和最大.</p>
<h3 id="参考AC代码-一-1"><a href="#参考AC代码-一-1" class="headerlink" title="参考AC代码(一)"></a>参考AC代码(一)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;  </span></div><div class="line">using namespace std;  </div><div class="line">const int MAX=1000001;  </div><div class="line">int dp[2][MAX];  </div><div class="line">int w[MAX];  </div><div class="line">int sum[MAX];//在主函数里开个sum[MAX]，是不行的，因为MAX是在太大！  </div><div class="line">int cmax(int a,int b)//求最大值  </div><div class="line">&#123;  </div><div class="line">    <span class="built_in">return</span> a&gt;b?a:b;  </div><div class="line">&#125;   </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int i,k;  </div><div class="line">    int m,n;  </div><div class="line">      </div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;m,&amp;n)&gt;0)  </div><div class="line">    &#123;  </div><div class="line">        sum[0]=0;  </div><div class="line">        <span class="keyword">for</span>(i=1;i&lt;=n;i++)  </div><div class="line">        &#123;  </div><div class="line">            cin&gt;&gt;k;  </div><div class="line">            sum[i]=sum[i-1]+k;//sum[i]里存的是前i个元素的和  </div><div class="line">            dp[0][i]=0;//从前i个元素中取0段，最大值为0  </div><div class="line">        &#125;  </div><div class="line">//我们假设a[i]中存放该序列第i个值，w[i][k]表示前k个数分为i段，第k个数必须选这种情况下取得的最大值  </div><div class="line">//b[i][k]表示在前k个数中取i段这种情况下取得的最大值  </div><div class="line">  </div><div class="line">//w[i][k]：前k个数分为i段，第k个数必须选；1：第k个数单独为1段；2：第k个数与前面的数连一块。w[i][k]=max(b[i-1][k-1],w[i][k-1])+a[k];  </div><div class="line">//b[i][k]：前k个数分为i段，第k个数可选可不选；1：选第k个数，2：不选第k个数。b[i][k]=max(b[i][k-1],w[i][k])  </div><div class="line">//w[i][k]=max(b[i-1][k-1],w[i][k-1])+a[k];  </div><div class="line">//b[i][k]=max(b[i][k-1],w[i][k])；  </div><div class="line">//w[i][k],b[i][i]容易求得，所以由b[i-1][k-1]-&gt;w[i][k]-&gt;b[i][k],只要知道b[0][k]，全部都能成功运行！  </div><div class="line">  </div><div class="line">//当从k个元素中取j段，可以分为两种情况，即第k个元素可以取，也可以不取，取，那么a[k]要么是单独为一段b[i-1][k-1]+a[k];  </div><div class="line">//要么是第k个数与前面的数连一块，即w[i][k-1]+a[k]，故w[i][k]=max(b[i-1][k-1],w[i][k-1])+a[k];  </div><div class="line">  </div><div class="line">//要么不取 即b[i][k]=b[i][k-1];  </div><div class="line">//综合起来，b[i][k]=max(b[i][k-1],w[i][k])；  </div><div class="line">       int t=1;  </div><div class="line">       <span class="keyword">for</span>(i=1;i&lt;=m;i++)//i表示在取i段,自然i&lt;=m;  </div><div class="line">       &#123;  </div><div class="line">             </div><div class="line">           <span class="keyword">for</span>(k=i;k&lt;=n;k++)//为什么k从i开始？dp[i][k](k&lt;i)是没有意义的！  </div><div class="line">           &#123;  </div><div class="line">               <span class="keyword">if</span>(i==k)  </div><div class="line">               dp[t][k]=w[k]=sum[k];//从k个数中取k段的最大值是前k个数的和  </div><div class="line">               <span class="keyword">else</span>  </div><div class="line">               &#123;  </div><div class="line">                   w[k]=cmax(dp[1-t][k-1],w[k-1])+sum[k]-sum[k-1];//w[k]表示k个元素取i段，a[k]必须取时的最大值  </div><div class="line">        //w[i][k]=max(b[i-1][k-1],w[i][k-1])+a[k];  </div><div class="line">                   dp[t][k]=cmax(dp[t][k-1],w[k]);//dp[t][k]表示在a[k]可取可不取这两种情况下取得的最大值  </div><div class="line">                   //自然，dp[t][k]记录的就是在前k个元素中取i段时取得的最大值！  </div><div class="line">               &#125;  </div><div class="line">           &#125;  </div><div class="line">           t=1-t;//t在1,0之间交替变换  </div><div class="line">  //为什么要交替呢？这是为了节省空间  </div><div class="line">  //仔细观察递归式  </div><div class="line">  //w[i][k]=max(b[i-1][k-1],w[i][k-1])+a[k];  </div><div class="line">  //b[i][k]=max(b[i][k-1],w[i][k])；  </div><div class="line">  //我们发现，对于取i段，w[i][j]只与b[i-1][k-1]和w[i][k-1]有关，与之前的那一些项没有关系  </div><div class="line">  //因此我们数组可以开小一点，用更新来覆盖掉前面的值！  </div><div class="line">       &#125;  </div><div class="line">       cout&lt;&lt;dp[m%2][n]&lt;&lt;endl;//奇次轮还是偶次轮  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="参考AC代码-二-1"><a href="#参考AC代码-二-1" class="headerlink" title="参考AC代码(二)"></a>参考AC代码(二)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;  </span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;   </span></div><div class="line">using namespace std;</div><div class="line">int curr_best[1000010];//保存当前状态  </div><div class="line">int prev_best[1000010];  </div><div class="line">int max_sum,i,j;  </div><div class="line">int n,m;  </div><div class="line">int data[1000010];  </div><div class="line"><span class="comment">#define MIN_SUM 0x80000000  //在4字节中转换成10进制是-2147483648，最小的二进制数</span></div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d %d"</span>,&amp;m,&amp;n)!=EOF)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++)  </div><div class="line">            scanf(<span class="string">"%d"</span>,&amp;data[i]);  </div><div class="line">        memset(curr_best,0,sizeof(curr_best));  </div><div class="line">        memset(prev_best,0,sizeof(prev_best));  </div><div class="line">        int j=0;  </div><div class="line">        <span class="keyword">for</span>(int i=1;i&lt;=m;++i)  </div><div class="line">        &#123;  </div><div class="line">            max_sum=MIN_SUM;  </div><div class="line">            <span class="keyword">for</span>(j=i;j&lt;=n;++j)  </div><div class="line">            &#123;  </div><div class="line">                //curr  b(i,*);  </div><div class="line">                //prev b(i-1,*);  </div><div class="line">				curr_best[j]=max(curr_best[j-1],prev_best[j-1])+data[j];  </div><div class="line">                prev_best[j-1]=max_sum;//这两条语句不能写反了，这块我纠结了好久，解释一下，prev_best[j-1]表示的是上一个状态中i...j-1的最大值，max_sum更新之后表示的i...j的最大值，所以不能写反了  </div><div class="line">				max_sum=max(max_sum,curr_best[j]);  </div><div class="line">            &#125;  </div><div class="line">            prev_best[j-1]=max_sum;//prev_best[j-1]中始终保持着前一个状态的最大值，这个很重要  </div><div class="line">        &#125;  </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,max_sum);  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>见代码注释<br>代码（二）思路与（一）相同，只是处理的方法略有不同。</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>由于这题给的n很大，需要用dp来解。而且需要优化操作。</p>
<h2 id="1025"><a href="#1025" class="headerlink" title="1025"></a>1025</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147027890258.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147027890309.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147027890345.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147027890385.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147027890427.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>两条线，每条线上各有n个点，表示n个城市，第一条表示rich 城市，第二天表示poor 城市，从第一条线连接到第二条线上，问最多能连多少条不相交的路线。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string&gt;</span></div><div class="line">using namespace std;</div><div class="line">int num[50001],ans[50001];</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n,temp1,temp2,k=1,height,low,mid,len;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			scanf(<span class="string">"%d %d"</span>,&amp;temp1,&amp;temp2);</div><div class="line">			num[temp1]=temp2;</div><div class="line">		&#125;</div><div class="line">		memset(ans,0,sizeof(ans));</div><div class="line">		ans[1]=num[1],len=1;</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			low=1;</div><div class="line">			height=len;</div><div class="line">			<span class="keyword">while</span>(height&gt;=low)</div><div class="line">			&#123;</div><div class="line">				mid=(height+low)/2;</div><div class="line">				<span class="keyword">if</span>(num[i]&gt;ans[mid])</div><div class="line">					low=mid+1;</div><div class="line">				<span class="keyword">else</span></div><div class="line">					height=mid-1;</div><div class="line">			&#125;</div><div class="line">			ans[low]=num[i];</div><div class="line">			<span class="keyword">if</span>(low&gt;len)</div><div class="line">				len++;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;k&lt;&lt;<span class="string">":"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">if</span>(len==1)</div><div class="line">			cout&lt;&lt;<span class="string">"My king, at most 1 road can be built."</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"My king, at most "</span>&lt;&lt;len&lt;&lt;<span class="string">" road can be built."</span>&lt;&lt;endl;</div><div class="line">		cout&lt;&lt;endl;</div><div class="line">		k++;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>LIS算法：可以按照富有（贫穷）的排序，然后找贫穷（富有）的村子序列的最长上升子序列就可以了，这样就能保证不相交，而且就是最优解。</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>因为数据大，n^2的算法是不可以的，需要使用n×logn的算法形式。需要注意road有单复数形式。可以发现B插入数据是有序的，而且进行替换而不需要移动，<br>也就是说可以使用二分查找，时间复杂度就降下来了。这种算法只能得到最终的数据个数，但是如果需要得到具体的内容就不行了。看网上说首先要排序，<br>其实仔细看看题目的说明，它的边的输入是有序的，所以根本不需要进行排序。</p>
<h2 id="1026"><a href="#1026" class="headerlink" title="1026"></a>1026</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147045196101.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147045196151.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14704519619.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147045196228.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147045196275.png" alt=""></p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>迷宫问题。要求从左上走到右下并记录下实时的数据。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;  </span></div><div class="line"><span class="comment">#include&lt;queue&gt;  </span></div><div class="line"><span class="comment">#include&lt;stack&gt;  </span></div><div class="line">using namespace std;  </div><div class="line">const int SIZE=120;   </div><div class="line">struct Record   </div><div class="line">&#123;  </div><div class="line">    int i;  </div><div class="line">    int j;  </div><div class="line">    int cost;             //总耗时   </div><div class="line">    bool operator&lt;(const Record &amp;a) const  </div><div class="line">    &#123;  </div><div class="line">        <span class="built_in">return</span> cost&gt;a.cost;  </div><div class="line">    &#125;  </div><div class="line">&#125;temp,temp1;   </div><div class="line">struct node  </div><div class="line">&#123;  </div><div class="line">    int i;</div><div class="line">    int j;  </div><div class="line">    int num;  </div><div class="line">&#125;pre[120][120];          //前驱结点      </div><div class="line">int mg[SIZE][SIZE];      //定义一个迷宫数组    </div><div class="line">int b[4][2]=&#123;&#123;0,1&#125;,&#123;0,-1&#125;,&#123;1,0&#125;,&#123;-1,0&#125;&#125;;   </div><div class="line">int m,n;                 //迷宫大小，行列值   </div><div class="line">int mins;   </div><div class="line">bool bfs(int x1,int y1,int x2,int y2)</div><div class="line">&#123;  </div><div class="line">      priority_queue&lt;Record&gt; q;  </div><div class="line">      int bx,by;  </div><div class="line">      int flag[SIZE][SIZE];           //标志数组最好放进来，这样每次调用函数时重新建立，会将里面的数据清0;  </div><div class="line">      memset(flag,0,sizeof(flag));           //在使用flag数组的时候，先清一下0，不然会WA</div><div class="line">      flag[x1][y1]=1;              //走过得路径标记为1，表示不能再走   </div><div class="line">      temp1.i=x1;  </div><div class="line">      temp1.j=y1;  </div><div class="line">      temp1.cost=0;             //起点的耗时为0   </div><div class="line">      q.push(temp1);               //入队列   </div><div class="line">      <span class="keyword">while</span>(!q.empty())</div><div class="line">      &#123;  </div><div class="line">             temp=q.top();              //取队顶元素  </div><div class="line">             q.pop();                   //出队列  </div><div class="line">             <span class="keyword">if</span>(temp.i==x2 &amp;&amp; temp.j==y2)   </div><div class="line">             &#123;   </div><div class="line">                mins=temp.cost;            //直到终点的花费就是最少花费   </div><div class="line">                <span class="built_in">return</span> <span class="literal">true</span>;  </div><div class="line">             &#125;   </div><div class="line">             <span class="keyword">for</span>(int i=0;i&lt;4;i++)  </div><div class="line">             &#123;  </div><div class="line">                bx=temp.i+b[i][0];  </div><div class="line">                by=temp.j+b[i][1];  </div><div class="line">                <span class="keyword">if</span>(bx&gt;=0 &amp;&amp; bx&lt;m &amp;&amp; by&gt;=0 &amp;&amp; by&lt;n &amp;&amp; !flag[bx][by] &amp;&amp; mg[bx][by]!=-1)  </div><div class="line">                &#123;  </div><div class="line">                    temp1.i=bx;  </div><div class="line">                    temp1.j=by;  </div><div class="line">                    temp1.cost=temp.cost+mg[bx][by];  </div><div class="line">                    pre[bx][by].i=temp.i;      //bx,by是现在结点的下标值  </div><div class="line">                    pre[bx][by].j=temp.j;      //用来记录前驱结点的下标值  </div><div class="line">                    pre[bx][by].num=mg[temp.i][temp.j]; </div><div class="line">                    q.push(temp1);            //入队列！  </div><div class="line">                    flag[bx][by]=1;           //标记为1;走过了之后就不能再走了！  </div><div class="line">                 &#125;          </div><div class="line">            &#125;    </div><div class="line">         &#125;</div><div class="line">     <span class="built_in">return</span> <span class="literal">false</span>;           </div><div class="line"> &#125;     </div><div class="line">void <span class="function"><span class="title">print</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int k=1,i;  </div><div class="line">    int x1,y1;  </div><div class="line">    int x2,y2;  </div><div class="line">    stack&lt;node&gt; s;  </div><div class="line">    node temp,temp1;  </div><div class="line">    temp1.i=m-1; temp1.j=n-1; temp1.num=mg[m-1][n-1];  </div><div class="line">    s.push(temp1);  </div><div class="line">    <span class="keyword">for</span>(x1=m-1,y1=n-1;;)               //从终点开始，一级级地向前压栈  </div><div class="line">    &#123;  </div><div class="line">        x2=x1;  </div><div class="line">        y2=y1;  </div><div class="line">        s.push(pre[x2][y2]);           //不断的压栈  </div><div class="line">        x1=pre[x2][y2].i;              //不断地向前搜寻前结点  </div><div class="line">        y1=pre[x2][y2].j;              //一直压到了x1=0,y1=0;  </div><div class="line">        <span class="keyword">if</span>(x1==0 &amp;&amp; y1==0) <span class="built_in">break</span>;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">while</span>(!s.empty())  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">if</span>(s.size()-1==0 &amp;&amp; s.top().num==1) <span class="built_in">break</span>;    </div><div class="line">        temp=s.top();  </div><div class="line">        s.pop();  </div><div class="line">        <span class="keyword">if</span>(s.size()&gt;0)  </div><div class="line">        temp1=s.top();  </div><div class="line">        <span class="keyword">if</span>(temp.num==1)  </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%ds:(%d,%d)-&gt;(%d,%d)\n"</span>,k++,temp.i,temp.j,temp1.i,temp1.j);  </div><div class="line">        <span class="keyword">else</span>  </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">for</span>(i=1;i&lt;temp.num;i++)  </div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%ds:FIGHT AT (%d,%d)\n"</span>,k++,temp.i,temp.j);  </div><div class="line">            <span class="keyword">if</span>(s.size()&gt;0)  </div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%ds:(%d,%d)-&gt;(%d,%d)\n"</span>,k++,temp.i,temp.j,temp1.i,temp1.j);  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int i,k,x1,y1;  </div><div class="line">    char str[SIZE];              //字符串数组  </div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d %d"</span>,&amp;m,&amp;n)&gt;0)  </div><div class="line">    &#123;  </div><div class="line">         <span class="keyword">for</span>(i=0;i&lt;m;i++)//m行  </div><div class="line">         &#123;  </div><div class="line">            cin&gt;&gt;str;            //输入字符串  </div><div class="line">            <span class="keyword">for</span>(k=0;k&lt;n;k++)//n列  </div><div class="line">            &#123;  </div><div class="line">                <span class="keyword">if</span>(str[k]==<span class="string">'.'</span>) mg[i][k]=1;  </div><div class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(str[k]==<span class="string">'X'</span>) mg[i][k]=-1;  </div><div class="line">                <span class="keyword">else</span> mg[i][k]=str[k]-<span class="string">'0'</span>+1;           </div><div class="line">            &#125;  </div><div class="line">         &#125;  </div><div class="line">         <span class="keyword">if</span>(bfs(0,0,m-1,n-1))  </div><div class="line">         &#123;  </div><div class="line">            <span class="built_in">printf</span>(<span class="string">"It takes %d seconds to reach the target position, let me show you the way.\n"</span>,mins);  </div><div class="line">            <span class="built_in">print</span>();  </div><div class="line">         &#125;  </div><div class="line">         <span class="keyword">else</span>  </div><div class="line">         <span class="built_in">printf</span>(<span class="string">"God please help our poor hero.\n"</span>);  </div><div class="line">         <span class="built_in">printf</span>(<span class="string">"FINISH\n"</span>);  </div><div class="line">    &#125;  </div><div class="line">  <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>使用广搜+优化队列可以使得到的第一个路线就是最优化路线。mg数组中.存放的为1，X存放的为-1，怪物需要消耗几秒就存储几秒。flag数组用来存放走过的位置，<br>若走过的话存储为1，不能再走。使用优化队列，每次进行判断的都是队首的元素，如果满足继续放入队首，继续对改元素进行下一步判断。若不满足则退出队列，<br>第二个元素再进行判断，依次重复最后得到最优解。再使用栈进行输出。从末尾开始反向把元素一一压入栈中，再利用栈的特点从正向开始输出。pre数组存储的是<br>每个满足题意的坐标用于输出。</p>
<h3 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h3><p>flag数组需要初始化为0，输出的时候遇到怪物的情况需要额外讨论。本题若使用深搜会超时，需要使用广搜+优化队列求解。把自己定义的结构体变量放到自己建立的<br>队列或者栈中时需要重载小于号。<br>本题使用了queue和stack的头文件：<br>(1)queue:若定义队列queue q，q.empty()判断是否为空队列，q.push(1)表示元素1进队列，q.pop()表示出队列，q.front()表示得到队首的值，q.size()表示得<br>到队列里元素个数。<br>(2)stack:若定义栈stackq，q.empty()判断是否为栈空，q.push(1)表示元素1进栈，q.pop()表示弹出栈中元素，q.top()表示取出栈顶元素，q.size()表示得到栈<br>中的元素个数。</p>
<h2 id="1027"><a href="#1027" class="headerlink" title="1027"></a>1027</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147057709869.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147057709918.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147057709955.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14705770999.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147057710023.png" alt=""></p>
<h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>按照字典顺序输出从1-n n个自然数的组合数。</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;   </span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;  </span></div><div class="line">using namespace std;  </div><div class="line">const int SIZE=1002;  </div><div class="line">  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int n,m;  </div><div class="line">    int i,count;  </div><div class="line">    int seq[SIZE];  </div><div class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d %d"</span>,&amp;n,&amp;m)!=EOF)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">for</span>(i=0;i&lt;SIZE;i++)  </div><div class="line">        seq[i]=i+1;  </div><div class="line">         count=0;  </div><div class="line">        <span class="keyword">do</span>  </div><div class="line">        &#123;  </div><div class="line">            count++;  </div><div class="line">            <span class="keyword">if</span>(count==m)  </div><div class="line">            &#123;  </div><div class="line">                <span class="keyword">for</span>(i=0;i&lt;n;i++)  </div><div class="line">                <span class="keyword">if</span>(i==n-1)  </div><div class="line">                cout&lt;&lt;seq[i];  </div><div class="line">                <span class="keyword">else</span>  </div><div class="line">                cout&lt;&lt;seq[i]&lt;&lt;<span class="string">" "</span>;  </div><div class="line">                cout&lt;&lt;endl;  </div><div class="line">                <span class="built_in">break</span>;  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">while</span> (next_permutation(seq,seq+n));  </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>本题若使用如上代码的STL全排列函数，则可以快速求解，它的作用就是求出下一个字典序的组合数。与之对应的有prev_permutation，作用是求出上一个字典序<br>的组合数。但是它并没有真正带给我们实质的知识点，所以下面给出不使用STL的求解方法。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdipo.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;  </span></div><div class="line">using namespace std;  </div><div class="line"><span class="comment">#define MAX 50</span></div><div class="line">int a[MAX];    </div><div class="line">int permutation(int n)               //排列函数  </div><div class="line">&#123;  </div><div class="line">    int i,j,tmp,flag=1;  </div><div class="line">    <span class="keyword">for</span>(i=n;i&gt;=2 &amp;&amp; flag;i--)  </div><div class="line">        <span class="keyword">if</span>(a[i]&gt;a[i-1])               //从最后每相邻的两个进行比较，如果有前面一个比后面的小（i为较小位置，ii,为较大位置），那么此时一定存在一个排列比当前的大  </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">for</span>(j=n;j&gt;=2 &amp;&amp; flag;j--)   //应该找这个较小的数的后面从最后开始比它大的第一个数  </div><div class="line">            &#123;  </div><div class="line">                <span class="keyword">if</span>(a[j]&gt;a[i-1])          //将它换到当前较小的位置上  </div><div class="line">                &#123;  </div><div class="line">                    tmp=a[j]; a[j]=a[i-1]; a[i-1]=tmp; flag=0;  </div><div class="line">                &#125;  </div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(!flag)                //较大数到最后进行逆序,即交换，这样就产生了下一个排列，原理类似于，找到下一个较大的作为开始位的数，然后将后面的数字从最小开始即升序  </div><div class="line">            &#123;  </div><div class="line">                tmp=a[i];  a[i]=a[n]; a[n]=tmp;  </div><div class="line">            &#125;</div><div class="line">        &#125;  </div><div class="line">    <span class="keyword">if</span>(flag)</div><div class="line">		<span class="built_in">return</span> 0;  </div><div class="line">    <span class="keyword">else</span></div><div class="line">		<span class="built_in">return</span> 1;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    int n,i;  </div><div class="line">    <span class="keyword">while</span>(1)  </div><div class="line">    &#123;  </div><div class="line">        cin&gt;&gt;n;  </div><div class="line">        <span class="keyword">for</span>(i=1;i&lt;50;i++) a[i]=i;  </div><div class="line">        <span class="keyword">do</span>  </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">for</span>(i=1;i&lt;=n;i++) cout&lt;&lt;a[i]&lt;&lt;<span class="string">"  "</span>;  </div><div class="line">            cout&lt;&lt;endl;  </div><div class="line">        &#125;<span class="keyword">while</span>(permutation(n));//一直产生排列，直到逆序数&lt;按照上面的方式&gt;(按从大到小)数为0；          </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>以上代码的思路为：<br>从末尾开始判断前一个元素是否小于后一个元素，若找不到向前推动搜寻数组的位置，若能找到，则说明可以找到比改数大的一个组合数。那么再定义j从末尾开始与i-1的大<br>小，若a[i-1]&lt;a[j]，那么交换两数的位置后再交换a[i]与a[n]的数值以确保大数排到了后面，一直执行permutation函数到满足题意。</p>
<h3 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h3><p>每行的末尾没有空格，所以需要讨论输出格式。</p>
<h2 id="1058"><a href="#1058" class="headerlink" title="1058"></a>1058</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147099951324.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147099951418.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147099951455.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147099951489.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/147099951531.png" alt=""></p>
<h3 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h3><p>定义了一个humble numbe，并找出第N个humble number。定义为：除了1以外仅有2，3，5，7一个或多个因子的数。</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int n;</div><div class="line">typedef long long LL;</div><div class="line">LL data[5843];</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	int i=1,j=1,m=1,n=1;</div><div class="line">	int index=1;</div><div class="line">	data[index]=1;</div><div class="line">	<span class="keyword">while</span>(1)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(index==5843)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		LL temp1=min(data[i]*2,data[j]*3);</div><div class="line">		LL temp2=min(data[m]*5,data[n]*7);</div><div class="line">		LL res=min(temp1,temp2);</div><div class="line">		<span class="keyword">if</span>(res==data[i]*2)</div><div class="line">			i++;</div><div class="line">		<span class="keyword">if</span>(res==data[j]*3)</div><div class="line">			j++;</div><div class="line">		<span class="keyword">if</span>(res==data[m]*5)</div><div class="line">			m++;</div><div class="line">		<span class="keyword">if</span>(res==data[n]*7)</div><div class="line">			n++;</div><div class="line">		<span class="keyword">if</span>(res!=data[index])</div><div class="line">			data[++index]=res;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	init();</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n &amp;&amp; n!=0)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n%10==1 &amp;&amp; n%100!=11)</div><div class="line">			cout&lt;&lt;<span class="string">"The "</span>&lt;&lt;n&lt;&lt;<span class="string">"st humble number is "</span>&lt;&lt;data[n]&lt;&lt;<span class="string">"."</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(n%10==2 &amp;&amp; n%100!=12)</div><div class="line">			cout&lt;&lt;<span class="string">"The "</span>&lt;&lt;n&lt;&lt;<span class="string">"nd humble number is "</span>&lt;&lt;data[n]&lt;&lt;<span class="string">"."</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(n%10==3 &amp;&amp; n%100!=13)</div><div class="line">			cout&lt;&lt;<span class="string">"The "</span>&lt;&lt;n&lt;&lt;<span class="string">"rd humble number is "</span>&lt;&lt;data[n]&lt;&lt;<span class="string">"."</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"The "</span>&lt;&lt;n&lt;&lt;<span class="string">"th humble number is "</span>&lt;&lt;data[n]&lt;&lt;<span class="string">"."</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>先用data数组存放1-5842的humble number，接着判断n的末尾用哪种输出格式。data存放humble number的原理为：用这4个因子分别乘1，接着找出最小的数并判断是<br>属于哪个因子的，之后该因子的乘数+1，若res是一个新数，那么存入data数组，index再指向下一个位置，若index到了5843结束循环。</p>
<h3 id="注意事项-5"><a href="#注意事项-5" class="headerlink" title="注意事项"></a>注意事项</h3><p>在英语中11，12，13由于有对应的单词，所以不使用st，nd，rd，需要特别注意。另外此题需要用long long来储存数组，由于方便起见，可以用typedef把long long重新<br>定义为LL，可以节省书写速度。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ACM 1018-1022]]></title>
      <url>http://xuboming8.github.io/2016/08/30/ACM-1018-1022/</url>
      <content type="html"><![CDATA[<h1 id="HDOJ-ACM-1018-1022解答及思路"><a href="#HDOJ-ACM-1018-1022解答及思路" class="headerlink" title="HDOJ-ACM 1018-1022解答及思路"></a>HDOJ-ACM 1018-1022解答及思路</h1><h2 id="1018"><a href="#1018" class="headerlink" title="1018"></a>1018</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146962909378.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146962909426.png" alt=""><br><a id="more"></a></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14696290946.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/1469629095.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146962909531.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>给出一个小于100万的数字，求出它的阶乘的位数</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cmath&gt;</span></div><div class="line">using namespace std;</div><div class="line">int sum(int n)</div><div class="line">&#123;</div><div class="line">	double sum=0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">		sum+=<span class="built_in">log</span>10((double)i+1);</div><div class="line">	<span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int N;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;N)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;N;i++)</div><div class="line">		&#123;</div><div class="line">			int n,d;</div><div class="line">			cin&gt;&gt;n;</div><div class="line">			d=(int)sum(n)+1;</div><div class="line">			cout&lt;&lt;d&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>推导出一个正整数a的位数，如下:</p>
<div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146962909572.png" alt=""><br></div>

<p>接下来</p>
<div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146962909622.png" alt=""><br></div>

<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>在写代码前先理清思路，在不能轻易算出100万这样的大数阶乘的情况下，从一般规律入手往往会得到简化。</p>
<h2 id="1019"><a href="#1019" class="headerlink" title="1019"></a>1019</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146967950581.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146967950627.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146967950663.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146967950698.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146967950738.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>输出n个数字的最小公倍数</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">long long GCD(long long a,long long b)</div><div class="line">&#123;</div><div class="line">	int ex,c;</div><div class="line">	<span class="keyword">if</span>(a&lt;b)</div><div class="line">	&#123;</div><div class="line">		ex=a, a=b, b=ex;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(b!=0)</div><div class="line">	&#123;</div><div class="line">		c=a%b;</div><div class="line">		a=b;</div><div class="line">		b=c;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> a;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int N,M,gcd;</div><div class="line">	long long a,t;</div><div class="line">	cin&gt;&gt;N;</div><div class="line">	<span class="keyword">while</span>(N--)</div><div class="line">	&#123;</div><div class="line">		cin&gt;&gt;M;</div><div class="line">		t=1;</div><div class="line">		<span class="keyword">for</span>(int j=1;j&lt;=M;j++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;a;</div><div class="line">			gcd=GCD(t,a);</div><div class="line">			t=(t*a)/gcd;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;t&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>先写出2个函数判断出2个数的最大公因数和最小公倍数，最小公倍数=两数之积/最大公因数。接着输入数据，每输入2个数字就立刻判断出它的最小公倍数，接着把它<br>和下一个数字比较，循环得出最后的最小公倍数。</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>此题很容易超时和wrong answer。判断最大公因数的时候采用辗转相除法，可大大减少运算时间。而此题输入的数据均要采用long long型，使用int和long型都会提<br>示wrong answer。</p>
<h2 id="1020"><a href="#1020" class="headerlink" title="1020"></a>1020</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146968586973.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146968587033.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146968587108.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146968587221.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14696858726.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>要求把字符串实现合并同类项。</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int N,n;</div><div class="line">	char a[10001];</div><div class="line">	cin&gt;&gt;N;</div><div class="line">	<span class="keyword">while</span>(N--)</div><div class="line">	&#123;</div><div class="line">		int i=0,count=1;</div><div class="line">		cin&gt;&gt;a;</div><div class="line">		n=strlen(a);</div><div class="line">		<span class="keyword">while</span>(i&lt;n)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(a[i]==a[i+1])</div><div class="line">			&#123;</div><div class="line">				count++;</div><div class="line">				i++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(count==1)</div><div class="line">				&#123;</div><div class="line">					cout&lt;&lt;a[i];</div><div class="line">					i++;</div><div class="line">					count=1;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">if</span>(count&gt;1)</div><div class="line">				&#123;</div><div class="line">					cout&lt;&lt;count&lt;&lt;a[i];</div><div class="line">					i++;</div><div class="line">					count=1;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>判断每一位的字符和下一个字符是否相等。若相等count++，接着进入循环判断下一个位置。若不相等则输出该字符和出现的次数，注意要讨论下次数为1不输出1即<br>可，count要再初始化为1进行下一轮判断。</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>注意下一轮的判断count要赋值为1即可。</p>
<h2 id="1021"><a href="#1021" class="headerlink" title="1021"></a>1021</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146969038714.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146969038757.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146969038795.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146969038829.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146969038868.png" alt=""></p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>类似于斐波拉契数列。前2项和7和11，求第n项是否能被3整除。</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int n,a[1000000];</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		a[0]=7%3;</div><div class="line">		a[1]=11%3;</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)</div><div class="line">			a[i]=(a[i-1]+a[i-2])%3;</div><div class="line">		<span class="keyword">if</span>(a[n]==0)</div><div class="line">			cout&lt;&lt;<span class="string">"yes"</span>&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"no"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>公式：（a+b）%m=（a%m+b%m）%m。所以叠加的时候只需要加上每项除以3的余数即可。</p>
<h3 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h3><p>此题很容易超时或者超内存。尽量避免使用递归调用，运用上述公式可大大减少计算量。</p>
<h2 id="1022"><a href="#1022" class="headerlink" title="1022"></a>1022</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146989349538.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146989349585.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146989349621.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14698934966.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146989349693.png" alt=""></p>
<h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>模拟栈的原理。有最多9辆火车进站，给出进站顺序和出战顺序，判断是否可行。</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int n;  </div><div class="line">char input[15],output[15];  </div><div class="line">int <span class="function"><span class="title">main</span></span>()  </div><div class="line">&#123;  </div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;input&gt;&gt;output)</div><div class="line">    &#123;  </div><div class="line">        int stack[15],top=0;  </div><div class="line">        int flag[15];  </div><div class="line">        int i=0,A=0,B=0,ok=1;  </div><div class="line">        <span class="keyword">while</span>(B&lt;=n)  </div><div class="line">        &#123;  </div><div class="line">            <span class="keyword">if</span>(input[A]==output[B]) &#123;A++;B++;flag[i++]=1;flag[i++]=0;&#125;   </div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(top&amp;&amp;stack[top]==output[B]) &#123;flag[i++]=0;top--;B++;&#125;//出栈   </div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(A&lt;=n) &#123;stack[++top]=input[A++];flag[i++]=1;&#125; //进栈  </div><div class="line">            <span class="keyword">else</span> &#123;ok=0;<span class="built_in">break</span>;&#125;  </div><div class="line">			/*cout&lt;&lt;stack[top]&lt;&lt;<span class="string">" "</span>&lt;&lt;top&lt;&lt;<span class="string">" "</span>&lt;&lt;A&lt;&lt;<span class="string">" "</span>&lt;&lt;flag[i-1]&lt;&lt;<span class="string">" "</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;B&lt;&lt;endl;*/</div><div class="line">        &#125;  </div><div class="line">        <span class="keyword">if</span>(ok)  </div><div class="line">        &#123;  </div><div class="line">            cout&lt;&lt;<span class="string">"Yes."</span>&lt;&lt;endl;</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;i-2;j++)  </div><div class="line">            &#123;  </div><div class="line">				<span class="keyword">if</span>(flag[j])</div><div class="line">					cout&lt;&lt;<span class="string">"in"</span>&lt;&lt;endl;</div><div class="line">				<span class="keyword">else</span></div><div class="line">					cout&lt;&lt;<span class="string">"out"</span>&lt;&lt;endl;</div><div class="line">            &#125;  </div><div class="line">        &#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"No."</span>&lt;&lt;endl;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"FINISH\n"</span>);  </div><div class="line">    &#125;  </div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>　　此题极为重要，大多数人是第一次进行模拟栈。以下附给出解除第19行注释输出后的运行结果</p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146989392449.png" alt=""><br></div><br>　　该图可以清楚的看出6次循环每一步带来的变化。<br>　　用数组stack来模拟栈数据的存放，ok判断结果yes或no，flag用来判断若为yes后in和out的输出，top代表栈顶。while循环体的具体执行步骤是：第一步判断进入和<br>离开的数字是否相等，若相等，该火车直接进站后出战即可，A，B自加1，flag连续2个元素赋值为1和0，代表了in后out。不满足第一步则进行第二步判断出栈，若<br>栈顶没有到底部并且栈顶的元素和离开的元素相等，那么该元素离栈，flag该位置定义为0，B自增。前两步都不满足则进行第三步判断进栈，若A小于等于元素的个数。<br>则进栈，A自加。flag该位置定义为1。若前三步都不满足，则进行第四步，ok定义为0并且结束循环。最后若ok=1输出yes并按照flag的顺序，若为0输出out，若为1输<br>出in。</p>
<h3 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h3><p>　　该题的top初值必须赋为0而不能是-1，赋为0后实际存储的位置下标是用stack[1]开始的，这样在最后判断是够到达栈底不会因为top=-1而数组越界。而A和B都必须判断<br>为小于等于n而不能是小于n。while的循环体如果执行到最后是yes则会多执行一次。如图所示实际执行了6次循环体而不是5次，因为第6次进入的时候input[A]和ouput[B]<br>必然相等，因为都没被初始化过，B自增后不再满足while循环后退出，不会影响最后结果。并且当最后的结果为no时，会多执行进栈的那一步，会把没有初始化的元素赋<br>给stack，但也并不影响结果，因为下一个循环会因为均不满足前三次而直接执行第4步退出循环。所以修改代码若将小于等于号为小于号则得不到正确结果，多执行一步<br>可以满足该循环在yes和no的两种情况下都可以输出正确结果。若输出的结果为yes，因为多执行了1次第一步，所以i的元素多加了2，所以在最后输出flag元素的时候必<br>须写成j&lt;i-2而不是j&lt;i。该图stack存放的数据是49和50是因为把字符数据赋给了整型数组。最后输出格式也要留意。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ACM 1013-1017]]></title>
      <url>http://xuboming8.github.io/2016/08/30/ACM-1013-1017/</url>
      <content type="html"><![CDATA[<h1 id="HDOJ-ACM-1013-1017解答及思路"><a href="#HDOJ-ACM-1013-1017解答及思路" class="headerlink" title="HDOJ-ACM 1013-1017解答及思路"></a>HDOJ-ACM 1013-1017解答及思路</h1><h2 id="1013"><a href="#1013" class="headerlink" title="1013"></a>1013</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146943280805.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146943280846.png" alt=""><br><a id="more"></a></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146943280882.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146943280916.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14694328095.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>计算一个数字每位数之和，小于9时输出。</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	char a[1000];</div><div class="line">	int b[1000];</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;a&amp;&amp;a[0]!=<span class="string">'0'</span>)</div><div class="line">	&#123;</div><div class="line">		int len=strlen(a);</div><div class="line">		int sum=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;len;i++)</div><div class="line">		&#123;</div><div class="line">			b[i]=a[i]-<span class="string">'0'</span>;</div><div class="line">			sum+=b[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span>(sum&gt;9)</div><div class="line">			sum=sum/1000+sum%1000/100+sum%100/10+sum%10;</div><div class="line">		cout&lt;&lt;sum&lt;&lt;endl;</div><div class="line">	&#125;		</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>用字符数组接收转换成整形数组，位数之和大于9进入循环。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>需要用数组接受字符，运用大数操作的原理。</p>
<h2 id="1014"><a href="#1014" class="headerlink" title="1014"></a>1014</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146945584328.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146945584376.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146945584583.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146945584779.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146945584978.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>满足表达式seed(x+1) = [seed(x) + STEP] % MOD，seed（0）=0，如果在seed中能输出0到mod-1中所有的数字则成功，否则失败。</p>
<h3 id="参考AC代码-一"><a href="#参考AC代码-一" class="headerlink" title="参考AC代码(一)"></a>参考AC代码(一)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;iomanip&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int step,mod,flag=1;</div><div class="line">	bool a[100050];</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;step&gt;&gt;mod)</div><div class="line">	&#123;</div><div class="line">		int seed=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;mod;i++)</div><div class="line">			a[i]=<span class="literal">false</span>;</div><div class="line">		<span class="keyword">do</span></div><div class="line">		&#123;</div><div class="line">			seed=(seed+step)%mod;</div><div class="line">			a[seed]=<span class="literal">true</span>;</div><div class="line">		&#125;<span class="keyword">while</span>(seed!=0);</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;mod;i++)</div><div class="line">			<span class="keyword">if</span>(a[i]==<span class="literal">false</span>)</div><div class="line">				flag=0;</div><div class="line">		<span class="keyword">if</span>(flag)</div><div class="line">			cout&lt;&lt;setw(10)&lt;&lt;step&lt;&lt;setw(10)&lt;&lt;mod&lt;&lt;<span class="string">"    "</span>&lt;&lt;<span class="string">"Good Choice"</span>&lt;&lt;endl&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;setw(10)&lt;&lt;step&lt;&lt;setw(10)&lt;&lt;mod&lt;&lt;<span class="string">"    "</span>&lt;&lt;<span class="string">"Bad Choice"</span>&lt;&lt;endl&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="C-参考AC代码（二）"><a href="#C-参考AC代码（二）" class="headerlink" title="C++参考AC代码（二）"></a>C++参考AC代码（二）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;iomanip&gt;</span></div><div class="line"><span class="comment">#define min(a,b) a&lt;b?a:b</span></div><div class="line">using namespace std;</div><div class="line">int prime(int a,int b)</div><div class="line">&#123;</div><div class="line">	int c=min(a,b);</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=c;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>((a%i==0)&amp;&amp;(b%i==0))</div><div class="line">			<span class="built_in">return</span> 0;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 1;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int step,mod;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;step&gt;&gt;mod)</div><div class="line">	&#123;</div><div class="line">		int flag=prime(step,mod);</div><div class="line">		<span class="keyword">if</span>(flag)</div><div class="line">			cout&lt;&lt;setw(10)&lt;&lt;step&lt;&lt;setw(10)&lt;&lt;mod&lt;&lt;<span class="string">"    "</span>&lt;&lt;<span class="string">"Good Choice"</span>&lt;&lt;endl&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;setw(10)&lt;&lt;step&lt;&lt;setw(10)&lt;&lt;mod&lt;&lt;<span class="string">"    "</span>&lt;&lt;<span class="string">"Bad Choice"</span>&lt;&lt;endl&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>AC代码（1）：先定义一个bool型数组并且按照mod的长度全部定义为false，接着当seed不为0的时候进入循环按照表达式计算，每计算一次，数组中第seed位的数值<br>变为true，如果退出循环后数组中有一个flase则输出badchoice，不然输出good choice。<br>AC代码（2）：该方法很简便而且很巧，只要step和mod互质，则结果为good choice，否则，seed数组的值一定是相邻的两个数字相差它们的最小公约数的值，为<br>bad choice。</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>注意输出格式，printf中输出%10d，cout中设置setw（10），在没有发现规律二的情况下用第一种方法解题也可。</p>
<h2 id="1015"><a href="#1015" class="headerlink" title="1015"></a>1015</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146950000444.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146950000498.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146950000535.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>输入1个小于1200万的数字作为target，再输入一个不能重复的大写英文字符串，在字符串中找出按照字典数顺序的5个字符满足v - w^2 + x^3 - y^4 + z^5 = target,<br>若满足输出5个字符，若不存在输出no solution。若存在多个，输出字典序最大的。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int N;</div><div class="line">char str[15],b[28]=&#123;<span class="string">"0ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>&#125;;</div><div class="line">bool cmp(int a,int b)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> a&gt;b;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">find</span></span>()</div><div class="line">&#123;</div><div class="line">	int a[15],len;</div><div class="line">	len=strlen(str);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)</div><div class="line">		a[i]=str[i]-<span class="string">'A'</span>+1;</div><div class="line">	sort(a,a+len,cmp);</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;len;i++)</div><div class="line">		<span class="keyword">for</span>(int j=0;j&lt;len;j++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(i==j)</div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			<span class="keyword">for</span>(int p=0;p&lt;len;p++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(p==i||p==j)</div><div class="line">					<span class="built_in">continue</span>;</div><div class="line">				<span class="keyword">for</span>(int q=0;q&lt;len;q++)</div><div class="line">				&#123;</div><div class="line">					<span class="keyword">if</span>(q==i||q==j||q==p)</div><div class="line">						<span class="built_in">continue</span>;</div><div class="line">					<span class="keyword">for</span>(int k=0;k&lt;len;k++)</div><div class="line">					&#123;</div><div class="line">						<span class="keyword">if</span>(k==i||k==j||k==q||k==q)</div><div class="line">							<span class="built_in">continue</span>;</div><div class="line">						<span class="keyword">if</span>(a[i] - a[j]*a[j] + a[p]*a[p]*a[p] - a[q]*a[q]*a[q]*a[q] + a[k]*a[k]*a[k]*a[k]*a[k] == N)</div><div class="line">						&#123;</div><div class="line">							cout&lt;&lt;b[a[i]]&lt;&lt;b[a[j]]&lt;&lt;b[a[p]]&lt;&lt;b[a[q]]&lt;&lt;b[a[k]]&lt;&lt;endl;</div><div class="line">							<span class="built_in">return</span>;</div><div class="line">						&#125;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	cout&lt;&lt;<span class="string">"no solution"</span>&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;N&gt;&gt;str)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(N==0&amp;&amp;strcmp(str,<span class="string">"END"</span>)==0)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		find();</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>建立一个数组顺序存放A-Z所有大写字母，并且要注意第一位空出来（我直接补了一个数字0），这样才能把A-Z与1-26对应起来。搜索的时候要把输入的字符串变为对<br>应代表的数字存放在一个数组中并按照降序排列，再从第一位开始套用5个for循环，如果字母对应的数字相同的话continue，直到进入最后一个循环的时候判断表达<br>式是否成立，若成立输出字符，不成立输出no solution。字符输出的时候要用到之前存放大写字母的数组，每个字母都在数组中对应代表数字的位置。找到第一个满<br>足的直接return结束函数，此时就是字典序最大的。</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>数组的输入输出以及整型变字符型和字符型转整型很重要，要牢记。</p>
<h2 id="1016"><a href="#1016" class="headerlink" title="1016"></a>1016</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146958882104.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146958882152.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146958882187.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146958882227.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146958882258.png" alt=""></p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>要求把n个数构成一个圆形，要求每相邻的两个数的和都是质数。</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;math.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">bool b[20];</div><div class="line">int a[20],n;</div><div class="line">int prime(int num)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=2;i&lt;=sqrt((double)num);i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(num%i==0)</div><div class="line">			<span class="built_in">return</span> 0;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 1;</div><div class="line">&#125;</div><div class="line">void DFS(int num)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(n==num&amp;&amp;(prime(1+a[n-1])==1))</div><div class="line">	&#123;</div><div class="line">		cout&lt;&lt;a[0];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">		&#123;</div><div class="line">			cout&lt;&lt;<span class="string">" "</span>&lt;&lt;a[i];</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=2;i&lt;=n;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>((b[i]==<span class="literal">false</span>)&amp;&amp;prime(i+a[num-1])==1)</div><div class="line">			&#123;</div><div class="line">				a[num]=i;</div><div class="line">				b[i]=<span class="literal">true</span>;</div><div class="line">				DFS(num+1);</div><div class="line">				b[i]=<span class="literal">false</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	static int x=1;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;n;i++)</div><div class="line">			b[i]=<span class="literal">false</span>;</div><div class="line">		a[0]=1;</div><div class="line">		cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;x&lt;&lt;<span class="string">":"</span>&lt;&lt;endl;</div><div class="line">		x++;</div><div class="line">		DFS(1);</div><div class="line">		cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>本题用深度搜索算法较为简单。用数组a存放输出的数据，用数组b判断某数是否在前面已经出现过，将b按照n的大小全部初始化为false，接着哪个数字出现了，就把<br>那个数字对应位置的元素改为true进入DFS后，先判断是否为到了最后一步，若最后一个数和第一个数依然满足和为质数，则满足条件输出。不然的话进入循环开始<br>从2-n依次判断和前一个数的和是否为质数，并且判断该位置是否为false，都满足的话，把该数存入a，b中对应位置变为true，再深搜下一个数，若没有满足条件回<br>到了开始的循环中，则b中改位置的元素改回false。</p>
<h3 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h3><p>若DFS（num+1）深搜后不满足条件返回来了，那么b[i]的值要变回false。此题的输出格式也要注意，每一行的末尾不能有空格。</p>
<h2 id="1017"><a href="#1017" class="headerlink" title="1017"></a>1017</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14696054029.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146960540337.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146960540374.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146960540407.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146960540441.png" alt=""></p>
<h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>N个输入模块。每个模块中输入n和m2个数字，在1-n中寻找整数对（a，b），其中0&lt;a&lt;b&lt;n,输出满足表达式(a^2+b^2 +m)/(ab)的个数</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#incldue&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int N,n,m;</div><div class="line">	cin&gt;&gt;N;</div><div class="line">	<span class="keyword">for</span>(int p=1;p&lt;=N;p++)</div><div class="line">	&#123;</div><div class="line">		int flag=1;</div><div class="line">		<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m &amp;&amp; !(n==0&amp;&amp;m==0))</div><div class="line">		&#123;</div><div class="line">			int a,b,count=0;</div><div class="line">			<span class="keyword">for</span>(int i=1;i&lt;n;i++)</div><div class="line">			&#123;</div><div class="line">				a=i;</div><div class="line">				<span class="keyword">for</span>(int j=a+1;j&lt;n;j++)</div><div class="line">				&#123;</div><div class="line">					b=j;</div><div class="line">					<span class="keyword">if</span>((a*a+b*b+m)%(a*b)==0)</div><div class="line">						count++;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;flag++&lt;&lt;<span class="string">": "</span>&lt;&lt;count&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(p!=N)</div><div class="line">			cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>利用2个for循环分别找出a和b。</p>
<h3 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h3><p>此题的输出格式非常重要，题目给出的输出格式是错的。正确的是N和第一个输入模块中没有空行，最后一行也没有空行，只有在模块之间才有空行。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ACM 1008-1012]]></title>
      <url>http://xuboming8.github.io/2016/08/30/ACM-1008-1012/</url>
      <content type="html"><![CDATA[<h1 id="HDOJ-ACM-1008-1012解答及思路"><a href="#HDOJ-ACM-1008-1012解答及思路" class="headerlink" title="HDOJ-ACM 1008-1012解答及思路"></a>HDOJ-ACM 1008-1012解答及思路</h1><h2 id="1008"><a href="#1008" class="headerlink" title="1008"></a>1008</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146925259674.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146925259723.png" alt=""><br><a id="more"></a></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146925259757.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14692525979.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146925259831.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>计算电梯的运行时间</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int upp(int a,int b)</div><div class="line">&#123;</div><div class="line">	int sum,diff;</div><div class="line">	diff=b<span class="_">-a</span>;</div><div class="line">	sum=6*diff+5;</div><div class="line">	<span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">int down(int a,int b)</div><div class="line">&#123;</div><div class="line">	int sum,diff;</div><div class="line">	diff=a-b;</div><div class="line">	sum=4*diff+5;</div><div class="line">	<span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int N,p[105]=&#123;0&#125;;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;N&amp;&amp;(N!=0))</div><div class="line">	&#123;</div><div class="line">		int sum=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=N;i++)</div><div class="line">			cin&gt;&gt;p[i];</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;N;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(p[i]&lt;p[i+1])</div><div class="line">				sum+=upp(p[i],p[i+1]);</div><div class="line">			<span class="keyword">else</span></div><div class="line">				sum+=down(p[i],p[i+1]);</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;sum&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>把电梯上升和下降的情况分开考虑即可。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>电梯不是每一层都停，只有在起始和末尾位置才停5s。</p>
<h2 id="1009"><a href="#1009" class="headerlink" title="1009"></a>1009</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146926752542.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14692675259.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146926752628.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146926752661.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146926752698.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>老鼠准备了M磅的猫食准备和N个房间的猫进行交换食物，N个房间中第i个房间存贮了J[i]磅的食物，需要F[i]磅的猫食才能交换，老鼠可以付出F[i]×a%磅的猫食即<br>可换回J[i]×a%磅的食物，求老鼠可以得到的最大食物量。</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">struct Node</div><div class="line">&#123;</div><div class="line">	double j,f,p;</div><div class="line">&#125;a[1001];</div><div class="line">bool cmp(const Node a,const Node b)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> a.p&gt;b.p;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int M,N;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%d%d"</span>,&amp;M,&amp;N)!=EOF&amp;&amp;(M!=-1)&amp;&amp;(N!=-1))</div><div class="line">	&#123;</div><div class="line">		double sum=0.0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;N;i++)</div><div class="line">		&#123;</div><div class="line">			cin&gt;&gt;a[i].j&gt;&gt;a[i].f;</div><div class="line">			a[i].p=a[i].j/a[i].f;</div><div class="line">		&#125;</div><div class="line">		sort(a,a+N,cmp);</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;N;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(a[i].f&lt;M)</div><div class="line">			&#123;</div><div class="line">				sum+=a[i].j;</div><div class="line">				M-=a[i].f;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				sum+=a[i].p*M;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,sum);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>运用贪心算法，先算出每个房间可以换取javabeen的性价比用sort按照降序排列，从性价比最高的开始交换，全部交换完之后到性价比次之的房间，如果剩余的猫食<br>不足以全部满足该仓库的需要的猫食，则交换出全部的猫食换取javabeen后结束循环。</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>该代码在G++中超时，在C++中即可AC。算出性价比按照降序排列后从高到低依次交换是本题的关键。</p>
<h2 id="1010"><a href="#1010" class="headerlink" title="1010"></a>1010</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146934165953.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146934166006.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14693416604.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14693416608.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146934166121.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>输入一个矩阵，“.”代表可以通过，“S”表示起点，“D”表示终点，“X”表示墙，只能横着走或者竖着走，一个地方只可以走一次，问在t时刻能否恰好逃出去</p>
<h3 id="参考AC代码-2"><a href="#参考AC代码-2" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;math.h&gt;</span></div><div class="line">using namespace std;</div><div class="line">char map[9][9];               //地图最多不超过7行7列,又从(1,1)计算,所以开辟9,9 </div><div class="line">int M,N,T,di,dj;              //给定的三个量,以及终点位置  </div><div class="line">bool escape;                  //标识逃生成功 </div><div class="line">int Dir[4][2]=&#123;&#123;0,-1&#125;,&#123;0,1&#125;,&#123;1,0&#125;,&#123;-1,0&#125;&#125;;       //分别表示左、右、下、上四个方向</div><div class="line">void DFS(int si,int sj,int t)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(si==0||si&gt;N||sj==0||sj&gt;M)     //越出边界便不搜索  </div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	<span class="keyword">if</span>(si==di&amp;&amp;sj==dj&amp;&amp;T==t)</div><div class="line">	&#123;</div><div class="line">		escape=1;               //时间正好的时候才能逃生  </div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	int temp=abs(T-t)-(abs(si-di)+abs(sj-dj));     //计算当前到终点的最短路与还需要的时间差,若小于0则路径剪枝 </div><div class="line">	<span class="keyword">if</span>(temp&lt;0||temp%2==1)           //temp如果是奇数的话也要剪枝  </div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;4;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(map[si+Dir[i][0]][sj+Dir[i][1]]!=<span class="string">'X'</span>)</div><div class="line">		&#123;</div><div class="line">			map[si+Dir[i][0]][sj+Dir[i][1]]=<span class="string">'X'</span>;       //把当前点刷为X </div><div class="line">			DFS(si+Dir[i][0],sj+Dir[i][1],t+1);        //搜索该点   </div><div class="line">			<span class="keyword">if</span>(escape)</div><div class="line">				<span class="built_in">return</span>;</div><div class="line">			 map[si+Dir[i][0]][sj+Dir[i][1]]=<span class="string">'.'</span>;       //如果搜索不到退出来了,则重新把该点刷为<span class="string">'.'</span></div><div class="line">		&#125;	</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int si,sj;</div><div class="line">	<span class="keyword">while</span>((cin&gt;&gt;N&gt;&gt;M&gt;&gt;T)&amp;&amp;!(N==0&amp;&amp;M==0&amp;&amp;T==0))</div><div class="line">	&#123;</div><div class="line">		int wall=0;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=N;i++)</div><div class="line">			<span class="keyword">for</span>(int j=1;j&lt;=M;j++)</div><div class="line">			&#123;	</div><div class="line">				cin&gt;&gt;map[i][j];</div><div class="line">				<span class="keyword">if</span>(map[i][j]==<span class="string">'S'</span>)</div><div class="line">				&#123;</div><div class="line">					si=i,sj=j;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">if</span>(map[i][j]==<span class="string">'D'</span>)</div><div class="line">				&#123;</div><div class="line">					di=i,dj=j;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">if</span>(map[i][j]==<span class="string">'X'</span>)</div><div class="line">					wall++;</div><div class="line">			&#125;</div><div class="line">		<span class="keyword">if</span>(N*M-wall&lt;=T)                  //路径剪枝,当走完不含墙的迷宫都还不到T时间将不能逃生  </div><div class="line">		&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		escape=0;</div><div class="line">		map[si][sj]=<span class="string">'X'</span>;           //记得刷为<span class="string">'X'</span>  </div><div class="line">		DFS(si,sj,0);</div><div class="line">		<span class="keyword">if</span>(escape)</div><div class="line">			cout&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl; </div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>　　本题运用了深度搜索算法和剪枝算法。从（1，1）位置开始输入矩阵，记录下起点和终点的位置和墙的个数，如果走完所有没有的墙的位置后依旧小于时间T，那<br>么直接路径剪枝，把起点设为墙后进行深度搜素，如果越出边界那么不搜索结束函数，如果时间正好刚好的话escape返回值为1，再计算当前的最短路径如果小于需要<br>的时间差，那么路径剪枝，temp如果是奇数的话也要进行剪枝，草图如下</p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146934166156.png" alt=""><br></div><br>　　两种不同的走法，下面那一种可以控制时间刚好在T时刻。因为差出的是偶数，所以奇数的话要剪枝掉，省掉搜索时间。接下来进行该位置周围四个方向的前进，<br>如果不是墙的话进入循环，把当前点设为墙后搜索改点，如果成功后返回1，如果搜索不到退出来，那么重新把改点设为“.”。以此类推搜索完所有的点。</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>　　由于是向四个方面前进，所以map的输入要从（1，1）开始，数组要设置为9行9列，确保搜索数组的时候不会越界。本题也多处运用了剪枝，大大减少了运算时间。<br>起点要注意在出发后要设置为“X”，在搜索每一个点的时候该点都要设为“X”，搜索结束后重新变回原样。输出的“YES”和“NO”均为大写，本人因为错把NO的O写成了数字<br>0导致检查了2个多小时，所以注意在书写代码的时候不要粗心。</p>
<h2 id="1011"><a href="#1011" class="headerlink" title="1011"></a>1011</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146937199132.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146937199186.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146937199221.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146937199254.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146937199295.png" alt=""></p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>一棵树，有n个结点，每个结点有v个bug，有w的brain。我从1号结点开始走，带着m个战士。1个战士可以消灭20个bugs，如果我把某个结点的所有bug都消灭了我就能<br>得到那个结点的brain。如果想攻击当前结点，那么必须先攻击了它的父结点（1号点除外）。其中当你攻占了当前结点，你可以分派人手，走向几个不同的子结点，<br>去攻占更多。也就是说，不是单一的路径。</p>
<h3 id="参考AC代码-3"><a href="#参考AC代码-3" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line"><span class="comment">#include&lt;vector&gt;</span></div><div class="line"><span class="comment">#include&lt;algorithm&gt;</span></div><div class="line">using namespace std;</div><div class="line">int n,m;</div><div class="line">int bug[105],brain[105];</div><div class="line">int dp[105][105],vis[105];</div><div class="line">vector&lt;int&gt;e[105];</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++)</div><div class="line">		e[i].clear();</div><div class="line">	memset(dp,0,sizeof(dp));</div><div class="line">	memset(vis,0,sizeof(vis));</div><div class="line">&#125;</div><div class="line">void dfs(int root)</div><div class="line">&#123;</div><div class="line">	vis[root]=1;</div><div class="line">	int cost=(bug[root]+19)/20;   //上取整</div><div class="line">	<span class="keyword">for</span>(int i=cost;i&lt;=m;i++)      //只要士兵数&gt;=cost,所获宝藏是一样的，都是brain[root]</div><div class="line">		dp[root][i]=brain[root];</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[root].size();i++)</div><div class="line">	&#123;</div><div class="line">		int next=e[root][i];</div><div class="line">		<span class="keyword">if</span>(!vis[next])</div><div class="line">		&#123;</div><div class="line">			dfs(next);</div><div class="line">			<span class="keyword">for</span>(int k=m;k&gt;=cost;k--)    //派出去的士兵最多k-cost,因为至少要留下cost人在父节点</div><div class="line">				<span class="keyword">for</span>(int j=1;j&lt;=k-cost;j++)</div><div class="line">					dp[root][k]=max(dp[root][k],dp[root][k-j]+dp[next][j]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(n==-1&amp;&amp;m==-1)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		init();</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">			cin&gt;&gt;bug[i]&gt;&gt;brain[i];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;=n-1;i++)</div><div class="line">		&#123;</div><div class="line">			int a,b;</div><div class="line">			cin&gt;&gt;a&gt;&gt;b;</div><div class="line">			e[a].push_back(b);</div><div class="line">			e[b].push_back(a);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(m==0)</div><div class="line">		&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"0"</span>&lt;&lt;endl;</div><div class="line">			<span class="built_in">continue</span>;</div><div class="line">		&#125;</div><div class="line">		dfs(1);</div><div class="line">		cout&lt;&lt;dp[1][m]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="第二种dfs-dp写法"><a href="#第二种dfs-dp写法" class="headerlink" title="第二种dfs+dp写法"></a>第二种dfs+dp写法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">void dfs(int root)</div><div class="line">&#123;</div><div class="line">	vis[root]=1;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;e[root].size();i++)</div><div class="line">	&#123;</div><div class="line">		int next=e[root][i];</div><div class="line">		<span class="keyword">if</span>(!vis[next])</div><div class="line">		&#123;</div><div class="line">			dfs(next);</div><div class="line">			<span class="keyword">for</span>(int k=m;k&gt;=1;k--)    //派出去的士兵最多k-cost,因为至少要留下cost人在父节点</div><div class="line">				<span class="keyword">for</span>(int j=1;j&lt;=k;j++)</div><div class="line">					ans[root][k]=max(ans[root][k],ans[root][k-j]+dp[next][j]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	int t=(bug[root]+19)/20;</div><div class="line">	<span class="keyword">for</span>(int i=t;i&lt;=m;i++)</div><div class="line">		dp[root][i]=ans[root][i-t]+brain[root];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>树形dp问题，由于并未完全理解，所以未能提供思路，待更新。</p>
<h3 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h3><p>待更新。</p>
<h2 id="1012"><a href="#1012" class="headerlink" title="1012"></a>1012</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146941754436.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146941754488.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146941754522.png" alt=""></p>
<h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>按照公式输出n为0-9所求出的e</p>
<h3 id="参考AC代码-4"><a href="#参考AC代码-4" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int fun(int n)</div><div class="line">&#123;</div><div class="line">	int sum=1;</div><div class="line">	<span class="keyword">if</span>(n==0)</div><div class="line">		<span class="built_in">return</span> 1;</div><div class="line">	<span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">		sum*=i;</div><div class="line">	<span class="built_in">return</span> sum;</div><div class="line">&#125;</div><div class="line">double fun2(int n)</div><div class="line">&#123;</div><div class="line">	double e=0.0;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=n;i++)</div><div class="line">		e+=1.0/fun(i);</div><div class="line">	<span class="built_in">return</span> e;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	cout&lt;&lt;<span class="string">"n e"</span>&lt;&lt;endl&lt;&lt;<span class="string">"- -----------"</span>&lt;&lt;endl;</div><div class="line">	<span class="keyword">for</span>(int i=0;i&lt;=9;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(i&lt;=1)</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d %.0lf\n"</span>,i,fun2(i));</div><div class="line">		<span class="keyword">if</span>(i==2)</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d %.1lf\n"</span>,i,fun2(i));</div><div class="line">		<span class="keyword">if</span>(i&gt;2)</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d %.9lf\n"</span>,i,fun2(i));</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>按照题目要求写出函数即可。</p>
<h3 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h3><p>注意输出格式，如果对输出位数有苛刻的要求，请用printf输出而不要用iomanip中的setprecision。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ACM 1002-1007]]></title>
      <url>http://xuboming8.github.io/2016/08/30/ACM-1002-1007/</url>
      <content type="html"><![CDATA[<h1 id="1HDOJ-ACM-1002-1007解答及思路"><a href="#1HDOJ-ACM-1002-1007解答及思路" class="headerlink" title="1HDOJ-ACM 1002-1007解答及思路"></a>1HDOJ-ACM 1002-1007解答及思路</h1><h2 id="1002"><a href="#1002" class="headerlink" title="1002"></a>1002</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146980110768.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146978509925.png" alt=""><br><a id="more"></a></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146980110811.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146980110847.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146978509969.png" alt=""></p>
<h3 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h3><p>要求2个不超过1000位的大数（整形）相加 允许进行1-20次的相加操作</p>
<h3 id="C-参考AC代码"><a href="#C-参考AC代码" class="headerlink" title="C++参考AC代码"></a>C++参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int T,len1,len2,p;</div><div class="line">	cin&gt;&gt;T;</div><div class="line">	<span class="keyword">for</span>(int q=0;q&lt;T;q++)</div><div class="line">	&#123;</div><div class="line">		char s1[1000],s2[1000];</div><div class="line">		int num1[1000]=&#123;0&#125;,num2[1000]=&#123;0&#125;;</div><div class="line">		cin&gt;&gt;s1&gt;&gt;s2;</div><div class="line">		<span class="keyword">if</span>((s1[0]==<span class="string">'0'</span>)&amp;&amp;(s2[0]==<span class="string">'0'</span>))</div><div class="line">		&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;q+1&lt;&lt;<span class="string">":"</span>&lt;&lt;endl&lt;&lt;<span class="string">"0 + 0 = 0"</span>&lt;&lt;endl;</div><div class="line">			<span class="keyword">if</span>(q!=T-1)</div><div class="line">				cout&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			len1=strlen(s1);</div><div class="line">			len2=strlen(s2);</div><div class="line">			<span class="keyword">for</span>(int i=len1-1,j=0;i&gt;=0;i--)</div><div class="line">				num1[j++]=s1[i]-<span class="string">'0'</span>;</div><div class="line">			<span class="keyword">for</span>(int i=len2-1,j=0;i&gt;=0;i--)</div><div class="line">				num2[j++]=s2[i]-<span class="string">'0'</span>;</div><div class="line">			<span class="keyword">for</span>(int i=0;i&lt;1000;i++)</div><div class="line">			&#123;</div><div class="line">				num1[i]+=num2[i];</div><div class="line">				<span class="keyword">if</span>(num1[i]&gt;9)</div><div class="line">				&#123;</div><div class="line">					num1[i]-=10;</div><div class="line">					num1[i+1]++;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;q+1&lt;&lt;<span class="string">":"</span>&lt;&lt;endl;</div><div class="line">			cout&lt;&lt;s1&lt;&lt;<span class="string">" + "</span>&lt;&lt;s2&lt;&lt;<span class="string">" = "</span>;</div><div class="line">			<span class="keyword">for</span>(p=999;(p&gt;=0)&amp;&amp;(num1[p]==0);p--);</div><div class="line">			<span class="keyword">for</span>(;p&gt;=0;p--)</div><div class="line">				cout&lt;&lt;num1[p];</div><div class="line">			cout&lt;&lt;endl;</div><div class="line">			<span class="keyword">if</span>(q!=T-1)</div><div class="line">				cout&lt;&lt;endl;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>输入2个大数分别存放在s1和s2两个字符数组中，再分别定义2个足够大的整型数组num1和num2并且把所有元素初始化为0，把s1和s2中的字符转变成整数倒序存在在<br>num1和num2中，然后进行对应位数相加，如果大于10的话，自减10并且后一位加1，结果存放在num1中，接着用一个带分号的for循环从最后一位开始判断，如果位数<br>大于0并且数组对应位数的值为0的话，位置下标自减1，直到对应的数字不是0为止开始输出，把数据再正向输出出来<br>，就是所要的结果。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>以上方法没有考虑到0+0=0的情况，需要额外考虑，并且注意输出格式，Case的C要大写而且要注意输出时的空格，最后一行不需要换行，要用for循环判断是否为最<br>后一行。</p>
<h2 id="1003"><a href="#1003" class="headerlink" title="1003"></a>1003</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146980116849.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146980116888.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146980116924.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146980116957.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14698011699.png" alt=""></p>
<h3 id="题目要求-1"><a href="#题目要求-1" class="headerlink" title="题目要求"></a>题目要求</h3><p>要求输入一串数字后找出其中和最大的子数列并且输出最大值以及这一串的起始和终止位置</p>
<h3 id="C-参考AC代码-1"><a href="#C-参考AC代码-1" class="headerlink" title="C++参考AC代码"></a>C++参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int T,N,a[100000],begin,end,position,sum,max;</div><div class="line">	cin&gt;&gt;T;</div><div class="line">	<span class="keyword">for</span>(int j=0;j&lt;T;j++)</div><div class="line">	&#123;</div><div class="line">		cin&gt;&gt;N;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;N;i++)</div><div class="line">			cin&gt;&gt;a[i];</div><div class="line">		begin=end=position=0;</div><div class="line">		sum=max=a[0];</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;N;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(sum+a[i]&lt;a[i])</div><div class="line">			&#123;</div><div class="line">				sum=a[i];</div><div class="line">				position=i;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				sum+=a[i];</div><div class="line">			<span class="keyword">if</span>(sum&gt;max)</div><div class="line">			&#123;</div><div class="line">				max=sum;</div><div class="line">				begin=position;</div><div class="line">				end=i;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;j+1&lt;&lt;<span class="string">":"</span>&lt;&lt;endl&lt;&lt;max&lt;&lt;<span class="string">" "</span>&lt;&lt;begin+1&lt;&lt;<span class="string">" "</span>&lt;&lt;end+1&lt;&lt;endl;</div><div class="line">		<span class="keyword">if</span>(j!=T-1)</div><div class="line">			cout&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>从第一个数据开始循环，第一个if语句判断最大子序列的起始位置，如果前n项的和小于第n+1项的话，起始位置移到第n+1项，sum变为n+1项的数值，如果前n项和大于<br>等于n+1项，那么sun加上第n+1项的竖直，第二个if语言判断目前的sum是否大于最大值max，如果大于，sum的值赋给max，把起始位置赋给begin，末尾位置t赋给end，<br>依次循环到数据末端结束，输出结果。</p>
<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>注意输出格式，如何找对起始位置于末尾位置以及判断是否为序列的最大值是关键。</p>
<h2 id="1004"><a href="#1004" class="headerlink" title="1004"></a>1004</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146980122541.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/14698012258.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146980122619.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146980122668.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146980122704.png" alt=""></p>
<h3 id="题目要求-2"><a href="#题目要求-2" class="headerlink" title="题目要求"></a>题目要求</h3><p>找出字符串中出现次数最多的子字符串</p>
<h3 id="C-参考AC代码-2"><a href="#C-参考AC代码-2" class="headerlink" title="C++参考AC代码"></a>C++参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int N,max,flag;</div><div class="line">	char a[1050][20];</div><div class="line">	cin&gt;&gt;N;</div><div class="line">	<span class="keyword">while</span>(N!=0)</div><div class="line">	&#123;</div><div class="line">		int sum[1050]=&#123;0&#125;;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;N;i++)</div><div class="line">			cin&gt;&gt;a[i];</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;N;i++)</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;N;j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(strcmp(a[i],a[j])==0)</div><div class="line">					sum[i]++;</div><div class="line">			&#125;</div><div class="line">		max=sum[0];</div><div class="line">		flag=0;</div><div class="line">		<span class="keyword">for</span>(int i=0;i&lt;N-1;i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span>(max&lt;sum[i+1])</div><div class="line">			&#123;</div><div class="line">				max=sum[i+1];</div><div class="line">				flag=i+1;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		cout&lt;&lt;a[flag]&lt;&lt;endl;</div><div class="line">		cin&gt;&gt;N;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>用数组sum存贮每个字符串出现的次数，接着求出sum中最大元素的位置并输出该位置的字符串</p>
<h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><p>二维数组输入输出可以使用首地址，数组sum的初始化为0要在while循环里进行。</p>
<h2 id="1005"><a href="#1005" class="headerlink" title="1005"></a>1005</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146898317535.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146898317572.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146898317611.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146898317646.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146898317685.png" alt=""></p>
<h3 id="题目要求-3"><a href="#题目要求-3" class="headerlink" title="题目要求"></a>题目要求</h3><p>类似于斐波拉契数列，已知f（1）=f（2）=1，f（n）=(A×f(A,B,n-1)+B×f(A,B,n-2))%7，求f（n）</p>
<h3 id="C-参考AC代码-一"><a href="#C-参考AC代码-一" class="headerlink" title="C++参考AC代码(一)"></a>C++参考AC代码(一)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int f(int A,int B,int n)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>((n==1)||(n==2))</div><div class="line">		<span class="built_in">return</span> 1;</div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="built_in">return</span> (A*f(A,B,n-1)+B*f(A,B,n-2))%7;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int A,B,n;</div><div class="line">	cin&gt;&gt;A&gt;&gt;B&gt;&gt;n;</div><div class="line">	<span class="keyword">while</span>(!((A==0)&amp;&amp;(B==0)&amp;&amp;(n==0)))</div><div class="line">	&#123;</div><div class="line">		cout&lt;&lt;f(A,B,n%48)&lt;&lt;endl;</div><div class="line">		cin&gt;&gt;A&gt;&gt;B&gt;&gt;n;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="C-参考AC代码-二"><a href="#C-参考AC代码-二" class="headerlink" title="C++参考AC代码(二)"></a>C++参考AC代码(二)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int i,n,A,B;</div><div class="line">	int f[50],num;</div><div class="line">	<span class="keyword">while</span>(cin&gt;&gt;A&gt;&gt;B&gt;&gt;n &amp;&amp; (A || B || n))</div><div class="line">	&#123;</div><div class="line">		f[1] = 1;</div><div class="line">		f[2] = 1;</div><div class="line">		<span class="keyword">for</span>(i=3; i&lt;=49; i++)</div><div class="line">		&#123;</div><div class="line">			f[i] = (A * f[i-1] + B * f[i-2]) % 7;</div><div class="line">			<span class="keyword">if</span>(f[i] == f[i-1] &amp;&amp; f[i] == 1)</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">		num = i-2;</div><div class="line">		n = n % num;</div><div class="line">		<span class="keyword">if</span>(n==0)</div><div class="line">			cout&lt;&lt;f[num]&lt;&lt;endl;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			cout&lt;&lt;f[n]&lt;&lt;endl;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>　　AC代码（1）：参考斐波拉契数列，但由于直接使用递归调用会提示超出内存，所以必须找到对应的周期。(A×f(A,B,n-1)+B×f(A,B,n-2))%7=((A×f(A,B,n-1))%7+<br>（B×f(A,B,n-2))%7)%7，由于取除以7的余数，所以有0，1，2，3，4，5，6七种情况，一共有7×7=49种情况，由于极端状况第49个数字会回到开头的第一个数字，所<br>以48为一个周期，n%48即可以把n转换到第一个周期内，大大减少了运算量。<br>　　AC代码（2）：直接算出最小周期，如果f[i] == f[i-1] &amp;&amp; f[i] == 1，即到了一个周期，由于多算了2步得到数字1，1才判断为一个周期，所以真实的周期是i-2，到了<br>周期处使用break跳出循环进一步减少了计算量，由于余数是0的情况会输出最后一项而不是第一项，所以需要额外考虑。</p>
<h3 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h3><p>不可能直接用n使用递归调用，会超出内存，如果不使用周期可能也会超时，所以这题必须算出周期或者最小周期，来减少运算量。</p>
<h2 id="1006"><a href="#1006" class="headerlink" title="1006"></a>1006</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146916365491.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146916365498.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/1469163655.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146916365501.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146916365503.png" alt=""></p>
<h3 id="题目要求-4"><a href="#题目要求-4" class="headerlink" title="题目要求"></a>题目要求</h3><p>在一天的24小时内，求出三个指针两两至少相差D度的概率</p>
<h3 id="参考AC代码"><a href="#参考AC代码" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line">double max(double a,double b,double c)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> a&gt;b?(a&gt;c?a:c):(b&gt;c?b:c);</div><div class="line">&#125;</div><div class="line">double min(double a,double b,double c)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">return</span> a&lt;b?(a&lt;c?a:c):(b&lt;c?b:c);</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	double d,sum;</div><div class="line">	double Tsm=3600./59,Tsh=43200./719,Tmh=43200./11;</div><div class="line">	double happys,happye;</div><div class="line">	double sm=10./59,sh=120./719,mh=120./11;</div><div class="line">	double d_sm,d_sh,d_mh,not_d_sm,not_d_sh,not_d_mh;</div><div class="line">	<span class="keyword">while</span>(scanf(<span class="string">"%lf"</span>,&amp;d)!=EOF&amp;&amp;(d!=-1))</div><div class="line">	&#123;</div><div class="line">		sum=0;</div><div class="line">		d_sm=sm*d; not_d_sm=Tsm-d_sm;</div><div class="line">		d_sh=sh*d; not_d_sh=Tsh-d_sh;</div><div class="line">		d_mh=mh*d; not_d_mh=Tmh-d_mh;</div><div class="line">		happys=max(d_sm,d_sh,d_mh);</div><div class="line">		happye=min(not_d_sm,not_d_sh,not_d_mh);</div><div class="line">		<span class="keyword">while</span>((happys&lt;=43200)&amp;&amp;(happye&lt;=43200))</div><div class="line">		&#123;</div><div class="line">			happys=max(d_sm,d_sh,d_mh);</div><div class="line">			happye=min(not_d_sm,not_d_sh,not_d_mh);</div><div class="line">			<span class="keyword">if</span>(happys&lt;happye)</div><div class="line">				sum+=happye-happys;</div><div class="line">			<span class="keyword">if</span>(happye==not_d_sm)</div><div class="line">			&#123;d_sm+=Tsm;not_d_sm+=Tsm;&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(happye==not_d_sh)</div><div class="line">			&#123;d_sh+=Tsh;not_d_sh+=Tsh;&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(happye==not_d_mh)</div><div class="line">			&#123;d_mh+=Tmh;not_d_mh+=Tmh;&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,sum/43200*100);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>秒针的速度s=6°/s,分针是m=1/10°/s,时针是h=1/120°/s;<br>相对速度s_m=59/10°/s,s_h=719/120°/s,m_h=120/11°/s;<br>所以相差一度所需要的时间sm=10/59 s/°,sh=120/719 s/°,mh=120/11 s/°;<br>差360°的周期为Tsm=3600/59 s,Tsh=43200/719 s,Tmh=43200/11 s;<br>假设开始时从12点整开始，旋转至再均回到12点（即时针转一圈）<br>两两之间最后一个满足相差d°及以上的条件视为开始happy时刻<br>两两之间第一个不再满足相差d°及以上视为结束happy的时刻</p>
<h3 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h3><p>注意输出格式，以及两两相遇的周期，在写代码前先理清思路。</p>
<h2 id="1007"><a href="#1007" class="headerlink" title="1007"></a>1007</h2><p><strong>Problem Description</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146924123834.png" alt=""></p>
<p><strong>Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146924123878.png" alt=""></p>
<p><strong>Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146924123915.png" alt=""></p>
<p><strong>Sample Input</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146924123947.png" alt=""></p>
<p><strong>Sample Output</strong><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146924123988.png" alt=""></p>
<h3 id="题目要求-5"><a href="#题目要求-5" class="headerlink" title="题目要求"></a>题目要求</h3><p>最近点对问题</p>
<h3 id="参考AC代码-1"><a href="#参考AC代码-1" class="headerlink" title="参考AC代码"></a>参考AC代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;iostream&gt;  </span></div><div class="line"><span class="comment">#include &lt;algorithm&gt;  </span></div><div class="line"><span class="comment">#include &lt;cmath&gt;  </span></div><div class="line">using namespace std;  </div><div class="line">const int SIZE = 100005;  </div><div class="line">const int L = -1;  </div><div class="line">const int R = 1;   </div><div class="line"> typedef struct   </div><div class="line">&#123;  </div><div class="line">	int index;                    //用于标记左侧或者右侧</div><div class="line">	double x;  </div><div class="line">	double y;  </div><div class="line">&#125;coord;                           //用于记录坐标点 </div><div class="line">coord num[SIZE], c[SIZE];         //用作辅助数组，分别存放点的对象和候选点 </div><div class="line">double getDistance(coord &amp;bi1, coord &amp;bi2)             //计算两点之间的距离</div><div class="line">&#123;  </div><div class="line">	<span class="built_in">return</span> sqrt(pow(bi1.x - bi2.x, 2.0) + pow(bi1.y - bi2.y, 2.0));  </div><div class="line">&#125;   </div><div class="line">bool cmpx(coord &amp;bi1, coord &amp;bi2)     //按照x升序排列，如果x相同则按照y升序排列</div><div class="line">&#123;  </div><div class="line">	<span class="keyword">if</span> (bi1.x == bi1.x)  </div><div class="line">		<span class="built_in">return</span> bi1.y &lt; bi2.y;  </div><div class="line">	<span class="keyword">else</span>  </div><div class="line">	<span class="built_in">return</span> bi1.x &lt; bi2.x;  </div><div class="line">&#125;   </div><div class="line">bool cmpy(coord &amp;bi1, coord &amp;bi2)      //按照y升序排列，如果y相同则按照x升序排列</div><div class="line">&#123;  </div><div class="line">	<span class="keyword">if</span> (bi1.y == bi2.y)  </div><div class="line">		<span class="built_in">return</span> bi1.x &lt; bi2.x;  </div><div class="line">	<span class="keyword">else</span>  </div><div class="line">		<span class="built_in">return</span> bi1.y &lt; bi2.y;  </div><div class="line">&#125;  </div><div class="line">inline double min(double &amp;bi1, double &amp;bi2, double &amp;bi3)    //三个数求最小值</div><div class="line">&#123;   </div><div class="line">	double minLength;  </div><div class="line">	minLength = bi1 &gt; bi2 ? bi2 : bi1;  </div><div class="line">	minLength = minLength &gt; bi3 ? bi3 : minLength;  </div><div class="line">	<span class="built_in">return</span> minLength;  </div><div class="line">&#125;  </div><div class="line">inline double minDist(double &amp;bi1, double &amp;bi2)              //两个数求最小值</div><div class="line">&#123;  </div><div class="line">	<span class="keyword">if</span> (bi1 &gt; bi2)  </div><div class="line">		<span class="built_in">return</span> bi2;  </div><div class="line">	<span class="built_in">return</span> bi1;  </div><div class="line">&#125;  </div><div class="line">double divide_conquer(int low, int high)                 //分治法求最小距离</div><div class="line">&#123;  </div><div class="line">	double dis;  </div><div class="line">	int count = high - low;  </div><div class="line">	<span class="keyword">if</span> (count == 0)  </div><div class="line">	&#123;  </div><div class="line">		<span class="built_in">return</span> 0;  </div><div class="line">	&#125;  </div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (count == 1)                     //两个数</div><div class="line">	&#123;  </div><div class="line">		dis = getDistance(num[low], num[high]);  </div><div class="line">	&#125;  </div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (count == 2)                     //三个数</div><div class="line">	&#123;  </div><div class="line">		double temp1, temp2, temp3;  </div><div class="line">		temp1 = getDistance(num[low], num[low + 1]);  </div><div class="line">		temp2 = getDistance(num[low + 1], num[high]);  </div><div class="line">		temp3 = getDistance(num[low], num[high]);  </div><div class="line">		dis = min(temp1, temp2, temp3);  </div><div class="line">	&#125;  </div><div class="line">	<span class="keyword">else</span>                                      //大于三个数的情况 </div><div class="line">	&#123;  </div><div class="line">		double leftmin,rightmin,min;  </div><div class="line">		int mid = (low + high) / 2;  </div><div class="line">		int p = 0;  </div><div class="line">		int i, j;  </div><div class="line">  </div><div class="line">		leftmin = divide_conquer(low, mid);        //求得左边部分的最小值</div><div class="line">		rightmin = divide_conquer(mid + 1, high);  //求得右边部分的最小值</div><div class="line">		dis = minDist(leftmin, rightmin);  </div><div class="line">	  </div><div class="line">		<span class="keyword">for</span> (i = low; i &lt;= mid; i++)        //下面从所有坐标点中找出x在leftCoord到rightCoord之间的点</div><div class="line">		&#123;  </div><div class="line">			double leftCoord = num[mid].x - dis;  </div><div class="line">			<span class="keyword">if</span> (num[i].x &gt;= leftCoord)  </div><div class="line">			&#123;  </div><div class="line">				c[p].index = L;             //标志属于左边部分</div><div class="line">				c[p].x = num[i].x;  </div><div class="line">				c[p].y = num[i].y;  </div><div class="line">				p++;  </div><div class="line">			&#125;  </div><div class="line">		&#125;  </div><div class="line">		<span class="keyword">for</span> ( ; i &lt;= high; i++)  </div><div class="line">		&#123;  </div><div class="line">			double rightCoord = num[mid].x + dis;  </div><div class="line">			<span class="keyword">if</span> (num[i].x &lt;= rightCoord)  </div><div class="line">			&#123;  </div><div class="line">				c[p].index = R;              //标志属于右边部分</div><div class="line">				c[p].x = num[i].x;  </div><div class="line">				c[p].y = num[i].y;  </div><div class="line">				p++;  </div><div class="line">			&#125;  </div><div class="line">		&#125;  </div><div class="line">		sort(c, c + p, cmpy);                //找到的点再按照y升序排序</div><div class="line">		<span class="keyword">for</span> (i = 0; i &lt; p; i++)              //每个点开始穷举</div><div class="line">		&#123;  </div><div class="line">			<span class="keyword">for</span> (j = 1; (j &lt;= 7) &amp;&amp; (i + j &lt; p); j++)   //这个点分别和其余最多7个点算出距离比较</div><div class="line">			&#123;     </div><div class="line">				<span class="keyword">if</span> (c[i].index != c[i + j].index)     //最小值只可能出现在分别属于不同标志上</div><div class="line">				&#123;  </div><div class="line">					min = getDistance(c[i], c[i + j]);  </div><div class="line">					<span class="keyword">if</span>(min &lt; dis)  </div><div class="line">					dis = min;  </div><div class="line">				&#125;  </div><div class="line">			&#125;  </div><div class="line">		&#125;  </div><div class="line">	&#125;  </div><div class="line">	<span class="built_in">return</span> dis;  </div><div class="line">&#125;  </div><div class="line">int <span class="function"><span class="title">main</span></span> ()  </div><div class="line">&#123;  </div><div class="line">	int n;  </div><div class="line">	<span class="keyword">while</span> (cin &gt;&gt; n &amp;&amp; n != 0)  </div><div class="line">	&#123;  </div><div class="line">		double result = 0;    </div><div class="line">		<span class="keyword">for</span> (int i = 0; i &lt; n; i++)  </div><div class="line">		&#123;  </div><div class="line">			num[i].index = 0;  </div><div class="line">			cin &gt;&gt; num[i].x &gt;&gt; num[i].y;  </div><div class="line">		&#125;  </div><div class="line">		sort (num, num + n, cmpx);  </div><div class="line">		result = divide_conquer(0, n - 1);  </div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>, result / 2);  </div><div class="line">	&#125;   </div><div class="line">	<span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>　　根据水平方向的坐标把平面上的N个点分成两部分Left和Right。我们希望这两个部分点数的个数差不多。假设分别求出了Left和Right两个部分距离最近的点对的最短距离<br>为MinDist（Left）和MinDist（Right），还有一种情况我们没有考虑，那就是点对中一个点来自Left部分，另一个点来自Right部分。最直接的想法，那就是穷举Left和<br>Right两个部分之间的点对，这样的点对很多，最多可能有N×N/4对。显然，穷举所有Left和Right之间的点对是不好的做法。是否可以只考虑有可能成为最近点对的候选点对<br>呢？由于我们已经知道Left和Right两个部分中的最近点对距离分别为MinDist（Left）和MinDist（Right），如果Left和Right之间的点对距离超过MDist=MinValue<br>（MinDist（Left），MinDist（Right）），我们则对它们并不感兴趣，因为这些点对不可能是最近点对。</p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146924251232.png" alt=""><br></div><br>　　如图2-10所示，通过直接x=M将所有的点分成x<m和x>M两部分，在分别求出两部分的最近点对之后，只需要考虑点对CD。因为其他点对AD，BD，CE，CF，CG等都不可能成<br>为最近点对。也就是说，只要考虑从x=M-Mdist到x=M+MDist之间这个带状区域内的最小点对，然后再跟MDist比较就可以了。在计算带状区域的最小点对时，可以按Y坐<br>标，对带状区域内的顶点进行排序。如果一个点对的距离小于MDist，那么它们一定在一个MDist×（2×Mdist）的区域内（如图2-11所示)</m和x></p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146924251291.png" alt=""><br></div><br>　　而在左右两个Mdist*Mdist正方形区域内。最多都只能含有4个点。如果超过4个点，则这个正方形区域内至少存在一个点对的距离小于Mdist，这根x<m和x>M两个部分的最近<br>点对距离分别是MinDist（Left）和MinDist（Right）矛盾。</m和x></p>
<p><div align="center"><br><img src="http://cfmfa.img48.wal8.com/img48/553098_20160720105230/146924251339.png" alt=""><br></div><br>　　因此，一个MDist×（2×Mdist）的区域内最多有8个点（如图2-12所示）。对于任意一个带状区域内的顶点，只要考虑它与按Y坐标排序且紧接着的7个点之间的距离就可<br>以了。</p>
<h3 id="注意事项-5"><a href="#注意事项-5" class="headerlink" title="注意事项"></a>注意事项</h3><p>sort函数的第三个参数需要自己另写cmpx和cmpy函数。以上代码在杭电上只能在C++环境中通过编译，在G++环境中编译会超时。此题在杭电上AC的代码中部分都没有考<br>虑全面，该方法考虑了全部情况。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[First article about hexo]]></title>
      <url>http://xuboming8.github.io/2016/08/30/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a><br><a id="more"></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
